<Type Name="MaterialGroup" FullName="System.Windows.Media.Media3D.MaterialGroup">
  <TypeSignature Language="C#" Value="public sealed class MaterialGroup : System.Windows.Media.Media3D.Material" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MaterialGroup extends System.Windows.Media.Media3D.Material" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Material</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a <see cref="T:System.Windows.Media.Media3D.Material" /> that is a composite of the Materials in its collection.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because <xref:System.Windows.Media.Media3D.DiffuseMaterial>, <xref:System.Windows.Media.Media3D.SpecularMaterial>, and <xref:System.Windows.Media.Media3D.EmissiveMaterial> provide distinctly different effects, it's useful to combine them.  For example, you might choose to apply a complex texture to a mesh using DiffuseMaterial, while adding a highlighting effect with a SpecularMaterial on the same mesh.  MaterialGroup allows you to treat these Materials as a single texture for convenience.  
  
   
  
## Examples  
 The following excerpt shows a MaterialGroup.  
  
 [!code-xml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/add/codesnippet/xaml/HitTest3D/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaterialGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following excerpt shows a MaterialGroup.  
  
 [!code-xml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/add/codesnippet/xaml/HitTest3D/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.MaterialCollection Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Media3D.MaterialCollection Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.MaterialCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a collection of child <see cref="T:System.Windows.Media.Media3D.Material" /> objects.</summary>
        <value>
          <see cref="T:System.Windows.Media.Media3D.MaterialCollection" /> that contains the child <see cref="T:System.Windows.Media.Media3D.Material" /> objects.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Children"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Media3D.MaterialGroup.ChildrenProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to add multiple materials to a <xref:System.Windows.Media.Media3D.MaterialGroup>.  
  
 [!code-vb[3DGallery_procedural_snip#EmissiveMaterialCodeExampleInline1](~/add/codesnippet/visualbasic/3dsnippetgallery/emissivematerialexample.vb#emissivematerialcodeexampleinline1)]
 [!code-cs[3DGallery_procedural_snip#EmissiveMaterialCodeExampleInline1](~/add/codesnippet/csharp/3DSnippetGallery_csharp/EmissiveMaterialExample.cs#emissivematerialcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ChildrenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ChildrenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ChildrenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Media.Media3D.MaterialGroup.Children%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.MaterialGroup Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.MaterialGroup Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.MaterialGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a modifiable copy of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />.</summary>
        <returns>A modifiable copy of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />. The returned copy is effectively a deep clone of the current object, although some copying might be deferred until necessary for improved performance. The copy's &lt;xref:System.Windows.Freezable.IsFrozen%2A&gt; property is <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.MaterialGroup CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.MaterialGroup CloneCurrentValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.MaterialGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a non-animated version of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />. The returned <see cref="T:System.Windows.Media.Media3D.MaterialGroup" /> represents the current object's state at the time this method was called.</summary>
        <returns>Returns the current value of the <see cref="T:System.Windows.Media.Media3D.MaterialGroup" />. The returned <see cref="T:System.Windows.Media.Media3D.MaterialGroup" /> has the same value as the instantaneous value of the current object, but is not animated.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>