<Type Name="Size3D" FullName="System.Windows.Media.Media3D.Size3D">
  <TypeSignature Language="C#" Value="public struct Size3D : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Size3D extends System.ValueType implements class System.IFormattable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Media3D.Size3DConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Media3D.Converters.Size3DValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Data structure that describes the size of a three-dimensional object.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Size3D and <xref:System.Windows.Media.Media3D.Rect3D> are not typically used in XAML, because no settable properties exist in the WPF 3D object model that use those types.  
  
<a name="xamlTextUsage_ResourceReferenceExpressionConverter"></a>   
## XAML Text Usage  
  
   
  
## Examples  
 This example shows how to determine if two  Size3D structures are equal using the Size3D static <xref:System.Windows.Media.Media3D.Size3D.Equals%2A> method.  
  
 The following code illustrates how to check Size3D structures for equality.  The Size3D structures are declared and assigned values.  The <xref:System.Windows.Media.Media3D.Size3D.Equals%2A> method is then used to determine if the two structures are equal.  
  
 [!code-cs[3DGallery_procedural_snip#Size3DEqualityExample_csharp](~/add/codesnippet/csharp/3DSnippetGallery_csharp/Misc3DOperationsExample.cs#size3dequalityexample_csharp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Size3D (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">The new <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure's &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt; value.</param>
        <param name="y">The new <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure's &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt; value.</param>
        <param name="z">The new <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure's &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; value.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values must be non-negative.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Size3D Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Media3D.Size3D Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Size3D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents an empty <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <value>An empty instance of a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.Media3D.Size3D> structure with <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values set to 0 is not empty.  An empty <xref:System.Windows.Media.Media3D.Size3D> structure has <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values set to negative infinity. This is the only time a <xref:System.Windows.Media.Media3D.Size3D> structure can have negative values.  
  
   
  
## Examples  
 The following example shows how to make a <xref:System.Windows.Media.Media3D.Size3D> structure empty.  
  
 [!code-vb[size3dsample#Mil3dSize3DN10](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn10)]
 [!code-cs[size3dsample#Mil3dSize3DN10](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn10)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The &lt;xref:System.Object&gt; to compare.</param>
        <summary>Determines whether the specified object is a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure and whether the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt; and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; properties of the specified &lt;xref:System.Object&gt; are equal to the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt; and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; properties of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <returns>
          <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.  
  
 <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure and is identical with this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because <xref:System.Double> values can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Size3D> instances that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to check if an <xref:System.Object> and a <xref:System.Windows.Media.Media3D.Size3D> structure are equal.  
  
 [!code-vb[size3dsample#Mil3dSize3DN3](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn3)]
 [!code-cs[size3dsample#Mil3dSize3DN3](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Media3D.Size3D value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Media3D.Size3D value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Media3D.Size3D" />
      </Parameters>
      <Docs>
        <param name="value">The instance of Size3D to compare to this instance.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for equality.</summary>
        <returns>
          <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because <xref:System.Double> values can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Size3D> instances that are logically equal might fail.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Media3D.Size3D size1, System.Windows.Media.Media3D.Size3D size2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Media3D.Size3D size1, valuetype System.Windows.Media.Media3D.Size3D size2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size1" Type="System.Windows.Media.Media3D.Size3D" />
        <Parameter Name="size2" Type="System.Windows.Media.Media3D.Size3D" />
      </Parameters>
      <Docs>
        <param name="size1">The first <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
        <param name="size2">The second <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for equality.   Two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures are equal if the values of their &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; properties are the same.</summary>
        <returns>
          <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.  
  
 <see langword="true" /> if the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; components of <paramref name="size1" /> and <paramref name="size2" /> are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because <xref:System.Double> values can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Size3D> instances that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to check if two <xref:System.Windows.Media.Media3D.Size3D> structures are equal.  
  
 [!code-cs[3dgallery_procedural_snip#Size3DEqualityExample_csharp](~/add/codesnippet/csharp/3DSnippetGallery_csharp/Misc3DOperationsExample.cs#size3dequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <returns>A hash code for this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to get the hash code of a <xref:System.Windows.Media.Media3D.Size3D> structure.  
  
 [!code-vb[size3dsample#Mil3dSize3DN12](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn12)]
 [!code-cs[size3dsample#Mil3dSize3DN12](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn12)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure is empty.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure is empty; otherwise, <see langword="false" />.  The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.Media3D.Size3D> structure with <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values set to 0 is not empty.  An empty <xref:System.Windows.Media.Media3D.Size3D> structure has <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values set to negative infinity. This is the only time a <xref:System.Windows.Media.Media3D.Size3D> structure can have negative values.  
  
   
  
## Examples  
 The following example shows how to check if a <xref:System.Windows.Media.Media3D.Size3D> structure is empty.  
  
 [!code-vb[size3dsample#Mil3dSize3DN9](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn9)]
 [!code-cs[size3dsample#Mil3dSize3DN9](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn9)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Windows.Media.Media3D.Size3D size1, System.Windows.Media.Media3D.Size3D size2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Media3D.Size3D size1, valuetype System.Windows.Media.Media3D.Size3D size2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size1" Type="System.Windows.Media.Media3D.Size3D" />
        <Parameter Name="size2" Type="System.Windows.Media.Media3D.Size3D" />
      </Parameters>
      <Docs>
        <param name="size1">The first <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
        <param name="size2">The second <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for equality.   Two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures are equal if the values of their &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; properties are the same.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; components of <paramref name="size1" /> and <paramref name="size2" /> are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because <xref:System.Double> values can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Size3D> instances that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to use the overloaded equality operator to check if two <xref:System.Windows.Media.Media3D.Size3D> structures are equal.  
  
 [!code-vb[size3dsample#Mil3dSize3DN4](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn4)]
 [!code-cs[size3dsample#Mil3dSize3DN4](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point3D op_Explicit (System.Windows.Media.Media3D.Size3D size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Media3D.Point3D op_Explicit(valuetype System.Windows.Media.Media3D.Size3D size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Media.Media3D.Size3D" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Vector3D op_Explicit (System.Windows.Media.Media3D.Size3D size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Media3D.Vector3D op_Explicit(valuetype System.Windows.Media.Media3D.Size3D size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Vector3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Media.Media3D.Size3D" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Windows.Media.Media3D.Size3D size1, System.Windows.Media.Media3D.Size3D size2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Media3D.Size3D size1, valuetype System.Windows.Media.Media3D.Size3D size2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size1" Type="System.Windows.Media.Media3D.Size3D" />
        <Parameter Name="size2" Type="System.Windows.Media.Media3D.Size3D" />
      </Parameters>
      <Docs>
        <param name="size1">The first <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
        <param name="size2">The second <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures for inequality.  Two <see cref="T:System.Windows.Media.Media3D.Size3D" /> structures are not equal if the values of their &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt; and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; properties are different.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt; and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; coordinates of <paramref name="size1" /> and <paramref name="size2" /> are different; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because <xref:System.Double> values can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Size3D> instances that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to use the overloaded inequality operator to check if two <xref:System.Windows.Media.Media3D.Size3D> structures are not equal.  
  
 [!code-vb[size3dsample#Mil3dSize3DN5](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn5)]
 [!code-cs[size3dsample#Mil3dSize3DN5](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Size3D Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Size3D Parse(string source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Size3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">The &lt;xref:System.String&gt; representation of the three-dimensional size structure.</param>
        <summary>Converts a &lt;xref:System.String&gt; representation of a three-dimensional size structure into the equivalent <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <returns>The equivalent <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to turn a string representation of a <xref:System.Windows.Media.Media3D.Size3D> into a <xref:System.Windows.Media.Media3D.Size3D> structure.  
  
 [!code-vb[size3dsample#Mil3dSize3DN6](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn6)]
 [!code-cs[size3dsample#Mil3dSize3DN6](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn6)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">The string specifying the format to use.  
  
 -or-  
  
 <see langword="null" /> to use the default format defined for the type of the &lt;xref:System.IFormattable&gt; implementation.</param>
        <param name="provider">The <see langword="IFormatProvider" /> to use to format the value.  
  
 -or-  
  
 <see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;xref:System.IFormattable.ToString%2A&gt;.</summary>
        <returns>A string containing the value of the current instance in the specified format.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a &lt;xref:System.String&gt; representation of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <returns>Returns a &lt;xref:System.String&gt; containing the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; values of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If a <xref:System.Windows.Media.Media3D.Size3D> structure is empty, the string "empty" is returned, rather than the <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values of the <xref:System.Windows.Media.Media3D.Size3D> structure.  
  
   
  
## Examples  
 The following example shows how to get a string representation of a <xref:System.Windows.Media.Media3D.Size3D> structure.  
  
 [!code-vb[size3dsample#Mil3dSize3DN11](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn11)]
 [!code-cs[size3dsample#Mil3dSize3DN11](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn11)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Culture-specific formatting information.</param>
        <summary>Creates a &lt;xref:System.String&gt; representation of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <returns>Returns a &lt;xref:System.String&gt; containing the &lt;xref:System.Windows.Media.Media3D.Size3D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Size3D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Size3D.Z%2A&gt; values of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If a <xref:System.Windows.Media.Media3D.Size3D> structure is empty, the string "empty" is returned, rather than the <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values of the <xref:System.Windows.Media.Media3D.Size3D> structure.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <value>The X value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  The default value is `0`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The X, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values must be non-negative.  
  
 <xref:System.Windows.Media.Media3D.Size3D> and <xref:System.Windows.Media.Media3D.Rect3D> are not typically used in XAML, because no settable properties exist in the WPF 3D object model that use those types.  
  
<a name="xamlTextUsage_X"></a>   
## XAML Text Usage  
  
   
  
## Examples  
 The following example shows how to check if two <xref:System.Windows.Media.Media3D.Size3D> structures are equal. It also shows how to assign values to a <xref:System.Windows.Media.Media3D.Size3D> structure when the structure is being declared and after the structure has been declared.  
  
 [!code-vb[size3dsample#Mil3dSize3DN2](~/add/codesnippet/visualbasic/mil3dsize/window1.xaml.vb#mil3dsize3dn2)]
 [!code-cs[size3dsample#Mil3dSize3DN2](~/add/codesnippet/csharp/Mil3dSize/Window1.xaml.cs#mil3dsize3dn2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Y value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <value>The Y value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  The default value is `0`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.Media3D.Size3D.X%2A>, Y, and <xref:System.Windows.Media.Media3D.Size3D.Z%2A> values must be non-negative.  
  
 <xref:System.Windows.Media.Media3D.Size3D> and <xref:System.Windows.Media.Media3D.Rect3D> are not typically used in XAML, because no settable properties exist in the WPF 3D object model that use those types.  
  
<a name="xamlTextUsage_Y"></a>   
## XAML Text Usage  
  
   
  
## Examples  
 The following example shows how to check if two <xref:System.Windows.Media.Media3D.Size3D> structures are equal. It also shows how to assign values to a <xref:System.Windows.Media.Media3D.Size3D> structure when the structure is being declared and after the structure has been declared.  
  
 [!code-cs[3dgallery_procedural_snip#Size3DEqualityExample_csharp](~/add/codesnippet/csharp/3DSnippetGallery_csharp/Misc3DOperationsExample.cs#size3dequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public double Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Z value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.</summary>
        <value>The Z value of this <see cref="T:System.Windows.Media.Media3D.Size3D" /> structure.  The default value is `0`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.Media3D.Size3D.X%2A>, <xref:System.Windows.Media.Media3D.Size3D.Y%2A>, and Z values must be non-negative.  
  
 <xref:System.Windows.Media.Media3D.Size3D> and <xref:System.Windows.Media.Media3D.Rect3D> are not typically used in XAML, because no settable properties exist in the WPF 3D object model that use those types.  
  
<a name="xamlTextUsage_Z"></a>   
## XAML Text Usage  
  
   
  
## Examples  
 The following example shows how to check if two <xref:System.Windows.Media.Media3D.Size3D> structures are equal. It also shows how to assign values to a <xref:System.Windows.Media.Media3D.Size3D> structure when the structure is being declared and after the structure has been declared.  
  
 [!code-cs[3dgallery_procedural_snip#Size3DEqualityExample_csharp](~/add/codesnippet/csharp/3DSnippetGallery_csharp/Misc3DOperationsExample.cs#size3dequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>