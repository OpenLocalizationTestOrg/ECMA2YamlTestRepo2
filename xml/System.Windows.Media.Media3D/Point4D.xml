<Type Name="Point4D" FullName="System.Windows.Media.Media3D.Point4D">
  <TypeSignature Language="C#" Value="public struct Point4D : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point4D extends System.ValueType implements class System.IFormattable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Media3D.Point4DConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Media3D.Converters.Point4DValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an x-, y-, z-, and w-coordinate point in world space used in performing transformations with non-affine [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] matrices.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In XAML, the delimiter between the values of a Point4D can be either a comma or a space.  
  
 Some cultures might use the comma character as the decimal delimiter instead of the period character. XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter. You should avoid using the comma character as the decimal delimiter if specifying a Point4D in XAML, because that will clash with the string type conversion of a Point4D attribute value into its components.  
  
<a name="xamlAttributeUsage_Duration"></a>   
## XAML Attribute Usage  
  
```  
<object property="x,y,z,w"/>  
-or-  
<object property="x y z w"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## XAML Values  
 *x*  
 The <xref:System.Windows.Media.Media3D.Point4D.X%2A> component of this Point4D structure.  
  
 *y*  
 The <xref:System.Windows.Media.Media3D.Point4D.Y%2A> component of this Point4D structure.  
  
 *z*  
 The <xref:System.Windows.Media.Media3D.Point4D.Z%2A> component of this Point4D structure.  
  
 *w*  
 The <xref:System.Windows.Media.Media3D.Point4D.W%2A> component of this Point4D structure.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point4D (double x, double y, double z, double w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 z, float64 w) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
        <Parameter Name="w" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <param name="y">The y-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <param name="z">The z-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <param name="w">The w-coordinate of the new <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D Add (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Point4D Add(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
        <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
        <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
        <returns>Returns the sum of <paramref name="point1" /> and <paramref name="point2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to add two <xref:System.Windows.Media.Media3D.Point4D> structures.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN3](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn3)]
 [!code-vb[point4dsample#Mil4DPoints3DN3](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The object to compare.</param>
        <summary>Determines whether the specified &lt;xref:System.Object&gt; is a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure and if the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.W%2A&gt; properties of the specified &lt;xref:System.Object&gt; are equal to the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.W%2A&gt; properties of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>
          <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.  
  
 <see langword="true" /> if <paramref name="o" /> (the passed &lt;xref:System.Object&gt;) is a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure and is identical with this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure; <see langword="false" /> otherwise.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `o` (the passed object)  is not a <xref:System.Windows.Media.Media3D.Point4D> structure, this method returns `false`.  
  
 Because a <xref:System.Double> value can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Point4D> values that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to check whether an <xref:System.Object> and a <xref:System.Windows.Media.Media3D.Point4D> structure are equal.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN12](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn12)]
 [!code-vb[point4dsample#Mil4DPoints3DN12](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn12)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Media3D.Point4D value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Media3D.Point4D value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="value">The instance of Point4D to compare to this instance.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for equality.</summary>
        <returns>
          <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because a <xref:System.Double> value can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Point4D> values that are logically equal might fail.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
        <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for equality.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt; components of <paramref name="point3D1" /> and <paramref name="point3D2" /> are equal; <see langword="false" /> otherwise.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Two <xref:System.Windows.Media.Media3D.Point4D> structures are equal if the values of their <xref:System.Windows.Media.Media3D.Point4D.X%2A>, <xref:System.Windows.Media.Media3D.Point4D.Y%2A>, <xref:System.Windows.Media.Media3D.Point4D.Z%2A>, and <xref:System.Windows.Media.Media3D.Point4D.W%2A> properties are the same.  
  
 Because <xref:System.Double> values can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Point4D> instances that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to check whether two <xref:System.Windows.Media.Media3D.Point4D> structures are equal.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN11](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn11)]
 [!code-vb[point4dsample#Mil4DPoints3DN11](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn11)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>Returns a hash code for this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to get the hashcode of a  <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN16](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn16)]
 [!code-vb[point4dsample#Mil4DPoints3DN16](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn16)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D Multiply (System.Windows.Media.Media3D.Point4D point, System.Windows.Media.Media3D.Matrix3D matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Point4D Multiply(valuetype System.Windows.Media.Media3D.Point4D point, valuetype System.Windows.Media.Media3D.Matrix3D matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="matrix" Type="System.Windows.Media.Media3D.Matrix3D" />
      </Parameters>
      <Docs>
        <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to transform.</param>
        <param name="matrix">The transformation <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</param>
        <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</summary>
        <returns>Returns the result of transforming <paramref name="point" /> and <paramref name="matrix" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to multiply a <xref:System.Windows.Media.Media3D.Point4D> structure by a <xref:System.Windows.Media.Media3D.Matrix3D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN9](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn9)]
 [!code-vb[point4dsample#Mil4DPoints3DN9](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn9)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double deltaX, double deltaY, double deltaZ, double deltaW);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 deltaX, float64 deltaY, float64 deltaZ, float64 deltaW) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaX" Type="System.Double" />
        <Parameter Name="deltaY" Type="System.Double" />
        <Parameter Name="deltaZ" Type="System.Double" />
        <Parameter Name="deltaW" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="deltaX">The amount to offset the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt; coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <param name="deltaY">The amount to offset the &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt; coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <param name="deltaZ">The amount to offset the &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt; coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <param name="deltaW">The amount to offset the &lt;xref:System.Windows.Media.Media3D.Point4D.W%2A&gt; coordinate of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</param>
        <summary>Translates the <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure by the specified amounts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Note that calling the Offset method will only have an effect if you can change the <xref:System.Windows.Media.Media3D.Point4D.W%2A>, <xref:System.Windows.Media.Media3D.Point4D.X%2A>, <xref:System.Windows.Media.Media3D.Point4D.Y%2A>, and <xref:System.Windows.Media.Media3D.Point4D.Z%2A> properties directly. Because <xref:System.Windows.Media.Media3D.Point4D> is a value type, if you reference a <xref:System.Windows.Media.Media3D.Point4D> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Media.Media3D.Point4D.W%2A>, <xref:System.Windows.Media.Media3D.Point4D.X%2A>, <xref:System.Windows.Media.Media3D.Point4D.Y%2A>, or <xref:System.Windows.Media.Media3D.Point4D.Z%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling Offset on the property or indexer will not change the underlying object. If you want to change the value of a <xref:System.Windows.Media.Media3D.Point4D> that is referenced as a property or indexer, create a new <xref:System.Windows.Media.Media3D.Point4D>, modify its fields, and then assign the <xref:System.Windows.Media.Media3D.Point4D> back to the property or indexer.  
  
   
  
## Examples  
 The following example shows how to offset a <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN7](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn7)]
 [!code-vb[point4dsample#Mil4DPoints3DN7](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn7)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D op_Addition (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Media3D.Point4D op_Addition(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
        <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to add.</param>
        <summary>Adds a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to a <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
        <returns>Returns the sum of <paramref name="point1" /> and <paramref name="point2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the overloaded addition operator to add two <xref:System.Windows.Media.Media3D.Point4D> structures.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN4](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn4)]
 [!code-vb[point4dsample#Mil4DPoints3DN4](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
        <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for equality.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt; coordinates of <paramref name="point4D1" /> and <paramref name="point4D2" /> are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Two <xref:System.Windows.Media.Media3D.Point4D> structures are equal if the values of their <xref:System.Windows.Media.Media3D.Point4D.X%2A>, <xref:System.Windows.Media.Media3D.Point4D.Y%2A>, <xref:System.Windows.Media.Media3D.Point4D.Z%2A>, and <xref:System.Windows.Media.Media3D.Point4D.W%2A> properties are the same.  
  
 Because a <xref:System.Double> value can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Point4D> values that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to use the overloaded equality operator to check whether two <xref:System.Windows.Media.Media3D.Point4D> structures are equal.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN10](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn10)]
 [!code-vb[point4dsample#Mil4DPoints3DN10](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn10)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The first <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
        <param name="point2">The second <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Media3D.Point4D" /> structures for inequality.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.W%2A&gt; coordinates of <paramref name="point4D1" /> and <paramref name="point4D2" /> are different; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Two <xref:System.Windows.Media.Media3D.Point4D> structures are not equal if the values of their <xref:System.Windows.Media.Media3D.Point4D.X%2A>, <xref:System.Windows.Media.Media3D.Point4D.Y%2A>, <xref:System.Windows.Media.Media3D.Point4D.Z%2A>, and <xref:System.Windows.Media.Media3D.Point4D.W%2A> properties are different.  
  
 Because a <xref:System.Double> value can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Media.Media3D.Point4D> values that are logically equal might fail.  
  
   
  
## Examples  
 The following example shows how to use the overloaded inequality operator to check whether two <xref:System.Windows.Media.Media3D.Point4D> structures are not equal.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN14](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn14)]
 [!code-vb[point4dsample#Mil4DPoints3DN14](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn14)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D op_Multiply (System.Windows.Media.Media3D.Point4D point, System.Windows.Media.Media3D.Matrix3D matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Media3D.Point4D op_Multiply(valuetype System.Windows.Media.Media3D.Point4D point, valuetype System.Windows.Media.Media3D.Matrix3D matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="matrix" Type="System.Windows.Media.Media3D.Matrix3D" />
      </Parameters>
      <Docs>
        <param name="point">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to transform.</param>
        <param name="matrix">The transformation <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</param>
        <summary>Transforms the specified <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure by the specified <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> structure.</summary>
        <returns>Returns the result of transforming <paramref name="point" /> and <paramref name="matrix" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the overloaded multiplication operator to transform a <xref:System.Windows.Media.Media3D.Point4D> structure by a <xref:System.Windows.Media.Media3D.Matrix3D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN8](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn8)]
 [!code-vb[point4dsample#Mil4DPoints3DN8](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn8)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D op_Subtraction (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Media3D.Point4D op_Subtraction(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to be subtracted from.</param>
        <param name="point2">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to subtract from `point1`.</param>
        <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure and returns the result as a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>Returns the difference between <paramref name="point1" /> and <paramref name="point2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the overloaded subtraction operator to subtract a <xref:System.Windows.Media.Media3D.Point4D> structure from a <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN5](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn5)]
 [!code-vb[point4dsample#Mil4DPoints3DN5](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Point4D Parse(string source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">The &lt;xref:System.String&gt; representation of the point4D structure.</param>
        <summary>Converts a &lt;xref:System.String&gt; representation of a point4D structure into the equivalent <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>Returns the equivalent <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the Parse method to convert a string representation of point4D structure into a <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN13](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn13)]
 [!code-vb[point4dsample#Mil4DPoints3DN13](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn13)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Point4D Subtract (System.Windows.Media.Media3D.Point4D point1, System.Windows.Media.Media3D.Point4D point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Point4D Subtract(valuetype System.Windows.Media.Media3D.Point4D point1, valuetype System.Windows.Media.Media3D.Point4D point2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Point4D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Media.Media3D.Point4D" />
        <Parameter Name="point2" Type="System.Windows.Media.Media3D.Point4D" />
      </Parameters>
      <Docs>
        <param name="point1">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to be subtracted from.</param>
        <param name="point2">The <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure to subtract from `point1`.</param>
        <summary>Subtracts a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure from a <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>Returns the difference between <paramref name="point1" /> and <paramref name="point2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to subtract a <xref:System.Windows.Media.Media3D.Point4D> structure from a <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN6](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn6)]
 [!code-vb[point4dsample#Mil4DPoints3DN6](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn6)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">The string specifying the format to use.  
  
 -or-  
  
 <see langword="null" /> to use the default format defined for the type of the &lt;xref:System.IFormattable&gt; implementation.</param>
        <param name="provider">The <see langword="IFormatProvider" /> to use to format the value.  
  
 -or-  
  
 <see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;xref:System.IFormattable.ToString%2A&gt;.</summary>
        <returns>A string containing the value of the current instance in the specified format.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a &lt;xref:System.String&gt; representation of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>Returns a &lt;xref:System.String&gt; containing the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.W%2A&gt; values of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to get a string representation of a <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN15](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn15)]
 [!code-vb[point4dsample#Mil4DPoints3DN15](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn15)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Culture-specific formatting information.</param>
        <summary>Creates a &lt;xref:System.String&gt; representation of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <returns>Returns a &lt;xref:System.String&gt; containing the &lt;xref:System.Windows.Media.Media3D.Point4D.X%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Y%2A&gt;, &lt;xref:System.Windows.Media.Media3D.Point4D.Z%2A&gt;, and &lt;xref:System.Windows.Media.Media3D.Point4D.W%2A&gt; values of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how get a string representation of a <xref:System.Windows.Media.Media3D.Point4D> structure.  
  
 [!code-cs[point4dsample#Mil4DPoints3DN15](~/add/codesnippet/csharp/Mil4dPoints/Window1.xaml.cs#mil4dpoints3dn15)]
 [!code-vb[point4dsample#Mil4DPoints3DN15](~/add/codesnippet/visualbasic/mil4dpoints/window1.xaml.vb#mil4dpoints3dn15)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="W">
      <MemberSignature Language="C#" Value="public double W { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 W" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the W component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <value>The W component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is `0`.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <value>The X component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is `0`.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Y component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <value>The Y component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is `0`.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public double Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Z component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.</summary>
        <value>The Z component of this <see cref="T:System.Windows.Media.Media3D.Point4D" /> structure.  The default value is `0`.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>