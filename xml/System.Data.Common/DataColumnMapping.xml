<Type Name="DataColumnMapping" FullName="System.Data.Common.DataColumnMapping">
  <TypeSignature Language="C#" Value="public sealed class DataColumnMapping : MarshalByRefObject, ICloneable, System.Data.IColumnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataColumnMapping extends System.MarshalByRefObject implements class System.Data.IColumnMapping, class System.ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IColumnMapping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Common.DataColumnMapping/DataColumnMappingConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains a generic column mapping for an object that inherits from <see cref="T:System.Data.Common.DataAdapter" />. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A DataColumnMapping enables you to use column names in a <xref:System.Data.DataTable> that are different from those in the data source. The `DataAdapter` uses the mapping to match the columns when the tables in the <xref:System.Data.DataSet> or data source are updated. For more information, see [DataAdapter DataTable and DataColumn Mappings](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example creates a DataColumnMapping object and adds it to a <xref:System.Data.Common.DataColumnMappingCollection>. It then tells the user that the mapping was added to the collection and shows the Parent for the mapping.  
  
 [!code-vb[Classic WebData DataColumnMapping Example#1](~/add/codesnippet/visualbasic/t-system.data.common.dat_1_1.vb)]
 [!code-cs[Classic WebData DataColumnMapping Example#1](~/add/codesnippet/csharp/t-system.data.common.dat_1_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:System.Data.Common.DataColumnMapping> object, sets its properties, and clones it.  
  
 [!code-cs[Classic WebData DataColumnMapping.DataColumnMapping Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_22_1.cs)]
 [!code-vb[Classic WebData DataColumnMapping.DataColumnMapping Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_22_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumnMapping (string sourceColumn, string dataSetColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceColumn, string dataSetColumn) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="dataSetColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">The case-sensitive column name from a data source.</param>
        <param name="dataSetColumn">The column name, which is not case sensitive, from a <see cref="T:System.Data.DataSet" /> to map to.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class with the specified source column name and <see cref="T:System.Data.DataSet" /> column name to map to.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:System.Data.Common.DataColumnMapping> object, sets its properties, and clones it.  
  
 [!code-cs[Classic WebData DataColumnMapping.DataColumnMapping1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_28_1.cs)]
 [!code-vb[Classic WebData DataColumnMapping.DataColumnMapping1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_28_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataSetColumn">
      <MemberSignature Language="C#" Value="public string DataSetColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSetColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the column within the <see cref="T:System.Data.DataSet" /> to map to.</summary>
        <value>The name of the column within the <see cref="T:System.Data.DataSet" /> to map to. The name is not case sensitive.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:System.Data.Common.DataColumnMapping> object, and sets its properties.  
  
 [!code-vb[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_12_1.vb)]
 [!code-cs[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_12_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDataColumnBySchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn GetDataColumnBySchemaAction (System.Data.DataTable dataTable, Type dataType, System.Data.MissingSchemaAction schemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn GetDataColumnBySchemaAction(class System.Data.DataTable dataTable, class System.Type dataType, valuetype System.Data.MissingSchemaAction schemaAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="schemaAction" Type="System.Data.MissingSchemaAction" />
      </Parameters>
      <Docs>
        <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to get the column from.</param>
        <param name="dataType">The &lt;xref:System.Type&gt; of the data column.</param>
        <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
        <summary>Gets a <see cref="T:System.Data.DataColumn" /> from the given <see cref="T:System.Data.DataTable" /> using the <see cref="T:System.Data.MissingSchemaAction" /> and the &lt;xref:System.Data.Common.DataColumnMapping.DataSetColumn%2A&gt; property.</summary>
        <returns>A data column.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDataColumnBySchemaAction">
      <MemberSignature Language="C#" Value="public static System.Data.DataColumn GetDataColumnBySchemaAction (string sourceColumn, string dataSetColumn, System.Data.DataTable dataTable, Type dataType, System.Data.MissingSchemaAction schemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataColumn GetDataColumnBySchemaAction(string sourceColumn, string dataSetColumn, class System.Data.DataTable dataTable, class System.Type dataType, valuetype System.Data.MissingSchemaAction schemaAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="dataSetColumn" Type="System.String" />
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="schemaAction" Type="System.Data.MissingSchemaAction" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">The case-sensitive column name from a data source.</param>
        <param name="dataSetColumn">The column name, which is not case sensitive, from a <see cref="T:System.Data.DataSet" /> to map to.</param>
        <param name="dataTable">An instance of <see cref="T:System.Data.DataTable" />.</param>
        <param name="dataType">The data type for the column being mapped.</param>
        <param name="schemaAction">Determines the action to take when existing <see cref="T:System.Data.DataSet" /> schema does not match incoming data.</param>
        <summary>A static version of &lt;xref:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction%2A&gt; that can be called without instantiating a <see cref="T:System.Data.Common.DataColumnMapping" /> object.</summary>
        <returns>A <see cref="T:System.Data.DataColumn" /> object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the column within the data source to map from. The name is case-sensitive.</summary>
        <value>The case-sensitive name of the column in the data source.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:System.Data.Common.DataColumnMapping> object, and sets its properties.  
  
 [!code-vb[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_5_1.vb)]
 [!code-cs[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_5_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new object that is a copy of the current instance.</summary>
        <returns>A copy of the current object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlClient.SqlCommand> instance is cast to an <xref:System.ICloneable> interface.  
  
 For more information, see <xref:System.ICloneable.Clone%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the current &lt;xref:System.Data.Common.DataColumnMapping.SourceColumn%2A&gt; name to a string.</summary>
        <returns>The current &lt;xref:System.Data.Common.DataColumnMapping.SourceColumn%2A&gt; name as a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:System.Data.Common.DataColumnMapping> object and adds it to a <xref:System.Data.Common.DataColumnMappingCollection> collection. It then tells the user that the mapping was added to the collection and shows the parent of mapping.  
  
 [!code-vb[Classic WebData DataColumnMapping Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_6_1.vb)]
 [!code-cs[Classic WebData DataColumnMapping Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_6_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>