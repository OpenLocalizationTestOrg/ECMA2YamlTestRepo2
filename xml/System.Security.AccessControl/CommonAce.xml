<Type Name="CommonAce" FullName="System.Security.AccessControl.CommonAce">
  <TypeSignature Language="C#" Value="public sealed class CommonAce : System.Security.AccessControl.QualifiedAce" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommonAce extends System.Security.AccessControl.QualifiedAce" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.QualifiedAce</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an access control entry (ACE).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CommonAce class represents the eight most common ACE types:  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
-   <xref:System.Security.AccessControl.AceType>  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonAce (System.Security.AccessControl.AceFlags flags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, bool isCallback, byte[] opaque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.AccessControl.AceFlags flags, valuetype System.Security.AccessControl.AceQualifier qualifier, int32 accessMask, class System.Security.Principal.SecurityIdentifier sid, bool isCallback, unsigned int8[] opaque) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flags" Type="System.Security.AccessControl.AceFlags" />
        <Parameter Name="qualifier" Type="System.Security.AccessControl.AceQualifier" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        <Parameter Name="isCallback" Type="System.Boolean" />
        <Parameter Name="opaque" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="flags">Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new access control entry (ACE).</param>
        <param name="qualifier">The use of the new ACE.</param>
        <param name="accessMask">The access mask for the ACE.</param>
        <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> associated with the new ACE.</param>
        <param name="isCallback">
          <see langword="true" /> to specify that the new ACE is a callback type ACE.</param>
        <param name="opaque">Opaque data associated with the new ACE. Opaque data is allowed only for callback ACE types. The length of this array must not be greater than the return value of the &lt;xref:System.Security.AccessControl.CommonAce.MaxOpaqueLength%2A&gt; method.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonAce" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAce" /> object. Use this length with the &lt;xref:System.Security.AccessControl.CommonAce.GetBinaryForm%2A&gt; method before marshaling the ACL into a binary array.</summary>
        <value>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAce" /> object.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAce" /> object is marshaled.</param>
        <param name="offset">The offset at which to start marshaling.</param>
        <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAce" /> object into the specified byte array beginning at the specified offset.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.CommonAce" /> to be copied into the <paramref name="binaryForm" /> array.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxOpaqueLength">
      <MemberSignature Language="C#" Value="public static int MaxOpaqueLength (bool isCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxOpaqueLength(bool isCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isCallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isCallback">
          <see langword="true" /> to specify that the <see cref="T:System.Security.AccessControl.CommonAce" /> object is a callback ACE type.</param>
        <summary>Gets the maximum allowed length of an opaque data BLOB for callback access control entries (ACEs).</summary>
        <returns>The allowed length of an opaque data BLOB.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>