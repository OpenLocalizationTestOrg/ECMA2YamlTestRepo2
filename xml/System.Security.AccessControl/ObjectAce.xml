<Type Name="ObjectAce" FullName="System.Security.AccessControl.ObjectAce">
  <TypeSignature Language="C#" Value="public sealed class ObjectAce : System.Security.AccessControl.QualifiedAce" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectAce extends System.Security.AccessControl.QualifiedAce" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.QualifiedAce</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectAce (System.Security.AccessControl.AceFlags aceFlags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, byte[] opaque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.AccessControl.AceFlags aceFlags, valuetype System.Security.AccessControl.AceQualifier qualifier, int32 accessMask, class System.Security.Principal.SecurityIdentifier sid, valuetype System.Security.AccessControl.ObjectAceFlags flags, valuetype System.Guid type, valuetype System.Guid inheritedType, bool isCallback, unsigned int8[] opaque) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="aceFlags" Type="System.Security.AccessControl.AceFlags" />
        <Parameter Name="qualifier" Type="System.Security.AccessControl.AceQualifier" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        <Parameter Name="flags" Type="System.Security.AccessControl.ObjectAceFlags" />
        <Parameter Name="type" Type="System.Guid" />
        <Parameter Name="inheritedType" Type="System.Guid" />
        <Parameter Name="isCallback" Type="System.Boolean" />
        <Parameter Name="opaque" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="aceFlags">The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).</param>
        <param name="qualifier">The use of the new ACE.</param>
        <param name="accessMask">The access mask for the ACE.</param>
        <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> associated with the new ACE.</param>
        <param name="flags">Whether the `type` and `inheritedType` parameters contain valid object GUIDs.</param>
        <param name="type">A GUID that identifies the object type to which the new ACE applies.</param>
        <param name="inheritedType">A GUID that identifies the object type that can inherit the new ACE.</param>
        <param name="isCallback">
          <see langword="true" /> if the new ACE is a callback type ACE.</param>
        <param name="opaque">Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the &lt;xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength%2A&gt; method.</param>
        <summary>Initiates a new instance of the <see cref="T:System.Security.AccessControl.ObjectAce" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the &lt;xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength%2A&gt; method.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.ObjectAce" /> object. This length should be used before marshaling the ACL into a binary array with the &lt;xref:System.Security.AccessControl.ObjectAce.GetBinaryForm%2A&gt; method.</summary>
        <value>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.ObjectAce" /> is marshaled.</param>
        <param name="offset">The offset at which to start marshaling.</param>
        <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.ObjectAce" /> object into the specified byte array beginning at the specified offset.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.ObjectAce" /> to be copied into <paramref name="array" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InheritedObjectAceType">
      <MemberSignature Language="C#" Value="public Guid InheritedObjectAceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InheritedObjectAceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <see cref="T:System.Security.AccessControl.ObjectAce" /> object represents.</summary>
        <value>The GUID of the object type that can inherit the Access Control Entry (ACE) that this <see cref="T:System.Security.AccessControl.ObjectAce" /> object represents.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags>, this property is ignored.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxOpaqueLength">
      <MemberSignature Language="C#" Value="public static int MaxOpaqueLength (bool isCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxOpaqueLength(bool isCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isCallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isCallback">True if the <see cref="T:System.Security.AccessControl.ObjectAce" /> is a callback ACE type.</param>
        <summary>Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).</summary>
        <returns>The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ObjectAceFlags">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.ObjectAceFlags ObjectAceFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.ObjectAceFlags ObjectAceFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.ObjectAceFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets flags that specify whether the &lt;xref:System.Security.AccessControl.ObjectAce.ObjectAceType%2A&gt; and &lt;xref:System.Security.AccessControl.ObjectAce.InheritedObjectAceType%2A&gt; properties contain values that identify valid object types.</summary>
        <value>On or more members of the <see cref="T:System.Security.AccessControl.ObjectAceFlags" /> enumeration combined with a logical OR operation.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ObjectAceType">
      <MemberSignature Language="C#" Value="public Guid ObjectAceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ObjectAceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the GUID of the object type associated with this <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</summary>
        <value>The GUID of the object type associated with this <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags>, this property is ignored.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>