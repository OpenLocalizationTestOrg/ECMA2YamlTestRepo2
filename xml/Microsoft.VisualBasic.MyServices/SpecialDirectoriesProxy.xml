<Type Name="SpecialDirectoriesProxy" FullName="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
  <TypeSignature Language="C#" Value="public class SpecialDirectoriesProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SpecialDirectoriesProxy extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides properties for accessing commonly referenced directories.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the path for the referenced directory is empty, usually due to the operating system not supporting the directory, a <xref:System.IO.DirectoryNotFoundException> exception is thrown.  
  
 No backslash (\\) appears at the end of the path.  
  
 The following table lists examples of tasks involving the `My.Computer.FileSystem.SpecialDirectories` object.  
  
|To|See|  
|--------|---------|  
|Read from the MyDocuments directory|[How to: Retrieve the Contents of the My Documents Directory](~/add/includes/ajax-current-ext-md.md)|  
  
## Availability by Project Type  
  
|Project type|Available|  
|------------------|---------------|  
|Windows Application|**Yes**|  
|Class Library|**Yes**|  
|Console Application|**Yes**|  
|Windows Control Library|**Yes**|  
|Web Control Library|**Yes**|  
|Windows Service|**Yes**|  
|Web Site|**Yes**|  
  
   
  
## Examples  
 This example returns the `filePath` for the user's Desktop directory and displays it.  
  
 [!code-vb[VbVbcnMyFileSystem#80](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._10_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="AllUsersApplicationData">
      <MemberSignature Language="C#" Value="public string AllUsersApplicationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllUsersApplicationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the Application Data directory for the all users.</summary>
        <value>The path to the Application Data directory for the all users.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path to the Application Data directory for the all users in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#79](~/add/codesnippet/visualbasic/94dbb611-9696-4491-8e6e-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CurrentUserApplicationData">
      <MemberSignature Language="C#" Value="public string CurrentUserApplicationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentUserApplicationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the Application Data directory for the current user.</summary>
        <value>The path to the Application Data directory for the current user.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SpecialDirectories object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path to the Application Data directory for the current user in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#48](~/add/codesnippet/visualbasic/794ab5b4-9536-4fa1-86a0-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Desktop">
      <MemberSignature Language="C#" Value="public string Desktop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Desktop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the Desktop directory.</summary>
        <value>The path to the Desktop directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SpecialDirectories object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path for the Desktop directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#60](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._64_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MyDocuments">
      <MemberSignature Language="C#" Value="public string MyDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MyDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the My Documents directory.</summary>
        <value>The path to the My Documents directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path for the My Documents directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#53](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._43_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MyMusic">
      <MemberSignature Language="C#" Value="public string MyMusic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MyMusic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the My Music directory.</summary>
        <value>The path to the My Music directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path for the My Music directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#26](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._86_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MyPictures">
      <MemberSignature Language="C#" Value="public string MyPictures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MyPictures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the My Pictures directory.</summary>
        <value>The path to the My Pictures directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path for the MyPictures directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#77](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._94_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProgramFiles">
      <MemberSignature Language="C#" Value="public string ProgramFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgramFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path pointing to the **Program Files** directory.</summary>
        <value>The path to the **Program Files** directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories. The **Program Files** directory contains the computer's program files.  
  
   
  
## Examples  
 This example displays the path for the **Program Files** directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#90](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._60_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Programs">
      <MemberSignature Language="C#" Value="public string Programs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Programs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the Programs directory.</summary>
        <value>The path to the Programs directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories. The Programs directory contains the user's program groups.  
  
   
  
## Examples  
 This example displays the path for the Programs directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#61](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._80_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Temp">
      <MemberSignature Language="C#" Value="public string Temp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Temp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a path name pointing to the Temp directory.</summary>
        <value>The path to the Temp directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `SpecialDirectories` object contains paths to commonly referenced directories.  
  
   
  
## Examples  
 This example displays the path for the Temp directory in a <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#31](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._82_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>