<Type Name="UdpTransportSettings" FullName="System.ServiceModel.Discovery.UdpTransportSettings">
  <TypeSignature Language="C#" Value="public class UdpTransportSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpTransportSettings extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enables you to set UDP transport settings.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="DuplicateMessageHistoryLength">
      <MemberSignature Language="C#" Value="public int DuplicateMessageHistoryLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DuplicateMessageHistoryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the maximum number of message hashes used by the transport for identifying duplicate messages.</summary>
        <value>The maximum number of message hashes to use.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gives system administrators and developers a way to turn off duplicate message detection algorithms. Setting this value to 0 disables duplicate message detection. The default value is 4112.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum size, in bytes, of any buffer pools used by the transport.</summary>
        <value>The maximum buffer pool size.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxMulticastRetransmitCount">
      <MemberSignature Language="C#" Value="public int MaxMulticastRetransmitCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxMulticastRetransmitCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the maximum number of times a multicast message should be retransmitted (In addition to the first send).</summary>
        <value>The maximum number of times a multicast message is retransmitted.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is 2.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxPendingMessageCount">
      <MemberSignature Language="C#" Value="public int MaxPendingMessageCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingMessageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the maximum number of messages that have been received but not yet removed from the input queue for an individual channel instance.</summary>
        <value>The number of messages.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the input queue has reached its pending message count limit, the message is dropped. The default value is 32.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum size, in bytes, of a message that can be processed by the binding.</summary>
        <value>The maximum size of a message.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is 65507.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxUnicastRetransmitCount">
      <MemberSignature Language="C#" Value="public int MaxUnicastRetransmitCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUnicastRetransmitCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the maximum number of times a unicast message should be retransmitted (in addition to the first send).</summary>
        <value>The maximum number of times a unicast message is retransmitted.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is 1.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MulticastInterfaceId">
      <MemberSignature Language="C#" Value="public string MulticastInterfaceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastInterfaceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that uniquely identifies the network adapter that is used when sending and receiving multicast messages.</summary>
        <value>The network adapter identifier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 At runtime, the transport uses this value to look up the interface index, which is then used to set the `IP_MULTICAST_IF` and `IPV6_MULTICAST_IF` socket options. The same interface index is used when joining a multicast group. The default value is `null`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SocketReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int SocketReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SocketReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the receive buffer size on the underlying WinSock socket.</summary>
        <value>The receive buffer size.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A user of a receiving channel can use this value on the binding to control how the system behaves when it receives data. For example, given an application that is accessing inbound [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] messages at the maximum threshold, using a higher value would allow messages to stack up in the WinSock buffer while waiting for the application to process them. Using a lower value in the same situation would result in messages getting dropped. This property exposes the underlying WinSock `SO_RCVBUF` socket setting. This property value must be at least the size of <xref:System.ServiceModel.Discovery.UdpTransportSettings.MaxReceivedMessageSize%2A>. Setting it to a value smaller than the <xref:System.ServiceModel.Discovery.UdpTransportSettings.MaxReceivedMessageSize%2A> results in a runtime exception. The default value is 65536.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public int TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the number of network segment hops that a multicast packet can traverse.</summary>
        <value>The number of network segment hops.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property exposes the functionality associated with the `IP_MULTICAST_TTL` and `IP_TTL` socket options. The default value is 1.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>