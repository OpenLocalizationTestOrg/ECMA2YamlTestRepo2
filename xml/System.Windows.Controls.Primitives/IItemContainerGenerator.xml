<Type Name="IItemContainerGenerator" FullName="System.Windows.Controls.Primitives.IItemContainerGenerator">
  <TypeSignature Language="C#" Value="public interface IItemContainerGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IItemContainerGenerator" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>An interface that is implemented by classes which are responsible for generating [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] content on behalf of a host.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemsControl> is the base class for containing and displaying one or more data items. <xref:System.Windows.Controls.ItemContainerGenerator> maintains an association between <xref:System.Windows.Controls.ItemsControl> and the list of items that are displayed by <xref:System.Windows.Controls.ItemsControl>. <xref:System.Windows.Controls.ItemContainerGenerator> is also responsible for generating the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] for those items on behalf of <xref:System.Windows.Controls.ItemsControl>. <xref:System.Windows.Controls.Panel>, <xref:System.Windows.Controls.VirtualizingPanel>, and <xref:System.Windows.Controls.VirtualizingStackPanel> also use <xref:System.Windows.Controls.ItemContainerGenerator> for the same reason.  
  
 <xref:System.Windows.Controls.ItemContainerGenerator> implements IItemContainerGenerator and is the interface through which each of the mentioned layout elements communicate with <xref:System.Windows.Controls.ItemContainerGenerator>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="GenerateNext">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GenerateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject GenerateNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the container element used to display the next item.</summary>
        <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GenerateNext must be called within the scope of the <xref:System.IDisposable> reference that is returned by a previous call to the <xref:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateNext">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GenerateNext (out bool isNewlyRealized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject GenerateNext(bool isNewlyRealized) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNewlyRealized" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="isNewlyRealized">Is <see langword="true" /> if the returned <see cref="T:System.Windows.DependencyObject" /> is newly generated (realized); otherwise, <see langword="false" />.</param>
        <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
        <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the container element which is used to display the next item.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the next item to be displayed has not already been generated (realized), GenerateNext returns a new <xref:System.Windows.DependencyObject>, otherwise, the existing <xref:System.Windows.DependencyObject> is returned.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GeneratorPositionFromIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.GeneratorPosition GeneratorPositionFromIndex (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Controls.Primitives.GeneratorPosition GeneratorPositionFromIndex(int32 itemIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.GeneratorPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">The index of desired item.</param>
        <summary>Returns the <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</summary>
        <returns>An <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> object that maps to the item at the specified index.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetItemContainerGeneratorForPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerGenerator GetItemContainerGeneratorForPanel (System.Windows.Controls.Panel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ItemContainerGenerator GetItemContainerGeneratorForPanel(class System.Windows.Controls.Panel panel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Controls.Panel" />
      </Parameters>
      <Docs>
        <param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</param>
        <summary>Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</summary>
        <returns>An <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> appropriate for use by the specified panel.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexFromGeneratorPosition">
      <MemberSignature Language="C#" Value="public int IndexFromGeneratorPosition (System.Windows.Controls.Primitives.GeneratorPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexFromGeneratorPosition(valuetype System.Windows.Controls.Primitives.GeneratorPosition position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
      </Parameters>
      <Docs>
        <param name="position">The index of desired item.  
  
 The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> for the desired index.</param>
        <summary>Returns the index that maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</summary>
        <returns>An &lt;xref:System.Int32&gt; that is the index which maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrepareItemContainer">
      <MemberSignature Language="C#" Value="public void PrepareItemContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareItemContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">The container to prepare. Normally, `container` is the result of the previous call to &lt;xref:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext%2A&gt;.</param>
        <summary>Prepares the specified element as the container for the corresponding item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Preparing the specified element includes applying the container style, forwarding information from the host control, such as the <xref:System.Windows.DataTemplate> value of the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> property, and other small adjustments.  
  
 PrepareItemContainer must be called after the element has been added to the visual tree, so that resource references and inherited properties work correctly.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Controls.Primitives.GeneratorPosition position, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">The &lt;xref:System.Int32&gt; index of the element to remove. `position` must refer to a previously generated (realized) item, which means its offset must be zero.</param>
        <param name="count">The &lt;xref:System.Int32&gt; number of elements to remove, starting at `position`.</param>
        <summary>Removes one or more generated (realized) items.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all generated (realized) items.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartAt">
      <MemberSignature Language="C#" Value="public IDisposable StartAt (System.Windows.Controls.Primitives.GeneratorPosition position, System.Windows.Controls.Primitives.GeneratorDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable StartAt(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, valuetype System.Windows.Controls.Primitives.GeneratorDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="direction" Type="System.Windows.Controls.Primitives.GeneratorDirection" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
        <param name="direction">A <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> that specifies the direction which to generate items.</param>
        <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />.</summary>
        <returns>An &lt;xref:System.IDisposable&gt; object that tracks the lifetime of the generation process.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 StartAt must be called before <xref:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext%2A> is called.  
  
 StartAt sets <xref:System.Windows.Controls.ItemContainerGenerator.Status%2A> to <xref:System.Windows.Controls.Primitives.GeneratorStatus>; when the <xref:System.IDisposable> is disposed, the status changes to <xref:System.Windows.Controls.Primitives.GeneratorStatus> or <xref:System.Windows.Controls.Primitives.GeneratorStatus>, as appropriate.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartAt">
      <MemberSignature Language="C#" Value="public IDisposable StartAt (System.Windows.Controls.Primitives.GeneratorPosition position, System.Windows.Controls.Primitives.GeneratorDirection direction, bool allowStartAtRealizedItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable StartAt(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, valuetype System.Windows.Controls.Primitives.GeneratorDirection direction, bool allowStartAtRealizedItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="direction" Type="System.Windows.Controls.Primitives.GeneratorDirection" />
        <Parameter Name="allowStartAtRealizedItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, that specifies the position of the item to start generating items at.</param>
        <param name="direction">Specifies the position of the item to start generating items at.</param>
        <param name="allowStartAtRealizedItem">A &lt;xref:System.Boolean&gt; that specifies whether to start at a generated (realized) item.</param>
        <summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />, and controlling whether or not to start at a generated (realized) item.</summary>
        <returns>An &lt;xref:System.IDisposable&gt; object that tracks the lifetime of the generation process.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See <xref:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>