<Type Name="MultiSelector" FullName="System.Windows.Controls.Primitives.MultiSelector">
  <TypeSignature Language="C#" Value="public abstract class MultiSelector : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MultiSelector extends System.Windows.Controls.Primitives.Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides an abstract class for controls that allow multiple items to be selected.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you derive a class from the MultiSelector class, set the <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> property to `true` to allow multi-selection in your control.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultiSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Primitives.MultiSelector> is an abstract class and cannot be instantiated directly.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void BeginUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdateSelectedItems() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts a new selection transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The BeginUpdateSelectedItems method sets <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> to `true`. The <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> method sets <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> to `false`.  
  
   
  
## Examples  
 The following example shows how to use the BeginUpdateSelectedItems method in a class derived from <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-cs[System.Windows.Controls.MultiSelectorEx#2](~/add/codesnippet/csharp/MultiSelectorEx/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A&gt; is <see langword="true" /> when this method is called.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleItems">
      <MemberSignature Language="C#" Value="protected bool CanSelectMultipleItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultipleItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the multiple items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> can be selected at a time.</summary>
        <value>
          <see langword="true" /> if multiple items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> can be selected at a time; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set the CanSelectMultipleItems property to `true` in a derived class to allow multi-selection for that class.  
  
   
  
## Examples  
 The following code example shows how to set this property in a derived class.  
  
 [!code-cs[System.Windows.Controls.MultiSelectorEx#1](~/add/codesnippet/csharp/MultiSelectorEx/MyMultiSelector.xaml.cs#1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void EndUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdateSelectedItems() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Commits the selected items to the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method sets <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> to `false` and updates the <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> collection.  
  
 The <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> method sets <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> to `true`.  
  
   
  
## Examples  
 The following example shows how to use the EndUpdateSelectedItems method in a class derived from <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-cs[System.Windows.Controls.MultiSelectorEx#2](~/add/codesnippet/csharp/MultiSelectorEx/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A&gt; is <see langword="false" /> when this method is called.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsUpdatingSelectedItems">
      <MemberSignature Language="C#" Value="protected bool IsUpdatingSelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdatingSelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> is currently performing a bulk update to the &lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A&gt; collection.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> is currently performing a bulk update to the &lt;xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A&gt; collection; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> method sets IsUpdatingSelectedItems to `true`. The <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> method sets IsUpdatingSelectedItems to `false`.  
  
   
  
## Examples  
 The following example shows how to use the IsUpdatingSelectedItems property in a class derived from <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-cs[System.Windows.Controls.MultiSelectorEx#2](~/add/codesnippet/csharp/MultiSelectorEx/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Selects all of the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use this method only if <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> is `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">&lt;xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A&gt; is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> that are selected.</summary>
        <value>The items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> that are selected.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> is `false`, you cannot add more than one item to the SelectedItems collection. Attempts to do so will cause an exception.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public void UnselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unselects all of the items in the <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use this method regardless of whether <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> is `true` or `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>