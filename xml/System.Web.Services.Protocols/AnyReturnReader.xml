<Type Name="AnyReturnReader" FullName="System.Web.Services.Protocols.AnyReturnReader">
  <TypeSignature Language="C#" Value="public class AnyReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnyReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a minimal reader of incoming response return values for Web service clients implemented using HTTP but without SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 AnyReturnReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.  
  
 The AnyReturnReader class provides a minimal implementation of the interface of the abstract parent class <xref:System.Web.Services.Protocols.MimeReturnReader>.You typically will not need to use AnyReturnReader directly. When the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and by default sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> property to <xref:System.Web.Services.Protocols.XmlReturnReader>, another class derived from <xref:System.Web.Services.Protocols.MimeReturnReader>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnyReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that indicates the Web method for which the initializer is obtained.</param>
        <summary>Returns the parameter passed to the &lt;xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A&gt; method.</summary>
        <returns>The parameter passed to the &lt;xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A&gt; method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> method. For the <xref:System.Web.Services.Protocols.AnyReturnReader> class, the initializer is the instance referred to by the keyword `this`, unless the <xref:System.Web.Services.Protocols.LogicalMethodInfo> parameter value has a void return type, in which case the initializer is set to `null`.  
  
 The GetInitializer method is invoked during service initialization. Later, at the time a response is processed, the initializer <xref:System.Web.Services.Protocols.AnyReturnReader> object is passed to the <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> method of another <xref:System.Web.Services.Protocols.AnyReturnReader> instance. The other instance takes the call to the <xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Another instance of the <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> class, on which the &lt;xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer%2A&gt; method was previously called.</param>
        <summary>Initializes an instance of the <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Initialize method does nothing.  
  
 This method is invoked at the time a response is processed. The input parameter, `initializer`, is another instance of <xref:System.Web.Services.Protocols.AnyReturnReader>, obtained during client initialization.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">A representation of the HTTP response sent by a Web service, containing the output message for an operation.</param>
        <param name="responseStream">An output stream whose content is the body of the HTTP response represented by the `response` parameter.</param>
        <summary>Returns the input HTTP response stream.</summary>
        <returns>The input HTTP response stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Services.Protocols.AnyReturnReader> class's implementation of the Read method does no reading. Instead it simply returns the <xref:System.IO.Stream> object passed as a parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>