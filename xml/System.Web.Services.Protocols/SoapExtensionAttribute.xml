<Type Name="SoapExtensionAttribute" FullName="System.Web.Services.Protocols.SoapExtensionAttribute">
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>When overridden in a derived class, specifies a SOAP extension should run with an XML Web service method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web service methods created using ASP.NET can be configured to run with a SOAP extension by applying an attribute to the XML Web service method. When a custom extension attribute is added to an XML Web service method or a method on a client proxy class, ASP.NET invokes the associated extension at the appropriate time. An extension attribute is a custom attribute class deriving from SoapExtensionAttribute. Derived attributes must override the <xref:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType%2A> property to return the type of extension that is associated with the attribute.  
  
   
  
## Examples  
 The following `TraceExtensionAttribute` class derives from SoapExtensionAttribute to support applying the attribute to an XML Web service method or a method in an XML Web service client proxy class. When applied to either, the `TraceExtension` SOAP extension runs with the method.  
  
 [!code-cpp[Classic SoapExtensionAttribute Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_7_1.cpp)]
 [!code-cs[Classic SoapExtensionAttribute Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_7_1.cs)]
 [!code-vb[Classic SoapExtensionAttribute Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_7_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExtensionType">
      <MemberSignature Language="C#" Value="public abstract Type ExtensionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExtensionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the &lt;xref:System.Type&gt; of the SOAP extension.</summary>
        <value>The &lt;xref:System.Type&gt; of the SOAP extension.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derived classes must override the ExtensionType property to return the type of the SOAP extension.  
  
   
  
## Examples  
 The following code example is a typical implementation of the ExtensionType property.  
  
 [!code-cs[SoapExtensionAttribute#2](~/add/codesnippet/csharp/p-system.web.services.pr_50_1.cs)]
 [!code-cpp[SoapExtensionAttribute#2](~/add/codesnippet/cpp/p-system.web.services.pr_50_1.cpp)]
 [!code-vb[SoapExtensionAttribute#2](~/add/codesnippet/visualbasic/p-system.web.services.pr_50_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public abstract int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets or set the priority of the SOAP extension.</summary>
        <value>The priority of the SOAP extension.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is a typical implementation of the Priority property.  
  
 SoapExtensionAttribute#3  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>