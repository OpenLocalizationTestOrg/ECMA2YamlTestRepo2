<Type Name="SoapException" FullName="System.Web.Services.Protocols.SoapException">
  <TypeSignature Language="C#" Value="public class SoapException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SoapException extends System.SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the exception that is thrown when an XML Web service method is called over SOAP and an exception occurs.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SoapException can either be thrown by the common language runtime or by an XML Web service method. The common language runtime can throw a SoapException if a response to a request is not formatted correctly. XML Web service methods can generate a SoapException by simply throwing an exception within the XML Web service method. If the client accessed the method over SOAP, the exception is caught on the server and wrapped inside a new SoapException. The SoapException thrown has the following property values:  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.Message%2A>|The <xref:System.Exception.Message%2A> property of the original exception.|  
|<xref:System.Web.Services.Protocols.SoapException.Code%2A>|<xref:System.Web.Services.Protocols.SoapException.ServerFaultCode>.|  
|<xref:System.Web.Services.Protocols.SoapException.Actor%2A>|The URL of the XML Web service method.|  
|<xref:System.Web.Services.Protocols.SoapException.Detail%2A>|`null`, but an empty detail element is present in the fault element.|  
  
 An XML Web service method might throw a SoapException when clients call using SOAP. If an XML Web service throws the SoapException, other details can be added through the <xref:System.Web.Services.Protocols.SoapException.Actor%2A>, <xref:System.Web.Services.Protocols.SoapException.Code%2A> and <xref:System.Web.Services.Protocols.SoapException.Detail%2A> properties that cannot otherwise be set by an XML Web service method if another type of exception is thrown.  
  
   
  
## Examples  
 The following example throws a SoapException where the XML Web service method sets the <xref:System.Web.Services.Protocols.SoapException.Detail%2A> property.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The T:System.Runtime.Serialization.StreamingContext  that contains contextual information about the source or destination.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with serialized data.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message and exception code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="innerException">An exception that is the root cause of the exception. This parameter sets the &lt;xref:System.Exception.InnerException%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, and reference to the root cause of the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, string actor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, string actor) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="actor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="actor">A URI that identifies the code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Actor%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, and URI that identifies the piece of code that caused the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, System.Web.Services.Protocols.SoapFaultSubCode subCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, class System.Web.Services.Protocols.SoapFaultSubCode subCode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="subCode" Type="System.Web.Services.Protocols.SoapFaultSubCode" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="subCode">An optional subcode for the SOAP fault. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.SubCode%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, and subcode.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, string actor, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, string actor, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="actor" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Actor%2A&gt; property.</param>
        <param name="innerException">An exception that is the root cause of the exception. This parameter sets the &lt;xref:System.Exception.InnerException%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the code that caused the exception, and reference to the root cause of the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, string actor, System.Xml.XmlNode detail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, string actor, class System.Xml.XmlNode detail) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="actor" Type="System.String" />
        <Parameter Name="detail" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Actor%2A&gt; property.</param>
        <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Detail%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, and application specific exception information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, string actor, System.Xml.XmlNode detail, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, string actor, class System.Xml.XmlNode detail, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="actor" Type="System.String" />
        <Parameter Name="detail" Type="System.Xml.XmlNode" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Actor%2A&gt; property.</param>
        <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Detail%2A&gt; property.</param>
        <param name="innerException">An exception that is the root cause of the exception. This parameter sets the &lt;xref:System.Exception.InnerException%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, application-specific exception information, and reference to the root cause of the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, string actor, string role, System.Xml.XmlNode detail, System.Web.Services.Protocols.SoapFaultSubCode subCode, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, string actor, string role, class System.Xml.XmlNode detail, class System.Web.Services.Protocols.SoapFaultSubCode subCode, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="actor" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="detail" Type="System.Xml.XmlNode" />
        <Parameter Name="subCode" Type="System.Web.Services.Protocols.SoapFaultSubCode" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Actor%2A&gt; property.</param>
        <param name="role">A URI that represents the XML Web service's function in processing the SOAP message. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Role%2A&gt; property.</param>
        <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Detail%2A&gt; property.</param>
        <param name="subCode">An optional subcode for the SOAP fault. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.SubCode%2A&gt; property.</param>
        <param name="innerException">An exception that is the root cause of the exception. This parameter sets the &lt;xref:System.Exception.InnerException%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, application-specific exception information, and reference to the root cause of the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapException (string message, System.Xml.XmlQualifiedName code, string actor, string role, string lang, System.Xml.XmlNode detail, System.Web.Services.Protocols.SoapFaultSubCode subCode, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Xml.XmlQualifiedName code, string actor, string role, string lang, class System.Xml.XmlNode detail, class System.Web.Services.Protocols.SoapFaultSubCode subCode, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="actor" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="lang" Type="System.String" />
        <Parameter Name="detail" Type="System.Xml.XmlNode" />
        <Parameter Name="subCode" Type="System.Web.Services.Protocols.SoapFaultSubCode" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A message that identifies the reason the exception occurred. This parameter sets the &lt;xref:System.Exception.Message%2A&gt; property.</param>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the type of error that occurred. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Code%2A&gt; property.</param>
        <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Actor%2A&gt; property.</param>
        <param name="role">A URI that represents the XML Web service's function in processing the SOAP message. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Role%2A&gt; property.</param>
        <param name="lang">A human language associated with the exception. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Lang%2A&gt; property.</param>
        <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.Detail%2A&gt; property.</param>
        <param name="subCode">An optional subcode for the SOAP fault. This parameter sets the &lt;xref:System.Web.Services.Protocols.SoapException.SubCode%2A&gt; property.</param>
        <param name="innerException">An exception that is the root cause of the exception. This parameter sets the &lt;xref:System.Exception.InnerException%2A&gt; property.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, URI that represents the XML Web service's function in processing the SOAP message, the human language associated with the exception, the application-specific exception information, the subcode for the SOAP fault and reference to the root cause of the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the piece of code that caused the exception.</summary>
        <value>The piece of code that caused the exception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Actor property can only be set using one of the constructors that accepts an Actor argument.  
  
 When a SOAP request is made, the message is sent to a recipient, which is specified in a SOAP actor attribute. If an exception occurs within an XML Web service, the value of the SOAP actor attribute is assigned to the Actor property. For XML Web services created using ASP.NET, the URL to the XML Web service method is the value of the SOAP actor attribute and is returned in the Actor property.  
  
 For more information on the SOAP actor attribute, see the SOAP specification at http://www.w3.org/TR/SOAP/.  
  
   
  
## Examples  
 The following Web Form example calls the `Math` XML Web service method, which throws an exception if a division by zero occurs. When the exception is thrown, the Web Form catches the exception and outputs the exception details, including the Actor and <xref:System.Web.Services.Protocols.SoapException.Code%2A> properties, into an <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-cs[Classic SoapException.Actor Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_75_1.aspx)]
 [!code-vb[Classic SoapException.Actor Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_75_1.aspx)]  
  
 In order for the preceding Web Form to use the following `Math` Web Service example, a namespace of `MyMath` was specified during the creation of the proxy class.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClientFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName ClientFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName ClientFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies a SOAP fault code that represents a client call that is not formatted correctly or does not contain the appropriate information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An example of when a ClientFaultCode can be generated, is when a client call does not have proper authentication or payment information. It is generally an indication that the client call must be changed before it is resent.  
  
   
  
## Examples  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Code">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName Code { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlQualifiedName Code" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of SOAP fault code.</summary>
        <value>An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the SOAP fault code that occurred.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Code property can only be set when creating a new instance of the <xref:System.Web.Services.Protocols.SoapException> class.  
  
 The <xref:System.Web.Services.Protocols.SoapException> class is for use by XML Web service clients that call XML Web service methods over SOAP. ASP.NET handles whether the client that calls uses SOAP. This is when an exception occurs in an XML Web service. If the client uses SOAP, ASP.NET wraps the specific exception into a <xref:System.Web.Services.Protocols.SoapException> and sets the <xref:System.Web.Services.Protocols.SoapException.Actor%2A> and Code properties.  
  
 The set of available codes, known as SOAP Fault Codes for SOAP protocol version 1.1, are the following:  
  
|Item|Description|  
|----------|-----------------|  
|<xref:System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode>|An invalid namespace for a SOAP envelope was found.|  
|<xref:System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode>|Not all SOAP elements require processing. However, if a SOAP element is marked with the `MustUnderstand` attribute with a value of 1, it is required. Failure to process the element generates this exception.|  
|<xref:System.Web.Services.Protocols.SoapException.ClientFaultCode>|A client call was not formatted correctly or did not contain the appropriate information. For example, the client call might not have the proper authentication or payment information. It is generally an indication that the message must be changed before it is resent.|  
|<xref:System.Web.Services.Protocols.SoapException.ServerFaultCode>|An error occurred during the processing of a client call on the server, however, the problem is not due to the message contents. For example, an upstream server might not respond to a request due to network problems. Typically, with this type of exception, the client call might succeed later. If an XML Web service throws an exception, other than <xref:System.Web.Services.Protocols.SoapException> and the client calls using SOAP, ASP.NET converts the exception to a <xref:System.Web.Services.Protocols.SoapException>, setting the Code property to <xref:System.Web.Services.Protocols.SoapException.ServerFaultCode> and throws it back to the client.|  
  
   
  
## Examples  
 The following Web Form example calls the `Math` Web Service method, which throws an exception if a division by zero occurs. Once the exception is thrown, the Web Form catches the exception and outputs the exception details, including the <xref:System.Web.Services.Protocols.SoapException.Actor%2A> and Code properties into a <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-cs[classic soapexception.actor example#1](~/add/codesnippet/csharp/p-system.web.services.pr_3_1.aspx)]
 [!code-vb[classic soapexception.actor example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_3_1.aspx)]  
  
 In order for the preceding Web Form to use the following `Math` XML Web service example, a namespace of `MyMath` was specified during the creation of the proxy class.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode Detail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode Detail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Xml.XmlNode" /> that represents the application-specific error information details.</summary>
        <value>The application-specific error information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Detail property can be set using one of the class constructors that accepts a Detail value.  
  
 The Detail property is used to supply application-specific error details related to the `Body` element of the SOAP request. According to the SOAP specification, if an error occurs because the client request cannot be processed due to the `Body` element of the SOAP request, the Detail property must be set. If an error occurs in the header entries of the SOAP request, you must throw a <xref:System.Web.Services.Protocols.SoapHeaderException>, so that the error details are returned in the SOAP header. If the error does not occur, due to the processing of the `Body` element, then the Detail property must not be set.  
  
 In building an <xref:System.Xml.XmlNode> for the Detail property, the <xref:System.Xml.XmlQualifiedName.Name%2A> and <xref:System.Xml.XmlQualifiedName.Namespace%2A> properties of <xref:System.Web.Services.Protocols.SoapException.DetailElementName> can be used to ensure consistency with the SOAP specification.  
  
 All immediate child elements of the detail element are called detail entries and each detail entry is encoded as an independent element within the detail element.  
  
   
  
## Examples  
 The following example throws a <xref:System.Web.Services.Protocols.SoapException>, where the XML Web service method sets the Detail property.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DetailElementName">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName DetailElementName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName DetailElementName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the &lt;xref:System.Web.Services.Protocols.SoapException.Detail%2A&gt; element of a SOAP Fault code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In building an <xref:System.Xml.XmlNode> for the <xref:System.Web.Services.Protocols.SoapException.Detail%2A> property, the <xref:System.Xml.XmlQualifiedName.Name%2A> and <xref:System.Xml.XmlQualifiedName.Namespace%2A> properties of DetailElementName can be used to ensure consistency with the SOAP specification.  
  
   
  
## Examples  
 The following example sets the <xref:System.Web.Services.Protocols.SoapException.Detail%2A> property using the DetailElementName field and then throws a <xref:System.Web.Services.Protocols.SoapException>.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains contextual information about the source or destination.</param>
        <summary>Sets the &lt;xref:System.Runtime.Serialization.&gt;[SerializationInfo](~/add/includes/ajax-current-ext-md.md) with information about the exception.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsClientFaultCode">
      <MemberSignature Language="C#" Value="public static bool IsClientFaultCode (System.Xml.XmlQualifiedName code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsClientFaultCode(class System.Xml.XmlQualifiedName code) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that contains a SOAP fault code.</param>
        <summary>Returns a value that indicates whether the SOAP fault code is equivalent to the <see langword="Client" /> SOAP fault code regardless of the version of the SOAP protocol used.</summary>
        <returns>
          <see langword="true" /> if <paramref name="code" /> is equivalent to the <see langword="Client" /> SOAP fault code; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recipients of a <xref:System.Web.Services.Protocols.SoapException> can use this method to determine whether the <xref:System.Web.Services.Protocols.SoapException.Code%2A> property is functionally equivalent to the `Client` SOAP fault code defined in SOAP 1.1 regardless of the version of the SOAP protocol used. Versions of the SOAP protocol later than 1.1 might use different names or namespaces for the `Client` SOAP fault code defined in SOAP version 1.1, which is represented by the <xref:System.Web.Services.Protocols.SoapException.ClientFaultCode> field. SOAP 1.2 names the fault code `Sender`, which is represented by the <xref:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode?displayProperty=fullName> field.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMustUnderstandFaultCode">
      <MemberSignature Language="C#" Value="public static bool IsMustUnderstandFaultCode (System.Xml.XmlQualifiedName code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMustUnderstandFaultCode(class System.Xml.XmlQualifiedName code) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that contains a SOAP fault code.</param>
        <summary>Returns a value that indicates whether the SOAP fault code is equivalent to <see langword="MustUnderstand" /> regardless of the version of the SOAP protocol used.</summary>
        <returns>
          <see langword="true" /> if <paramref name="code" /> is equivalent to the <see langword="MustUnderstand" /> SOAP fault code; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recipients of a <xref:System.Web.Services.Protocols.SoapException> can use this method to determine whether the <xref:System.Web.Services.Protocols.SoapException.Code%2A> property is functionally equivalent to the `MustUnderstand` SOAP fault code defined in SOAP 1.1 regardless of the version of the SOAP protocol used. Versions of the SOAP protocol later than 1.1 might use different names or namespaces for the `MustUnderstand` SOAP fault code defined in SOAP version 1.1, which is represented by the <xref:System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode?displayProperty=fullName> field. SOAP 1.2 names the fault code the same; however it is scoped by a different XML namespace and is represented by the <xref:System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode?displayProperty=fullName> field.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsServerFaultCode">
      <MemberSignature Language="C#" Value="public static bool IsServerFaultCode (System.Xml.XmlQualifiedName code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsServerFaultCode(class System.Xml.XmlQualifiedName code) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that contains a SOAP fault code.</param>
        <summary>Returns a value that indicates whether the SOAP fault code is equivalent to the <see langword="Server" /> SOAP fault code regardless of the version of the SOAP protocol used.</summary>
        <returns>
          <see langword="true" /> if <paramref name="code" /> is equivalent to the <see langword="Server" /> SOAP fault code; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recipients of a <xref:System.Web.Services.Protocols.SoapException> can use this method to determine whether the <xref:System.Web.Services.Protocols.SoapException.Code%2A> property is functionally equivalent to the `Server` SOAP fault code defined in SOAP 1.1 regardless of the version of the SOAP protocol used. Versions of the SOAP protocol later than 1.1 might use different names or namespaces for the `Server` SOAP fault code defined in SOAP version 1.1, which is represented by the <xref:System.Web.Services.Protocols.SoapException.ServerFaultCode> field. SOAP 1.2 names the fault code `Receiver`, which is represented by the <xref:System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode?displayProperty=fullName> field.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsVersionMismatchFaultCode">
      <MemberSignature Language="C#" Value="public static bool IsVersionMismatchFaultCode (System.Xml.XmlQualifiedName code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsVersionMismatchFaultCode(class System.Xml.XmlQualifiedName code) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="code">An &lt;xref:System.Xml.XmlQualifiedName&gt; that contains a SOAP fault code.</param>
        <summary>Returns a value that indicates whether the SOAP fault code is equivalent to the <see langword="VersionMismatch" /> SOAP fault code regardless of the version of the SOAP protocol used.</summary>
        <returns>
          <see langword="true" /> if <paramref name="code" /> is equivalent to the <see langword="VersionMismatch" /> SOAP fault code; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recipients of a <xref:System.Web.Services.Protocols.SoapException> can use this method to determine whether the <xref:System.Web.Services.Protocols.SoapException.Code%2A> property is functionally equivalent to the `VersionMismatch` SOAP fault code defined in SOAP 1.1 regardless of the version of the SOAP protocol used. Versions of the SOAP protocol later than 1.1 might use different names or namespaces for the `VersionMismatch` SOAP fault code defined in SOAP version 1.1, which is represented by the <xref:System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode?displayProperty=fullName> field. SOAP 1.2 names the fault code the same; however, it is scoped by a different XML namespace and is represented by the <xref:System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode?displayProperty=fullName> field.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Lang">
      <MemberSignature Language="C#" Value="public string Lang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Lang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the human language associated with the exception.</summary>
        <value>A &lt;xref:System.String&gt; value that identifies the human language associated with the exception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If your Web service works with multiple human languages, throw exceptions with message text or other properties localized to each language. Use this property to identify the language associated with the exception.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MustUnderstandFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName MustUnderstandFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName MustUnderstandFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A SOAP Fault Code that represents a SOAP element marked with the <see langword="MustUnderstand" /> attribute was not processed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Not all SOAP elements require processing by the server. However, if a SOAP element is marked with the `MustUnderstand` attribute equal to 1 or `true`, processing is required. Failure to process the element generates a <xref:System.Web.Services.Protocols.SoapException> with a MustUnderstandFaultCode.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public string Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a URI that represents the piece of code that caused the exception.</summary>
        <value>The piece of code that caused the exception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Node property is ignored when the SOAP protocol version 1.1 is used to communicate with an XML Web service. When SOAP 1.2 is used, the Node property sets the `node` element within a `fault` element of a SOAP message.  
  
 The <xref:System.Web.Services.Protocols.SoapException.Actor%2A> and Node properties both identify the piece of code that caused the exception; they just refer to their SOAP 1.1 and SOAP 1.2 names respectively. Because they both refer to the same property value, applications can just access the <xref:System.Web.Services.Protocols.SoapException.Actor%2A> property. The value of these properties is set by the constructors that accept an `actor` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a URI that represents the XML Web service's function in processing the SOAP message.</summary>
        <value>The role of the XML Web service throwing the <see cref="T:System.Web.Services.Protocols.SoapException" />. The default is &lt;xref:System.String.Empty&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Role property is ignored when the SOAP protocol version 1.1 is used to communicate with an XML Web service. When SOAP 1.2 is used, the Role property sets the `role` element within a `fault` element of a SOAP message.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ServerFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName ServerFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName ServerFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that a SOAP fault code that represents an error occurred during the processing of a client call on the server, where the problem is not due to the message contents.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ServerFaultCode might occur, for example, if a server being called cannot respond to a request due to network problems. Typically, with this type of exception, the client call might succeed later.  
  
 If an XML Web service throws an exception, other than the <xref:System.Web.Services.Protocols.SoapException>, and the client is communicating with the XML Web service using the SOAP protocol, ASP.NET returns a SOAP fault. The .NET Framework running on the client machine converts that SOAP fault into a <xref:System.Web.Services.Protocols.SoapException>, setting the <xref:System.Web.Services.Protocols.SoapException.Code%2A> property to ServerFaultCode, and throws that exception to the client.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SubCode">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapFaultSubCode SubCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapFaultSubCode SubCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapFaultSubCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the optional error information contained in the <see langword="subcode" /> XML element of a SOAP fault.</summary>
        <value>A <see cref="T:System.Web.Services.Protocols.SoapFaultSubCode" /> that represents the contents of the <see langword="subcode" /> XML element of a SOAP fault.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SubCode property is ignored when the SOAP protocol version 1.1 is used to communicate with an XML Web service. The <xref:System.Web.Services.Protocols.SoapException.Code%2A> property that represents the contents of the `code` element specifies the type of error that occurred using a limited number of pre-defined error codes specified by the SOAP protocol, whereas the optional `subcode` element allows an application to provide user-defined error codes specific to the application. ASP.NET defines two such codes that are represented by the <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode> and <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode> fields.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VersionMismatchFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName VersionMismatchFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName VersionMismatchFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A SOAP fault code that represents an invalid namespace for a SOAP envelope was found during the processing of the SOAP message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A SOAP envelope is the top-level element of an XML document that represents a SOAP message.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>