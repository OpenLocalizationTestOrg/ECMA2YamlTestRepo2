<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines an application's caching requirements for resources obtained by using &lt;xref:System.Net.HttpWebRequest&gt; objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can specify a default cache policy for your application by using the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property or the application or machine configuration files. For more information, see [\&lt;requestCaching\&gt; Element (Network Settings)](../Topic/%3CrequestCaching%3E%20Element%20\(Network%20Settings\).md).  
  
 You can specify the cache policy for an individual request by using the <xref:System.Net.WebRequest.CachePolicy%2A> property.  
  
 Caching for Web services is not supported.  
  
   
  
## Examples  
 The following code example creates a default cache policy for the application domain, and overrides it for a request.  
  
 [!code-cpp[NclSimpleCache#2](~/add/codesnippet/cpp/t-system.net.cache.httpr_0_1.cpp)]
 [!code-cs[NclSimpleCache#2](~/add/codesnippet/csharp/t-system.net.cache.httpr_0_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>.  
  
   
  
## Examples  
 The following code example demonstrates setting the cache policy using this constructor.  
  
 [!code-cpp[NclSimpleCache#11](~/add/codesnippet/cpp/m-system.net.cache.httpr_2_1.cpp)]
 [!code-cs[NclSimpleCache#11](~/add/codesnippet/csharp/m-system.net.cache.httpr_2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate">A &lt;xref:System.DateTime&gt; object that specifies the time when resources stored in the cache must be revalidated.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified cache synchronization date.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The cache synchronization date allows you to specify an absolute date when cached contents must be revalidated. If the cache entry was last revalidated prior to the cache synchronization date, revalidation with the server occurs. If the cache entry was revalidated after the cache synchronization date and there are no server revalidation requirements that make the cached entry invalid, the entry from the cache is used. If the cache synchronization date is set to a future date, the entry is revalidated every time it is requested, until the cache synchronization date passes.  
  
 This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>. The <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> property is initialized to `cacheSyncDate`.  
  
   
  
## Examples  
 The following code example demonstrates creating a cache policy based on a cache synchronization date.  
  
 [!code-cpp[NclSimpleCache#3](~/add/codesnippet/cpp/m-system.net.cache.httpr_0_1.cpp)]
 [!code-cs[NclSimpleCache#3](~/add/codesnippet/csharp/m-system.net.cache.httpr_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level">An <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified cache policy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to `level`.  
  
 The <xref:System.Net.Cache.HttpRequestCacheLevel> value controls whether caching is enabled, and when the cache can be used. For additional information, see the <xref:System.Net.Cache.HttpRequestCacheLevel> documentation.  
  
   
  
## Examples  
 The following code example demonstrates creating a cache policy that allows resources found in the cache to be used from the cache.  
  
 [!code-cpp[NclSimpleCache#12](~/add/codesnippet/cpp/ace4fbc2-5589-4718-95d4-_1.cpp)]
 [!code-cs[NclSimpleCache#12](~/add/codesnippet/csharp/ace4fbc2-5589-4718-95d4-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">One of the following <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> enumeration values: <see cref="T:System.Net.Cache.HttpCacheAgeControl" />, <see cref="T:System.Net.Cache.HttpCacheAgeControl" />, or <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
        <param name="ageOrFreshOrStale">A &lt;xref:System.TimeSpan&gt; value that specifies an amount of time. See the Remarks section for more information.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified age control and time values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `cacheAgeControl` value defines the meaning of the `ageOrFreshOrStale` parameter value and is used to set the associated property. For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `ageOrFreshOrStale` parameter.  
  
 This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>.  
  
   
  
## Examples  
 The following code example demonstrates creating a cache policy based on minimum freshness.  
  
 [!code-cpp[NclSimpleCache#5](~/add/codesnippet/cpp/d2b33c1a-bd41-4048-9414-_1.cpp)]
 [!code-cs[NclSimpleCache#5](~/add/codesnippet/csharp/d2b33c1a-bd41-4048-9414-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value specified for the <paramref name="cacheAgeControl" /> parameter cannot be used with this constructor.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">An <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> value.</param>
        <param name="maxAge">A &lt;xref:System.TimeSpan&gt; value that specifies the maximum age for resources.</param>
        <param name="freshOrStale">A &lt;xref:System.TimeSpan&gt; value that specifies an amount of time. See the Remarks section for more information.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified maximum age, age control value, and time value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `cacheAgeControl` value is used to interpret the meaning of the `freshOrStale` parameter value and set the associated property. For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `freshOrStale` parameter. When you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is set using the value of the `maxAge` parameter and the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set using the value of the `freshOrStale` parameter.  
  
 Note that unless you specify <xref:System.Net.Cache.HttpCacheAgeControl> or <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is not set.  
  
 This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>.  
  
   
  
## Examples  
 The following code example demonstrates creating a cache policy based on minimum freshness and maximum age.  
  
 [!code-cpp[NclSimpleCache#9](~/add/codesnippet/cpp/8f8f9eae-9699-4ddf-806f-_1.cpp)]
 [!code-cs[NclSimpleCache#9](~/add/codesnippet/csharp/8f8f9eae-9699-4ddf-806f-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value specified for the <paramref name="cacheAgeControl" /> parameter is not valid.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">An <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> value.</param>
        <param name="maxAge">A &lt;xref:System.TimeSpan&gt; value that specifies the maximum age for resources.</param>
        <param name="freshOrStale">A &lt;xref:System.TimeSpan&gt; value that specifies an amount of time. See the Remarks section for more information.</param>
        <param name="cacheSyncDate">A &lt;xref:System.DateTime&gt; object that specifies the time when resources stored in the cache must be revalidated.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified maximum age, age control value, time value, and cache synchronization date.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `cacheAgeControl` value is used to interpret the meaning of the `freshOrStale` parameter value and set the associated property. For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `freshOrStale` parameter. When you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is set using the value of the `maxAge` parameter and the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set using the value of the `freshOrStale` parameter.  
  
 Note that unless you specify <xref:System.Net.Cache.HttpCacheAgeControl> or <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is not set.  
  
 This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> property to `cacheSyncDate`, and initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>.  
  
   
  
## Examples  
 The following code example demonstrates creating a cache policy based on minimum freshness, maximum age, and a cache synchronization date.  
  
 [!code-cpp[NclSimpleCache#10](~/add/codesnippet/cpp/8c4c0cd0-8840-4c00-bae5-_1.cpp)]
 [!code-cs[NclSimpleCache#10](~/add/codesnippet/csharp/8c4c0cd0-8840-4c00-bae5-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cache synchronization date for this instance.</summary>
        <value>A &lt;xref:System.DateTime&gt; value set to the date specified when this instance was created. If no date was specified, this property's value is &lt;xref:System.DateTime&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The cache synchronization date allows you to specify an absolute date when cached contents must be revalidated. If the cache entry was last revalidated prior to the cache synchronization date, revalidation with the server occurs. If the cache entry was revalidated after the cache synchronization date and there are no server revalidation requirements that make the cached entry invalid, the entry from the cache is used. If the cache synchronization date is set to a future date, the entry is revalidated every time it is requested, until the cache synchronization date passes.  
  
   
  
## Examples  
 The following code example displays the value of this property.  
  
 [!code-cpp[NclSimpleCache#3](~/add/codesnippet/cpp/p-system.net.cache.httpr_4_1.cpp)]
 [!code-cs[NclSimpleCache#3](~/add/codesnippet/csharp/p-system.net.cache.httpr_4_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that was specified when this instance was created.</summary>
        <value>A <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that specifies the cache behavior for resources that were obtained using &lt;xref:System.Net.HttpWebRequest&gt; objects.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Applications typically use <xref:System.Net.Cache.HttpRequestCacheLevel> as their cache policy level. The <xref:System.Net.WebRequest.CachePolicy%2A> property, if not `null`, determines the cache policy in effect for a request. The default policy for the application domain can be set using the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property or by settings in the machine or application configuration files. For more information, see [\&lt;requestCaching\&gt; Element (Network Settings)](../Topic/%3CrequestCaching%3E%20Element%20\(Network%20Settings\).md).  
  
   
  
## Examples  
 The following code example demonstrates displaying the value of this property.  
  
 [!code-cpp[NclSimpleCache#11](~/add/codesnippet/cpp/p-system.net.cache.httpr_2_1.cpp)]
 [!code-cs[NclSimpleCache#11](~/add/codesnippet/csharp/p-system.net.cache.httpr_2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum age permitted for a resource returned from the cache.</summary>
        <value>A &lt;xref:System.TimeSpan&gt; value that is set to the maximum age value specified when this instance was created. If no date was specified, this property's value is &lt;xref:System.DateTime.MinValue&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the cached copy of the resource is older than the specified time value, the resource must be revalidated. The value for this property is specified when the instance is constructed.  
  
   
  
## Examples  
 The following code example demonstrates displaying the value of this property.  
  
 [!code-cpp[NclSimpleCache#7](~/add/codesnippet/cpp/p-system.net.cache.httpr_1_1.cpp)]
 [!code-cs[NclSimpleCache#7](~/add/codesnippet/csharp/p-system.net.cache.httpr_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum staleness value that is permitted for a resource returned from the cache.</summary>
        <value>A &lt;xref:System.TimeSpan&gt; value that is set to the maximum staleness value specified when this instance was created. If no date was specified, this property's value is &lt;xref:System.DateTime.MinValue&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property specifies the amount of time after content expiration during which the cached copy of the resource is acceptable. The value for this property is specified when the instance is constructed.  
  
   
  
## Examples  
 The following code example demonstrates displaying the value of this property.  
  
 [!code-cpp[NclSimpleCache#6](~/add/codesnippet/cpp/p-system.net.cache.httpr_3_1.cpp)]
 [!code-cs[NclSimpleCache#6](~/add/codesnippet/csharp/p-system.net.cache.httpr_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum freshness that is permitted for a resource returned from the cache.</summary>
        <value>A &lt;xref:System.TimeSpan&gt; value that specifies the minimum freshness specified when this instance was created. If no date was specified, this property's value is &lt;xref:System.DateTime.MinValue&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This value specifies the amount of time before content expiration, during which the cached copy of the resource is acceptable. The value for this property is specified when the instance is constructed.  
  
   
  
## Examples  
 The following code example demonstrates displaying the value of this property.  
  
 [!code-cpp[NclSimpleCache#5](~/add/codesnippet/cpp/p-system.net.cache.httpr_0_1.cpp)]
 [!code-cs[NclSimpleCache#5](~/add/codesnippet/csharp/p-system.net.cache.httpr_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this instance.</summary>
        <returns>A &lt;xref:System.String&gt; value that contains the property values for this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The string contains a label that identifies the property, followed by a colon (":") and the value. Properties are separated by a single space.  
  
   
  
## Examples  
 The following code example demonstrates calling this method.  
  
 [!code-cpp[NclSimpleCache#1](~/add/codesnippet/cpp/m-system.net.cache.httpr_1_1.cpp)]
 [!code-cs[NclSimpleCache#1](~/add/codesnippet/csharp/m-system.net.cache.httpr_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>