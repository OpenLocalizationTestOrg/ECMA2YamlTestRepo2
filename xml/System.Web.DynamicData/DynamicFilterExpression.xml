<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Modifies a database query by using a value from specified filter control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DynamicFilterExpression class enables you to modify a database query using the values that are assigned in a <xref:System.Web.DynamicData.DynamicFilter> control. This control delegates the task of building of the <xref:System.Linq.IQueryable> query to a specialized control such as <xref:System.Web.DynamicData.QueryableFilterRepeater> control or <xref:System.Web.DynamicData.DynamicFilter> control.  
  
 The filter controls in turn delegate the building of the query to the filter template that they reference. The query is then executed by the data source control that is referenced by the <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
 To use the DynamicFilterExpression class in a page, you follow these steps:  
  
-   Add a <xref:System.Web.UI.WebControls.QueryExtender> control to the page.  
  
-   Set the `TargetControlID` property of the <xref:System.Web.UI.WebControls.QueryExtender> control to reference the data source control.  
  
-   Add a DynamicFilterExpression object as a child of the <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
-   Set the `ControlID` property of the DynamicFilterExpression object to reference the filter control.  
  
 In the previous steps it is assumed that the related filter controls, data-bound controls, and data source control are defined in the page.  
  
   
  
## Examples  
 The following example shows how to use the DynamicFilterExpression control to select a filter template in a page. The filter template is selected by the <xref:System.Web.DynamicData.DynamicFilter> control that is identified by DynamicFilterExpression control through its `ControID` property.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the filter control identifier.</summary>
        <value>The filter control identifier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This control identifier is used by the <xref:System.Web.DynamicData.DynamicFilterExpression> class to select the filter control to which it delegates the task of building of the query, which is in turn executed by the data source control.  
  
 The filter control delegates the task of building of the query to the filter template it references. The query is then executed by the data source control that is referenced by the <xref:System.Web.UI.WebControls.QueryExtender> control.  
  
   
  
## Examples  
 The following example shows how to use the <xref:System.Web.DynamicData.DynamicFilterExpression> class to select a filter control in a page.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">The data source query to modify.</param>
        <summary>Gets the modified query using the current filter value.</summary>
        <returns>The data source query that is modified by using the current value that is contained in the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetQueryable method delegates the task of building of the query to the filter template referenced by the filter control that is specified by the <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">The control that contains the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance, such as the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</param>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object.</param>
        <param name="dataSource">The target data source for the <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> instance.</param>
        <summary>Initializes the expression with data source information.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>