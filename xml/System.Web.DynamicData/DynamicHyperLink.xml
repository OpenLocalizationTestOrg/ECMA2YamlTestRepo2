<Type Name="DynamicHyperLink" FullName="System.Web.DynamicData.DynamicHyperLink">
  <TypeSignature Language="C#" Value="public class DynamicHyperLink : System.Web.UI.WebControls.HyperLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicHyperLink extends System.Web.UI.WebControls.HyperLink implements class System.Web.UI.IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HyperLink</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Action")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicHyperLink), "DynamicHyperLink.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Displays links to table actions such as edit, delete, and insert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In this topic:  
  
-   [Introduction](#introduction)  
  
-   [Declarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## Introduction  
 The DynamicHyperLink control creates links that are based on the table actions that are enabled by Dynamic Data. These actions are defined in the Global.asax file as default routing rules. The rules are associated with default page templates such as Edit.aspx, List.aspx, and so on. When the user clicks the link, a page is displayed that enables the user to perform the action that is specified by the link.  
  
 The DynamicHyperLink control enables you to create the following links:  
  
-   Table row data-bound links, which are for data-item specific action links such as "Edit" and "Details". Dynamic Data infers the table and the primary key from the current row. An example of these links is in the Edit.aspx page of a Dynamic Data Web site.  
  
-   Links to <xref:System.Web.DynamicData.MetaTable> objects, which are specific action links such as "List" and "Insert" that in turn point to objects such as tables. An example of these links is in the Default.aspx page of a Dynamic Data Web site.  
  
-   Unbound links, which create table action links outside a data-bound control. An example of these links is in the Insert link in the List.aspx page template of a Dynamic Data Web site. Because these links are not part of a data-bound control that has a defined data context, you must specify the table to access and the action to perform. If you specify "Edit" or "Details" as the action, you must also provide the primary key.  
  
 The DynamicHyperLink control supports additional markup attributes then can be forwarded to the routing engine when the link is activated. This can be useful when you want to have an item-specific link from a non-data-bound context.  
  
<a name="declarative_syntax"></a>   
## Declarative Syntax  
  
```  
<asp:DynamicHyperlink  
    ID="string"  
    Action="Details|Edit|Insert|List"  
    ContextTypeName="string"  
    DataField="string"  
    TableName="string"  
    OnDataBinding="DataBinding event handler"  
    OnPreRender="PreRender event handler"/>  
```  
  
   
  
## Examples  
 A Visual Studio project with source code is available to accompany this topic: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).  
  
 The following examples show how to create DynamicHyperLink controls for data rows, for a collection, and to perform the specified action.  
  
 [!code-vb[DynamicData.DynamicHyperlinks#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_8_1.aspx)]
 [!code-cs[DynamicData.DynamicHyperlinks#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_8_1.aspx)]  
  
 [!code-cs[DynamicData.DynamicHyperlinks#2](~/add/codesnippet/csharp/t-system.web.dynamicdata_8_2.cs)]
 [!code-vb[DynamicData.DynamicHyperlinks#2](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_8_2.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicHyperLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.DynamicData.ActionConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the action that is associated with the link.</summary>
        <value>The action that is associated with the link.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The predefined values that you can assign to this property are "Edit", "Insert", "List", and "Details". Each of these values is associated with a page template. You can also assign custom values. Custom values must be supported by custom page templates.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the data context for the data model that the link applies to.</summary>
        <value>The data context that applies to the link.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Web.DynamicData.DynamicHyperLink> control is used in a data-bound control, the default value is the same as the one that is used by the data-bound control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the link display text.</summary>
        <value>The link display text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the link display text is empty, the default display `string` is used.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method notifies a <xref:System.Web.DynamicData.DynamicHyperLink> control that it should perform any logic for binding data.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt was made to set the table and data context during data binding.  
  
 -or-  
  
 An attempt has been made to bind to a <see langword="null" /> data field.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method notifies a <xref:System.Web.DynamicData.DynamicHyperLink> control that it should perform any necessary pre-rendering steps before the control saves view state and renders content.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> object cannot determine the data table to link to.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the attribute to retrieve.</param>
        <summary>Retrieves the value of the specified attribute that is applied to the <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> control.</summary>
        <returns>The specified attribute that is applied to the link.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the attribute.</param>
        <param name="value">The value that is assigned to the attribute.</param>
        <summary>Defines an attribute and its value to apply to the <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> control.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the table for the link action.</summary>
        <value>The name of the table for the link action.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>