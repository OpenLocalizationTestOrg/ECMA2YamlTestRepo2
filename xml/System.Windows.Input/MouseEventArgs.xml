<Type Name="MouseEventArgs" FullName="System.Windows.Input.MouseEventArgs">
  <TypeSignature Language="C#" Value="public class MouseEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.Windows.Input.InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for mouse related routed events that do not specifically involve mouse buttons or the mouse wheel, for example <see cref="E:System.Windows.UIElement.MouseMove" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This event data class is used with the following attached events.  
  
-   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>  
  
 This event data class is used with the following routed events. These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].  
  
-   <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>  
  
 The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data. This can affect the handled characteristics of the event as it travels the event route. For details, see [Input Overview](~/add/includes/ajax-current-ext-md.md).  
  
 Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of MouseEventArgs that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.  
  
 Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>. The mouse button properties are available on MouseEventArgs in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.  
  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">The mouse device associated with this event.</param>
        <param name="timestamp">The time when the input occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.MouseEventArgs" /> class using the specified <see cref="T:System.Windows.Input.MouseDevice" /> and timestamp</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse">The mouse device associated with this event.</param>
        <param name="timestamp">The time when the input occurred.</param>
        <param name="stylusDevice">The logical stylus device associated with this event.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.MouseEventArgs" /> class using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, and <see cref="T:System.Windows.Input.StylusDevice" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">The element to use as the frame of reference for calculating the position of the mouse pointer.</param>
        <summary>Returns the position of the mouse pointer relative to the specified element.</summary>
        <returns>The x- and y-coordinates of the mouse pointer position relative to the specified object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The point (0,0) is the upper-left corner of the frame of reference.  
  
 The static <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName> method can also be used to obtain the position of the mouse.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">The generic handler to call in a type-specific way.</param>
        <param name="genericTarget">The target to call the handler on.</param>
        <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current state of the left mouse button.</summary>
        <value>The current state of the left mouse button, which is either <see cref="T:System.Windows.Input.MouseButtonState" /> or <see cref="T:System.Windows.Input.MouseButtonState" />.  There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
   
  
## Examples  
 The following example prints a message if the state of the LeftButton property is <xref:System.Windows.Input.MouseButtonState>.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsleftbuttondown)]
 [!code-cs[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsleftbuttondown)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current state of the middle mouse button.</summary>
        <value>The current state of the middle mouse button, which is either <see cref="T:System.Windows.Input.MouseButtonState" /> or <see cref="T:System.Windows.Input.MouseButtonState" />. There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
   
  
## Examples  
 The following example prints a message if the state of the MiddleButton property is <xref:System.Windows.Input.MouseButtonState>.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmiddlebuttondown)]
 [!code-cs[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmiddlebuttondown)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseDevice MouseDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.MouseDevice MouseDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the mouse device associated with this event.</summary>
        <value>The mouse device associated with this event.  There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
   
  
## Examples  
 The following example gets the <xref:System.Windows.Input.MouseDevice> associated with an input event.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmousedevice)]
 [!code-cs[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmousedevice)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current state of the right mouse button.</summary>
        <value>The current state of the right mouse button, which is either <see cref="T:System.Windows.Input.MouseButtonState" /> or <see cref="T:System.Windows.Input.MouseButtonState" />.  There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
   
  
## Examples  
 The following example prints a message if the state of the RightButton property is <xref:System.Windows.Input.MouseButtonState>.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsrightbuttondown)]
 [!code-cs[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsrightbuttondown)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylusDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusDevice StylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusDevice StylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the stylus device associated with this event.</summary>
        <value>The stylus associated with this event.  There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to retrieve the <xref:System.Windows.Input.StylusDevice> associated with an event.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsstylusdevice)]
 [!code-cs[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsstylusdevice)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current state of the first extended mouse button.</summary>
        <value>The current state of the first extended mouse button, which is either <see cref="T:System.Windows.Input.MouseButtonState" /> or <see cref="T:System.Windows.Input.MouseButtonState" />.  There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
   
  
## Examples  
 The following example prints a message if the state of the XButton1 property is <xref:System.Windows.Input.MouseButtonState>.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton1buttondown)]
 [!code-cs[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton1buttondown)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the state of the second extended mouse button.</summary>
        <value>The current state of the second extended mouse button, which is either <see cref="T:System.Windows.Input.MouseButtonState" /> or <see cref="T:System.Windows.Input.MouseButtonState" />.  There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.  
  
   
  
## Examples  
 The following example prints a message if the state of the XButton2 property is <xref:System.Windows.Input.MouseButtonState>.  
  
 [!code-vb[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton2buttondown)]
 [!code-cs[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton2buttondown)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>