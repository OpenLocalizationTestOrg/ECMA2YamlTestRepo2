<Type Name="StylusDevice" FullName="System.Windows.Input.StylusDevice">
  <TypeSignature Language="C#" Value="public sealed class StylusDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StylusDevice extends System.Windows.Input.InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a tablet pen used with a Tablet PC.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to retrieve a reference to the default stylus device.  
  
 [!code-vb[StylusSnippets#1](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#1)]
 [!code-cs[StylusSnippets#1](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.PresentationSource" /> that reports current input for the stylus.</summary>
        <value>The <see cref="T:System.Windows.PresentationSource" /> that reports current input for the stylus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the ActiveSource property.  
  
 [!code-vb[StylusSnippets#2](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#2)]
 [!code-cs[StylusSnippets#2](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">for applications to read this property. Associated enumeration: <see cref="T:System.Security.Permissions.UIPermissionWindow" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">The element to which the stylus is bound.</param>
        <summary>Binds input from the stylus to the specified element.</summary>
        <returns>
          <see langword="true" /> if the input element is captured successfully; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Capture method.  
  
 [!code-vb[StylusSnippets#3](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#3)]
 [!code-cs[StylusSnippets#3](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="element" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">The element to which the stylus is bound.</param>
        <param name="captureMode">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</param>
        <summary>Binds the stylus to the specified element.</summary>
        <returns>
          <see langword="true" /> if the input element is captured successfully; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Capture method.  
  
 [!code-vb[StylusSnippets#5](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#5)]
 [!code-cs[StylusSnippets#5](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> or <paramref name="captureMode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="element" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element that captured the stylus.</summary>
        <value>The <see cref="T:System.Windows.IInputElement" /> that captured the stylus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Captured property.  
  
 [!code-vb[StylusSnippets#4](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#4)]
 [!code-cs[StylusSnippets#4](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.IInputElement" /> that the pointer is positioned over.</summary>
        <value>The element the pointer is over.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the DirectlyOver property.  
  
 [!code-vb[StylusSnippets#6](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#6)]
 [!code-cs[StylusSnippets#6](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#6)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (`x,y`) coordinates are mapped.</param>
        <summary>Gets the position of the stylus.</summary>
        <returns>A <see cref="T:System.Windows.Point" /> that represents the position of the stylus, in relation to <paramref name="relativeTo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the GetPosition method.  
  
 [!code-vb[StylusSnippets#8](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#8)]
 [!code-cs[StylusSnippets#8](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylusPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointCollection GetStylusPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.StylusPointCollection GetStylusPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (`x,y`) coordinates in the <see cref="T:System.Windows.Input.StylusPointCollection" /> are mapped.</param>
        <summary>Returns a <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected from the stylus.</summary>
        <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects that the stylus collected.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to get the <xref:System.Windows.Input.StylusPointCollection> from the <xref:System.Windows.Input.StylusDevice>.  
  
 [!code-vb[StylusSnippets#7](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#7)]
 [!code-cs[StylusSnippets#7](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylusPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointCollection GetStylusPoints (System.Windows.IInputElement relativeTo, System.Windows.Input.StylusPointDescription subsetToReformatTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.StylusPointCollection GetStylusPoints(class System.Windows.IInputElement relativeTo, class System.Windows.Input.StylusPointDescription subsetToReformatTo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="subsetToReformatTo" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (`x y`) coordinates in the <see cref="T:System.Windows.Input.StylusPointCollection" /> are mapped.</param>
        <param name="subsetToReformatTo">The <see cref="T:System.Windows.Input.StylusPointDescription" /> to be used by the <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
        <summary>Returns a <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected from the stylus. Uses the specified <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
        <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected from the stylus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `subsetToReformatTo` must be compatible with the <xref:System.Windows.Input.StylusPointCollection.Description%2A> property of the <xref:System.Windows.Input.StylusPointCollection> used by the <xref:System.Windows.Input.StylusDevice.GetStylusPoints%28System.Windows.IInputElement%29> method. Use the <xref:System.Windows.Input.StylusPointDescription.GetCommonDescription%2A> method to get a <xref:System.Windows.Input.StylusPointDescription> before calling the GetStylusPoints method.  
  
   
  
## Examples  
 The following example demonstrates how to get <xref:System.Windows.Input.StylusPoint> objects from the current <xref:System.Windows.Input.StylusDevice>.  
  
 [!code-cs[PacketSpy#26](~/add/codesnippet/csharp/PacketSpy/Window1.xaml.cs#26)]
 [!code-vb[PacketSpy#26](~/add/codesnippet/visualbasic/PacketSpy/Window1.xaml.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier for the stylus device.</summary>
        <value>The identifier for the stylus device.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Id property.  
  
 [!code-vb[StylusSnippets#9](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#9)]
 [!code-cs[StylusSnippets#9](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#9)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InAir">
      <MemberSignature Language="C#" Value="public bool InAir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InAir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the tablet pen is positioned above, yet not in contact with, the digitizer.</summary>
        <value>
          <see langword="true" /> if the pen is positioned above, yet not in contact with, the digitizer; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the InAir property.  
  
 [!code-vb[StylusSnippets#10](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#10)]
 [!code-cs[StylusSnippets#10](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#10)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public bool InRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the tablet pen is in range of the digitizer.</summary>
        <value>
          <see langword="true" /> if the pen is within range of the digitizer; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the InRange property.  
  
 [!code-vb[StylusSnippets#11](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#11)]
 [!code-cs[StylusSnippets#11](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#11)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Inverted">
      <MemberSignature Language="C#" Value="public bool Inverted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inverted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the secondary tip of the stylus is in use.</summary>
        <value>
          <see langword="true" /> if the secondary tip of the stylus is in use; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Inverted property.  
  
 [!code-vb[StylusSnippets#12](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#12)]
 [!code-cs[StylusSnippets#12](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#12)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether a stylus device is valid.</summary>
        <value>
          <see langword="true" /> to indicate a stylus is valid; otherwise <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the stylus.</summary>
        <value>The name of the stylus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Name property.  
  
 [!code-vb[StylusSnippets#13](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#13)]
 [!code-cs[StylusSnippets#13](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#13)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylusButtons">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusButtonCollection StylusButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusButtonCollection StylusButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the stylus buttons on the stylus.</summary>
        <value>A reference to a <see cref="T:System.Windows.Input.StylusButtonCollection" /> object representing all of the buttons on the stylus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the StylusButtons property.  
  
 [!code-vb[StylusSnippets#14](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#14)]
 [!code-cs[StylusSnippets#14](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#14)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Synchronizes the cursor and the user interface.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Applications may need to locate the element that the cursor is positioned over. If the application uses animation, the <xref:System.Windows.Input.StylusDevice.DirectlyOver%2A> method might return an element that has moved out from under the cursor. Call Synchronize to be sure that <xref:System.Windows.Input.StylusDevice.DirectlyOver%2A> returns the proper element.  
  
   
  
## Examples  
 The following example demonstrates how to return an element that is under the cursor.  Calling Synchronize ensures that <xref:System.Windows.Input.StylusDevice.DirectlyOver%2A> returns the correct element.  
  
 [!code-vb[StylusSamples#24](~/add/codesnippet/visualbasic/StylusSamples/Window2.xaml.vb#24)]
 [!code-cs[StylusSamples#24](~/add/codesnippet/csharp/StylusSamples/Window2.xaml.cs#24)]  
[!code-vb[StylusSamples#26](~/add/codesnippet/visualbasic/StylusSamples/Window2.xaml.vb#26)]
[!code-cs[StylusSamples#26](~/add/codesnippet/csharp/StylusSamples/Window2.xaml.cs#26)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TabletDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TabletDevice TabletDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.TabletDevice TabletDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TabletDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Input.TabletDevice" /> representing the digitizer associated with the current <see cref="T:System.Windows.Input.StylusDevice" />.</summary>
        <value>The <see cref="T:System.Windows.Input.TabletDevice" /> represents the digitizer associated with the current <see cref="T:System.Windows.Input.StylusDevice" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the TabletDevice property.  
  
 [!code-vb[StylusSnippets#15](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#15)]
 [!code-cs[StylusSnippets#15](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#15)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element that receives input.</summary>
        <value>The <see cref="T:System.Windows.IInputElement" /> object that receives input.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the Target property.  
  
 [!code-vb[StylusSnippets#16](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#16)]
 [!code-cs[StylusSnippets#16](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#16)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the name of the stylus device.</summary>
        <returns>The name of the <see cref="T:System.Windows.Input.StylusDevice" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the ToString method.  
  
 [!code-vb[StylusSnippets#17](~/add/codesnippet/visualbasic/StylusSnippets_VB/Window1.xaml.vb#17)]
 [!code-cs[StylusSnippets#17](~/add/codesnippet/csharp/StylusSnippets_CS/Window1.xaml.cs#17)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>