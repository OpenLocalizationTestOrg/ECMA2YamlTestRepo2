<Type Name="InputScopeConverter" FullName="System.Windows.Input.InputScopeConverter">
  <TypeSignature Language="C#" Value="public class InputScopeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputScopeConverter extends System.ComponentModel.TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converts a <see cref="T:System.Windows.Input.InputScope" /> to and from other types.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_InputScopeConverter"></a>   
## XAML Text Usage  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputScopeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeConverter" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An object that describes any type descriptor context.  This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.  This parameter may be <see langword="null" />.</param>
        <param name="sourceType">A &lt;xref:System.Type&gt; to check for conversion compatibility.</param>
        <summary>Determines whether an <see cref="T:System.Windows.Input.InputScope" /> object can be converted from an object of a specified type.</summary>
        <returns>
          <see langword="true" /> if <paramref name="sourceType" /> is type &lt;xref:System.String&gt;; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An object that describes any type descriptor context.  This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.  This parameter may be <see langword="null" />.</param>
        <param name="destinationType">A &lt;xref:System.Type&gt; to check for conversion compatibility.</param>
        <summary>Determines whether an <see cref="T:System.Windows.Input.InputScope" /> object can be converted to an object of a specified type.</summary>
        <returns>
          <see langword="true" /> if <paramref name="destinationType" /> is type &lt;xref:System.String&gt;; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">An object that describes any type descriptor context.  This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.  This parameter may be <see langword="null" />.</param>
        <param name="culture">A &lt;xref:System.Globalization.CultureInfo&gt; object containing any cultural context for the conversion.  This parameter may be <see langword="null" />.</param>
        <param name="source">A source object to convert from.  This object must be a string.</param>
        <summary>Converts a source object (string) into an <see cref="T:System.Windows.Input.InputScope" /> object.</summary>
        <returns>An <see cref="T:System.Windows.Input.InputScope" /> object converted from the specified source object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An object that describes any type descriptor context.  This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.  This parameter may be <see langword="null" />.</param>
        <param name="culture">A &lt;xref:System.Globalization.CultureInfo&gt; object containing any cultural context for the conversion.  This parameter may be <see langword="null" />.</param>
        <param name="value">An object to convert from.  This object must be of type <see cref="T:System.Windows.Input.InputScope" />.</param>
        <param name="destinationType">A destination type to convert type.  This type must be string.</param>
        <summary>Converts an <see cref="T:System.Windows.Input.InputScope" /> object into a specified object type (string).</summary>
        <returns>A new object of the specified type (string) converted from the given <see cref="T:System.Windows.Input.InputScope" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `destinationType` must be <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>