<Type Name="WebInvokeAttribute" FullName="System.ServiceModel.Web.WebInvokeAttribute">
  <TypeSignature Language="C#" Value="public sealed class WebInvokeAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebInvokeAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an attribute indicating that a service operation is logically an invoke operation and that it can be called by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] REST programming model.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The WebInvokeAttribute attribute is applied to a service operation in addition to the <xref:System.ServiceModel.OperationContractAttribute> and associates the operation with a `UriTemplate` as well as an underlying transport verb that represents an invocation (for example, HTTP POST, PUT, or DELETE). The WebInvokeAttribute attribute is a *passive* operation behavior (the <xref:System.ServiceModel.Description.IOperationBehavior> methods do nothing) that adds metadata to the operation description. Applying the WebInvokeAttribute attribute to a service operation has no effect unless a behavior that looks for this metadata in the operation description (such as <xref:System.ServiceModel.Description.WebHttpBehavior>) is added to the service's behavior collection. The WebInvokeAttribute determines what HTTP method that a service operation responds to. By default, all methods that have the WebInvokeAttribute applied respond to POST requests. The <xref:System.ServiceModel.Web.WebInvokeAttribute.Method%2A> property allows you to specify a different HTTP method. If you want a service operation to respond to GET, use the <xref:System.ServiceModel.Web.WebGetAttribute> instead.  
  
   
  
## Examples  
 The following example shows how to use the WebInvokeAttribute attribute.  
  
> [!NOTE]
>  Because the <xref:System.ServiceModel.Web.WebInvokeAttribute.Method%2A> property is not specified in the following code, all service operations are mapped to the HTTP POST method.  
  
 [!code-cs[WebAttribute#5](~/add/codesnippet/csharp/t-system.servicemodel.we_3_1.cs)]
 [!code-vb[WebAttribute#5](~/add/codesnippet/visualbasic/t-system.servicemodel.we_3_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebInvokeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BodyStyle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageBodyStyle BodyStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageBodyStyle BodyStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageBodyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the body style of the messages that are sent to and from the service operation.</summary>
        <value>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When set to <xref:System.ServiceModel.Web.WebMessageBodyStyle>, the result of the service operation is written directly to the body of the response message.  
  
> [!NOTE]
>  Operations that take a <xref:System.ServiceModel.Channels.Message> and return void are handled specially by the formatters. The formatters do not emit the wrapper name in the response even if BodyStyle is set to <xref:System.ServiceModel.Web.WebMessageBodyStyle>.  
  
   
  
## Examples  
 The following example shows how to set the BodyStyle property.  
  
 [!code-cs[WebAttribute#6](~/add/codesnippet/csharp/p-system.servicemodel.we_13_1.cs)]
 [!code-vb[WebAttribute#6](~/add/codesnippet/visualbasic/p-system.servicemodel.we_13_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsBodyStyleSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsBodyStyleSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyStyleSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the IsBodyStyleSetExplicitly property.</summary>
        <value>A value that specifies whether the &lt;xref:System.ServiceModel.Web.WebGetAttribute.BodyStyle%2A&gt; property was set explicitly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is designed to be used by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastructure and should never be set from user code.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRequestFormatSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsRequestFormatSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestFormatSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the IsRequestFormatSetExplicitly property.</summary>
        <value>A value that specifies whether the &lt;xref:System.ServiceModel.Web.WebGetAttribute.RequestFormat%2A&gt; property was set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is designed to be used by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastructure and should never be set from user code.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsResponseFormatSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsResponseFormatSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResponseFormatSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the IsResponseFormatSetExplicitly property.</summary>
        <value>A value that specifies whether the &lt;xref:System.ServiceModel.Web.WebGetAttribute.ResponseFormat%2A&gt; property was set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is designed to be used by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastructure and should never be set from user code.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the protocol (for example HTTP) method the service operation responds to.</summary>
        <value>The protocol method associated with the operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Method defaults to POST.  
  
   
  
## Examples  
 The following example shows how to set the Method property.  
  
 [!code-cs[WebAttribute#7](~/add/codesnippet/csharp/p-system.servicemodel.we_2_1.cs)]
 [!code-vb[WebAttribute#7](~/add/codesnippet/visualbasic/p-system.servicemodel.we_2_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RequestFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageFormat RequestFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat RequestFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the RequestFormat property.</summary>
        <value>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property determines the format of requests made to a service operation. The possible values are `Xml` and `Json`.  
  
   
  
## Examples  
 The following example shows how to set the RequestFormat property.  
  
 [!code-cs[WebAttribute#8](~/add/codesnippet/csharp/p-system.servicemodel.we_5_1.cs)]
 [!code-vb[WebAttribute#8](~/add/codesnippet/visualbasic/p-system.servicemodel.we_5_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageFormat ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat ResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the ResponseFormat property.</summary>
        <value>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property determines the format of responses sent from a service operation. The possible values are `Xml` and `Json`.  
  
   
  
## Examples  
 The following example shows how to set the ResponseFormat property.  
  
 [!code-cs[WebAttribute#8](~/add/codesnippet/csharp/p-system.servicemodel.we_0_1.cs)]
 [!code-vb[WebAttribute#8](~/add/codesnippet/visualbasic/p-system.servicemodel.we_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="operationDescription">The operation description.</param>
        <param name="bindingParameters">A collection of binding parameters.</param>
        <summary>Implements the &lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Channels.BindingParameterCollection%29&gt; method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method does nothing because the <xref:System.ServiceModel.Web.WebInvokeAttribute> attribute is a passive operation behavior.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.ClientOperation clientOperation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.ClientOperation clientOperation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="clientOperation" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription">The operation description.</param>
        <param name="clientOperation">The client operation.</param>
        <summary>Implements the &lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Dispatcher.ClientOperation%29&gt; method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method does nothing because the <xref:System.ServiceModel.Web.WebInvokeAttribute> attribute is a passive operation behavior.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatchOperation" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription">The operation description.</param>
        <param name="dispatchOperation">The operation to dispatch to.</param>
        <summary>Implements the &lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Dispatcher.DispatchOperation%29&gt; method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method does nothing because the <xref:System.ServiceModel.Web.WebInvokeAttribute> attribute is a passive operation behavior.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription">The operation description.</param>
        <summary>Implements the &lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%28System.ServiceModel.Description.OperationDescription%29&gt; method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method does nothing because the <xref:System.ServiceModel.Web.WebInvokeAttribute> attribute is a passive operation behavior.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UriTemplate">
      <MemberSignature Language="C#" Value="public string UriTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UriTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Uniform Resource Identifier (URI) template for the service operation.</summary>
        <value>The URI template for the service operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 URI templates are used to determine which requests get dispatched to which service operations. URI templates allow you to map a URI or a set of URIs to a service operation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] URI templates, see [UriTemplate and UriTemplateTable](~/add/includes/ajax-current-ext-md.md)  
  
   
  
## Examples  
 The following example shows how to set the UriTemplate property.  
  
 [!code-cs[WebAttribute#9](~/add/codesnippet/csharp/p-system.servicemodel.we_11_1.cs)]
 [!code-vb[WebAttribute#9](~/add/codesnippet/visualbasic/p-system.servicemodel.we_11_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>