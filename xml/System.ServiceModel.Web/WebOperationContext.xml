<Type Name="WebOperationContext" FullName="System.ServiceModel.Web.WebOperationContext">
  <TypeSignature Language="C#" Value="public class WebOperationContext : System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebOperationContext extends System.Object implements class System.ServiceModel.IExtension`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A helper class that provides easy access to contextual properties of Web requests and responses.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to retrieve the <xref:System.UriTemplateMatch> instance associated with the Web operation context of the current call. The code also shows how to set the HTTP status for the outgoing response.  
  
 [!code-cs[AdvancedWebProgramming#0](~/add/codesnippet/csharp/t-system.servicemodel.we_1_1.cs)]
 [!code-vb[AdvancedWebProgramming#0](~/add/codesnippet/visualbasic/t-system.servicemodel.we_1_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebOperationContext (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">The operation context.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebOperationContext" /> class with the specified &lt;xref:System.ServiceModel.OperationContext&gt; instance.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.ServiceModel.OperationContext owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(class System.ServiceModel.OperationContext owner) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="owner">The &lt;xref:System.ServiceModel.OperationContext&gt; to attach to.</param>
        <summary>Attaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance to the specified &lt;xref:System.ServiceModel.OperationContext&gt; instance.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAtom10Response">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateAtom10Response (System.ServiceModel.Syndication.ServiceDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateAtom10Response(class System.ServiceModel.Syndication.ServiceDocument document) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.ServiceModel.Syndication.ServiceDocument" />
      </Parameters>
      <Docs>
        <param name="document">The content to write to the message.</param>
        <summary>Creates a message formatted according to the Atom 1.0 specification with the specified content.</summary>
        <returns>A message in Atom 1.0 format.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAtom10Response">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateAtom10Response (System.ServiceModel.Syndication.SyndicationFeed feed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateAtom10Response(class System.ServiceModel.Syndication.SyndicationFeed feed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feed" Type="System.ServiceModel.Syndication.SyndicationFeed" />
      </Parameters>
      <Docs>
        <param name="feed">The content to write to the message.</param>
        <summary>Creates a message formatted according to the Atom 1.0 specification with the specified content.</summary>
        <returns>A message in Atom 1.0 format.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAtom10Response">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateAtom10Response (System.ServiceModel.Syndication.SyndicationItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateAtom10Response(class System.ServiceModel.Syndication.SyndicationItem item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.ServiceModel.Syndication.SyndicationItem" />
      </Parameters>
      <Docs>
        <param name="item">The content to write to the message.</param>
        <summary>Creates a message formatted according to the Atom 1.0 specification with the specified content.</summary>
        <returns>A message in Atom 1.0 format.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateJsonResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateJsonResponse&lt;T&gt; (T instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateJsonResponse&lt;T&gt;(!!T instance) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="instance">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateJsonResponse&lt;T&gt; (T instance, System.Runtime.Serialization.Json.DataContractJsonSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateJsonResponse&lt;T&gt;(!!T instance, class System.Runtime.Serialization.Json.DataContractJsonSerializer serializer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="T" />
        <Parameter Name="serializer" Type="System.Runtime.Serialization.Json.DataContractJsonSerializer" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="instance">To be added.</param>
        <param name="serializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStreamResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateStreamResponse (Action&lt;System.IO.Stream&gt; streamWriter, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateStreamResponse(class System.Action`1&lt;class System.IO.Stream&gt; streamWriter, string contentType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamWriter" Type="System.Action&lt;System.IO.Stream&gt;" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamWriter">The stream writer containg the data to write to the stream.</param>
        <param name="contentType">The content type for the message.</param>
        <summary>Creates a stream formatted message.</summary>
        <returns>A stream formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateStreamResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateStreamResponse (System.IO.Stream stream, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateStreamResponse(class System.IO.Stream stream, string contentType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">The stream containing the data to write to the stream.</param>
        <param name="contentType">The content type of the message.</param>
        <summary>Creates a stream formatted message.</summary>
        <returns>A stream formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateStreamResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateStreamResponse (System.ServiceModel.Channels.StreamBodyWriter bodyWriter, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateStreamResponse(class System.ServiceModel.Channels.StreamBodyWriter bodyWriter, string contentType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bodyWriter" Type="System.ServiceModel.Channels.StreamBodyWriter" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bodyWriter">The stream body writer containing the data to write to the message..</param>
        <param name="contentType">The content type of the message</param>
        <summary>Creates a stream formatted message.</summary>
        <returns>A stream formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateTextResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateTextResponse (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateTextResponse(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to write to the message.</param>
        <summary>Creates a text formatted response message.</summary>
        <returns>A text formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateTextResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateTextResponse (Action&lt;System.IO.TextWriter&gt; textWriter, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateTextResponse(class System.Action`1&lt;class System.IO.TextWriter&gt; textWriter, string contentType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.Action&lt;System.IO.TextWriter&gt;" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textWriter">A delegate that writes the text data.</param>
        <param name="contentType">The content type for the message.</param>
        <summary>Creates a text formatted message</summary>
        <returns>A text formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateTextResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateTextResponse (string text, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateTextResponse(string text, string contentType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to write to the message.</param>
        <param name="contentType">The content type of the message.</param>
        <summary>Creates a text formatted message.</summary>
        <returns>A text formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateTextResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateTextResponse (Action&lt;System.IO.TextWriter&gt; textWriter, string contentType, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateTextResponse(class System.Action`1&lt;class System.IO.TextWriter&gt; textWriter, string contentType, class System.Text.Encoding encoding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.Action&lt;System.IO.TextWriter&gt;" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="textWriter">A delegate that writes the text data.</param>
        <param name="contentType">The content type of the message.</param>
        <param name="encoding">The encoding to use.</param>
        <summary>Creates a text formatted message</summary>
        <returns>A text formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateTextResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateTextResponse (string text, string contentType, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateTextResponse(string text, string contentType, class System.Text.Encoding encoding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="text">The text to write to the message.</param>
        <param name="contentType">The content type of the message.</param>
        <param name="encoding">The encoding to use.</param>
        <summary>Creates a text formatted message.</summary>
        <returns>A text formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateXmlResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateXmlResponse (System.Xml.Linq.XDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateXmlResponse(class System.Xml.Linq.XDocument document) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.Linq.XDocument" />
      </Parameters>
      <Docs>
        <param name="document">The data to write to the message.</param>
        <summary>Creates an XML formatted message.</summary>
        <returns>An XML formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateXmlResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateXmlResponse (System.Xml.Linq.XElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateXmlResponse(class System.Xml.Linq.XElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Xml.Linq.XElement" />
      </Parameters>
      <Docs>
        <param name="element">The data to write to the message.</param>
        <summary>Creates an XML formatted message.</summary>
        <returns>An XML formatted message.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateXmlResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateXmlResponse&lt;T&gt; (T instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateXmlResponse&lt;T&gt;(!!T instance) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="instance">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateXmlResponse&lt;T&gt; (T instance, System.Runtime.Serialization.XmlObjectSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateXmlResponse&lt;T&gt;(!!T instance, class System.Runtime.Serialization.XmlObjectSerializer serializer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="T" />
        <Parameter Name="serializer" Type="System.Runtime.Serialization.XmlObjectSerializer" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="instance">To be added.</param>
        <param name="serializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message CreateXmlResponse&lt;T&gt; (T instance, System.Xml.Serialization.XmlSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message CreateXmlResponse&lt;T&gt;(!!T instance, class System.Xml.Serialization.XmlSerializer serializer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="T" />
        <Parameter Name="serializer" Type="System.Xml.Serialization.XmlSerializer" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="instance">To be added.</param>
        <param name="serializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Web.WebOperationContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Web.WebOperationContext Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebOperationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current Web operation context.</summary>
        <value>A <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to access the current <xref:System.ServiceModel.Web.WebOperationContext> instance.  
  
 [!code-cs[AdvancedWebProgramming#2](~/add/codesnippet/csharp/p-system.servicemodel.we_9_1.cs)]
 [!code-vb[AdvancedWebProgramming#2](~/add/codesnippet/visualbasic/p-system.servicemodel.we_9_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (System.ServiceModel.OperationContext owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(class System.ServiceModel.OperationContext owner) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="owner">The &lt;xref:System.ServiceModel.OperationContext&gt; to detach from.</param>
        <summary>Detaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance from the specified &lt;xref:System.ServiceModel.OperationContext&gt; instance.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetUriTemplate">
      <MemberSignature Language="C#" Value="public UriTemplate GetUriTemplate (string operationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplate GetUriTemplate(string operationName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationName">The operation.</param>
        <summary>Gets the URI template associated with the specified operation.</summary>
        <returns>A URI template.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncomingRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.IncomingWebRequestContext IncomingRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Web.IncomingWebRequestContext IncomingRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.IncomingWebRequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Web request context for the request being received.</summary>
        <value>An <see cref="T:System.ServiceModel.Web.IncomingWebRequestContext" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to use the IncomingRequest property to access the headers in the incoming HTTP request.  
  
 [!code-cs[AdvancedWebProgramming#2](~/add/codesnippet/csharp/p-system.servicemodel.we_4_1.cs)]
 [!code-vb[AdvancedWebProgramming#2](~/add/codesnippet/visualbasic/p-system.servicemodel.we_4_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncomingResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.IncomingWebResponseContext IncomingResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Web.IncomingWebResponseContext IncomingResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.IncomingWebResponseContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Web response context for the request being received.</summary>
        <value>An <see cref="T:System.ServiceModel.Web.IncomingWebResponseContext" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to get the content length, content type, and status code from the IncomingResponse property.  
  
 [!code-cs[AdvancedWebProgramming#3](~/add/codesnippet/csharp/p-system.servicemodel.we_12_1.cs)]
 [!code-vb[AdvancedWebProgramming#3](~/add/codesnippet/visualbasic/p-system.servicemodel.we_12_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OutgoingRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.OutgoingWebRequestContext OutgoingRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Web.OutgoingWebRequestContext OutgoingRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.OutgoingWebRequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Web request context for the request being sent.</summary>
        <value>An <see cref="T:System.ServiceModel.Web.OutgoingWebRequestContext" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to set the method, content type and add a header to the outgoing request.  
  
 [!code-cs[AdvancedWebProgramming#4](~/add/codesnippet/csharp/p-system.servicemodel.we_7_1.cs)]
 [!code-vb[AdvancedWebProgramming#4](~/add/codesnippet/visualbasic/p-system.servicemodel.we_7_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OutgoingResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.OutgoingWebResponseContext OutgoingResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Web.OutgoingWebResponseContext OutgoingResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.OutgoingWebResponseContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Web response context for the response being sent.</summary>
        <value>An <see cref="T:System.ServiceModel.Web.OutgoingWebResponseContext" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to set the status of the outgoing response.  
  
 [!code-cs[AdvancedWebProgramming#0](~/add/codesnippet/csharp/p-system.servicemodel.we_8_1.cs)]
 [!code-vb[AdvancedWebProgramming#0](~/add/codesnippet/visualbasic/p-system.servicemodel.we_8_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>