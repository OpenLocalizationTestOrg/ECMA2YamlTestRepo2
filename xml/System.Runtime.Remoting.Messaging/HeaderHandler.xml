<Type Name="HeaderHandler" FullName="System.Runtime.Remoting.Messaging.HeaderHandler">
  <TypeSignature Language="C#" Value="public delegate object HeaderHandler(Header[] headers);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HeaderHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="headers">The headers of the event.</param>
    <summary>Represents the method that will handle processing of headers on the stream during deserialization.</summary>
    <returns>A &lt;xref:System.Object&gt; that conveys information about a remote function call.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Messaging.Header> objects are used to convey information about a remote function call (for example, transaction ID or a method signature).  
  
 When you create a HeaderHandler, you identify the method that will handle the event. For an overview, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>