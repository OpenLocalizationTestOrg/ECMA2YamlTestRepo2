<Type Name="XmlDsigC14NTransform" FullName="System.Security.Cryptography.Xml.XmlDsigC14NTransform">
  <TypeSignature Language="C#" Value="public class XmlDsigC14NTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigC14NTransform extends System.Security.Cryptography.Xml.Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The XmlDsigC14NTransform class represents the C14N XML canonicalization transform that describes the canonical form of an XML document.  This transform allows a signer to create a digest (used to create a digital signature) using the canonical form of an XML document.  A recipient can then verify the XML digital signature using the same canonical form of the XML document with the same transform.  
  
 Use the XmlDsigC14NTransform class when you need to sign an XML document that does not contain comments.  
  
 In most cases, a new instance of a canonicalization transform class is not required. To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes the transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  
  
 The URI that describes the XmlDsigC14NTransform class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field and the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.  
  
 You would only need to create a new instance of a canonicalization transform class for manually hashing an XML document or for using your own canonicalization algorithm.  
  
 For more information about the C14N transform, see Sections 6.5 and 6.6.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/. The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/TR/xml-c14n.  
  
   
  
## Examples  
 This section contains two code examples. The first example demonstrates how to sign non-XML data using a detached signature.  Example #1 creates a signature of www.microsoft.com in an XML file and then verifies the file.  The second example demonstrates how to call members of the XmlDsigC14NTransform class.  
  
 **Example #1**  
  
 [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/t-system.security.crypto_10_1.cs)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/t-system.security.crypto_10_1.vb)]
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/t-system.security.crypto_10_1.cpp)]  
  
 **Example #2**  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/t-system.security.crypto_10_2.cpp)]
 [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/t-system.security.crypto_10_2.cs)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/t-system.security.crypto_10_2.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigC14NTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the XmlDsigC14NTransform constructor. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#3](~/add/codesnippet/cpp/m-system.security.crypto_15_1.cpp)]
 [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#3](~/add/codesnippet/csharp/m-system.security.crypto_15_1.cs)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#3](~/add/codesnippet/visualbasic/m-system.security.crypto_15_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigC14NTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <see langword="true" /> to include comments; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> class with comments, if specified.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the XmlDsigC14NTransform constructor. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#1](~/add/codesnippet/cpp/e3c4725e-5fa2-4a15-ae3f-_1.cpp)]
 [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#1](~/add/codesnippet/csharp/e3c4725e-5fa2-4a15-ae3f-_1.cs)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#1](~/add/codesnippet/visualbasic/e3c4725e-5fa2-4a15-ae3f-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">The <see cref="T:System.Security.Cryptography.HashAlgorithm" /> object used to create a digest.</param>
        <summary>Returns the digest associated with an <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
        <returns>The digest associated with an <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</summary>
        <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
        <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the returned object must be <xref:System.IO.Stream>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the GetOutput method to retrieve the output of the current <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#8](~/add/codesnippet/cpp/m-system.security.crypto_91_1.cpp)]
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigC14NTransform#8](~/add/codesnippet/csharp/m-system.security.crypto_91_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#8](~/add/codesnippet/visualbasic/m-system.security.crypto_91_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type of the output to return. &lt;xref:System.IO.Stream&gt; is the only valid type for this parameter.</param>
        <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object of type &lt;xref:System.IO.Stream&gt;.</summary>
        <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object of type &lt;xref:System.IO.Stream&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the returned object must be <xref:System.IO.Stream>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the GetOutput method to retrieve the output of the current <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#9](~/add/codesnippet/cpp/m-system.security.crypto_51_1.cpp)]
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigC14NTransform#9](~/add/codesnippet/csharp/m-system.security.crypto_51_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#9](~/add/codesnippet/visualbasic/m-system.security.crypto_51_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not a &lt;xref:System.IO.Stream&gt; object.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of types that are valid inputs to the &lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput%2A&gt; method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
        <value>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object; you can pass only objects of one of these types to the &lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput%2A&gt; method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The valid input types to <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> are <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, and <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 The following code example demonstrates how to call the InputTypes property to retrieve the valid input types for the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#5](~/add/codesnippet/cpp/p-system.security.crypto_22_1.cpp)]
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigC14NTransform#5](~/add/codesnippet/csharp/p-system.security.crypto_22_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#5](~/add/codesnippet/visualbasic/p-system.security.crypto_22_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</param>
        <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element; this method is not supported because this element has no inner XML elements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is not supported because the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> object has no inner XML elements.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</param>
        <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the input object must be one of the types in the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates how to call the LoadInput method using the specified <xref:System.Xml.XmlDocument> object as the input. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#12](~/add/codesnippet/cpp/m-system.security.crypto_84_1.cpp)]
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigC14NTransform#12](~/add/codesnippet/csharp/m-system.security.crypto_84_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#12](~/add/codesnippet/visualbasic/m-system.security.crypto_84_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="obj" /> parameter is a &lt;xref:System.IO.Stream&gt; object and it is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of types that are possible outputs from the &lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput%2A&gt; methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object.</summary>
        <value>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object; the &lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput%2A&gt; methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> object return only objects of one of these types.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream> is the only valid output type for <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>.  
  
   
  
## Examples  
 The following code example demonstrates how to call the OutputTypes property to retrieve the valid output types for the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#6](~/add/codesnippet/cpp/p-system.security.crypto_64_1.cpp)]
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigC14NTransform#6](~/add/codesnippet/csharp/p-system.security.crypto_64_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#6](~/add/codesnippet/visualbasic/p-system.security.crypto_64_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>