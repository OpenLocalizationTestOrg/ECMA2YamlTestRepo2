<Type Name="XmlDsigBase64Transform" FullName="System.Security.Cryptography.Xml.XmlDsigBase64Transform">
  <TypeSignature Language="C#" Value="public class XmlDsigBase64Transform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigBase64Transform extends System.Security.Cryptography.Xml.Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the <see langword="Base64" /> decoding transform as defined in Section 6.6.2 of the XMLDSIG specification.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the XmlDsigBase64Transform object when you need to sign the raw data associated with the encoded content of an element.  
  
 The Uniform Resource Identifier (URI) that describes the XmlDsigBase64Transform object is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field.  
  
 For more information about the `Base64` decoding transform, see Section 6.6.2 of the XMLDSIG specification, which is available from the W3C at www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 The following code example demonstrates how to use members of the XmlDsigBase64Transform class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/t-system.security.crypto_23_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/t-system.security.crypto_23_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/t-system.security.crypto_23_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the XmlDsigBase64Transform constructor. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#1](~/add/codesnippet/csharp/m-system.security.crypto_45_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#1](~/add/codesnippet/visualbasic/m-system.security.crypto_45_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#1](~/add/codesnippet/cpp/m-system.security.crypto_45_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an XML representation of the parameters of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</summary>
        <returns>A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
        <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the returned object must be <xref:System.IO.Stream>.  
  
   
  
## Examples  
 The following code example demonstrates the use of the GetOutput method to retrieve the output of the current <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#7](~/add/codesnippet/csharp/m-system.security.crypto_38_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#7](~/add/codesnippet/visualbasic/m-system.security.crypto_38_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#7](~/add/codesnippet/cpp/m-system.security.crypto_38_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type of the output to return. &lt;xref:System.IO.Stream&gt; is the only valid type for this parameter.</param>
        <summary>Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object of type &lt;xref:System.IO.Stream&gt;.</summary>
        <returns>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object of type &lt;xref:System.IO.Stream&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the returned object must be <xref:System.IO.Stream>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the GetOutput method to retrieve the output of the current <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#8](~/add/codesnippet/csharp/m-system.security.crypto_7_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#8](~/add/codesnippet/visualbasic/m-system.security.crypto_7_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#8](~/add/codesnippet/cpp/m-system.security.crypto_7_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="type" /> parameter is not a &lt;xref:System.IO.Stream&gt; object.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of types that are valid inputs to the &lt;xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput%2A&gt; method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
        <value>An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object; you can pass only objects of one of these types to the &lt;xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput%2A&gt; method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The valid input types to <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> are <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, and <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 The following code example demonstrates how to call the InputTypes property to retrieve the valid input types for the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#4](~/add/codesnippet/csharp/p-system.security.crypto_41_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#4](~/add/codesnippet/visualbasic/p-system.security.crypto_41_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#4](~/add/codesnippet/cpp/p-system.security.crypto_41_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> object to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</param>
        <summary>Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element; this method is not supported because the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object has no inner XML elements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is not supported because the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> object has no inner XML elements.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</param>
        <summary>Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type of the input object must be one of the types in the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates how to call the LoadInput method using the specified <xref:System.Xml.XmlDocument> object as the input. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#11](~/add/codesnippet/csharp/7cd2395c-cacc-4717-810c-_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#11](~/add/codesnippet/visualbasic/7cd2395c-cacc-4717-810c-_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#11](~/add/codesnippet/cpp/7cd2395c-cacc-4717-810c-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="obj" /> parameter is a &lt;xref:System.IO.Stream&gt; and it is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of types that are possible outputs from the &lt;xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput%2A&gt; methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</summary>
        <value>An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object; only objects of one of these types are returned from the &lt;xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput%2A&gt; methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream> is the only valid output type for <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> object.  
  
   
  
## Examples  
 The following code example demonstrates how to call the OutputTypes property to retrieve the valid output types for the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  
  
 [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#5](~/add/codesnippet/csharp/p-system.security.crypto_48_1.cs)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#5](~/add/codesnippet/visualbasic/p-system.security.crypto_48_1.vb)]
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#5](~/add/codesnippet/cpp/p-system.security.crypto_48_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>