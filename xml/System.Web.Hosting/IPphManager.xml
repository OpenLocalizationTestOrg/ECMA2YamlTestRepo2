<Type Name="IPphManager" FullName="System.Web.Hosting.IPphManager">
  <TypeSignature Language="C#" Value="public interface IPphManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPphManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1cc9099d-0a8d-41cb-87d6-845e4f8c4e91")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides stop and start control of listener channels.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IPphManager is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="StartProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartProcessProtocolListenerChannel (string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartProcessProtocolListenerChannel(string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="protocolId">The protocol ID.</param>
        <param name="listenerChannelCallback">The <see cref="T:System.Web.Hosting.IListenerChannelCallback" /> interface.</param>
        <summary>Starts the specified process protocol listener channel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 StartProcessProtocolListenerChannel is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocol">
      <MemberSignature Language="C#" Value="public void StopProcessProtocol (string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocol(string protocolId, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId">The protocol ID of the listener channel to stop.</param>
        <param name="immediate">
          <see langword="true" /> to notify the process protocol manager to stop all listener channels synchronously; <see langword="false" /> to stop all listener channels asynchronously.</param>
        <summary>Stops all protocol listener channels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 StopProcessProtocol is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopProcessProtocolListenerChannel (string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocolListenerChannel(string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId">The protocol ID for the listener channel.</param>
        <param name="listenerChannelId">The listener channel ID.</param>
        <param name="immediate">
          <see langword="true" /> to notify the process protocol manager to stop all listener channels synchronously; <see langword="false" /> to stop all listener channels asynchronously.</param>
        <summary>Stops the specified process protocol listener channel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 StopProcessProtocolListenerChannel is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>