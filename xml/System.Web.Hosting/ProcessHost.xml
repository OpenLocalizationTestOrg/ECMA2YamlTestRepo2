<Type Name="ProcessHost" FullName="System.Web.Hosting.ProcessHost">
  <TypeSignature Language="C#" Value="public sealed class ProcessHost : MarshalByRefObject, System.Web.Hosting.IAdphManager, System.Web.Hosting.IApplicationPreloadManager, System.Web.Hosting.IPphManager, System.Web.Hosting.IProcessHost, System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProcessHost extends System.MarshalByRefObject implements class System.Web.Hosting.IAdphManager, class System.Web.Hosting.IApplicationPreloadManager, class System.Web.Hosting.IPphManager, class System.Web.Hosting.IProcessHost, class System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Hosting.IAdphManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IApplicationPreloadManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IPphManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IProcessHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IProcessHostIdleAndHealthCheck</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a process host.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ProcessHost is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="EnumerateAppDomains">
      <MemberSignature Language="C#" Value="public void EnumerateAppDomains (out System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumerateAppDomains(class System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfoEnum" Type="System.Web.Hosting.IAppDomainInfoEnum&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="appDomainInfoEnum">Information about the application domains.</param>
        <summary>Provides access to an enumerable set of application domains.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gives the process host an infinite lifetime by preventing a lease from being created.</summary>
        <returns>Returns a <see langword="null" /> value to indicate that the lease never expires.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 InitializeLifetimeService is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the state of a process.</summary>
        <returns>
          <see langword="true" /> if the process host is idle; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsIdle is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public void Ping (System.Web.Hosting.IProcessPingCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Ping(class System.Web.Hosting.IProcessPingCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Hosting.IProcessPingCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to handle the ping response.</param>
        <summary>Pings a process.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ping is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationPreloadState">
      <MemberSignature Language="C#" Value="public void SetApplicationPreloadState (string context, string appId, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationPreloadState(string context, string appId, bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">The application context.</param>
        <param name="appId">The unique ID of the application.</param>
        <param name="enabled">
          <see langword="true" /> to indicate the application should be preloaded; otherwise, <see langword="false" />.</param>
        <summary>Notifies ASP.NET that a particular application that is running on [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] is configured to be preloaded.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method implements the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> method of the <xref:System.Web.Hosting.IApplicationPreloadManager> interface. [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] calls the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> method to notify ASP.NET whether the application that is being loaded supports preloading.  
  
> [!NOTE]
>  This method applies only to applications that run on [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)].  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="enabled" /> is set to <see langword="true" /> and the process host was not previously passed an <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> interface to its &lt;xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A&gt; method</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationPreloadUtil">
      <MemberSignature Language="C#" Value="public void SetApplicationPreloadUtil (System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationPreloadUtil(class System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPreloadUtil" Type="System.Web.Hosting.IApplicationPreloadUtil" />
      </Parameters>
      <Docs>
        <param name="applicationPreloadUtil">The handle to an unmanaged interface in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] that ASP.NET calls to get information.</param>
        <summary>Creates a type that calls [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] to get information that is required in order to preload an application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method implements the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A> method of the <xref:System.Web.Hosting.IApplicationPreloadManager> interface. The method creates an instance of the <xref:System.Web.Hosting.IApplicationPreloadUtil> type, which calls into [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] to get preloading information.  
  
> [!NOTE]
>  This method applies only to applications that run on [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)].  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is not <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unloads the process host.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownApplication(string appId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">The unique identifier of the application to shut down.</param>
        <summary>Shuts down the specified application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ShutdownApplication is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartAppDomainProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartAppDomainProtocolListenerChannel (string appId, string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAppDomainProtocolListenerChannel(string appId, string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="appId">The application ID.</param>
        <param name="protocolId">The protocol ID.</param>
        <param name="listenerChannelCallback">The protocol listener channel callback.</param>
        <summary>Starts an application domain protocol listener channel.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartApplication">
      <MemberSignature Language="C#" Value="public void StartApplication (string appId, string appPath, out object runtimeInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartApplication(string appId, string appPath, object runtimeInterface) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="appPath" Type="System.String" />
        <Parameter Name="runtimeInterface" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="appId">The application ID.</param>
        <param name="appPath">The virtual path to the application.</param>
        <param name="runtimeInterface">A runtime manager interface.</param>
        <summary>Starts the specified application.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartProcessProtocolListenerChannel (string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartProcessProtocolListenerChannel(string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="protocolId">The protocol ID.</param>
        <param name="listenerChannelCallback">The protocol listener channel callback.</param>
        <summary>Starts a process protocol listener channel.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopAppDomainProtocol">
      <MemberSignature Language="C#" Value="public void StopAppDomainProtocol (string appId, string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAppDomainProtocol(string appId, string protocolId, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId">The application ID.</param>
        <param name="protocolId">The protocol ID.</param>
        <param name="immediate">Whether to stop the protocol immediately.</param>
        <summary>Stops an application domain protocol listener channel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 StopAppDomainProtocol is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopAppDomainProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopAppDomainProtocolListenerChannel (string appId, string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAppDomainProtocolListenerChannel(string appId, string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId">The application ID</param>
        <param name="protocolId">The protocol ID.</param>
        <param name="listenerChannelId">The protocol listener channel ID.</param>
        <param name="immediate">Whether to stop the protocol listener channel immediately.</param>
        <summary>Stops an application domain protocol listener channel.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocol">
      <MemberSignature Language="C#" Value="public void StopProcessProtocol (string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocol(string protocolId, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId">The protocol ID.</param>
        <param name="immediate">Whether to stop the protocol immediately.</param>
        <summary>Stops a process protocol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 StopProcessProtocol is introduced in the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopProcessProtocolListenerChannel (string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocolListenerChannel(string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId">The protocol ID.</param>
        <param name="listenerChannelId">The protocol listener channel callback.</param>
        <param name="immediate">Whether to stop the protocol listener channel immediately.</param>
        <summary>Stops a protocol listener channel.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>