<Type Name="ApplicationInfo" FullName="System.Web.Hosting.ApplicationInfo">
  <TypeSignature Language="C#" Value="public sealed class ApplicationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ApplicationInfo extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides information about a running application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ApplicationInfo object is used by the <xref:System.Web.Hosting.ApplicationManager> class for information about running applications.  
  
   
  
## Examples  
 The following code example gets an array of ApplicationInfo objects from the <xref:System.Web.Hosting.ApplicationManager> object associated with the current process.  
  
 [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/t-system.web.hosting.app_1.aspx)]
 [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/t-system.web.hosting.app_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unique identifier for the application.</summary>
        <value>The unique identifier for the application specified when the application was created by using the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt; method.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For applications running under Microsoft Internet Information Services (IIS), the application ID is the metabase path to the application root, such as /LM/W3SVC/1/Root/application.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the physical path corresponding to the application's root.</summary>
        <value>The physical path corresponding to the application's root.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The PhysicalPath property is the path that was passed to the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when the application was created.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the virtual path corresponding to the application's root.</summary>
        <value>The virtual path corresponding to the application's root.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The VirtualPath property is the virtual path that was passed to the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when the application was created.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>