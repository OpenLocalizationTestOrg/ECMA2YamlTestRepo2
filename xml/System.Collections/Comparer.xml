<Type Name="Comparer" FullName="System.Collections.Comparer">
  <TypeSignature Language="C#" Value="public sealed class Comparer : System.Collections.IComparer, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Comparer extends System.Object implements class System.Collections.IComparer, class System.Runtime.Serialization.ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Compares two objects for equivalence, where string comparisons are case-sensitive.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class is the default implementation of the <xref:System.Collections.IComparer> interface. The <xref:System.Collections.CaseInsensitiveComparer> class is the implementation of the <xref:System.Collections.IComparer> interface that performs case-insensitive string comparisons.  
  
 Comparison procedures use the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread unless otherwise specified. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how <xref:System.Collections.Comparer.Compare%2A> returns different values depending on the culture associated with the Comparer.  
  
 [!code-cpp[System.Collections.Comparer#1](~/add/codesnippet/cpp/t-system.collections.com_1.cpp)]
 [!code-vb[System.Collections.Comparer#1](~/add/codesnippet/visualbasic/t-system.collections.com_1.vb)]
 [!code-cs[System.Collections.Comparer#1](~/add/codesnippet/csharp/t-system.collections.com_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Comparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">The &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; to use for the new <see cref="T:System.Collections.Comparer" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Collections.Comparer" /> class using the specified &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=fullName> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how <xref:System.Collections.Comparer.Compare%2A> returns different values depending on the culture associated with the <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/add/codesnippet/cpp/m-system.collections.com_1_1.cpp)]
 [!code-vb[System.Collections.Comparer#1](~/add/codesnippet/visualbasic/m-system.collections.com_1_1.vb)]
 [!code-cs[System.Collections.Comparer#1](~/add/codesnippet/csharp/m-system.collections.com_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">The first object to compare.</param>
        <param name="b">The second object to compare.</param>
        <summary>Performs a case-sensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.</summary>
        <returns>A signed integer that indicates the relative values of <paramref name="a" /> and <paramref name="b" />, as shown in the following table.  
  
 <list type="table">  
<listheader>  
<term> Value  
  
 </term>  
<description> Meaning  
  
 </description>  
</listheader>  
<item>  
<term> Less than zero  
  
 </term>  
<description> <paramref name="a" /> is less than <paramref name="b" />.  
  
 </description>  
</item>  
<item>  
<term> Zero  
  
 </term>  
<description> <paramref name="a" /> equals <paramref name="b" />.  
  
 </description>  
</item>  
<item>  
<term> Greater than zero  
  
 </term>  
<description> <paramref name="a" /> is greater than <paramref name="b" />.  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `a` implements <xref:System.IComparable>, then `a`. `CompareTo` (`b`) is returned; otherwise, if `b` implements <xref:System.IComparable>, then the negated result of `b`. `CompareTo` (`a`) is returned.  
  
 Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object.  
  
 String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how Compare returns different values depending on the culture associated with the <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/add/codesnippet/cpp/m-system.collections.com_0_1.cpp)]
 [!code-vb[System.Collections.Comparer#1](~/add/codesnippet/visualbasic/m-system.collections.com_0_1.vb)]
 [!code-cs[System.Collections.Comparer#1](~/add/codesnippet/csharp/m-system.collections.com_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Neither <paramref name="a" /> nor <paramref name="b" /> implements the &lt;xref:System.IComparable&gt; interface.  
  
 -or-  
  
 <paramref name="a" /> and <paramref name="b" /> are of different types and neither one can handle comparisons with the other.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Comparer Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Comparer Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Comparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents an instance of <see cref="T:System.Collections.Comparer" /> that is associated with the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparison procedures use the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Comparer DefaultInvariant;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Comparer DefaultInvariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Comparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents an instance of <see cref="T:System.Collections.Comparer" /> that is associated with &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how <xref:System.Collections.Comparer.Compare%2A> returns different values depending on the culture associated with the <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/add/codesnippet/cpp/f-system.collections.com_1.cpp)]
 [!code-vb[System.Collections.Comparer#1](~/add/codesnippet/visualbasic/f-system.collections.com_1.vb)]
 [!code-cs[System.Collections.Comparer#1](~/add/codesnippet/csharp/f-system.collections.com_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The object to populate with data.</param>
        <param name="context">The context information about the source or destination of the serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data required for serialization.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 While the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.Comparer> class can expose it and can cause undesirable behavior in COM clients.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> is <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to provide serialization services. Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> Security action: <see cref="T:System.Security.Permissions.SecurityAction" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>