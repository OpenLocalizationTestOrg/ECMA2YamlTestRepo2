<Type Name="LogExtent" FullName="System.IO.Log.LogExtent">
  <TypeSignature Language="C#" Value="public sealed class LogExtent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogExtent extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a disk extent that contains log data.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by LogExtent instances. A particular LogExtent is associated with exactly one <xref:System.IO.Log.LogStore>, and LogExtent objects in the same <xref:System.IO.Log.LogStore> are of identical size. Space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.  
  
 Although LogExtent objects are represented on disk as files, they should not be moved or deleted as normal files. To delete a LogExtent instance, remove it from the <xref:System.IO.Log.LogExtentCollection> that contains it.  
  
   
  
## Examples  
 This example shows how to use the LogExtent class to add and emulate extents in a log sequence.  
  
 [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logextent_1.cs)]
 [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logextent_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance.</summary>
        <value>The fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files. To delete a <xref:System.IO.Log.LogExtent> instance, remove it from the <xref:System.IO.Log.LogExtentCollection> that contains it.  
  
   
  
## Examples  
 This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.  
  
 [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_1_1.cs)]
 [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public long Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes.</summary>
        <value>The size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.  
  
 [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_4_1.cs)]
 [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_4_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogExtentState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.LogExtentState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogExtentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</summary>
        <value>The state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.  
  
 [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_0_1.cs)]
 [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>