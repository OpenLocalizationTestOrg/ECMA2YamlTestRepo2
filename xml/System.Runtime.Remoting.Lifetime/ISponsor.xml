<Type Name="ISponsor" FullName="System.Runtime.Remoting.Lifetime.ISponsor">
  <TypeSignature Language="C#" Value="public interface ISponsor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISponsor" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indicates that the implementer wants to be a lifetime lease sponsor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An object must implement the ISponsor interface if it needs to request a lease renewal for a particular object. An object that implements the ISponsor interface can become a sponsor by registering itself with the lease manager. The ISponsor interface is used by the lifetime service to call back to the sponsor.  
  
   
  
## Examples  
 [!code-cpp[ISponsor_Client#2](~/add/codesnippet/cpp/t-system.runtime.remotin_8_1.cpp)]
 [!code-cs[ISponsor_Client#2](~/add/codesnippet/csharp/t-system.runtime.remotin_8_1.cs)]
 [!code-vb[ISponsor_Client#2](~/add/codesnippet/visualbasic/t-system.runtime.remotin_8_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Renewal">
      <MemberSignature Language="C#" Value="public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renewal(class System.Runtime.Remoting.Lifetime.ILease lease) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
      </Parameters>
      <Docs>
        <param name="lease">The lifetime lease of the object that requires lease renewal.</param>
        <summary>Requests a sponsoring client to renew the lease for the specified object.</summary>
        <returns>The additional lease time for the specified object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Renewal method is called by the distributed garbage collector to renew the lease for the specified object.  
  
   
  
## Examples  
 [!code-cpp[ISponsor_Client#2](~/add/codesnippet/cpp/c27171dc-7845-473e-9bb6-_1.cpp)]
 [!code-cs[ISponsor_Client#2](~/add/codesnippet/csharp/c27171dc-7845-473e-9bb6-_1.cs)]
 [!code-vb[ISponsor_Client#2](~/add/codesnippet/visualbasic/c27171dc-7845-473e-9bb6-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="T:System.Security.Permissions.SecurityAction" />; Permission value: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>