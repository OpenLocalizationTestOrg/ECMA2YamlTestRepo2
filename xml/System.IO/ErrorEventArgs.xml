<Type Name="ErrorEventArgs" FullName="System.IO.ErrorEventArgs">
  <TypeSignature Language="C#" Value="public class ErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorEventArgs extends System.EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ErrorEventArgs contains the <xref:System.Exception> that caused the <xref:System.IO.FileSystemWatcher.Error?displayProperty=fullName> event. This class provides the <xref:System.IO.ErrorEventArgs.GetException%2A> method to retrieve the exception.  
  
   
  
## Examples  
 The following example creates a new instance of ErrorEventArgs and initializes it with an <xref:System.Exception>. Then the example calls <xref:System.IO.ErrorEventArgs.GetException%2A> to retrieve the <xref:System.Exception> and display the error message. There is no form associated with this code.  
  
 [!code-cpp[Classic ErrorEventArgs Example#1](~/add/codesnippet/cpp/t-system.io.erroreventargs_1.cpp)]
 [!code-cs[Classic ErrorEventArgs Example#1](~/add/codesnippet/csharp/t-system.io.erroreventargs_1.cs)]
 [!code-vb[Classic ErrorEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.io.erroreventargs_1.vb)]  
  
 The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.  
  
 [!code-cs[FileSystemWatcher#1](~/add/codesnippet/csharp/t-system.io.erroreventargs_2.cs)]
 [!code-vb[FileSystemWatcher#1](~/add/codesnippet/visualbasic/t-system.io.erroreventargs_2.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">An &lt;xref:System.Exception&gt; that represents the error that occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.ErrorEventArgs" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a new instance of <xref:System.IO.ErrorEventArgs> and initializes it with an <xref:System.Exception>. Then the example calls <xref:System.IO.ErrorEventArgs.GetException%2A> to retrieve the <xref:System.Exception> and display the error message. There is no form associated with this code.  
  
 [!code-cpp[Classic ErrorEventArgs.ErrorEventArgs Example#1](~/add/codesnippet/cpp/m-system.io.erroreventar_0_1.cpp)]
 [!code-cs[Classic ErrorEventArgs.ErrorEventArgs Example#1](~/add/codesnippet/csharp/m-system.io.erroreventar_0_1.cs)]
 [!code-vb[Classic ErrorEventArgs.ErrorEventArgs Example#1](~/add/codesnippet/visualbasic/m-system.io.erroreventar_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public virtual Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetException() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the &lt;xref:System.Exception&gt; that represents the error that occurred.</summary>
        <returns>An &lt;xref:System.Exception&gt; that represents the error that occurred.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a new instance of <xref:System.IO.ErrorEventArgs> and initializes it with an <xref:System.Exception>. Then the example calls GetException to retrieve the <xref:System.Exception> and display the error message. There is no form associated with this code.  
  
 [!code-cpp[Classic ErrorEventArgs.ErrorEventArgs Example#1](~/add/codesnippet/cpp/m-system.io.erroreventar_1_1.cpp)]
 [!code-cs[Classic ErrorEventArgs.ErrorEventArgs Example#1](~/add/codesnippet/csharp/m-system.io.erroreventar_1_1.cs)]
 [!code-vb[Classic ErrorEventArgs.ErrorEventArgs Example#1](~/add/codesnippet/visualbasic/m-system.io.erroreventar_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>