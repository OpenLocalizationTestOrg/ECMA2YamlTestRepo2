<Type Name="RenamedEventArgs" FullName="System.IO.RenamedEventArgs">
  <TypeSignature Language="C#" Value="public class RenamedEventArgs : System.IO.FileSystemEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RenamedEventArgs extends System.IO.FileSystemEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class inherits from <xref:System.IO.FileSystemEventArgs> and extends it by adding an old name field and an old full path field to specify the previous name and full path of the affected file or directory.  
  
   
  
## Examples  
 The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.  
  
 [!code-cs[FileSystemWatcher#1](~/add/codesnippet/csharp/t-system.io.renamedevent_1_1.cs)]
 [!code-vb[FileSystemWatcher#1](~/add/codesnippet/visualbasic/t-system.io.renamedevent_1_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RenamedEventArgs (System.IO.WatcherChangeTypes changeType, string directory, string name, string oldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.WatcherChangeTypes changeType, string directory, string name, string oldName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="changeType">One of the <see cref="T:System.IO.WatcherChangeTypes" /> values.</param>
        <param name="directory">The name of the affected file or directory.</param>
        <param name="name">The name of the affected file or directory.</param>
        <param name="oldName">The old name of the affected file or directory.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.RenamedEventArgs" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class inherits from the <xref:System.IO.FileSystemEventArgs> class and extends it by adding an old name field to specify the previous name of the file or directory affected.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OldFullPath">
      <MemberSignature Language="C#" Value="public string OldFullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldFullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the previous fully qualified path of the affected file or directory.</summary>
        <value>The previous fully qualified path of the affected file or directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the OldFullPath property. This code example is part of a larger example provided for the <xref:System.IO.RenamedEventArgs> class.  
  
 [!code-cs[FileSystemWatcher#8](~/add/codesnippet/csharp/p-system.io.renamedevent_1.cs)]
 [!code-vb[FileSystemWatcher#8](~/add/codesnippet/visualbasic/p-system.io.renamedevent_1.vb)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">for reading files. Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OldName">
      <MemberSignature Language="C#" Value="public string OldName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the old name of the affected file or directory.</summary>
        <value>The previous name of the affected file or directory.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>