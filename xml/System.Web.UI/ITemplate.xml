<Type Name="ITemplate" FullName="System.Web.UI.ITemplate">
  <TypeSignature Language="C#" Value="public interface ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Defines the behavior for populating a templated ASP.NET server control with child controls. The child controls represent the inline templates defined on the page.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This interface is used by custom server controls, but never implemented by them. ASP.NET always implements it.  
  
   
  
## Examples  
 The following code example demonstrates a simple templated server control that uses the ITemplate interface to create a templated property.  
  
 [!code-cs[Classic ITemplate Example#1](~/add/codesnippet/csharp/t-system.web.ui.itemplate_1.cs)]
 [!code-vb[Classic ITemplate Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.itemplate_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="InstantiateIn">
      <MemberSignature Language="C#" Value="public void InstantiateIn (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstantiateIn(class System.Web.UI.Control container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">The <see cref="T:System.Web.UI.Control" /> object to contain the instances of controls from the inline template.</param>
        <summary>When implemented by a class, defines the <see cref="T:System.Web.UI.Control" /> object that child controls and templates belong to. These child controls are in turn defined within an inline template.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When developing templated server controls, you do not need to implement this method; the .NET Framework provides the implementation for you.  
  
   
  
## Examples  
 [!code-vb[ITemplate_Interface#2](~/add/codesnippet/visualbasic/m-system.web.ui.itemplat_1.vb)]
 [!code-cs[ITemplate_Interface#2](~/add/codesnippet/csharp/m-system.web.ui.itemplat_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>