<Type Name="IDReferencePropertyAttribute" FullName="System.Web.UI.IDReferencePropertyAttribute">
  <TypeSignature Language="C#" Value="public sealed class IDReferencePropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IDReferencePropertyAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines an attribute applied to properties that contain ID references. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IDReferencePropertyAttribute class is applied to properties that contain ID references. <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> is an example of a property that contains an ID reference. When this attribute is applied, designers can provide additional functionality during design time, such as listing IDs.  
  
   
  
## Examples  
 The following code example demonstrates how the IDReferencePropertyAttribute attribute is applied to a property that evaluates to a string. In this example, the `DataSourceID` member identifies a data source control and therefore specifies the <xref:System.Web.UI.DataSourceControl> type.  
  
 [!code-cs[System.Web.UI.IDReferencePropertyAttribute#2](~/add/codesnippet/csharp/t-system.web.ui.idrefere_1.cs)]
 [!code-vb[System.Web.UI.IDReferencePropertyAttribute#2](~/add/codesnippet/visualbasic/t-system.web.ui.idrefere_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IDReferencePropertyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you call this constructor, the <xref:System.Web.UI.IDReferencePropertyAttribute.ReferencedControlType%2A> property is set to <xref:System.Web.UI.Control>, which is its default value.  
  
   
  
## Examples  
 The following code example demonstrates how the <xref:System.Web.UI.IDReferencePropertyAttribute> attribute is applied to a property that evaluates to a string. In this example, the `DataSourceID` member identifies a data source control at run time. By using the default constructor, the <xref:System.Web.UI.IDReferencePropertyAttribute.ReferencedControlType%2A> property is set to the default value, <xref:System.Web.UI.Control>.  
  
 [!code-vb[System.Web.UI.IDReferencePropertyAttribute#1](~/add/codesnippet/visualbasic/m-system.web.ui.idrefere_1_1.vb)]
 [!code-cs[System.Web.UI.IDReferencePropertyAttribute#1](~/add/codesnippet/csharp/m-system.web.ui.idrefere_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IDReferencePropertyAttribute (Type referencedControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type referencedControlType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referencedControlType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="referencedControlType">A &lt;xref:System.Type&gt; that specifies the type of the control represented by the property to which the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> is applied.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> class using the specified type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how the <xref:System.Web.UI.IDReferencePropertyAttribute> attribute is applied to a property that evaluates to a string. In this example, the `DataSourceID` member identifies a data source control and therefore specifies the <xref:System.Web.UI.DataSourceControl> type.  
  
 [!code-cs[System.Web.UI.IDReferencePropertyAttribute#2](~/add/codesnippet/csharp/m-system.web.ui.idrefere_0_1.cs)]
 [!code-vb[System.Web.UI.IDReferencePropertyAttribute#2](~/add/codesnippet/visualbasic/m-system.web.ui.idrefere_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An &lt;xref:System.Object&gt; to compare with this instance or a null reference (<see langword="Nothing" /> in Visual Basic).</param>
        <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReferencedControlType">
      <MemberSignature Language="C#" Value="public Type ReferencedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReferencedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the controls allowed by the property to which the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> attribute is applied.</summary>
        <value>A &lt;xref:System.Type&gt; that represents the type of control allowed by the property to which the <see cref="T:System.Web.UI.IDReferencePropertyAttribute" /> is applied. The default is <see cref="T:System.Web.UI.Control" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>