<Type Name="ClientIDMode" FullName="System.Web.UI.ClientIDMode">
  <TypeSignature Language="C#" Value="public enum ClientIDMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ClientIDMode extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies how ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; for a control that can be accessed in client script.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use the ClientIDMode enumeration when you set the <xref:System.Web.UI.Control.ClientIDMode%2A> property for a control. The value that you assign to the <xref:System.Web.UI.Control.ClientIDMode%2A> property determines how the <xref:System.Web.UI.Control.ClientID%2A> property is generated. The value of the <xref:System.Web.UI.Control.ClientID%2A> property is rendered as the `id` attribute in markup, and it is the value that you use to access the control from client script. The value that you assign to the <xref:System.Web.UI.Control.ClientIDMode%2A> property does not affect the <xref:System.Web.UI.Control.ID%2A> property of the server control, only the `id` attribute of the corresponding HTML element.  
  
 The default value of <xref:System.Web.UI.Control.ClientIDMode%2A> for a page is Predictable. The default value of <xref:System.Web.UI.Control.ClientIDMode%2A> for a control is Inherit.  
  
 Because the default for controls is Inherit, the default generation mode is Predictable. (However, if you use Visual Studio to convert a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the site default to AutoID in the Web.config file.)  
  
 You can set the `ClientIDMode` value for all pages in a Web site by setting the  element in the site's Web.config file. You can set the `ClientIDMode` value for a page in the  directive.  
  
 For more information, see [ASP.NET Web Server Control Identification](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows <xref:System.Web.UI.WebControls.Label> controls that are contained in a <xref:System.Web.UI.WebControls.ListView> control. On the <xref:System.Web.UI.WebControls.ListView> control, the <xref:System.Web.UI.Control.ClientIDMode%2A> property is set to Predictable and the <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> property is set to `ProductID`. From client script, you can access a particular instance of a <xref:System.Web.UI.WebControls.Label> based on the `ProductID` value of the instance that you are trying to access.  
  
 This example creates HTML with three `ProductIDLabel` controls. When the page runs, the IDs for the controls will be the following:  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
 For more information, see [ASP.NET Web Server Control Identification](../Topic/ASP.NET%20Web%20Server%20Control%20Identification.md)  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="AutoID">
      <MemberSignature Language="C#" Value="AutoID" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode AutoID = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is generated by concatenating the &lt;xref:System.Web.UI.Control.ID%2A&gt; values of each parent naming container with the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control. In data-binding scenarios where multiple instances of a control are rendered, an incrementing value is inserted in front of the control's &lt;xref:System.Web.UI.Control.ID%2A&gt; value. Each segment is separated by an underscore character (_). This algorithm is the only one that was available in versions of ASP.NET earlier than ASP.NET 4.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Inherit = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The control inherits the ClientIDMode setting of its &lt;xref:System.Web.UI.Control.NamingContainer%2A&gt; control.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Predictable">
      <MemberSignature Language="C#" Value="Predictable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Predictable = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This algorithm is used for controls that are in data-bound controls. The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is generated by concatenating the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value of the parent naming container with the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the control. If the control is a data-bound control that generates multiple rows, the value of the data field specified in the &lt;xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A&gt; property is added at the end. For the <see cref="T:System.Web.UI.WebControls.GridView" /> control, multiple data fields can be specified. If the &lt;xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A&gt; property is blank, a sequential number is added at the end instead of a data field value. Each segment is separated by an underscore character (_).</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Static = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is set to the value of the &lt;xref:System.Web.UI.Control.ID%2A&gt; property. If the control is a naming container, the control is used as the top of the hierarchy of naming containers for any controls that it contains.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>