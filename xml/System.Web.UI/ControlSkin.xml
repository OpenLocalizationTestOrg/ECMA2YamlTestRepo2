<Type Name="ControlSkin" FullName="System.Web.UI.ControlSkin">
  <TypeSignature Language="C#" Value="public class ControlSkin" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlSkin extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a control skin, which is a means to define stylistic properties that are applied to an ASP.NET Web server control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Page and control developers do not use the <xref:System.Web.UI.ControlSkinDelegate>, ControlSkin, or <xref:System.Web.UI.PageTheme> classes directly. These classes are used internally by the ASP.NET page framework to apply server-side properties and cascading style sheet definitions that are defined in ASP.NET themes and control skin files to specific types of controls.  
  
 ControlSkin objects represent a named skin or default skin of a <xref:System.Web.UI.Control> control at run time and design time. ASP.NET builds <xref:System.Web.UI.PageTheme>, ControlSkin and <xref:System.Web.UI.ControlSkinDelegate> objects to apply the style elements defined in themes and control skin files to ASP.NET Web pages and controls.  
  
 For more information about themes and control skins, see [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates how control skins are specified for controls in a declarative ASP.NET page. The example shows three ASP.NET server controls found in the same page, two that use the same named skin and one that uses a different skin.  
  
 [!code-vb[ControlSkin#1](~/add/codesnippet/visualbasic/t-system.web.ui.controls_1.aspx)]
 [!code-cs[ControlSkin#1](~/add/codesnippet/csharp/t-system.web.ui.controls_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlSkin (Type controlType, System.Web.UI.ControlSkinDelegate themeDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type controlType, class System.Web.UI.ControlSkinDelegate themeDelegate) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="themeDelegate" Type="System.Web.UI.ControlSkinDelegate" />
      </Parameters>
      <Docs>
        <param name="controlType">The &lt;xref:System.Type&gt; of <see cref="T:System.Web.UI.Control" /> to which the skin is applied, used to enforce type consistency among named skins.</param>
        <param name="themeDelegate">The <see cref="T:System.Web.UI.ControlSkinDelegate" /> that applies the style elements defined in a control skin file to the type identified by the `controlType` parameter.</param>
        <summary>Creates a new instance of the <see cref="T:System.Web.UI.ControlSkin" /> class using the passed <see cref="T:System.Web.UI.Control" /> type and delegate.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ApplySkin">
      <MemberSignature Language="C#" Value="public void ApplySkin (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplySkin(class System.Web.UI.Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">The control to which to apply the skin.</param>
        <summary>Applies the skin to the <see cref="T:System.Web.UI.Control" /> control contained by the <see cref="T:System.Web.UI.ControlSkin" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passes the <xref:System.Web.UI.Control> object associated with the <xref:System.Web.UI.ControlSkin> class to the <xref:System.Web.UI.ControlSkinDelegate>, which applies the skin to the <xref:System.Web.UI.Control> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;xref:System.Type&gt; of the control that the <see cref="T:System.Web.UI.ControlSkin" /> object is associated with.</summary>
        <value>The &lt;xref:System.Type&gt; of the <see cref="T:System.Web.UI.Control" /> used in this instance.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>