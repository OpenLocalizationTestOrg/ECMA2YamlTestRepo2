<Type Name="RootBuilder" FullName="System.Web.UI.RootBuilder">
  <TypeSignature Language="C#" Value="public class RootBuilder : System.Web.UI.TemplateBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RootBuilder extends System.Web.UI.TemplateBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supports the page parser in defining the behavior for how content is parsed.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.RootBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootBuilder (System.Web.UI.TemplateParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.TemplateParser parser) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
      </Parameters>
      <Docs>
        <param name="parser">The object to use to parse files.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.RootBuilder" /> class with the specified template parser.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BuiltObjects">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary BuiltObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary BuiltObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the objects to persist that were built by the root builder.</summary>
        <value>A <see cref="T:System.Collections.Hashtable" /> object that contains the objects that were built by the root builder.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">The tag name of the child control.</param>
        <param name="attribs">The &lt;xref:System.Collections.IDictionary&gt; object that holds all the specified tag attributes.</param>
        <summary>Returns the control type of any parsed child controls.</summary>
        <returns>The type of the child control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetChildControlType method overrides the implementation of this method in <xref:System.Web.UI.ControlBuilder>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCodeGenerationComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnCodeGenerationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCodeGenerationComplete() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a way to modify the <see cref="T:System.CodeDom.CodeCompileUnit" /> object after code generation is finished.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnCodeGenerationComplete method is called when the CodeDom tree has been fully built.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>