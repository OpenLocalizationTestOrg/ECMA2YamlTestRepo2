<Type Name="CodeAttributeDeclarationCollection" FullName="System.CodeDom.CodeAttributeDeclarationCollection">
  <TypeSignature Language="C#" Value="public class CodeAttributeDeclarationCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeAttributeDeclarationCollection extends System.Collections.CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CodeAttributeDeclarationCollection class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.CodeAttributeDeclaration> objects.  
  
   
  
## Examples  
 The following example demonstrates the use of the CodeAttributeDeclarationCollection class methods.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#1](~/add/codesnippet/cpp/t-system.codedom.codeatt_2_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#1](~/add/codesnippet/csharp/t-system.codedom.codeatt_2_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#1](~/add/codesnippet/visualbasic/t-system.codedom.codeatt_2_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttributeDeclarationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttributeDeclarationCollection (System.CodeDom.CodeAttributeDeclaration[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeAttributeDeclaration[] value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration[]" />
      </Parameters>
      <Docs>
        <param name="value">An array of <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> objects with which to initialize the collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> objects.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">One or more objects in the array are <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttributeDeclarationCollection (System.CodeDom.CodeAttributeDeclarationCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeAttributeDeclarationCollection value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> with which to initialize the collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> class containing the elements of the specified source collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeAttributeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeAttributeDeclaration value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to add.</param>
        <summary>Adds a <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object with the specified value to the collection.</summary>
        <returns>The index at which the new element was inserted.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to add a <xref:System.CodeDom.CodeAttributeDeclaration> object to a <xref:System.CodeDom.CodeAttributeDeclarationCollection> instance.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#3](~/add/codesnippet/cpp/9051987d-9700-42d7-8493-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#3](~/add/codesnippet/csharp/9051987d-9700-42d7-8493-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#3](~/add/codesnippet/visualbasic/9051987d-9700-42d7-8493-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeAttributeDeclaration[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeAttributeDeclaration[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration[]" />
      </Parameters>
      <Docs>
        <param name="value">An array of type <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> that contains the objects to add to the collection.</param>
        <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> array to the end of the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use AddRange method overload to add an array of <xref:System.CodeDom.CodeAttributeDeclaration> objects to a <xref:System.CodeDom.CodeAttributeDeclarationCollection>.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#4](~/add/codesnippet/cpp/11c32c8d-c517-4b99-8664-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#4](~/add/codesnippet/csharp/11c32c8d-c517-4b99-8664-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#4](~/add/codesnippet/visualbasic/11c32c8d-c517-4b99-8664-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeAttributeDeclarationCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeAttributeDeclarationCollection value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that contains the objects to add to the collection.</param>
        <summary>Copies the contents of another <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> object to the end of the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the AddRange method overload to add the members of one <xref:System.CodeDom.CodeAttributeDeclarationCollection> to another.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#4](~/add/codesnippet/cpp/1d65ee61-69d0-4bb0-ae05-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#4](~/add/codesnippet/csharp/1d65ee61-69d0-4bb0-ae05-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#4](~/add/codesnippet/visualbasic/1d65ee61-69d0-4bb0-ae05-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeAttributeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeAttributeDeclaration value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to locate.</param>
        <summary>Gets or sets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object.</summary>
        <returns>
          <see langword="true" /> if the collection contains the specified object; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the Contains method to search for the presence of a specific <xref:System.CodeDom.CodeAttributeDeclaration> instance and gets the index value at which it was found.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#5](~/add/codesnippet/cpp/74c6c3d7-4bf0-4504-8b9d-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#5](~/add/codesnippet/csharp/74c6c3d7-4bf0-4504-8b9d-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#5](~/add/codesnippet/visualbasic/74c6c3d7-4bf0-4504-8b9d-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeAttributeDeclaration[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeAttributeDeclaration[] array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeAttributeDeclaration[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional &lt;xref:System.Array&gt; that is the destination of the values copied from the collection.</param>
        <param name="index">The index of the array at which to begin inserting.</param>
        <summary>Copies the collection objects to a one-dimensional &lt;xref:System.Array&gt; instance beginning at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to copy the contents of a <xref:System.CodeDom.CodeAttributeDeclarationCollection> to an array beginning at index 0.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#6](~/add/codesnippet/cpp/81999a03-d982-4bde-8674-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#6](~/add/codesnippet/csharp/81999a03-d982-4bde-8674-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#6](~/add/codesnippet/visualbasic/81999a03-d982-4bde-8674-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The destination array is multidimensional.  
  
 -or-  
  
 The number of elements in the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeAttributeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeAttributeDeclaration value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to locate in the collection.</param>
        <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object in the collection, if it exists in the collection.</summary>
        <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example searches for the presence of a specific <xref:System.CodeDom.CodeAttributeDeclaration> instance and uses the IndexOf method to get the index value at which it was found.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#5](~/add/codesnippet/cpp/7e085c82-45df-4632-9a66-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#5](~/add/codesnippet/csharp/7e085c82-45df-4632-9a66-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#5](~/add/codesnippet/visualbasic/7e085c82-45df-4632-9a66-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeAttributeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeAttributeDeclaration value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index where the specified object should be inserted.</param>
        <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to insert.</param>
        <summary>Inserts the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the Insert method to add a <xref:System.CodeDom.CodeAttributeDeclaration> object to the <xref:System.CodeDom.CodeAttributeDeclarationCollection>.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#8](~/add/codesnippet/cpp/e457f604-ecdd-4c50-8ed1-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#8](~/add/codesnippet/csharp/e457f604-ecdd-4c50-8ed1-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#8](~/add/codesnippet/visualbasic/e457f604-ecdd-4c50-8ed1-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclaration this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclaration Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the collection to access.</param>
        <summary>Gets or sets the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object at the specified index.</summary>
        <value>A <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> at each valid index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is an indexer that can be used to access the collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeAttributeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeAttributeDeclaration value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the Remove method to delete a <xref:System.CodeDom.CodeAttributeDeclaration> object from the <xref:System.CodeDom.CodeAttributeDeclarationCollection>.  
  
 [!code-cpp[CodeAttributeDeclarationCollectionExample#9](~/add/codesnippet/cpp/5d404da8-cfe4-45e0-86fa-_1.cpp)]
 [!code-cs[CodeAttributeDeclarationCollectionExample#9](~/add/codesnippet/csharp/5d404da8-cfe4-45e0-86fa-_1.cs)]
 [!code-vb[CodeAttributeDeclarationCollectionExample#9](~/add/codesnippet/visualbasic/5d404da8-cfe4-45e0-86fa-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The specified object is not found in the collection.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>