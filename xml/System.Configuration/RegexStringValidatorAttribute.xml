<Type Name="RegexStringValidatorAttribute" FullName="System.Configuration.RegexStringValidatorAttribute">
  <TypeSignature Language="C#" Value="public sealed class RegexStringValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegexStringValidatorAttribute extends System.Configuration.ConfigurationValidatorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.RegexStringValidator> and pass to it the value of the decorating parameters.  
  
 You may apply RegexStringValidatorAttribute objects to property types only.  
  
   
  
## Examples  
 The following example shows how to decorate the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the RegexStringValidatorAttribute object.  
  
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/visualbasic/t-system.configuration.r_2_1.vb)]
 [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/csharp/t-system.configuration.r_2_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexStringValidatorAttribute (string regex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string regex) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regex">The string to use for regular expression validation.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `regex` parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.  
  
 You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters.  
  
   
  
## Examples  
 The following example shows how to use the RegexStringValidatorAttribute constructor.  
  
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/visualbasic/m-system.configuration.r_0_1.vb)]
 [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/csharp/m-system.configuration.r_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Regex">
      <MemberSignature Language="C#" Value="public string Regex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Regex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the string used to perform regular-expression validation.</summary>
        <value>The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the Regex property.  
  
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/visualbasic/p-system.configuration.r_1_1.vb)]
 [!code-cs[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/csharp/p-system.configuration.r_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidatorInstance">
      <MemberSignature Language="C#" Value="public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class.</summary>
        <value>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use the ValidatorInstance property to perform string validation by calling its <xref:System.Configuration.StringValidator.Validate%2A> method.  
  
   
  
## Examples  
 The following example shows how to use the ValidatorInstance method.  
  
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/visualbasic/p-system.configuration.r_0_1.vb)]
 [!code-cs[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/csharp/p-system.configuration.r_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>