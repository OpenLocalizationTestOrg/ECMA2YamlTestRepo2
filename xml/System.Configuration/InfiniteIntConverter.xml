<Type Name="InfiniteIntConverter" FullName="System.Configuration.InfiniteIntConverter">
  <TypeSignature Language="C#" Value="public sealed class InfiniteIntConverter : System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InfiniteIntConverter extends System.Configuration.ConfigurationConverterBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationConverterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converts between a string and the standard infinite or integer value.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.  
  
 In particular, the InfiniteIntConverter class converts string values, assigned to a configuration property, to integer values and vice versa. If the configuration property has a string value of "infinite", it converts this value to <xref:System.Int32> and vice versa.  
  
 This converter is used with integer types. The infinite value is persisted as <xref:System.Int32>.  
  
   
  
## Examples  
 The following code example shows how to use the InfiniteIntConverter when applied to a custom section property.  
  
 [!code-cs[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/csharp/t-system.configuration.i_7_1.cs)]
 [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/visualbasic/t-system.configuration.i_7_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InfiniteIntConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteIntConverter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normally, you use the converter types provided by the system. The only time you need to use the InfiniteIntConverter constructor is when you create your own conversion type.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
        <param name="ci">The &lt;xref:System.Globalization.CultureInfo&gt; object used during conversion.</param>
        <param name="data">The &lt;xref:System.String&gt; object to convert.</param>
        <summary>Converts a &lt;xref:System.String&gt; to an &lt;xref:System.Int32&gt;.</summary>
        <returns>The &lt;xref:System.Int32.MaxValue&gt;, if the <paramref name="data" /> parameter is the &lt;xref:System.String&gt; "infinite"; otherwise, the &lt;xref:System.Int32&gt; representing the <paramref name="data" /> parameter integer value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The system uses the ConvertFrom method when reading from a configuration file to convert a <xref:System.String> value to <xref:System.Int32>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
        <param name="ci">The &lt;xref:System.Globalization.CultureInfo&gt; object used during conversion.</param>
        <param name="value">The value to convert to.</param>
        <param name="type">The type to convert to.</param>
        <summary>Converts an &lt;xref:System.Int32&gt;.to a &lt;xref:System.String&gt;.</summary>
        <returns>The &lt;xref:System.String&gt; "infinite" if the <paramref name="value" /> is &lt;xref:System.Int32.MaxValue&gt;; otherwise, the &lt;xref:System.String&gt; representing the <paramref name="value" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The system uses the ConvertTo method when writing to a configuration file to convert an <xref:System.Int32> to a <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>