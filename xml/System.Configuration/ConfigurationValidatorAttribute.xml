<Type Name="ConfigurationValidatorAttribute" FullName="System.Configuration.ConfigurationValidatorAttribute">
  <TypeSignature Language="C#" Value="public class ConfigurationValidatorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationValidatorAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serves as the base class for the <see cref="N:System.Configuration" /> validator attribute types.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All the ASP.NET configuration standard validator attribute types derive from ConfigurationValidatorAttribute. You can use this type to create your own custom validator attribute.  
  
   
  
## Examples  
 The following code examples demonstrate how to create two custom validators using the ConfigurationValidatorAttribute type. The first example performs validation using hard-coded parameters; the second example performs validation using the parameters assigned to it at the time it is applied to the related section property. This code example also contains three supporting files. The first file contains the custom section that uses the validators described above, the second file contains a custom converter type, and the third file contains the console application that builds and uses the custom validators and the section that contains them.  
  
 The following code example shows how to create a fixed validator with hard-coded parameters.  
  
 [!code-cs[System.Configuration.ConfigValidatorAttribute#21](~/add/codesnippet/csharp/t-system.configuration.c_11_1.cs)]
 [!code-vb[System.Configuration.ConfigValidatorAttribute#21](~/add/codesnippet/visualbasic/t-system.configuration.c_11_1.vb)]  
  
 The following code example shows how to create a programmable validator.  
  
 [!code-cs[System.Configuration.ConfigValidatorAttribute#31](~/add/codesnippet/csharp/t-system.configuration.c_11_2.cs)]
 [!code-vb[System.Configuration.ConfigValidatorAttribute#31](~/add/codesnippet/visualbasic/t-system.configuration.c_11_2.vb)]  
  
 The following code example shows how to create a custom section using the previous validators.  
  
 [!code-cs[System.Configuration.ConfigValidatorAttribute#11](~/add/codesnippet/csharp/t-system.configuration.c_11_3.cs)]
 [!code-vb[System.Configuration.ConfigValidatorAttribute#11](~/add/codesnippet/visualbasic/t-system.configuration.c_11_3.vb)]  
  
 The following code example shows how to create a custom converter.  
  
 [!code-cs[System.Configuration.ConfigValidatorAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_11_4.cs)]
 [!code-vb[System.Configuration.ConfigValidatorAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_11_4.vb)]  
  
 The following code example shows how to create the console application that builds and uses the custom validators and their containing section.  
  
 [!code-cs[System.Configuration.ConfigValidatorAttribute#41](~/add/codesnippet/csharp/t-system.configuration.c_11_5.cs)]
 [!code-vb[System.Configuration.ConfigValidatorAttribute#41](~/add/codesnippet/visualbasic/t-system.configuration.c_11_5.vb)]  
  
 The following code example is a configuration excerpt used by the previous example.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
    <configSections>  
        <section name="Cars" type="Samples.AspNet.SelectCar, ConfigValidatorAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowLocation="false" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" requirePermission="true" />  
    </configSections>  
    <Cars commute="Make:AlfaRomeo Color:Blue Miles:10000 Year:2002"  
        dream="Make:Ferrari Color:Red Miles:10 Year:2005" />  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationValidatorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use this constructor in the attributed model to ensure that the value assigned to the related property is an integer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationValidatorAttribute (Type validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type validator) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="validator">The validator type to use when creating an instance of <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> class using the specified validator type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor determines whether a validator instance can be created from an instance of the specified `validator` type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="validator" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="validator" /> is not derived from <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the validator attribute instance.</summary>
        <value>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidatorType">
      <MemberSignature Language="C#" Value="public Type ValidatorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the validator attribute.</summary>
        <value>The &lt;xref:System.Type&gt; of the current validator attribute instance.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>