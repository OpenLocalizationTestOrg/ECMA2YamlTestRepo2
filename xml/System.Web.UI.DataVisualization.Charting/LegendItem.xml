<Type Name="LegendItem" FullName="System.Web.UI.DataVisualization.Charting.LegendItem">
  <TypeSignature Language="C#" Value="public class LegendItem : System.Web.UI.DataVisualization.Charting.ChartNamedElement, System.Web.UI.DataVisualization.Charting.IChartMapArea" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LegendItem extends System.Web.UI.DataVisualization.Charting.ChartNamedElement implements class System.Web.UI.DataVisualization.Charting.IChartMapArea" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.DataVisualization.Charting.IChartMapArea</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a legend item, which is stored in the <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> class.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LegendItem class represents a legend item, which can be either a default or custom item:  
  
-   Default legend items are automatically inserted into the legend for either data series or data points. Default entries for pie and doughnut charts represent the plotted data points, whereas entries for all other chart types represent the plotted series. By default, these legend entries use the data point or series color for the symbol color, and the name of the series or data point for the legend item text. Default legend items can be customized or deleted at run time by using the <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> event of the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.  
  
-   Custom legend items have user-defined text, symbol color, and so forth. Unlike the default entries, they are not connected with the plotted data. Custom legend items can be added at either design time or run time, using the <xref:System.Web.UI.DataVisualization.Charting.Legend.CustomItems%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Legend> object.  
  
 Legend symbols can be rectangles, lines or markers, depending on the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.ImageStyle%2A> property setting of a LegendItem object.  
  
 The text of a custom legend item is determined by the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.Name%2A> property.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LegendItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItem" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.LegendItem> class.  
  
 Note that you can also add custom legend items using the `Add` and `Insert` methods associated with the <xref:System.Web.UI.DataVisualization.Charting.Legend.CustomItems%2A> collection property of the <xref:System.Web.UI.DataVisualization.Charting.Legend> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LegendItem (string name, System.Drawing.Color color, string image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Drawing.Color color, string image) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="image" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the legend item.</param>
        <param name="color">The color of the legend item.</param>
        <param name="image">The path of the image to be displayed for the legend item.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItem" /> class with the specified name, color and image path.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Only the `image` or `color` parameter needs to be specified. If both are specified, the `image` parameter has precedence.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the orientation for the background gradient of a legend item. Also determines whether a gradient is used.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration. The default value is <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the BackGradientStyle property to determine whether a title will display a gradient, and to determine the orientation of the gradient if one is used.  
  
 This property is only implemented if the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.ImageStyle%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.LegendImageStyle>.  
  
 For a listing of available patterns, refer to the <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> enumeration.  
  
 To use gradient colors:  
  
-   Use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.Color%2A> property to set the primary color.  
  
-   Use the BackGradientStyle property to set the secondary color.  
  
-   Use this BackGradientStyle property to set the desired gradient style.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the hatching style of a legend item.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> enumeration. The default value is <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> enumeration specifies the hatch pattern used by a brush of type <xref:System.Drawing.Drawing2D.HatchBrush>. The hatch pattern consists of a solid background color and lines drawn over the background.  
  
 For a listing of available hatching styles, refer to the <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> enumeration.  
  
> [!NOTE]
>  The color of hatching lines is determined by the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.BackSecondaryColor%2A> property.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a color which will be replaced with a transparent color when the background image is drawn.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value that will be displayed as transparent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the secondary color of a legend item.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value used for the secondary color of background with hatching or gradient fill. The default value is <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The BackSecondaryColor property is one of several related properties that determine the secondary background color of many <xref:System.Web.UI.DataVisualization.Charting.Chart> objects; it is used when gradient colors are being applied.  
  
 This property is only implemented if the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.ImageStyle%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.LegendImageStyle>.  
  
 You can set BackSecondaryColor to any valid ARGB (alpha, red, green, blue) value.  
  
 If hatching is used, the BackSecondaryColor property determines the color of the hatching lines for the legend item.  
  
 To use gradient colors for a legend cell's background:  
  
 To use gradient colors:  
  
-   Use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.Color%2A> property to set the primary color.  
  
-   Use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.BackGradientStyle%2A> property to set the secondary color.  
  
-   Use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.BackGradientStyle%2A> property to set the desired gradient style.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the border color of a legend item.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value. The default color is <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can set this property to any valid ARGB (alpha, red, green, blue) value.  
  
> [!NOTE]
>  If you use a marker for a custom legend item. this property will set the border color of the marker. However, if the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerBorderColor%2A> property is also set, its value has precedence.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the border style of a legend item.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border style of the legend item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property determines the line style used for a border. The line can be solid, dotted, and so forth.  
  
 For other border styles, see the <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> enumeration topic.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the border width of a legend item.</summary>
        <value>An<see langword=" integer" /> value that determines the width, in pixels, of the legend item border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The BorderWidth property can also be used to set the width of lines when, for example, custom legend items are displayed with a <xref:System.Web.UI.DataVisualization.Charting.LegendImageStyle> style.  
  
 **Note** This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCellCollection Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCellCollection Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCellCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of cells in the legend item.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellCollection" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A legend item consists of one or more legend cells, each represented by a <xref:System.Web.UI.DataVisualization.Charting.LegendCell> object and stored in a <xref:System.Web.UI.DataVisualization.Charting.LegendCellCollection>.  
  
> [!NOTE]
>  This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of a legend item.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value. The default color is <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This Color property is one several related properties that get or set the color of many chart elements; it can be set to any ARGB (alpha, red, green, blue) value.  
  
 If this property is set for both a data point and its series, the data point color will have precedence. The series color will only be used for data points that do not define their own color.  
  
 If a custom legend item uses a marker, this property will determine the marker color. However, if the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerColor%2A> property is set, its value then has precedence.  
  
 This property will be ignored if the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.Image%2A> property specifies an image to be used for the legend item symbol.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItem" /> class and optionally releases the managed resources.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a flag that indicates whether the legend item is enabled.</summary>
        <value>
          <see langword="true" /> if the legend item is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public string Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the image that will be displayed for a legend item symbol.</summary>
        <value>A <see langword="string" /> value that represents the URL of an image file. The default value is an empty string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property determines the image file to be used for the <xref:System.Web.UI.DataVisualization.Charting.LegendItem> symbol.  
  
 The path can be an absolute or a relative URL.  
  
 If you set a background image, that image will be displayed regardless of the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.ImageStyle%2A> property setting.  
  
 Set the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.BackImageTransparentColor%2A> property to enable one color used by the image to appear transparent.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImageStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendImageStyle ImageStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendImageStyle ImageStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendImageStyle), "Rectangle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendImageStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the display style of the legend item image.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendImageStyle" /> enumeration value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 These styles determine how the item's corresponding symbol will be displayed.  
  
 A <xref:System.Web.UI.DataVisualization.Charting.LegendImageStyle> style can be combined with a <xref:System.Web.UI.DataVisualization.Charting.LegendImageStyle> style. To accomplish this, first set the ImageStyle property to <xref:System.Web.UI.DataVisualization.Charting.LegendImageStyle>. Then use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerImage%2A> property to specify a marker image, or the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerStyle%2A> property to specify a marker style. The resulting symbol will be a combination of a line and an image or marker.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Legend Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> object associated with this legend item.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> object.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MapAreaAttributes">
      <MemberSignature Language="C#" Value="public string MapAreaAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MapAreaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the map area attributes of a legend item.</summary>
        <value>A <see langword="string" /> value that represents the attributes of corresponding map area for the legend item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set the MapAreaAttributes property, a client-side image map will automatically be created. A map area will also be created, with its attribute string appended to the \<map> tag that corresponds to the chart object for which this property is being set.  
  
 For example, setting the Target attribute using this property and the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.Url%2A> property of the first data point will result in HTML code that is similar to the following code:  
  
 \<img id="Chart1" usemap="#Chart1ImageMap" src="ChartPic_000002.jpg?6735e83b-f0cd-4225-8be4-047695a61040" border="0" />...\<map name="Chart1ImageMap">\<area shape="rect" href="http://www.SomeDomain.ca" COORDS="69,120,106,309" target\=_blank>\</map>  
  
 Because the entire string is appended to the \<map> tag, multiple attributes should be separated with a space.  
  
 The MapAreaAttributes property can be used in conjunction with the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.Url%2A> property to specify map area attributes, for example, target= _blank, as well as client-side event handlers, for example, OnClick="MyEvent()".  
  
 Setting this property will have no effect if the <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> property is set to `false`. Its default value is `true`.  
  
 **Important** To create an image map in this manner, the <xref:System.Web.UI.DataVisualization.Charting.Chart.RenderType%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> object must be set to <xref:System.Web.UI.DataVisualization.Charting.RenderType>. It is possible to create an image map when using binary streaming, but another technique must be used. For more information, see [Chart Image Rendering](~/add/includes/ajax-current-ext-md.md).  
  
 Special keywords may be used when setting this property; each keyword will be replaced with some type of data from the applicable chart element. Refer to the following table for a listing of all available keywords:  
  
|Keyword|Replaced by|  
|-------------|-----------------|  
|#VALX|X-value of the data point.|  
|#VAL, #VALY, #VALY2, #VALY3…|Y-values of the data point.|  
|#SER|Series name.|  
|#LABEL|Data point label.|  
|#INDEX|Data point index.|  
|#PERCENT|Percentage of the data point Y-value.|  
|#TOTAL|Total of all Y-values in the series.|  
|#LEGENDTEXT|Legend text.|  
  
 To create image maps that have user-defined coordinates, use the <xref:System.Web.UI.DataVisualization.Charting.Chart.MapAreas%2A> property of the root <xref:System.Web.UI.DataVisualization.Charting.Chart> object. For more information, see [Chart Image Rendering](../Topic/Chart%20Image%20Rendering.md).  
  
> [!NOTE]
>  This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerBorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color MarkerBorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color MarkerBorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the border color of the markers, if used.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value that represents the ARGB (alpha, red, green, blue) color of a marker border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To use markers, set the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerStyle%2A> property to a value other than <xref:System.Web.UI.DataVisualization.Charting.MarkerStyle>.  
  
 Note that markers will not be applied to pie, doughnut, and any stacked chart types.  
  
 For custom legends, the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.BorderColor%2A> property will also set the border color of markers. The MarkerBorderColor property setting has precedence over the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.BorderColor%2A> property setting.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerBorderWidth">
      <MemberSignature Language="C#" Value="public int MarkerBorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the border width of the markers, if used. Measured in pixels.</summary>
        <value>An <see langword="integer" /> value. The default value is one (1) pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color MarkerColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color MarkerColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the markers, if used.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value. The default color is <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerImage">
      <MemberSignature Language="C#" Value="public string MarkerImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkerImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a marker image.</summary>
        <value>A <see langword="string" /> value that represents the URL of an image file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Represents a path to an image file, which can be an absolute or relative URL.  
  
 To use markers, set the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerStyle%2A> property to a value other than <xref:System.Web.UI.DataVisualization.Charting.MarkerStyle>.  
  
 The  MarkerImage property takes precedence over the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerColor%2A> property.  
  
 A marker image can be any valid graphics file supported by .NET Framework, including icons.  
  
 To set one color of the marker image to be transparent, use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerImageTransparentColor%2A> property.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color MarkerImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color MarkerImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a color that will be replaced with a transparent color when the marker image is drawn.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value that represents an ARGB (alpha, red, green, blue) color.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MarkerImageTransparentColor property is used to select one color in a marker image that will be displayed as transparent.  
  
 You can set this property to any valid ARGB (alpha, red, green, blue) value.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size of the legend item markers, if used.</summary>
        <value>An <see langword="integer" /> expression that represents the height and width of the plotting area of markers, in pixels. The default value is 5 pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To use markers, set the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MarkerStyle%2A> property to a value other than <xref:System.Web.UI.DataVisualization.Charting.MarkerStyle>.  
  
 Note that markers will not be applied to data points of pie, doughnut and any stacked chart types.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.MarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.MarkerStyle MarkerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.MarkerStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.MarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a legend item marker style. Also used to enable or disable the display of markers.</summary>
        <value>A MarkerStyle integer enumeration. The default value is <see cref="T:System.Web.UI.DataVisualization.Charting.MarkerStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To disable markers, set this property to <xref:System.Web.UI.DataVisualization.Charting.MarkerStyle>.  
  
> [!NOTE]
>  This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the legend item.</summary>
        <value>A <see langword="string" /> value that represents the name of the legend item.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PostBackValue">
      <MemberSignature Language="C#" Value="public string PostBackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the postback value which can be processed on a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</summary>
        <value>A <see langword="string" /> value that represents the postback value passed to a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the legend item separator.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value used to draw the color of the legend item separator. The default value is &lt;xref:System.Drawing.Color.Black%2A&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SeparatorType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle SeparatorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle SeparatorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the separator style of the legend item.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> enumeration value.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SeriesName">
      <MemberSignature Language="C#" Value="public string SeriesName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeriesName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> associated with a default legend item.</summary>
        <value>A <see langword="string" /> value that determines the name of the series associated with a default legend item. The default value is a zero-length string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should only be used in the <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> event, to determine which data series a default legend entry represents.  
  
 The SeriesName property applies to all charts except pie and sphere charts; their default legend items correspond to plotted data points, and not to plotted series. When you deal with pie and sphere charts, use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.SeriesPointIndex%2A> property instead.  
  
 This property should not be set by the developer.  
  
> [!NOTE]
>  This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SeriesPointIndex">
      <MemberSignature Language="C#" Value="public int SeriesPointIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SeriesPointIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the index of a <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object associated with a default legend item.</summary>
        <value>An <see langword="integer" /> value that represents the location of the default legend's associated data point in a zero-based index. All chart types except for pie and doughnut charts will return a negative one (-1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should only be used in the <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> event to determine the <xref:System.Web.UI.DataVisualization.Charting.DataPoint> object that is represented by a default pie or sphere chart legend entry.  
  
 Chart types other than pie or sphere charts will return a negative one (-1), because the default legend items correspond to plotted series, and not plotted data points. Use the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.SeriesName%2A> property for these chart types.  
  
 This property should not be set by the developer.  
  
> [!NOTE]
>  This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the shadow color of a legend item.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> value. The default color is &lt;xref:System.Drawing.Color.Black%2A&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gets or sets the shadow color of several chart elements, and can be set to any valid ARGB (alpha, red, green, blue) value.  
  
 The alpha value can be used to achieve a "realistic" shadowing effect; try using a color of "128,0,0,0" for shadows.  
  
 To implement a shadow, set the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.ShadowOffset%2A> property to a value other than zero (0).  
  
 **Note** This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the shadow offset, in pixels, of a legend item.</summary>
        <value>An <see langword="integer" /> value that represents the shadow offset, in pixels, of the relevant chart element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To implement shadowing, use a value other than zero (0). A positive value will result in a shadow that shifts down and to the right. A negative value will result in a shadow that shifts up and to the left.  
  
 **Note** This property is applicable only to <xref:System.Web.UI.DataVisualization.Charting.LegendCell> objects with a <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> of either <xref:System.Web.UI.DataVisualization.Charting.LegendCellType> or <xref:System.Web.UI.DataVisualization.Charting.LegendCellType>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the tooltip of the legend item.</summary>
        <value>A <see langword="string" /> value that represents the tooltip for the legend item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set the ToolTip property, a client-side image map will automatically be created. A map area will also be created with its `Title` attribute set to the specified tooltip string. The map area will use the dimensions that correspond to the title. For example, if the ToolTip property is set for a data point, then HTML code similar to the following will be generated at run time:  
  
 \<MAP NAME="Chart1ImageMap">\<AREA SHAPE="rect" Title="First Data Value = 19" COORDS="69,120,106,309">\</MAP>  
  
 Setting this property will have no effect if the <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> property is set to `false`. The default value is `true`.  
  
 **Important** To create an image map in this manner, the <xref:System.Web.UI.DataVisualization.Charting.Chart.RenderType%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> object must be set to <xref:System.Web.UI.DataVisualization.Charting.RenderType>. It is possible to create an image map when using binary streaming, but another technique must be used. For more information, see [Chart Image Rendering](~/add/includes/ajax-current-ext-md.md).  
  
 This property allows you to set special keywords to display different types of chart-related data. For more information, see [Keywords](~/add/includes/ajax-current-ext-md.md).  
  
 To create image maps that have user-defined coordinates, use the <xref:System.Web.UI.DataVisualization.Charting.Chart.MapAreas%2A> property of the root <xref:System.Web.UI.DataVisualization.Charting.Chart> object.  
  
> [!NOTE]
>  This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the destination URL of a legend item.</summary>
        <value>A <see langword="string" /> value that represents the destination URL of a legend item. To use an absolute URL, start the string expression with either "http://" or "www.". If the string does not start with either of these prefixes it will be treated as a relative URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set this property, a client-side image map will be automatically created. A map area will also be created with its HREF attribute set to the specified anchor or URL. This map area will also use the dimensions that correspond to the relevant chart element. For example, if the Url property is set for a data point, then HTML code similar to the following will be generated at run time:  
  
 \<img id="Chart1" USEMAP="#Chart1ImageMap" src="ChartPic_000002.jpg?6735e83b-f0cd-4225-8be4-047695a61040" border="0" />...\<MAP NAME="Chart1ImageMap">\<AREA SHAPE="rect" HREF="http://www.healthquotes.ca" COORDS= "69,120,106,309">\</MAP>  
  
 Setting this property will have no effect if the <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> property is set to `false`. The default value is `true`.  
  
 **Important** To create an image map in this manner, the <xref:System.Web.UI.DataVisualization.Charting.Chart.RenderType%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> object must be set to <xref:System.Web.UI.DataVisualization.Charting.RenderType>. It is possible to create an image map when using binary streaming, but another technique must be used.  
  
 Attributes of the map area(s), for example, TARGET=_Blank, can be specified by using the <xref:System.Web.UI.DataVisualization.Charting.LegendItem.MapAreaAttributes%2A> property.  
  
 The Url property allows you to set special keywords to display different types of chart-related data. For more information, see Keywords (Chart Controls).  
  
 To create image maps that have user-defined coordinates, use the <xref:System.Web.UI.DataVisualization.Charting.Chart.MapAreas%2A> property of the root <xref:System.Web.UI.DataVisualization.Charting.Chart> object. For more information, see [Chart Image Rendering](~/add/includes/ajax-current-ext-md.md).  
  
> [!NOTE]
>  This property is applicable to the entire <xref:System.Web.UI.DataVisualization.Charting.LegendItem>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>