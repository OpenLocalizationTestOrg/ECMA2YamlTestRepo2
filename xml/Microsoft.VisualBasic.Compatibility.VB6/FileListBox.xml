<Type Name="FileListBox" FullName="Microsoft.VisualBasic.Compatibility.VB6.FileListBox">
  <TypeSignature Language="C#" Value="public class FileListBox : System.Windows.Forms.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FileListBox extends System.Windows.Forms.ListBox" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(Microsoft.VisualBasic.Compatibility.VB6.CompatibilityListBoxDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Locates and lists files in the directory specified by the &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path%2A&gt; property at run time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this control to display a list of files selected by file type. You can create dialog boxes in your application that, for example, enable the user to select a file or group of files.  
  
 If you also display the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> and <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> controls, you can write code to synchronize them with the `FileListBox` control and with each other.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `FileListBox` displays a list of files in a given directory at run time.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Archive">
      <MemberSignature Language="C#" Value="public bool Archive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have <see langword="Archive" /> attributes.</summary>
        <value>
          <see langword="true" /> if files that have the <see langword="Archive" /> attribute will be displayed; otherwise <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to specify the type of files to display in a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control, based on standard `Archive` file attribute used in the operating environment. Setting this property in code at run time resets the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control to display only those files that have the specified attribute.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
        <value>An object that implements the &lt;xref:System.Collections.IList&gt; or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a &lt;xref:System.Array&gt;. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</summary>
        <value>A <see langword="String" /> that represents the name of an object property that is contained in the collection specified by the &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource%2A&gt; property. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the file name of the selected file in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</summary>
        <value>A <see langword="String" /> that contains the file name of the selected file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setting the `FileName` property at run time will result in only that file being displayed in the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox>.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public bool Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have <see langword="Hidden" /> attributes.</summary>
        <value>
          <see langword="true" /> if files that have the <see langword="Hidden" /> attribute will be displayed; otherwise <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to specify the type of files to display in a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control, based on standard `Hidden` file attribute used in the operating environment. Setting this property in code at run time resets the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control to display only those files that have the specified attribute.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <value>This property is not required for the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control; the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> does not support items of variable height. It is provided only because the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control inherits from <see cref="T:System.Windows.Forms.ListBox" />.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/ObjectCollection Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <value>A &lt;xref:System.Windows.Forms.ListBox.ObjectCollection&gt; representing the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should not be used for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; trying to add or remove directories from the collection could cause an exception. It is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public string Items[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Items(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">An <see langword="Integer" /> representing the index of the item.</param>
        <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <value>A &lt;xref:System.Windows.Forms.ListBox.ObjectCollection&gt; that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should not be used for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; trying to add or remove directories from the collection could cause an exception. It is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="public bool Normal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Normal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have <see langword="Normal" /> attributes.</summary>
        <value>
          <see langword="true" /> if files that have the <see langword="Normal" /> attribute will be displayed; otherwise <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to specify the type of files to display in a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control, based on standard `Normal` file attribute used in the operating environment. Setting this property at run time resets the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control to display only those files that have the specified attribute.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The `OnDoubleClick` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPathChange">
      <MemberSignature Language="C#" Value="protected virtual void OnPathChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnPathChange(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The `OnPathChange` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPatternChange">
      <MemberSignature Language="C#" Value="protected virtual void OnPatternChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnPatternChange(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PatternChange" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The `OnPatternChange` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The `OnSelectedIndexChanged` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current path for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</summary>
        <value>A <see langword="String" /> that contains the current path, not including the file name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of the `Path` property is a string indicating a path, such as C:\Ob or C:\Windows\System. For a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control, the default is the current path when the control is created at run time.  
  
 Use this property when you are building an application's file-browsing and manipulation capabilities. Setting the `Path` property has effects similar to the MS-DOS `chdir` command; relative paths are allowed with or without a drive specification. Specifying only a drive with a colon (:) selects the current directory on that drive.  
  
 The `Path` property can also be set to a qualified network path without a drive connection using the following syntax:  
  
```  
\\servername\sharename\path  
```  
  
 Changing the value of `Path` for a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control generates an <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange> event.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PathChange">
      <MemberSignature Language="C#" Value="public event EventHandler PathChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PathChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the path is changed by setting the &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName%2A&gt; or &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path%2A&gt; property in code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use a `PathChange` event procedure to respond to path changes in a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control. When you assign a string that contains a new path to the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName%2A> property, the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control invokes the `PathChange` event.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the file names displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control at run time.</summary>
        <value>A string expression indicating a file specification, such as "*.\*" or "\*.FRM". The default is "\*.\*", which returns a list of all files.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `Pattern` property plays a key role in designing an application's file-browsing and manipulation capabilities. Use `Pattern` in combination with other file-control properties to give the user ways to explore files or groups of similar files. For example, in an application dedicated to starting other programs, you could designate that only .exe files be displayed in the file list box (*.exe).  
  
 In addition to using wildcard characters, you can also use multiple patterns separated by semicolons (;). For example, "*.exe; \*.bat" would return a list of all executable files and all MS-DOS batch files.  
  
 Changing the value of the `Pattern` property generates a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PatternChange> event.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PatternChange">
      <MemberSignature Language="C#" Value="public event EventHandler PatternChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PatternChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the file listing pattern, such as "*.\*", is changed by setting the &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName%2A&gt; or &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern%2A&gt; property in code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use a `PatternChange` event procedure to respond to pattern changes in a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control. When you assign a string that contains a new pattern to the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName%2A> property, the FileListBox invokes the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange> event.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control contains files that have read-only attributes.</summary>
        <value>
          <see langword="true" /> if files that have the <see langword="ReadOnly" /> attribute will be displayed; otherwise <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the `ReadOnly` property for a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control to specify whether files that have read-only attributes are displayed in the file list or not.  
  
> [!NOTE]
>  If the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Normal%2A> property is set to `true` (the default), files that have read-only attributes are displayed regardless of the `ReadOnly` property setting.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> are sorted alphabetically.</summary>
        <value>
          <see langword="true" /> if items in the control are sorted; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control, `Sorted` always returns `false`.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System">
      <MemberSignature Language="C#" Value="public bool System { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have <see langword="System" /> attributes.</summary>
        <value>
          <see langword="true" /> if files that have the <see langword="System" /> attribute will be displayed; otherwise <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to specify the type of files to display in a <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control, based on standard `System` file attribute used in the operating environment. Setting this property at run time resets the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control to display only those files that have the specified attribute.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
        <value>A <see langword="String" /> representing the name of an object property that is contained in the collection specified by the &lt;xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource%2A&gt; property. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  
  
 [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>