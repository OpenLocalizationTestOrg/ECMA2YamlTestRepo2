<Type Name="HttpModuleActionCollection" FullName="System.Web.Configuration.HttpModuleActionCollection">
  <TypeSignature Language="C#" Value="public sealed class HttpModuleActionCollection : System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpModuleActionCollection extends System.Configuration.ConfigurationElementCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElementCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.Web.Configuration.HttpModuleAction))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Web.Configuration.HttpModuleAction" /> objects. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HttpModuleActionCollection collection allows access to the <xref:System.Web.Configuration.HttpModuleAction> elements of the <xref:System.Web.Configuration.HttpModulesSection> section.  
  
   
  
## Examples  
 The following example shows how to use the HttpModuleActionCollection class.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_71_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#1](~/add/codesnippet/csharp/t-system.web.configurati_71_1.cs)]  
  
 The following example is an excerpt of the configuration file that enables ASP.NET to use a custom module. For a complete example of how to build and configure an HTTP module, see the [NIB: How to: Create and Configure an HTTP Module](http://msdn.microsoft.com/en-us/4174fd13-a9c4-4ff6-baa5-3f7d7fc73ef3).  
  
```  
<httpModules>  
  <add name="TimerModule"   
    type="Samples.AspNet.RequestTimeInterval, RequestTimeInterval Version=1.0.1557.23158, Culture=neutral,  
    PublicKeyToken=7bfb33146a87b52e, processorArchitecture=MSIL"/>  
</httpModules>  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpModuleActionCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpModuleActionCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a non-initialized instance of the <xref:System.Web.Configuration.HttpModuleActionCollection> object.  
  
   
  
## Examples  
 The following example shows how to create an <xref:System.Web.Configuration.HttpModuleActionCollection> object.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#2](~/add/codesnippet/visualbasic/m-system.web.configurati_35_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#2](~/add/codesnippet/csharp/m-system.web.configurati_35_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.Configuration.HttpModuleAction httpModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.Configuration.HttpModuleAction httpModule) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpModule" Type="System.Web.Configuration.HttpModuleAction" />
      </Parameters>
      <Docs>
        <param name="httpModule">The <see cref="T:System.Web.Configuration.HttpModuleAction" /> module to add to the collection.</param>
        <summary>Adds an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adds an <xref:System.Web.Configuration.HttpModuleAction> object to the collection.  
  
   
  
## Examples  
 The following example shows how to create an <xref:System.Web.Configuration.HttpModuleAction> object and add it to the collection.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#3](~/add/codesnippet/visualbasic/cf12bb1f-ee6a-48b7-bd2b-_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#3](~/add/codesnippet/csharp/cf12bb1f-ee6a-48b7-bd2b-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">An attempt was made to add an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object that already exists in the collection.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all <see cref="T:System.Web.Configuration.HttpModuleAction" /> objects from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `clear` directive into the appropriate section of the configuration file to clear all references to elements defined in a higher-level configuration file. All elements defined in the appropriate section of the current configuration file are removed.  
  
   
  
## Examples  
 The following example shows how to clear the <xref:System.Web.Configuration.HttpModuleAction> modules contained in the collection.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#8](~/add/codesnippet/visualbasic/m-system.web.configurati_16_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#8](~/add/codesnippet/csharp/m-system.web.configurati_16_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.Configuration.HttpModuleAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.Configuration.HttpModuleAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Web.Configuration.HttpModuleAction" />
      </Parameters>
      <Docs>
        <param name="action">The <see cref="T:System.Web.Configuration.HttpModuleAction" /> module for which to get the collection index.</param>
        <summary>Gets the collection index of the specified <see cref="T:System.Web.Configuration.HttpModuleAction" /> module.</summary>
        <returns>The collection index value for the specified module.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Before using this method, you must identify an <xref:System.Web.Configuration.HttpModuleAction> module with the proper name and type. You can then use this module object to get its collection index.  
  
   
  
## Examples  
 The following example shows how to obtain an <xref:System.Web.Configuration.HttpModuleAction> module collection index.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#4](~/add/codesnippet/visualbasic/af38de29-879a-4b70-8e4c-_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#4](~/add/codesnippet/csharp/af38de29-879a-4b70-8e4c-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsElementRemovable">
      <MemberSignature Language="C#" Value="protected override bool IsElementRemovable (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.HttpModuleAction this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.HttpModuleAction Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpModuleAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Module collection index.</param>
        <summary>Gets or sets an item in this collection.</summary>
        <value>The item at the specified <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is intended for internal use only.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The key that identifies the <see cref="T:System.Web.Configuration.HttpModuleAction" /> object to remove from the collection.</param>
        <summary>Removes an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `<remove>` element into the appropriate section of the configuration file for any element defined in a higher-level configuration file. If the element is defined in the appropriate section of the current configuration file, its entry is removed from the configuration file. The object to remove must exist in the collection.  
  
   
  
## Examples  
 The following example shows how to remove an <xref:System.Web.Configuration.HttpModuleAction> module from the collection.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#6](~/add/codesnippet/visualbasic/m-system.web.configurati_8_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#6](~/add/codesnippet/csharp/m-system.web.configurati_8_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.HttpModuleAction" /> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.Configuration.HttpModuleAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.Configuration.HttpModuleAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Web.Configuration.HttpModuleAction" />
      </Parameters>
      <Docs>
        <param name="action">The <see cref="T:System.Web.Configuration.HttpModuleAction" /> module to remove.</param>
        <summary>Removes an <see cref="T:System.Web.Configuration.HttpModuleAction" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `<remove>` element into the appropriate section of the configuration file for any element defined in a higher-level configuration file. If the element is defined in the appropriate section of the current configuration file, its entry is removed from the configuration file. The object to remove must exist in the collection.  
  
   
  
## Examples  
 The following example shows how to remove an <xref:System.Web.Configuration.HttpModuleAction> module from the collection.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#5](~/add/codesnippet/visualbasic/da47cdce-437d-423e-8ba9-_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#5](~/add/codesnippet/csharp/da47cdce-437d-423e-8ba9-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">The passed <see cref="T:System.Web.Configuration.HttpModuleAction" /> object does not exist in the collection, the element has already been removed, or the collection is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the <see cref="T:System.Web.Configuration.HttpModuleAction" /> module to remove.</param>
        <summary>Removes an <see cref="T:System.Web.Configuration.HttpModuleAction" /> module at the specified index from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `<remove>` element into the appropriate section of the configuration file for any element defined in a higher-level configuration file. If the element is defined in the appropriate section of the current configuration file, its entry is removed from the configuration file. The object to remove must exist in the collection.  
  
   
  
## Examples  
 The following example shows how to remove an <xref:System.Web.Configuration.HttpModuleAction> module from the collection.  
  
 [!code-vb[System.Web.Configuration.HttpModuleActionCollection#7](~/add/codesnippet/visualbasic/m-system.web.configurati_18_1.vb)]
 [!code-cs[System.Web.Configuration.HttpModuleActionCollection#7](~/add/codesnippet/csharp/m-system.web.configurati_18_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.HttpModuleAction" /> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>