<Type Name="FormsAuthenticationUser" FullName="System.Web.Configuration.FormsAuthenticationUser">
  <TypeSignature Language="C#" Value="public sealed class FormsAuthenticationUser : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormsAuthenticationUser extends System.Configuration.ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configures the user's credentials for Web applications that use forms-based authentication.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The FormsAuthenticationUser class provides a way to programmatically access and modify the  section of a configuration file.  
  
 This type is part of a group that includes the <xref:System.Web.Configuration.FormsAuthenticationCredentials>, the <xref:System.Web.Configuration.FormsAuthenticationUserCollection>, and the <xref:System.Web.Configuration.FormsAuthenticationConfiguration> types. The types other than the collection type directly affect the underlying configuration tags.  
  
> [!NOTE]
>  The FormsAuthenticationUser can write information into the related section of the configuration file at machine, site, or application level only. Any attempt to write in a configuration file at a different level in the hierarchy will result in an error message generated by the parser. However, you can use this class to read configuration information at any level in the hierarchy. For safety and scalability, it is recommended that you use an external repository, such as a database, to keep the users' credentials.  
  
   
  
## Examples  
 The following code example shows how to obtain the <xref:System.Web.Configuration.FormsAuthenticationUserCollection> to access the FormsAuthenticationUser objects of an existing Web application. The configuration file will contain a setup similar to the following.  
  
> [!NOTE]
>  If you use the [credentials Element for forms for authentication (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e5a001f8-fdbe-4c88-80ca-bfe36df23479) section, be sure to follow the guidelines explained at [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md). For scalability and better security, it is recommended you use an external database to store the users' credentials. For more information about building secure ASP.NET applications, search the Microsoft MSDN Web site (msdn.microsoft.com) for "Securing Your ASP.NET Application" and "Building Secure ASP.NET Applications: Authentication, Authorization, and Secure Communication."  
  
```  
<authentication mode="Forms">  
  <forms name="MyAppCookieName" loginUrl="/login.aspx">  
    defaultUrl="formsdefault.aspx"  
    protection="Encryption" timeout="5" path="aspnet"  
    slidingExpiration="false"  
    cookieless="UseCookies" domain="domainName">  
    <credentials passwordFormat="SHA1">  
      <user name="aspnetuser1"  
        password="5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8"/>  
       <user name="aspnetuser2"  
         password="E38AD214943DAAD1D64C102FAEC29DE4AFE9DA3D"/>  
    </credentials>            
  </forms>  
</authentication>  
```  
  
 [!code-cs[System.Web.Configuration.FormsAuthenticationUser#1](~/add/codesnippet/csharp/t-system.web.configurati_51_1.cs)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser#1](~/add/codesnippet/visualbasic/t-system.web.configurati_51_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationUser (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">User's name.</param>
        <param name="password">User's password.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> class using the passed parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a <xref:System.Web.Configuration.FormsAuthenticationUser> object using the passed parameters.  
  
   
  
## Examples  
 The following code example shows how to create a <xref:System.Web.Configuration.FormsAuthenticationUser> object.  
  
 [!code-cs[System.Web.Configuration.FormsAuthenticationUser#3](~/add/codesnippet/csharp/ba248448-bbbd-40de-aba6-_1.cs)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser#3](~/add/codesnippet/visualbasic/ba248448-bbbd-40de-aba6-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.LowerCaseStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the logon user name.</summary>
        <value>The logon user name required by the application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Name property. Refer to the code example in the <xref:System.Web.Configuration.FormsAuthenticationUser> class topic to learn how to get the section.  
  
 [!code-cs[System.Web.Configuration.FormsAuthenticationUser#5](~/add/codesnippet/csharp/p-system.web.configurati_336_1.cs)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser#5](~/add/codesnippet/visualbasic/p-system.web.configurati_336_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("password", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user's password.</summary>
        <value>The user's password required by the application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Password property. Refer to the code example in the <xref:System.Web.Configuration.FormsAuthenticationUser> class topic to learn how to get the section.  
  
 [!code-cs[System.Web.Configuration.FormsAuthenticationUser#4](~/add/codesnippet/csharp/p-system.web.configurati_127_1.cs)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser#4](~/add/codesnippet/visualbasic/p-system.web.configurati_127_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>