<Type Name="HttpModulesSection" FullName="System.Web.Configuration.HttpModulesSection">
  <TypeSignature Language="C#" Value="public sealed class HttpModulesSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpModulesSection extends System.Configuration.ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configures an HTTP module for a Web application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HttpModulesSection class provides a way to programmatically access and modify the `httpModules` section of a configuration file.  
  
 This type is part of a group that includes the <xref:System.Web.Configuration.HttpModuleAction> and the <xref:System.Web.Configuration.HttpModuleActionCollection> types.  
  
> [!NOTE]
>  The HttpModulesSection can read and write information from and to the related section of the configuration file according to the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>.  
  
   
  
## Examples  
 This example demonstrates how to specify values declaratively for attributes of the `add` element within the `httpModules` section, which can also be accessed as members of the HttpModulesSection class.  
  
 The following configuration file example shows how to specify values declaratively for the [httpModules Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/5e28e921-ab9b-4584-a2f9-0f9aa08372e3) section.  
  
```  
<httpModules>  
    <add name="TimerModule"   
      type="Samples.Aspnet.Configuration.RequestTimeInterval, RequestTimeInterval Version=1.0.1557.23158, Culture=neutral,  
      PublicKeyToken=7bfb33146a87b52e, processorArchitecture=MSIL"/>  
</httpModules>  
```  
  
 The following code example demonstrates how to use the HttpModulesSection class.  
  
 [!code-cs[System.Web.Configuration.HttpModulesSection#1](~/add/codesnippet/csharp/t-system.web.configurati_66_1.cs)]
 [!code-vb[System.Web.Configuration.HttpModulesSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_66_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpModulesSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.HttpModulesSection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HttpModulesSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.HttpModulesSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.HttpModuleActionCollection Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.HttpModuleActionCollection Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("", IsDefaultCollection=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpModuleActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.Configuration.HttpModuleActionCollection" /> of <see cref="T:System.Web.Configuration.HttpModuleAction" /> modules contained by the <see cref="T:System.Web.Configuration.HttpModulesSection" />.</summary>
        <value>A <see cref="T:System.Web.Configuration.HttpModuleActionCollection" /> that contains the <see cref="T:System.Web.Configuration.HttpModuleAction" /> objects, or modules, defined by the <see cref="T:System.Web.Configuration.HttpModulesSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The collection returned by this method does not refer to any actual element in the underlying configuration file. It is an ASP.NET infrastructure construct that allows easy access to the modules it contains. This is a common pattern for handling the elements of a configuration file.  
  
   
  
## Examples  
 The following code example shows how to access the <xref:System.Web.Configuration.HttpModuleAction> modules.  
  
 [!code-cs[System.Web.Configuration.HttpModulesSection#3](~/add/codesnippet/csharp/p-system.web.configurati_383_1.cs)]
 [!code-vb[System.Web.Configuration.HttpModulesSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_383_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>