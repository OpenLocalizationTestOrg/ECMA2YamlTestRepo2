<Type Name="ProfileGroupSettings" FullName="System.Web.Configuration.ProfileGroupSettings">
  <TypeSignature Language="C#" Value="public sealed class ProfileGroupSettings : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ProfileGroupSettings extends System.Configuration.ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides programmatic access to the <see langword="group" /> subsection of the <see langword="profiles" /> configuration file section.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ProfileGroupSettings class provides a way to programmatically create, access, and modify groups of properties added to the `group` subsection of the `profile` section of a configuration file.  
  
 The `profile` section of the configuration file specifies a schema for user profiles. At run time, the ASP.NET compilation system uses the information specified in the `profile` section to generate a class called `ProfileCommon`, which is derived from <xref:System.Web.Profile.ProfileBase>. The `ProfileCommon` class definition is based on the properties defined in the `properties` subsection of the `profile` section of the configuration file. An instance of this class is created for each user profile, and you can access the individual profile values in your code through the <xref:System.Web.HttpContext.Profile%2A?displayProperty=fullName> property. For more information about the profile features added to [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how to use the ProfileGroupSettings type. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  
  
 [!code-cs[System.Web.Configuration.ProfileSection#13](~/add/codesnippet/csharp/t-system.web.configurati_94_1.cs)]
 [!code-vb[System.Web.Configuration.ProfileSection#13](~/add/codesnippet/visualbasic/t-system.web.configurati_94_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileGroupSettings (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the new group.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileGroupSettings" /> class using default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ProfileGroupSettings constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.ProfileGroupSettings> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The &lt;xref:System.Object&gt; to compare with the current <see langword="Object" />.</param>
        <summary>Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</summary>
        <returns>
          <see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a unique value representing the current <see cref="T:System.Configuration.ConfigurationElement" /> instance.</summary>
        <returns>A unique value representing the current <see cref="T:System.Configuration.ConfigurationElement" /> instance.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets name of the group of <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects this object contains.</summary>
        <value>A string containing the name of the group of <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects this object contains. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The group name must be unique within a <xref:System.Web.Configuration.ProfileGroupSettingsCollection> collection; otherwise, an exception is raised when the configuration file is saved.  
  
   
  
## Examples  
 The following code example shows how to use the Name property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  
  
 [!code-cs[System.Web.Configuration.ProfileSection#12](~/add/codesnippet/csharp/p-system.web.configurati_232_1.cs)]
 [!code-vb[System.Web.Configuration.ProfileSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_232_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySettings">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProfilePropertySettingsCollection PropertySettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.ProfilePropertySettingsCollection PropertySettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("", IsDefaultCollection=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProfilePropertySettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of profile property settings this object contains.</summary>
        <value>A <see cref="T:System.Web.Configuration.ProfilePropertySettingsCollection" /> collection that contains all the <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> objects contained in this group.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the PropertySettings property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  
  
 [!code-cs[System.Web.Configuration.ProfileSection#12](~/add/codesnippet/csharp/p-system.web.configurati_256_1.cs)]
 [!code-vb[System.Web.Configuration.ProfileSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_256_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>