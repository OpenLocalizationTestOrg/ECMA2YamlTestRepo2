<Type Name="TrustLevel" FullName="System.Web.Configuration.TrustLevel">
  <TypeSignature Language="C#" Value="public sealed class TrustLevel : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TrustLevel extends System.Configuration.ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines the mapping of specific security levels to named policy files. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can extend the security of your Web application by creating your own named TrustLevel object that is mapped to a file specified by the `policyFile` attribute.  
  
   
  
## Examples  
 The following code example demonstrates how to use the TrustLevel type.  
  
 [!code-cs[System.Web.Configuration.TrustLevel#1](~/add/codesnippet/csharp/t-system.web.configurati_38_1.cs)]
 [!code-vb[System.Web.Configuration.TrustLevel#1](~/add/codesnippet/visualbasic/t-system.web.configurati_38_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrustLevel (string name, string policyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string policyFile) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="policyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A named security level that is mapped to a policy file.</param>
        <param name="policyFile">The configuration file that contains security policy settings for the named security level.</param>
        <summary>Creates an instance of the <see cref="T:System.Web.Configuration.TrustLevel" /> class that is initialized based on the provided values, which define the mapping of specific security levels to named policy files.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TrustLevel constructor creates a <xref:System.Web.Configuration.TrustLevel> object by using the supplied parameters.  
  
   
  
## Examples  
 The following code example demonstrates how to use the TrustLevel constructor. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustLevel> class.  
  
 [!code-cs[System.Web.Configuration.TrustLevel#4](~/add/codesnippet/csharp/m-system.web.configurati_43_1.cs)]
 [!code-vb[System.Web.Configuration.TrustLevel#4](~/add/codesnippet/visualbasic/m-system.web.configurati_43_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a named security level that is mapped to a policy file.</summary>
        <value>The Name that is mapped to a policy file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the Name property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustLevel> class.  
  
 [!code-cs[System.Web.Configuration.TrustLevel#3](~/add/codesnippet/csharp/p-system.web.configurati_0_1.cs)]
 [!code-vb[System.Web.Configuration.TrustLevel#3](~/add/codesnippet/visualbasic/p-system.web.configurati_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PolicyFile">
      <MemberSignature Language="C#" Value="public string PolicyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PolicyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("policyFile", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the configuration file reference that contains the security policy settings for the named security level.</summary>
        <value>The configuration file reference that contains the security policy settings for the associated security level.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the PolicyFile property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustLevel> class.  
  
 [!code-cs[System.Web.Configuration.TrustLevel#5](~/add/codesnippet/csharp/p-system.web.configurati_352_1.cs)]
 [!code-vb[System.Web.Configuration.TrustLevel#5](~/add/codesnippet/visualbasic/p-system.web.configurati_352_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>