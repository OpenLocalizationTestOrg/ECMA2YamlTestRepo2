<Type Name="UrlMapping" FullName="System.Web.Configuration.UrlMapping">
  <TypeSignature Language="C#" Value="public sealed class UrlMapping : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UrlMapping extends System.Configuration.ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Maps a URL that is displayed to users to the URL of a page in your Web application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The UrlMapping class allows you to map a URL that is displayed to users to a URL that exists in your Web application. Adding a UrlMapping object to a <xref:System.Web.Configuration.UrlMappingCollection> is the programmatic equivalent to including an `add` element in the `urlMappings` section of a configuration file.  
  
 Each UrlMapping object contains two properties identifying a URL. One property specifies the URL shown to the user; the other specifies a URL in your Web application. Trailing white-space characters are ignored in both the <xref:System.Web.Configuration.UrlMapping.Url%2A> and <xref:System.Web.Configuration.UrlMapping.MappedUrl%2A> properties.  
  
> [!NOTE]
>  The UrlMapping property can write information into the related section of the configuration file according to the restrictions defined by the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>. Any attempt to write in a configuration file at a level not allowed in the hierarchy will result in an error message generated by the parser. However, you can use this class to read configuration information at any level in the hierarchy.  
  
   
  
## Examples  
 The following example uses the <xref:System.Web.Configuration.UrlMappingsSection> of the Web.config file to map two URLs, and adds a mapping for an additional URL. When you modify and save the Web.config file, your application restarts.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
[!code-cs[System.Web.Configuration.UrlMapping2#1](~/add/codesnippet/csharp/t-system.web.configurati_10_2.aspx)]
[!code-vb[System.Web.Configuration.UrlMapping2#1](~/add/codesnippet/visualbasic/t-system.web.configurati_10_2.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlMapping (string url, string mappedUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, string mappedUrl) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="mappedUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">The URL to be displayed to the user.</param>
        <param name="mappedUrl">A URL that exists in your Web application.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.UrlMapping" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The UrlMapping constructor is intended primarily for internal use by ASP.NET. You do not need to derive from this class, and because it can be used to modify the Web.config file, you will probably never need to use it in code.  
  
   
  
## Examples  
 The following example uses the <xref:System.Web.Configuration.UrlMappingsSection> of the Web.config file to map two URLs, and adds a mapping for an additional URL. When you modify and save the Web.config file, your application restarts.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
[!code-cs[System.Web.Configuration.UrlMapping2#1](~/add/codesnippet/csharp/m-system.web.configurati_60_2.aspx)]
[!code-vb[System.Web.Configuration.UrlMapping2#1](~/add/codesnippet/visualbasic/m-system.web.configurati_60_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MappedUrl">
      <MemberSignature Language="C#" Value="public string MappedUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mappedUrl", IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A URL in your Web application.</summary>
        <value>The URL in your Web application that has been mapped to the value specified by the &lt;xref:System.Web.Configuration.UrlMapping.Url%2A&gt; property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MappedUrl property is the programmatic equivalent of the `mappedUrl` attribute of the `add` element in the `urlMappings` section of a configuration file.  
  
> [!NOTE]
>  When using IIS 5.0, if you use the MappedUrl property to map from a supported page type (such as an .aspx file) to an unsupported page type (such as an .asp page), an error will occur. This type of mapping is supported in IIS version 6.0.  
  
   
  
## Examples  
 The following code example shows how to obtain the MappedUrl property. This example is from a larger example for the <xref:System.Web.Configuration.UrlMapping> class.  
  
 [!code-cs[System.Web.Configuration.UrlMapping2#4](~/add/codesnippet/csharp/p-system.web.configurati_113_1.aspx)]
 [!code-vb[System.Web.Configuration.UrlMapping2#4](~/add/codesnippet/visualbasic/p-system.web.configurati_113_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("url", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URL that is displayed to the user.</summary>
        <value>The URL that is displayed to the user.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Url property is the programmatic equivalent of the `Url` attribute of the `add` element in the `urlMappings` section of a configuration file.  
  
   
  
## Examples  
 For an example, see the <xref:System.Web.Configuration.UrlMapping> class overview.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>