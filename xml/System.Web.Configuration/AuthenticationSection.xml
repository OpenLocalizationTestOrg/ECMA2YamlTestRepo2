<Type Name="AuthenticationSection" FullName="System.Web.Configuration.AuthenticationSection">
  <TypeSignature Language="C#" Value="public sealed class AuthenticationSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AuthenticationSection extends System.Configuration.ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configures the authentication for a Web application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AuthenticationSection class provides a way to programmatically access and modify the `authentication` section of a configuration file.  
  
> [!NOTE]
>  The AuthenticationSection can write information into the related section of the configuration file according to the restrictions defined by the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>. Any attempt to write in a configuration file at a level not allowed in the hierarchy will result in an error message generated by the parser. However, you can use this class to read configuration information at any level in the hierarchy. For safety and scalability, it is recommended that you use an external repository, such as a database, to keep the users' credentials.  
  
   
  
## Examples  
 This section provides two code examples. The first demonstrates how to specify values declaratively for several attributes of the `authentication` section, which can also be accessed as members of the AuthenticationSection class. The second demonstrates how to use the AuthenticationSection class.  
  
 The following configuration file example shows how to specify values declaratively for the `authentication` section.  
  
> [!NOTE]
>  If you use the `credentials` section, be sure to follow the guidelines explained at [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md). For scalability and better security, it is recommended the use of an external database to store the users' credentials. For more information about building secure ASP.NET applications search the Microsoft MSDN Web site (http://msdn.microsoft.com) for "Securing Your ASP.NET Application", and "Building Secure ASP.NET Applications: Authentication, Authorization, and Secure Communication".  
  
```  
<authentication mode="Forms">  
  <forms name="MyAppCookieName" loginUrl="login.aspx">  
    <credentials passwordFormat="SHA1">  
      <user name="Kim"  
         password="07B7F3EE06F278DB966BE960E7CBBD103DF30CA6"/>  
      <user name="John"  
         password="BA56E5E0366D003E98EA1C7F04ABF8FCB3753889"/>  
    </credentials>  
  </forms>  
</authentication>  
```  
  
 The following code example demonstrates how to use the AuthenticationSection class.  
  
 [!code-cs[System.Web.Configuration.AuthenticationSection#1](~/add/codesnippet/csharp/t-system.web.configurati_68_1.cs)]
 [!code-vb[System.Web.Configuration.AuthenticationSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_68_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.AuthenticationSection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AuthenticationSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.AuthenticationSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  
  
   
  
## Examples  
 The following code example shows how to obtain a <xref:System.Web.Configuration.AuthenticationSection> object.  
  
 [!code-cs[System.Web.Configuration.AuthenticationSection#2](~/add/codesnippet/csharp/m-system.web.configurati_46_1.cs)]
 [!code-vb[System.Web.Configuration.AuthenticationSection#2](~/add/codesnippet/visualbasic/m-system.web.configurati_46_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Forms">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FormsAuthenticationConfiguration Forms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.FormsAuthenticationConfiguration Forms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("forms")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsAuthenticationConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Forms element property.</summary>
        <value>A Forms element property that contains information used during forms-based authentication.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Forms element property.  
  
 [!code-cs[System.Web.Configuration.AuthenticationSection#5](~/add/codesnippet/csharp/p-system.web.configurati_29_1.cs)]
 [!code-vb[System.Web.Configuration.AuthenticationSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_29_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AuthenticationMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AuthenticationMode Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AuthenticationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the authentication modality.</summary>
        <value>One of the <see cref="T:System.Web.Configuration.AuthenticationMode" /> values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Mode property.  
  
 [!code-cs[System.Web.Configuration.AuthenticationSection#4](~/add/codesnippet/csharp/p-system.web.configurati_400_1.cs)]
 [!code-vb[System.Web.Configuration.AuthenticationSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_400_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Passport">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.PassportAuthentication Passport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.PassportAuthentication Passport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("passport")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.PassportAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Passport element property.</summary>
        <value>A Passport element property that contains information used during passport-based authentication.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Passport element property.  
  
 [!code-cs[System.Web.Configuration.AuthenticationSection#3](~/add/codesnippet/csharp/p-system.web.configurati_165_1.cs)]
 [!code-vb[System.Web.Configuration.AuthenticationSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_165_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>