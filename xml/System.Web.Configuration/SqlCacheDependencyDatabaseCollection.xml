<Type Name="SqlCacheDependencyDatabaseCollection" FullName="System.Web.Configuration.SqlCacheDependencyDatabaseCollection">
  <TypeSignature Language="C#" Value="public sealed class SqlCacheDependencyDatabaseCollection : System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlCacheDependencyDatabaseCollection extends System.Configuration.ConfigurationElementCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElementCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.Web.Configuration.SqlCacheDependencyDatabase))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> objects. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Configuration.SqlCacheDependencySection> uses the SqlCacheDependencyDatabaseCollection to programmatically access and modify the `databases` element of the `sqlCacheDependency` in the `cache` configuration section.  
  
   
  
## Examples  
 The following code example shows how to obtain a SqlCacheDependencyDatabaseCollection object by accessing the `sqlCacheDependency` section of a configuration file.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_27_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#1](~/add/codesnippet/csharp/t-system.web.configurati_27_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCacheDependencyDatabaseCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SqlCacheDependencyDatabaseCollection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.SqlCacheDependencyDatabaseCollection> class by using the <xref:System.Web.Configuration.SqlCacheDependencySection.Databases%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.Configuration.SqlCacheDependencyDatabase name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.Configuration.SqlCacheDependencyDatabase name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Web.Configuration.SqlCacheDependencyDatabase" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to add to the collection.</param>
        <summary>Adds a <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each <xref:System.Web.Configuration.SqlCacheDependencyDatabase> in the collection must have a unique name.  
  
   
  
## Examples  
 The following code example shows how to use the Add method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#3](~/add/codesnippet/visualbasic/87ef2b42-c772-4d3c-9119-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#3](~/add/codesnippet/csharp/87ef2b42-c772-4d3c-9119-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object already exists in the collection or the collection is read only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> keys.</summary>
        <value>The string array containing the collection keys.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the AllKeys property.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_20_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#2](~/add/codesnippet/csharp/p-system.web.configurati_20_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> objects from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `clear` directive into the appropriate section of the configuration file to remove all references to elements defined in a higher-level configuration file.  
  
   
  
## Examples  
 The following code example shows how to use the Clear method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#4](~/add/codesnippet/visualbasic/m-system.web.configurati_27_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#4](~/add/codesnippet/csharp/m-system.web.configurati_27_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.SqlCacheDependencyDatabase Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Configuration.SqlCacheDependencyDatabase Get(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.SqlCacheDependencyDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element to retrieve.</param>
        <summary>Returns the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element at the specified index.</summary>
        <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A null reference (`Nothing` in Visual Basic) is returned if no element exists at the specified index.  
  
   
  
## Examples  
 The following code example shows how to use the Get method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#5](~/add/codesnippet/visualbasic/74ed1ca6-47db-4bed-9d99-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#5](~/add/codesnippet/csharp/74ed1ca6-47db-4bed-9d99-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.SqlCacheDependencyDatabase Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Configuration.SqlCacheDependencyDatabase Get(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.SqlCacheDependencyDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element to retrieve.</param>
        <summary>Returns the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element with the specified name.</summary>
        <returns>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> element with the specified name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A null reference (`Nothing` in Visual Basic) is returned if no element exists with the specified name.  
  
   
  
## Examples  
 The following code example shows how to use the Get method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#6](~/add/codesnippet/visualbasic/e7b21235-42cb-478f-bdfa-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#6](~/add/codesnippet/csharp/e7b21235-42cb-478f-bdfa-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the key to return.</param>
        <summary>Returns the key for the element located at the specified index in the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" />.</summary>
        <returns>The key at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A null reference (`Nothing` in Visual Basic) is returned if no element exists at the specified index.  
  
   
  
## Examples  
 The following code example shows how to use the GetKey method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#7](~/add/codesnippet/visualbasic/aef51b5b-020b-4dc8-a9a1-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#7](~/add/codesnippet/csharp/aef51b5b-020b-4dc8-a9a1-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.SqlCacheDependencyDatabase this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.SqlCacheDependencyDatabase Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.SqlCacheDependencyDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The collection index of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object.</param>
        <summary>Gets or sets the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object at the specified index.</summary>
        <value>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object at the specified index.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.SqlCacheDependencyDatabase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.SqlCacheDependencyDatabase Item(string)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.SqlCacheDependencyDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object.</param>
        <summary>Gets or sets the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object with the specified name.</summary>
        <value>The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object with the specified name.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to remove from the collection.</param>
        <summary>Removes the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> object with the specified name from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Remove method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#8](~/add/codesnippet/visualbasic/5e3ec22b-67a9-49ff-8231-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#8](~/add/codesnippet/csharp/5e3ec22b-67a9-49ff-8231-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object to remove from the collection.</param>
        <summary>Removes the <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" /> object at the specified index from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the RemoveAt method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#9](~/add/codesnippet/visualbasic/45df297c-c4c4-4105-9661-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#9](~/add/codesnippet/csharp/45df297c-c4c4-4105-9661-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Web.Configuration.SqlCacheDependencyDatabase user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Web.Configuration.SqlCacheDependencyDatabase user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Configuration.SqlCacheDependencyDatabase" />
      </Parameters>
      <Docs>
        <param name="user">The <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> element to reset.</param>
        <summary>Resets a specified <see cref="T:System.Web.Configuration.SqlCacheDependencyDatabase" /> object that exists within the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `Set` method modifies an existing <xref:System.Web.Configuration.SqlCacheDependencyDatabaseCollection> element.  
  
 A <xref:System.Configuration.ConfigurationException> is thrown if the element already exists or is read-only.  
  
   
  
## Examples  
 The following code example shows how to use the Set method.  
  
 [!code-vb[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#10](~/add/codesnippet/visualbasic/7e3471ab-7810-40fd-98fa-_1.vb)]
 [!code-cs[System.Web.Configuration.SqlCacheDependencyDatabaseCollection#10](~/add/codesnippet/csharp/7e3471ab-7810-40fd-98fa-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.OutputCacheProfileCollection" /> is read-only or already exists.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>