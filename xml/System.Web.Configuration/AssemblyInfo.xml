<Type Name="AssemblyInfo" FullName="System.Web.Configuration.AssemblyInfo">
  <TypeSignature Language="C#" Value="public sealed class AssemblyInfo : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AssemblyInfo extends System.Configuration.ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>References an assembly to be linked to during compilation of a dynamic resource. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET automatically links assemblies to a resource when compiling each code module. An AssemblyInfo object references an assembly. An assembly is a collection of types and resources that are built to work together and form a logical unit of functionality. An assembly provides the common language runtime with the information it needs to identify type implementations. To the runtime, a type does not exist outside the context of an assembly.  
  
 Commonly linked assemblies are listed in the `assemblies` node of the `compilation` section of the configuration. Additionally, assemblies can be manually added to a code resource when additional functionality for an application is needed.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Specifies a comma-separated assembly name combination consisting of version, culture, and public-key tokens.</param>
        <summary>Creates an instance of an <see cref="T:System.Web.Configuration.AssemblyInfo" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Web.Configuration.AssemblyInfo> instance is not initialized with assembly information, an exception is thrown.  
  
   
  
## Examples  
 The following code example demonstrates how to create an <xref:System.Web.Configuration.AssemblyInfo> object. This code example is part of a larger example provided for the <xref:System.Web.Configuration.AssemblyCollection> class.  
  
 [!code-vb[System.Web.Configuration.AssemblyCollection#2](~/add/codesnippet/visualbasic/m-system.web.configurati_4_1.vb)]
 [!code-cs[System.Web.Configuration.AssemblyCollection#2](~/add/codesnippet/csharp/m-system.web.configurati_4_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("assembly", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an assembly reference to use during compilation of a dynamic resource.</summary>
        <value>A comma-separated string value specifying the version, culture, and public-key tokens of an assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET first searches for the assembly DLL in the application's private Bin directory and then in the system assembly cache.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>