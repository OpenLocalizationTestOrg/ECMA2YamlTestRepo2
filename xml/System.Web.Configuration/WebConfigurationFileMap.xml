<Type Name="WebConfigurationFileMap" FullName="System.Web.Configuration.WebConfigurationFileMap">
  <TypeSignature Language="C#" Value="public sealed class WebConfigurationFileMap : System.Configuration.ConfigurationFileMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebConfigurationFileMap extends System.Configuration.ConfigurationFileMap" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationFileMap</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines the configuration file mappings for a Web application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The WebConfigurationFileMap class is used to specify the Web configuration file hierarchy. By default, the configuration system uses the IIS metabase to determine the Web file hierarchy. If IIS is not installed, or if an application targets a version of the .NET Framework that is not the latest version that is installed on the server, the WebConfigurationFileMap class provides a means to define a custom hierarchy.  
  
 The WebConfigurationFileMap class can specify a single path or multiple paths related to configuration files.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebConfigurationFileMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebConfigurationFileMap (string machineConfigFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string machineConfigFileName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="machineConfigFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineConfigFileName">The machine configuration file name with the complete physical path (for example, `c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config`).</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class by using the specified machine configuration file name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use this constructor when you are targeting a version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that is earlier than the latest one that is installed on the computer. The method enables you to specify a machine configuration file that is appropriate to the version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that you are targeting.  
  
> [!NOTE]
>  Even though the constructor only accepts the path to the Machine.config file, the configuration system will also read the root Web.config file in the same directory where the Machine.config file exists.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of a <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class with the same value as the existing instance.</summary>
        <returns>A new instance of a <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> class.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualDirectories">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.VirtualDirectoryMappingCollection VirtualDirectories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.VirtualDirectoryMappingCollection VirtualDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.VirtualDirectoryMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the listed collection of virtual directories for a Web application.</summary>
        <value>A collection of <see cref="T:System.Web.Configuration.VirtualDirectoryMapping" /> objects.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The virtual directories of a Web application may not necessarily map to the physical directories on the server. The <xref:System.Web.Configuration.VirtualDirectoryMapping> class is independent of IIS.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>