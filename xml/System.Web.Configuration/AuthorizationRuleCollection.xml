<Type Name="AuthorizationRuleCollection" FullName="System.Web.Configuration.AuthorizationRuleCollection">
  <TypeSignature Language="C#" Value="public sealed class AuthorizationRuleCollection : System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AuthorizationRuleCollection extends System.Configuration.ConfigurationElementCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElementCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.Web.Configuration.AuthorizationRule), AddItemName="allow,deny", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Web.Configuration.AuthorizationRule" /> objects. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AuthorizationRuleCollection type allows access to the elements of the `authorization` section collection.  
  
   
  
## Examples  
 The following code example shows how to obtain the AuthorizationRuleCollection object from the configuration file of an existing Web application. You use this object to access its members as shown in the following topics. The configuration file will contain a setup similar to the following.  
  
```  
<authorization>  
  <allow users="userName" roles="admin" verbs="post" />  
  <deny users="*" verbs="post"/>  
</authorization>  
```  
  
 [!code-cs[System.Web.Configuration.Authorization#1](~/add/codesnippet/csharp/t-system.web.configurati_57_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#1](~/add/codesnippet/visualbasic/t-system.web.configurati_57_1.vb)]  
  
 [!code-cs[System.Web.Configuration.Authorization#2](~/add/codesnippet/csharp/t-system.web.configurati_57_2.cs)]
 [!code-vb[System.Web.Configuration.Authorization#2](~/add/codesnippet/visualbasic/t-system.web.configurati_57_2.vb)]  
  
 [!code-cs[System.Web.Configuration.Authorization#3](~/add/codesnippet/csharp/t-system.web.configurati_57_3.cs)]
 [!code-vb[System.Web.Configuration.Authorization#3](~/add/codesnippet/visualbasic/t-system.web.configurati_57_3.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationRuleCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.AuthorizationRuleCollection" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.Configuration.AuthorizationRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.Configuration.AuthorizationRule rule) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Web.Configuration.AuthorizationRule" />
      </Parameters>
      <Docs>
        <param name="rule">The <see cref="T:System.Web.Configuration.AuthorizationRule" /> object to add to the collection.</param>
        <summary>Adds a <see cref="T:System.Web.Configuration.AuthorizationRule" /> object to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The collection must not already contain the <xref:System.Web.Configuration.AuthorizationRule> object you are adding.  
  
   
  
## Examples  
 The following code example shows how to use the Add method.  
  
 [!code-cs[System.Web.Configuration.Authorization#6](~/add/codesnippet/csharp/ef5d0ee1-da2c-4882-b9dc-_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#6](~/add/codesnippet/visualbasic/ef5d0ee1-da2c-4882-b9dc-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.AuthorizationRule" /> object already exists in the collection, or the collection is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all <see cref="T:System.Web.Configuration.AuthorizationRule" /> objects from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `clear` directive into the appropriate section of the configuration file to clear all references to elements defined in a higher-level configuration file. All elements defined in the appropriate section of the current configuration file are removed.  
  
   
  
## Examples  
 The following code example shows how to use the Clear method.  
  
 [!code-cs[System.Web.Configuration.Authorization#7](~/add/codesnippet/csharp/m-system.web.configurati_7_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#7](~/add/codesnippet/visualbasic/m-system.web.configurati_7_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public override System.Configuration.ConfigurationElementCollectionType CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of this <see cref="T:System.Web.Configuration.AuthorizationRuleCollection" />.</summary>
        <value>A value from the <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> enumeration representing the type of this collection.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElement CreateNewElement (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Configuration.ConfigurationElement CreateNewElement(string elementName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="protected override string ElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AuthorizationRule Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Configuration.AuthorizationRule Get(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AuthorizationRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The <see cref="T:System.Web.Configuration.AuthorizationRule" /> index.</param>
        <summary>Gets the <see cref="T:System.Web.Configuration.AuthorizationRule" /> at the specified index.</summary>
        <returns>The <see cref="T:System.Web.Configuration.AuthorizationRule" /> at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Get method. Refer to the code example in the <xref:System.Web.Configuration.AuthorizationSection> class topic to learn how to get the collection.  
  
 [!code-cs[System.Web.Configuration.Authorization#13](~/add/codesnippet/csharp/m-system.web.configurati_23_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#13](~/add/codesnippet/visualbasic/m-system.web.configurati_23_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.Configuration.AuthorizationRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.Configuration.AuthorizationRule rule) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Web.Configuration.AuthorizationRule" />
      </Parameters>
      <Docs>
        <param name="rule">The <see cref="T:System.Web.Configuration.AuthorizationRule" /> object whose index is returned.</param>
        <summary>Gets the collection index of the specified <see cref="T:System.Web.Configuration.AuthorizationRule" /> object.</summary>
        <returns>The index of the specified <see cref="T:System.Web.Configuration.AuthorizationRule" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the IndexOf method.  
  
 [!code-cs[System.Web.Configuration.Authorization#9](~/add/codesnippet/csharp/6a929af6-6758-44e2-b2fb-_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#9](~/add/codesnippet/visualbasic/6a929af6-6758-44e2-b2fb-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsElementName">
      <MemberSignature Language="C#" Value="protected override bool IsElementName (string elementname);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsElementName(string elementname) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementname">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AuthorizationRule this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.AuthorizationRule Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AuthorizationRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <see cref="T:System.Web.Configuration.AuthorizationRule" /> collection index</param>
        <summary>Gets or sets an item in this collection.</summary>
        <value>The <see cref="T:System.Web.Configuration.AuthorizationRule" /> at the specified index.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.Configuration.AuthorizationRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.Configuration.AuthorizationRule rule) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Web.Configuration.AuthorizationRule" />
      </Parameters>
      <Docs>
        <param name="rule">The <see cref="T:System.Web.Configuration.AuthorizationRule" /> object to remove.</param>
        <summary>Removes a <see cref="T:System.Web.Configuration.AuthorizationRule" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `remove` element into the appropriate section of the configuration file for any element defined in a higher-level configuration file. If the element is defined in the appropriate section of the current configuration file, its entry is removed from the configuration file. The object to remove must exist in the collection.  
  
   
  
## Examples  
 The following code example shows how to use the Remove method. Refer to the code example in the <xref:System.Web.Configuration.AuthorizationSection> class topic to learn how to get the collection.  
  
 [!code-cs[System.Web.Configuration.Authorization#10](~/add/codesnippet/csharp/7890bc9c-9eca-4aee-a91d-_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#10](~/add/codesnippet/visualbasic/7890bc9c-9eca-4aee-a91d-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">The passed <see cref="T:System.Web.Configuration.AuthorizationRule" /> object does not exist in the collection, the element has already been removed, or the collection is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index location of the <see cref="T:System.Web.Configuration.AuthorizationRule" /> to remove.</param>
        <summary>Removes a <see cref="T:System.Web.Configuration.AuthorizationRule" /> object from the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method inserts a `remove` element into the appropriate section of the configuration file for any element defined in a higher-level configuration file. If the element is defined in the appropriate section of the current configuration file, its entry is removed from the configuration file. The object to remove must exist in the collection.  
  
   
  
## Examples  
 The following code example shows how to use the RemoveAt method. Refer to the code example in the <xref:System.Web.Configuration.AuthorizationSection> class topic to learn how to get the collection.  
  
 [!code-cs[System.Web.Configuration.Authorization#8](~/add/codesnippet/csharp/m-system.web.configurati_3_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#8](~/add/codesnippet/visualbasic/m-system.web.configurati_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.AuthorizationRule" /> object with the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int index, System.Web.Configuration.AuthorizationRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 index, class System.Web.Configuration.AuthorizationRule rule) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="rule" Type="System.Web.Configuration.AuthorizationRule" />
      </Parameters>
      <Docs>
        <param name="index">The index location at which to add the specified <see cref="T:System.Web.Configuration.AuthorizationRuleCollection" /> object.</param>
        <param name="rule">The <see cref="T:System.Web.Configuration.AuthorizationRule" /> object to be added.</param>
        <summary>Adds the specified <see cref="T:System.Web.Configuration.AuthorizationRule" /> object to the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to use the Set method.  
  
 [!code-cs[System.Web.Configuration.Authorization#11](~/add/codesnippet/csharp/5985bb33-2512-463e-bfac-_1.cs)]
 [!code-vb[System.Web.Configuration.Authorization#11](~/add/codesnippet/visualbasic/5985bb33-2512-463e-bfac-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>