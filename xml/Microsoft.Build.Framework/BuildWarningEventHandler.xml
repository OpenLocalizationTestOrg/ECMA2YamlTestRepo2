<Type Name="BuildWarningEventHandler" FullName="Microsoft.Build.Framework.BuildWarningEventHandler">
  <TypeSignature Language="C#" Value="public delegate void BuildWarningEventHandler(object sender, BuildWarningEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BuildWarningEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="Microsoft.Build.Framework.BuildWarningEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:Microsoft.Build.Framework.IEventSource.WarningRaised" /> event of a build.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to write a basic logger that responds to build events.  
  
 [!code-cs[msbuild_BasicLogger#1](~/add/codesnippet/csharp/msbuild_BasicLogger/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>