<Type Name="MenuItemCollectionEditor" FullName="System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
  <TypeSignature Language="C#" Value="public class MenuItemCollectionEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuItemCollectionEditor extends System.Drawing.Design.UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a component editor for the collection that is specified by the &lt;xref:System.Web.UI.WebControls.Menu.Items%2A&gt; property of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MenuItemCollectionEditor class provides a user interface for editing the <xref:System.Web.UI.WebControls.MenuItem> elements of the collection that is specified by the <xref:System.Web.UI.WebControls.Menu.Items%2A> property within the associated <xref:System.Web.UI.WebControls.Menu> control.  
  
 The MenuItemCollectionEditor is invoked by selecting the ellipsis (**…**) button on the **Items** property in the **Properties** grid of the visual designer, or by choosing **Edit Menu Items** from the **Common Tasks** context menu on the control.  
  
 The <xref:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue%2A> method edits the values of the menu item collection of the associated <xref:System.Web.UI.WebControls.Menu> control. The <xref:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle%2A> method gets the editing style that is associated with this editor.  
  
   
  
## Examples  
 The following code example shows how to use the <xref:System.ComponentModel.EditorAttribute> attribute to associate the MenuItemCollectionEditor and <xref:System.Drawing.Design.UITypeEditor> (the collection editor base class) classes with a property in a custom control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that gets and sets a <xref:System.Web.UI.WebControls.MenuItemCollection> collection.  
  
 [!code-cs[System.Web.UI.Design.WebControls.MenuEditors#3](~/add/codesnippet/csharp/t-system.web.ui.design.w_18_1.cs)]
 [!code-vb[System.Web.UI.Design.WebControls.MenuEditors#3](~/add/codesnippet/visualbasic/t-system.web.ui.design.w_18_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollectionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The .NET Framework internally constructs a new instance of the <xref:System.Web.UI.Design.WebControls.MenuItemCollectionEditor> class when you select the ellipsis (**…**) button on the **Items** property in the **Properties** grid of the visual designer when designing the associated <xref:System.Web.UI.WebControls.Menu> control, or choose **Edit Menu Items** from the **Common Tasks** context menu on the control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to acquire context information.</param>
        <param name="provider">An object implementing the &lt;xref:System.IServiceProvider&gt; through which editing services can be obtained.</param>
        <param name="value">The object to edit the value for.</param>
        <summary>Edits the value of the menu item collection of the associated control.</summary>
        <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The EditValue method extracts the associated <xref:System.Web.UI.WebControls.Menu> control and the <xref:System.Web.UI.Design.WebControls.MenuDesigner> object that is associated with that control from the `context` parameter. Then the EditValue calls back on the <xref:System.Web.UI.Design.WebControls.MenuDesigner> to display an editing dialog box that is used to edit the <xref:System.Web.UI.WebControls.MenuItemCollection> object of the <xref:System.Web.UI.WebControls.Menu> control.  
  
 The `provider` parameter is not used.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
        <summary>Gets the editing style that is associated with this editor.</summary>
        <returns>Always returns <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetEditStyle method always returns the  <xref:System.Drawing.Design.UITypeEditorEditStyle> value, which indicates that the user interface for the editor is a modal dialog box.  
  
 The `context` parameter is not used.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>