<Type Name="Margins" FullName="System.Drawing.Printing.Margins">
  <TypeSignature Language="C#" Value="public class Margins : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Margins extends System.Object implements class System.ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.Printing.MarginsConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the dimensions of the margins of a printed page.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Margins class is used to manipulate the width of margins in <xref:System.Drawing.Printing.PageSettings> and <xref:System.Drawing.Printing.PrintController>. <xref:System.Drawing.Printing.MarginsConverter> is the type descriptor for this class.  
  
 <xref:System.Drawing.Printing.Margins.Left%2A>, <xref:System.Drawing.Printing.Margins.Right%2A>, <xref:System.Drawing.Printing.Margins.Top%2A>, and <xref:System.Drawing.Printing.Margins.Bottom%2A> are properties that define the margins. <xref:System.Drawing.Printing.Margins.Clone%2A> creates an identical Margins. <xref:System.Drawing.Printing.Margins.Equals%2A> determines if another object has the same dimensions as a Margins.  
  
 For more information about printing, see the <xref:System.Drawing.Printing> namespace overview.  
  
   
  
## Examples  
 Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  
  
 The following code example sets the default page settings for a document to margins of 1 inch on each side.  
  
 [!code-cs[Classic Margins Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_4_1.cs)]
 [!code-vb[Classic Margins Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_4_1.vb)]
 [!code-cpp[Classic Margins Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_4_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Margins ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with 1-inch wide margins.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Margins (int left, int right, int top, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 left, int32 right, int32 top, int32 bottom) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">The left margin, in hundredths of an inch.</param>
        <param name="right">The right margin, in hundredths of an inch.</param>
        <param name="top">The top margin, in hundredths of an inch.</param>
        <param name="bottom">The bottom margin, in hundredths of an inch.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with the specified left, right, top, and bottom margins.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  
  
 The following code example sets the default page settings for a document to margins of 1 inch width on each side.  
  
 [!code-cs[Classic Margins Example#1](~/add/codesnippet/csharp/ce601b39-2512-42b1-b83b-_1.cs)]
 [!code-vb[Classic Margins Example#1](~/add/codesnippet/visualbasic/ce601b39-2512-42b1-b83b-_1.vb)]
 [!code-cpp[Classic Margins Example#1](~/add/codesnippet/cpp/ce601b39-2512-42b1-b83b-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="left" /> parameter value is less than 0.  
  
 -or-  
  
 The <paramref name="right" /> parameter value is less than 0.  
  
 -or-  
  
 The <paramref name="top" /> parameter value is less than 0.  
  
 -or-  
  
 The <paramref name="bottom" /> parameter value is less than 0.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public int Bottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the bottom margin, in hundredths of an inch.</summary>
        <value>The bottom margin, in hundredths of an inch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you measure margins in millimeters, multiply the margin width you want in millimeters by 3.937 to determine the correct measurement in hundredths of an inch. For example, if you want a margin of 25mm, multiply by 3.937 and the result is 98 when rounded down. You would then set the appropriate <xref:System.Drawing.Printing.Margins> member to 98.  
  
   
  
## Examples  
 Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  
  
 The following code example sets the default page settings for a document to left and right margins of 1 inch in width, and top and bottom margins of 1.5 inches in width.  
  
 [!code-cpp[Classic Margins.Left Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_5_1.cpp)]
 [!code-vb[Classic Margins.Left Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_5_1.vb)]
 [!code-cs[Classic Margins.Left Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_5_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The Bottom property is set to a value that is less than 0.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves a duplicate of this object, member by member.</summary>
        <returns>A duplicate of this object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to which to compare this <see cref="T:System.Drawing.Printing.Margins" />.</param>
        <summary>Compares this <see cref="T:System.Drawing.Printing.Margins" /> to the specified &lt;xref:System.Object&gt; to determine whether they have the same dimensions.</summary>
        <returns>
          <see langword="true" /> if the specified object is a <see cref="T:System.Drawing.Printing.Margins" /> and has the same &lt;xref:System.Drawing.Printing.Margins.Top%2A&gt;, &lt;xref:System.Drawing.Printing.Margins.Bottom%2A&gt;, &lt;xref:System.Drawing.Printing.Margins.Right%2A&gt; and &lt;xref:System.Drawing.Printing.Margins.Left%2A&gt; values as this <see cref="T:System.Drawing.Printing.Margins" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates and retrieves a hash code based on the width of the left, right, top, and bottom margins.</summary>
        <returns>A hash code based on the left, right, top, and bottom margins.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the left margin width, in hundredths of an inch.</summary>
        <value>The left margin width, in hundredths of an inch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you measure margins in millimeters, multiply the margin width you want in millimeters by 3.937 to determine the correct measurement in hundredths of an inch. For example, if you want a margin of 25mm, multiply by 3.937 and the result is 98 when rounded down. You would then set the appropriate <xref:System.Drawing.Printing.Margins> member to 98.  
  
   
  
## Examples  
 Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  
  
 The following code example sets the default page settings for a document to left and right margins of 1 inch in width, and top and bottom margins of 1.5 inches in width.  
  
 [!code-cpp[Classic Margins.Left Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_21_1.cpp)]
 [!code-vb[Classic Margins.Left Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_21_1.vb)]
 [!code-cs[Classic Margins.Left Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_21_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The Left property is set to a value that is less than 0.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Drawing.Printing.Margins m1, System.Drawing.Printing.Margins m2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Drawing.Printing.Margins m1, class System.Drawing.Printing.Margins m2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m1" Type="System.Drawing.Printing.Margins" />
        <Parameter Name="m2" Type="System.Drawing.Printing.Margins" />
      </Parameters>
      <Docs>
        <param name="m1">The first <see cref="T:System.Drawing.Printing.Margins" /> to compare for equality.</param>
        <param name="m2">The second <see cref="T:System.Drawing.Printing.Margins" /> to compare for equality.</param>
        <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine if they have the same dimensions.</summary>
        <returns>
          <see langword="true" /> to indicate the &lt;xref:System.Drawing.Printing.Margins.Left%2A&gt;, &lt;xref:System.Drawing.Printing.Margins.Right%2A&gt;, &lt;xref:System.Drawing.Printing.Margins.Top%2A&gt;, and &lt;xref:System.Drawing.Printing.Margins.Bottom%2A&gt; properties of both margins have the same value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Drawing.Printing.Margins m1, System.Drawing.Printing.Margins m2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Drawing.Printing.Margins m1, class System.Drawing.Printing.Margins m2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m1" Type="System.Drawing.Printing.Margins" />
        <Parameter Name="m2" Type="System.Drawing.Printing.Margins" />
      </Parameters>
      <Docs>
        <param name="m1">The first <see cref="T:System.Drawing.Printing.Margins" /> to compare for inequality.</param>
        <param name="m2">The second <see cref="T:System.Drawing.Printing.Margins" /> to compare for inequality.</param>
        <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine whether they are of unequal width.</summary>
        <returns>
          <see langword="true" /> to indicate if the &lt;xref:System.Drawing.Printing.Margins.Left%2A&gt;, &lt;xref:System.Drawing.Printing.Margins.Right%2A&gt;, &lt;xref:System.Drawing.Printing.Margins.Top%2A&gt;, or &lt;xref:System.Drawing.Printing.Margins.Bottom%2A&gt; properties of both margins are not equal; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public int Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the right margin width, in hundredths of an inch.</summary>
        <value>The right margin width, in hundredths of an inch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you measure margins in millimeters, multiply the margin width you want in millimeters by 3.937 to determine the correct measurement in hundredths of an inch. For example, if you want a margin of 25mm, multiply by 3.937 and the result is 98 rounded down. You would then set the appropriate <xref:System.Drawing.Printing.Margins> member to 98.  
  
   
  
## Examples  
 Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  
  
 The following code example sets the default page settings for a document to left and right margins of 1 inch in width, and top and bottom margins of 1.5 inches in width.  
  
 [!code-cpp[Classic Margins.Left Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_3_1.cpp)]
 [!code-vb[Classic Margins.Left Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_3_1.vb)]
 [!code-cs[Classic Margins.Left Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The Right property is set to a value that is less than 0.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the top margin width, in hundredths of an inch.</summary>
        <value>The top margin width, in hundredths of an inch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you measure margins in millimeters, multiply the margin width you want in millimeters by 3.937 to determine correct measurement in hundredths of an inch. For example, if you want a margin of 25mm, multiply by 3.937 and the result is 98 when rounded down. You would then set the appropriate <xref:System.Drawing.Printing.Margins> member to 98.  
  
   
  
## Examples  
 Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  
  
 The following code example sets the default page settings for a document to left and right margins of 1 inch in width, and top and bottom margins of 1.5 inches in width.  
  
 [!code-cpp[Classic Margins.Left Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_12_1.cpp)]
 [!code-vb[Classic Margins.Left Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_12_1.vb)]
 [!code-cs[Classic Margins.Left Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_12_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The Top property is set to a value that is less than 0.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the <see cref="T:System.Drawing.Printing.Margins" /> to a string.</summary>
        <returns>A &lt;xref:System.String&gt; representation of the <see cref="T:System.Drawing.Printing.Margins" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>