<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Abstract class used internally by the WPF XAML compiler to support the use of internal types.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The InternalTypeHelper class is not intended for use by anything other than the WPF XAML markup compiler.  
  
 When compiling a XAML file, you can use public types, but you can also use internal types subject to the same limitations that exist on code access to internal types. InternalTypeHelper enables support of internal access level types for markup. This involves the compiler creating a generated class that derives from InternalTypeHelper and implements its members. The generated class exists in a security and access context such that only the same assembly or other assemblies specifically attributed for shared internal access can reference the generated class and thus the internal types.  
  
<a name="xamlTextUsage_InternalTypeHelper"></a>   
## XAML Text Usage  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.InternalTypeHelper" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo">The event information for the event (CLR reflection information).</param>
        <param name="target">The target where the handler is attached.</param>
        <param name="handler">The event handler.</param>
        <summary>When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType">The &lt;xref:System.Type&gt; of the delegate.</param>
        <param name="target">The target where the handler is attached.</param>
        <param name="handler">The name of the handler implementation.</param>
        <summary>When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.</summary>
        <returns>The delegate reference.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">The &lt;xref:System.Type&gt; to create.</param>
        <param name="culture">Culture specific information.</param>
        <summary>When overridden in a derived (generated) class, creates an instance of an internal type.</summary>
        <returns>The created instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Property information for the property to get.</param>
        <param name="target">The object that holds the desired property value.</param>
        <param name="culture">Culture specific information.</param>
        <summary>When overridden in a derived (generated) class, gets the value of an internal property on the target object</summary>
        <returns>The value of the property.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Property information for the property to set.</param>
        <param name="target">The object that holds the desired property value.</param>
        <param name="value">The value to set.</param>
        <param name="culture">Culture specific information.</param>
        <summary>When overridden in a derived (generated) class, sets the value on an internal property on the target object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>