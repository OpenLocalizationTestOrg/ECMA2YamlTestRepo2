<Type Name="ConnectionStringsExpressionBuilder" FullName="System.Web.Compilation.ConnectionStringsExpressionBuilder">
  <TypeSignature Language="C#" Value="public class ConnectionStringsExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionStringsExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ConnectionStringsExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("ConnectionStrings")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Retrieves, or generates code to retrieve, values from the &lt;<see langword="connectionStrings" />&gt; section of the Web.config file.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ConnectionStringsExpressionBuilder class provides access to values in the <`connectionStrings`> section of the Web.config file. The <`connectionStrings`> section of the Web.config file contains connection string values in name/value pairs.  
  
 A connection string value is retrieved by assigning an expression of the form  
  
 `<%$ ConnectionStrings: secureConnectionString %>`  
  
 to a control property. The part of the expression before the colon (:) designates the type of expression to be retrieved, and the part after the colon signifies the name of the connection string. The preceding expression would retrieve the following value from the Web.config file.  
  
 `<connectionStrings>`  
  
 `<add name="secureConnectionString" connectionString="Data`  
  
 `Source=localhost;Integrated Security=SSPI;Initial`  
  
 `Catalog=Northwind;" providerName="System.Data.SqlClient" />`  
  
 `</connectionStrings>`  
  
 When the page parser encounters an expression with the prefix `ConnectionStrings`, it creates an instance of the ConnectionStringsExpressionBuilder class to handle the expression.  
  
 If the expression is encountered in a page that will be compiled, the ConnectionStringsExpressionBuilder object generates code that retrieves the specified connection string from the Web.config file. If the expression is encountered in a page that will not be compiled, the ConnectionStringsExpressionBuilder object returns the value from the Web.config file when the page is parsed.  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively use a <xref:System.Web.UI.WebControls.SqlDataSource> control to retrieve data from a computer running Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-cs[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/csharp/t-system.web.compilation_7_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/visualbasic/t-system.web.compilation_7_1.aspx)]  
  
 The code retrieves the following connection string from the Web.config file.  
  
 `<configuration   xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">`  
  
 `<connectionStrings>`  
  
 `<add name="MyNorthwind" connectionString="Data`  
  
 `Source=localhost;Integrated Security=SSPI;Initial`  
  
 `Catalog=Northwind;" providerName="System.Data.SqlClient" />`  
  
 `</connectionStrings>`  
  
 `</configuration>`  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionStringsExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">The object that contains the expression.</param>
        <param name="entry">The property to which the expression is bound.</param>
        <param name="parsedData">The object that represents parsed data as returned by &lt;xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression%2A&gt;.</param>
        <param name="context">Properties for the control or page.</param>
        <summary>Returns a value from the &lt;<see langword="connectionStrings" />&gt; section of the Web.config file.</summary>
        <returns>The &lt;xref:System.Object&gt; associated with a key in the &lt;<see langword="connectionStrings" />&gt; section of the Web.config file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called when an expression of the form `<%$ ConnectionStrings: secureConnectionString %>` is encountered in a page that is not compiled. It retrieves the appropriate value from the <`connectionStrings`> section of the Web.config file. This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method by calling the <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString%2A> method if a connection string is included in the `parsedData` parameter, or by calling the <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName%2A> method if a connection string is not included in the `parsedData` parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The connection string name could not be found in the Web.config file.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">An object that represents information about the property bound to by the expression.</param>
        <param name="parsedData">The object that represents parsed data as returned by &lt;xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression%2A&gt;.</param>
        <param name="context">Properties for the control or page.</param>
        <summary>Returns a code expression to evaluate during page parsing.</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that invokes a method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called during the CodeDOM creation for a page or control. The <xref:System.CodeDom.CodeExpression> object returned is of the type <xref:System.CodeDom.CodeMethodInvokeExpression> and represents the method to call when retrieving a connection string value.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetConnectionString">
      <MemberSignature Language="C#" Value="public static string GetConnectionString (string connectionStringName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetConnectionString(string connectionStringName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionStringName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionStringName">The name of the connection string.</param>
        <summary>Returns a connection string from the &lt;<see langword="connectionStrings" />&gt; section of the Web.config file.</summary>
        <returns>The connection string as a &lt;xref:System.String&gt; for this connection string name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> property returns a collection of connection string values. The GetConnectionString method returns the value from this collection that is associated with the connection string name.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The connection string name could not be found in the Web.config file.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetConnectionStringProviderName">
      <MemberSignature Language="C#" Value="public static string GetConnectionStringProviderName (string connectionStringName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetConnectionStringProviderName(string connectionStringName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionStringName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionStringName">The name of the connection string.</param>
        <summary>Returns the connection string provider from the &lt;<see langword="connectionStrings" />&gt; section of the Web.config file.</summary>
        <returns>The provider as a &lt;xref:System.String&gt; for this connection string name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A?displayProperty=fullName> property returns a collection of connection string values. The GetConnectionStringProviderName method returns the provider for the value from this collection that is associated with the connection string name.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The connection string name could not be found in the Web.config file.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression">The value of the declarative expression.</param>
        <param name="propertyType">The targeted type for the expression.</param>
        <param name="context">Properties for the control or page.</param>
        <summary>Returns an object that represents the parsed expression.</summary>
        <returns>An &lt;xref:System.Object&gt; containing the parsed representation of the expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned <xref:System.Object> is of the type <xref:System.Web.UI.Pair>. This <xref:System.Web.UI.Pair> object can be passed to both the <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression%2A> method as `parsedData`. The <xref:System.Web.UI.Pair> object contains the name and value of the connection string.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether an expression can be evaluated in a page that is not compiled.</summary>
        <value>
          <see langword="true" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SupportsEvaluate property indicates whether the <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class. <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A> must be implemented within an expression builder for an expression to be evaluated in a page that is not compiled. <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> supports no-compile evaluation of connection strings, so `true` is always returned.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>