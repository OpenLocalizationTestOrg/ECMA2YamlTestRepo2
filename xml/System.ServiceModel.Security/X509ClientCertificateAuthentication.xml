<Type Name="X509ClientCertificateAuthentication" FullName="System.ServiceModel.Security.X509ClientCertificateAuthentication">
  <TypeSignature Language="C#" Value="public class X509ClientCertificateAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509ClientCertificateAuthentication extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifies authentication properties for validating the client certificate.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> is set to <xref:System.ServiceModel.Security.X509CertificateValidationMode>, then you must create a custom certificate validator that inherits from the <xref:System.IdentityModel.Selectors.X509CertificateValidator> class. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][How to: Create a Service that Employs a Custom Certificate Validator](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code shows how to set this property.  
  
 [!code-cs[X509ClientCertificateAuthentication#1](~/add/codesnippet/csharp/t-system.servicemodel.se_11_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_11_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CertificateValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the certificate validation mode.</summary>
        <value>One of the &lt;xref:System.ServiceModel.Security.X509CertificateValidationMode&gt; values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Allowed values of <xref:System.ServiceModel.Security.X509CertificateValidationMode> are:  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode>  
  
   
  
## Examples  
 The following example uses the CertificateValidationMode to print to the screen.  
  
 [!code-cs[X509ClientCertificateAuthentication#7](~/add/codesnippet/csharp/1708aa2b-fff6-4e7f-acd6-_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#7](~/add/codesnippet/visualbasic/1708aa2b-fff6-4e7f-acd6-_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CustomCertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a custom client certificate validator.</summary>
        <value>The custom client certificate validator.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> property is set to <xref:System.ServiceModel.Security.X509CertificateValidationMode>, you must set the CustomCertificateValidator property to a custom validator that inherits from the <xref:System.IdentityModel.Selectors.X509CertificateValidator> class.  
  
 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [How to: Create a Service that Employs a Custom Certificate Validator](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code shows how to set this property.  
  
 [!code-cs[X509ClientCertificateAuthentication#2](~/add/codesnippet/csharp/f74e3b22-baeb-4c25-9aa0-_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#2](~/add/codesnippet/visualbasic/f74e3b22-baeb-4c25-9aa0-_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='Custom' customCertificateValidatorType='Samples.MyCertificateValidator, Samples' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see langword="set" /> when credential is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether Windows groups are included in the authorization context.</summary>
        <value>
          <see langword="true" /> if Windows groups are included in the authorization context; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is valid only when the <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount%2A> property is set to `true`.  
  
 Set this property to `false` only if you do not need to establish the list of groups a user belongs to - this may result in a performance benefit if your application and authorization decisions do not require Windows groups.  
  
   
  
## Examples  
 The following code shows how to set this property.  
  
 [!code-cs[X509ClientCertificateAuthentication#3](~/add/codesnippet/csharp/1339b633-18da-46f0-84cf-_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#3](~/add/codesnippet/visualbasic/1339b633-18da-46f0-84cf-_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication includeWindowsGroups ='true'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MapClientCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapClientCertificateToWindowsAccount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapClientCertificateToWindowsAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the certificate is mapped to Windows accounts.</summary>
        <value>
          <see langword="true" /> if the certificate is mapped to Windows accounts; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When using the certificate client credential type on bindings, the certificate is not mapped to Windows accounts. You can override this behavior using this property. When this property is set to `true`, it causes the identity from the client certificate to be mapped to a Windows account.  
  
   
  
## Examples  
 The following code shows how to set this property.  
  
 [!code-cs[X509ClientCertificateAuthentication#4](~/add/codesnippet/csharp/019cfab3-55df-4576-8237-_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#4](~/add/codesnippet/visualbasic/019cfab3-55df-4576-8237-_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication mapClientCertificateToWindowsAccount='true'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see langword="set" /> when credential is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RevocationMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the certificate revocation mode for ChainTrust and PeerOrChainTrust X.509 certificate validation.</summary>
        <value>One of the values in <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />: <see langword="NoCheck" />, <see langword="Online" />, or <see langword="Offline" />. The default is <see langword="Online" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When using certificates, the system validates that the client certificate is not revoked, by checking that the client certificate is not in the revoked certificate list. This check can be performed either by checking online or by checking against a cached revocation list. Revocation checking can be turned off by setting this property to <xref:System.Security.Cryptography.X509Certificates.X509RevocationMode>.  
  
 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Working with Certificates](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code shows how to set this property.  
  
 [!code-cs[X509ClientCertificateAuthentication#5](~/add/codesnippet/csharp/9bfc3afe-dbe6-433e-9e3f-_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#5](~/add/codesnippet/visualbasic/9bfc3afe-dbe6-433e-9e3f-_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust'   revocationMode = 'NoCheck'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see langword="set" /> when credential is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrustedStoreLocation">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.StoreLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the trusted store location under which context the client certificate chain is validated.</summary>
        <value>The trusted store location under which context the client certificate chain is validated.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property specifies whether machine or user context is used to verify the X.509 certificate chain.  
  
   
  
## Examples  
 [!code-cs[X509ClientCertificateAuthentication#6](~/add/codesnippet/csharp/bbf912df-27aa-4f4b-884b-_1.cs)]
 [!code-vb[X509ClientCertificateAuthentication#6](~/add/codesnippet/visualbasic/bbf912df-27aa-4f4b-884b-_1.vb)]  
  
 The property can also be set in a configuration file.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust'   trustedStoreLocation = 'LocalMachine'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see langword="set" /> when credential is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>