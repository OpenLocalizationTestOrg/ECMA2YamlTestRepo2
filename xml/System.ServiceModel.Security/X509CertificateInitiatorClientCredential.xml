<Type Name="X509CertificateInitiatorClientCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
  <TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorClientCredential extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines a certificate used by a client to identify itself.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the certificate to use to represent the service when communicating back to the client.</summary>
        <value>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to represent the service when communicating back to the client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the first call is made on the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] proxy, the <xref:System.ServiceModel.Description.ClientCredentials> are made read-only. Subsequently calling the `set` method results in an <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A <see langword="set" /> method was used when the credential is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Subject distinguished name.</param>
        <param name="storeLocation">The location of the certificate store the service uses to obtain the service certificate.</param>
        <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
        <summary>Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information on the `subjectName` parameter, see <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
 Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: the certificate store assigned to the local machine (default).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: the certificate store used by the current user.  
  
 If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
 Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  
  
   
  
## Examples  
 The following code specifies the certificate to use.  
  
 [!code-cs[c_TcpClient#3](~/add/codesnippet/csharp/69e80778-6733-491a-9c08-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">The location of the certificate store the client uses to obtain the client certificate.</param>
        <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
        <param name="findType">Defines the type of X.509 search to be executed.</param>
        <param name="findValue">The value to search for in the X.509 certificate store.</param>
        <summary>Allows you to specify the certificate to use to represent the client by specifying query parameters such as <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> and <paramref name="findValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: the certificate store assigned to the local machine (default).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: the certificate store used by the current user.  
  
 If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
 Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  
  
 Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  
  
 The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If more than one certificate is returned then the first one matching the find is used to represent the client.  
  
   
  
## Examples  
 The following code specifies the certificate to use.  
  
 [!code-cs[c_TcpClient#2](~/add/codesnippet/csharp/8672a3e6-75ae-4ac7-9118-_1.cs)]
 [!code-vb[c_TcpClient#2](~/add/codesnippet/visualbasic/8672a3e6-75ae-4ac7-9118-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>