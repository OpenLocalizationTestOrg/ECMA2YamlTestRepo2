<Type Name="UserNamePasswordServiceCredential" FullName="System.ServiceModel.Security.UserNamePasswordServiceCredential">
  <TypeSignature Language="C#" Value="public sealed class UserNamePasswordServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UserNamePasswordServiceCredential extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a class that is used to configure how the service authenticates users that use user name/password authentication and to configure the caching of logon tokens.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If none of the bindings used by a service is configured for user name/password-based authentication, the relevant properties for this class are ignored. These properties include the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>, and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> properties.  
  
 If none of the bindings used by a service is configured to use Windows authentication for user name/password, the settings related to caching of logon tokens are ignored. These settings include the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>, and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> properties.  
  
   
  
## Examples  
 The following example prints the values of the UserNamePasswordServiceCredential properties for a service.  
  
 [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/t-system.servicemodel.se_7_1.cs)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_7_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CachedLogonTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan CachedLogonTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CachedLogonTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum length of time that a token is cached.</summary>
        <value>A &lt;xref:System.TimeSpan&gt; that represents the maximum length of time that a token is cached`.` The default is 15 minutes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>.  
  
   
  
## Examples  
 The following example gets the value of this property.  
  
 [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/8bf03e02-af41-463c-8204-_1.cs)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/8bf03e02-af41-463c-8204-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CacheLogonTokens">
      <MemberSignature Language="C#" Value="public bool CacheLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether logon tokens are cached.</summary>
        <value>
          <see langword="true" /> if logon tokens are cached; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security asks the Windows security subsystem to create a logon token for every incoming user name/password security token if the user name is being mapped to a Windows account. This behavior can be changed by setting the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property.  
  
 For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> mode, the service uses Win32's `LogonUser` function for user name/password authentication. If the CacheLogonTokens is set to `true`, the resulting Windows token is cached and reused for the same user name/password pair. The cache is valid for <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>. The maximum number of caches is limited to <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A>.  
  
   
  
## Examples  
 The following example gets the value of this property.  
  
 [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/e71feb9d-7988-4452-b8ad-_1.cs)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/e71feb9d-7988-4452-b8ad-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CustomUserNamePasswordValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a custom user name and password validator.</summary>
        <value>A custom user name and password validator.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property must be set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> for the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> to take effect. When the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is set and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is not, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] uses Windows authentication and ignores the value of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property.  
  
 For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> mode, the service uses <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> for user name/password authentication by calling the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether Windows groups are included in the security context.</summary>
        <value>
          <see langword="true" /> if Windows groups are included in the security context; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In most scenarios when validating Windows user names and passwords, Windows groups in which users belong provide useful information for authorization decisions. However, if the Windows groups are not required, setting this property to `false` can improve performance by avoiding a full-group claim population.  
  
   
  
## Examples  
 The following example gets the value of this property.  
  
 [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/31050e0e-9e17-4b4b-8449-_1.cs)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/31050e0e-9e17-4b4b-8449-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxCachedLogonTokens">
      <MemberSignature Language="C#" Value="public int MaxCachedLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of logon tokens to cache.</summary>
        <value>The maximum number of logon tokens to cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is 128. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>.  
  
   
  
## Examples  
 The following example gets the value of this property.  
  
 [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/aa143f3c-624f-4ce6-9e71-_1.cs)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/aa143f3c-624f-4ce6-9e71-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the membership provider.</summary>
        <value>The &lt;xref:System.Web.Security.MembershipProvider&gt; for this service. The default is the <see cref="T:System.Web.Security.SqlMembershipProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> mode, the service uses <xref:System.Web.Security.MembershipProvider> for user name/password authentication by calling the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method.  
  
> [!NOTE]
>  The <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property must be set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> for the MembershipProvider to take effect. When the MembershipProvider property is set and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is not, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] uses Windows authentication and ignores the value of the MembershipProvider property.  
  
 If the <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> property is set to `MembershipProvider` and the `MembershipProvider` property is not set to a value, the default is the <xref:System.Web.Security.SqlMembershipProvider> class.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt is made to set this property when the credential is read-only.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UserNamePasswordValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the method of validating the user name and password.</summary>
        <value>A value from the enumeration in <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Possible values are:  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>  
  
 If this property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>, the service uses the object returned by <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A> to validate user names and passwords in incoming messages.  
  
> [!NOTE]
>  When a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service is hosted in Internet Information Services (IIS) using transport-level security and the UserNamePasswordValidationMode property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>, the custom authentication scheme uses a subset of Windows authentication. That is because in this scenario, IIS performs Windows authentication prior to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] invoking the custom authenticator.  
  
 When the value of this property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>, specify the membership provider by setting the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property, and then the membership provider instance specified by the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is used to validate the username and password in incoming messages.  
  
   
  
## Examples  
 The following example gets the value of this property.  
  
 [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/59ff8c12-ad84-4bb4-a355-_1.cs)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/59ff8c12-ad84-4bb4-a355-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>