<Type Name="XPathNodeIterator" FullName="System.Xml.XPath.XPathNodeIterator">
  <TypeSignature Language="C#" Value="public abstract class XPathNodeIterator : ICloneable, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathNodeIterator extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Position={CurrentPosition}, Current={debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides an iterator over a selected set of nodes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An XPathNodeIterator object returned by the <xref:System.Xml.XPath.XPathNavigator> class is not positioned on the first node in a selected set of nodes. A call to the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method of the XPathNodeIterator class must be made to position the XPathNodeIterator object on the first node in the selected set of nodes.  
  
 When using the XPathNodeIterator, if you edit the current node or any of its ancestors, your current position is lost. If you want to edit a number of nodes that you have selected, create a <xref:System.Xml.XPath.XPathNavigator> array, copy all of the nodes from the XPathNodeIterator into the array, then iterate through the array and modify the nodes.  
  
 There are two ways to iterate over an <xref:System.Xml.XPath.XPathNavigator> collection by using the XPathNodeIterator class.  
  
 One way is to use the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method and then call <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> to get the current <xref:System.Xml.XPath.XPathNavigator> instance, as in the following example:  
  
 [!code-cs[XPathNavigatorMethods#55](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_1.cs)]
 [!code-vb[XPathNavigatorMethods#55](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_1.vb)]
 [!code-cpp[XPathNavigatorMethods#55](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_1.cpp)]  
  
 Another way is to use a `foreach` loop to call the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method and use the returned <xref:System.Collections.IEnumerator> interface to enumerate the nodes, as in the following example:  
  
 [!code-cs[XPathNavigatorMethods#56](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_2.cs)]
 [!code-vb[XPathNavigatorMethods#56](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_2.vb)]
 [!code-cpp[XPathNavigatorMethods#56](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_2.cpp)]  
  
 You should either use <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> and <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> or use <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>. Combining these two approaches can cause unexpected results. For example, if the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method is called first, and then the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method is called in the `foreach` loop, the `foreach` loop will not start enumerating the results from the beginning of the collection, but from the position after the <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> method.  
  
   
  
## Examples  
 The following example uses the <xref:System.Xml.XPath.XPathNavigator.Select%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class to select a node set using the XPathNodeIterator class.  
  
 [!code-cs[XPathNavigatorMethods#39](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_3.cs)]
 [!code-vb[XPathNavigatorMethods#39](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_3.vb)]
 [!code-cpp[XPathNavigatorMethods#39](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_3.cpp)]  
  
 The example takes the `books.xml` file as input.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XPathNodeIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is called by derived class constructors to initialize state in this type.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNodeIterator Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, returns a clone of this <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object.</summary>
        <returns>A new <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object clone of this <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The cloned <xref:System.Xml.XPath.XPathNodeIterator> object is positioned at the same node in the node set if calls have been made to the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method. The cloned <xref:System.Xml.XPath.XPathNodeIterator> object is not affected by subsequent changes to this <xref:System.Xml.XPath.XPathNodeIterator> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the index of the last node in the selected set of nodes.</summary>
        <value>The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Count property does not affect the position of the <xref:System.Xml.XPath.XPathNodeIterator>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNavigator Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Xml.XPath.XPathNavigator" /> object for this <see cref="T:System.Xml.XPath.XPathNodeIterator" />, positioned on the current context node.</summary>
        <value>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the context node from which the node set was selected. The &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method must be called to move the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> to the first node in the selected set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the properties of the returned <xref:System.Xml.XPath.XPathNavigator> object to obtain information on the current node. However, the returned <xref:System.Xml.XPath.XPathNavigator> object should not be modified. The returned <xref:System.Xml.XPath.XPathNavigator> object cannot be moved away from the selected node set.  
  
 Alternatively, you can clone the <xref:System.Xml.XPath.XPathNavigator> object using the <xref:System.Xml.XPath.XPathNavigator.Clone%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class. The cloned <xref:System.Xml.XPath.XPathNavigator> object can then be moved away from the selected node set. This method of cloning the <xref:System.Xml.XPath.XPathNavigator> object might affect the performance of the XPath query.  
  
 If the <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>, <xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A>, and <xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A> methods result in no nodes being selected, the Current property might not be pointing to the context node.  
  
 To test whether nodes have been selected, use the <xref:System.Xml.XPath.XPathNodeIterator.Count%2A> property as shown in the following example.  
  
   
  
## Examples  
 The following example gets all book titles authored by Herman Melville using the Current property of the <xref:System.Xml.XPath.XPathNodeIterator> object and the <xref:System.Xml.XPath.XPathNavigator.Clone%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class.  
  
 [!code-cs[XPathNavigatorMethods#6](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_7_1.cs)]
 [!code-vb[XPathNavigatorMethods#6](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_7_1.vb)]
 [!code-cpp[XPathNavigatorMethods#6](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_7_1.cpp)]  
  
 The example takes the `contosoBooks.xml` file as input.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CurrentPosition">
      <MemberSignature Language="C#" Value="public abstract int CurrentPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</summary>
        <value>The index of the current position.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The index is 1-based. Therefore, the first node has an index of 1. An index of 0 indicates there are no selected nodes. This property always returns a positive integer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an &lt;xref:System.Collections.IEnumerator&gt; object to iterate through the selected node set.</summary>
        <returns>An &lt;xref:System.Collections.IEnumerator&gt; object to iterate through the selected node set.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The enumerator is positioned on the current position of the <xref:System.Xml.XPath.XPathNodeIterator> object.  
  
 There are two ways to iterate over an <xref:System.Xml.XPath.XPathNavigator> collection by using the <xref:System.Xml.XPath.XPathNodeIterator> class.  
  
 One way is to use the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method and then call <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> to get the current <xref:System.Xml.XPath.XPathNavigator> instance, as in the following example:  
  
 [!code-cs[XPathNavigatorMethods#55](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_1.cs)]
 [!code-vb[XPathNavigatorMethods#55](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_1.vb)]
 [!code-cpp[XPathNavigatorMethods#55](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_1.cpp)]  
  
 Another way is to use a `foreach` loop to call the GetEnumerator method and use the returned <xref:System.Collections.IEnumerator> interface to enumerate the nodes, as in the following example:  
  
 [!code-cs[XPathNavigatorMethods#56](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_2.cs)]
 [!code-vb[XPathNavigatorMethods#56](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_2.vb)]
 [!code-cpp[XPathNavigatorMethods#56](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_2.cpp)]  
  
 You should either use the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method and <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> or use the GetEnumerator method. Combining these two approaches can cause unexpected results. For example, if the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method is called first, and then the GetEnumerator method is called in the `foreach` loop, the `foreach` loop will not start enumerating the results from the beginning of the collection, but from the position after the <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public abstract bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> object returned by the &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; property to the next node in the selected node set.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Xml.XPath.XPathNavigator" /> object moved to the next node; <see langword="false" /> if there are no more selected nodes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Xml.XPath.XPathNodeIterator> object is positioned on the first node in the selected node set only after the initial call to the MoveNext method. The node set is created in document order. Therefore, calling the MoveNext method moves to the next node in document order.  
  
 There are two ways to iterate over an <xref:System.Xml.XPath.XPathNavigator> collection by using the <xref:System.Xml.XPath.XPathNodeIterator> class.  
  
 One way is to use the MoveNext method and then call <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> to get the current <xref:System.Xml.XPath.XPathNavigator> instance, as in the following example:  
  
 [!code-cs[XPathNavigatorMethods#55](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_1.cs)]
 [!code-vb[XPathNavigatorMethods#55](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_1.vb)]
 [!code-cpp[XPathNavigatorMethods#55](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_1.cpp)]  
  
 Another way is to use a `foreach` loop to call the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method and use the returned <xref:System.Collections.IEnumerator> interface to enumerate the nodes, as in the following example:  
  
 [!code-cs[XPathNavigatorMethods#56](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_2.cs)]
 [!code-vb[XPathNavigatorMethods#56](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_2.vb)]
 [!code-cpp[XPathNavigatorMethods#56](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_2.cpp)]  
  
 You should either use the MoveNext method and <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> or use the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method. Combining these two approaches can cause unexpected results. For example, if the MoveNext method is called first, and then the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method is called in the `foreach` loop, the `foreach` loop will not start enumerating the results from the beginning of the collection, but from the position after the <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> method.  
  
   
  
## Examples  
 The following example uses the <xref:System.Xml.XPath.XPathNavigator.Select%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class to select a node set using the <xref:System.Xml.XPath.XPathNodeIterator> class.  
  
 [!code-cs[XPathNavigatorMethods#39](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_3.cs)]
 [!code-vb[XPathNavigatorMethods#39](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_3.vb)]
 [!code-cpp[XPathNavigatorMethods#39](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_3.cpp)]  
  
 The example takes the `books.xml` file as input.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new object that is a copy of the current instance.</summary>
        <returns>A new object that is a copy of this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.XPath.XPathNodeIterator> instance is cast to an <xref:System.ICloneable> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>