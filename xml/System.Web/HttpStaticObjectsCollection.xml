<Type Name="HttpStaticObjectsCollection" FullName="System.Web.HttpStaticObjectsCollection">
  <TypeSignature Language="C#" Value="public sealed class HttpStaticObjectsCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpStaticObjectsCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides a collection of application-scoped objects for the &lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt; property.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpStaticObjectsCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.HttpStaticObjectsCollection" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array to copy the <see cref="T:System.Web.HttpStaticObjectsCollection" /> into.</param>
        <param name="index">The member of the collection where copying starts.</param>
        <summary>Copies members of an <see cref="T:System.Web.HttpStaticObjectsCollection" /> into an array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a new <xref:System.Object> array of the required size and copies an existing <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection into it.  
  
 [!code-vb[Classic HttpStaticObjectsCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/m-system.web.httpstatico_1_1.vb)]
 [!code-cs[Classic HttpStaticObjectsCollection.CopyTo Example#1](~/add/codesnippet/csharp/m-system.web.httpstatico_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of objects in the collection.</summary>
        <value>The number of objects in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The code in the following example executes only if the number of objects in the collection exceeds five.  
  
 [!code-cs[Classic HttpStaticObjectsCollection.Count Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_1_1.cs)]
 [!code-vb[Classic HttpStaticObjectsCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static System.Web.HttpStaticObjectsCollection Deserialize (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpStaticObjectsCollection Deserialize(class System.IO.BinaryReader reader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">The &lt;xref:System.IO.BinaryReader&gt; used to read the serialized collection from a stream or encoded string.</param>
        <summary>Creates an <see cref="T:System.Web.HttpStaticObjectsCollection" /> object from a binary file that was written by using the &lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt; method.</summary>
        <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> populated with the contents from a binary file written using the &lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt; method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Deserialize method is used to read the contents of a <xref:System.Web.HttpStaticObjectsCollection> object that is stored in a storage location that is created by the <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> method. To serialize an <xref:System.Web.HttpStaticObjectsCollection>, use the <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a dictionary enumerator used for iterating through the key-and-value pairs contained in the collection.</summary>
        <returns>The enumerator for the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates an enumerator for the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection.  
  
 [!code-cs[Classic HttpStaticObjectsCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.web.httpstatico_2_1.cs)]
 [!code-vb[Classic HttpStaticObjectsCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.web.httpstatico_2_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetObject(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The case-insensitive name of the object to return.</param>
        <summary>Returns the object with the specified name from the collection. This property is an alternative to the <see langword="this" /> accessor.</summary>
        <returns>An object from the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example returns an object named ArrayList1 from the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection and copies it to an object variable.  
  
 [!code-cs[Classic HttpStaticObjectsCollection.GetObject Example#1](~/add/codesnippet/csharp/m-system.web.httpstatico_0_1.cs)]
 [!code-vb[Classic HttpStaticObjectsCollection.GetObject Example#1](~/add/codesnippet/visualbasic/m-system.web.httpstatico_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection is read-only.</summary>
        <value>Always returns <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The code in the following example executes only if the collection is read-only.  
  
 [!code-vb[Classic HttpStaticObjectsCollection.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_3_1.vb)]
 [!code-cs[Classic HttpStaticObjectsCollection.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection is synchronized (that is, thread-safe).</summary>
        <value>In this implementation, this property always returns <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The case-insensitive name of the object to get.</param>
        <summary>Gets the object with the specified name from the collection.</summary>
        <value>An object from the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example retrieves an object named ArrayList1 from the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection and copies it to an object variable.  
  
 [!code-vb[Classic HttpStaticObjectsCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_2_1.vb)]
 [!code-cs[Classic HttpStaticObjectsCollection.this Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NeverAccessed">
      <MemberSignature Language="C#" Value="public bool NeverAccessed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeverAccessed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value indicating whether the collection has been accessed before.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Web.HttpStaticObjectsCollection" /> has never been accessed; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.BinaryWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The &lt;xref:System.IO.BinaryWriter&gt; used to write the serialized collection to a stream or encoded string.</param>
        <summary>Writes the contents of the collection to a &lt;xref:System.IO.BinaryWriter&gt; object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the Serialize method to write the contents of a <xref:System.Web.HttpStaticObjectsCollection> object to a <xref:System.IO.BinaryWriter> object. To retrieve a serialized <xref:System.Web.HttpStaticObjectsCollection> object, use the <xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        <value>The current <see cref="T:System.Web.HttpStaticObjectsCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program code should generally perform synchronized operations on the SyncRoot of a collection, not directly on the collection itself. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection object.  
  
 The object returned in this implementation is the <xref:System.Web.HttpStaticObjectsCollection> itself.  
  
   
  
## Examples  
 The following example creates an object used to synchronize access to the <xref:System.Web.HttpStaticObjectsCollection>.  
  
 [!code-vb[Classic HttpStaticObjectsCollection.SyncRoot Example#1](~/add/codesnippet/visualbasic/p-system.web.httpstatico_0_1.vb)]
 [!code-cs[Classic HttpStaticObjectsCollection.SyncRoot Example#1](~/add/codesnippet/csharp/p-system.web.httpstatico_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>