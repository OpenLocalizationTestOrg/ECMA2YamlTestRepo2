<Type Name="SqlBinary" FullName="System.Data.SqlTypes.SqlBinary">
  <TypeSignature Language="C#" Value="public struct SqlBinary : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit SqlBinary extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable, class System.Xml.Serialization.IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetXsdType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a variable-length stream of binary data to be stored in or retrieved from a database.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBinary (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">The byte array to be stored or retrieved.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure, setting the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property to the contents of the supplied byte array.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBinary Add (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBinary Add(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
        <summary>Concatenates two specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> values to create a new <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBinary" /> that is the concatenated value of x and y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Data.SqlTypes.SqlBinary value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(valuetype System.Data.SqlTypes.SqlBinary value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to be compared to this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to the supplied <see cref="T:System.Data.SqlTypes.SqlBinary" /> object and returns an indication of their relative values.</summary>
        <returns>A signed number that indicates the relative values of this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure and the object.  
  
 <list type="table">  
<listheader>  
<term> Return value  
  
 </term>  
<description> Condition  
  
 </description>  
</listheader>  
<item>  
<term> Less than zero  
  
 </term>  
<description> The value of this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object is less than the object.  
  
 </description>  
</item>  
<item>  
<term> Zero  
  
 </term>  
<description> This <see cref="T:System.Data.SqlTypes.SqlBinary" /> object is the same as object.  
  
 </description>  
</item>  
<item>  
<term> Greater than zero  
  
 </term>  
<description> This <see cref="T:System.Data.SqlTypes.SqlBinary" /> object is greater than object.  
  
 -or-  
  
 The object is a null reference.  
  
 </description>  
</item>  
</list></returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be compared to this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to the supplied object and returns an indication of their relative values.</summary>
        <returns>A signed number that indicates the relative values of this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure and the object.  
  
 <list type="table">  
<listheader>  
<term> Return value  
  
 </term>  
<description> Condition  
  
 </description>  
</listheader>  
<item>  
<term> Less than zero  
  
 </term>  
<description> The value of this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object is less than the object.  
  
 </description>  
</item>  
<item>  
<term> Zero  
  
 </term>  
<description> This <see cref="T:System.Data.SqlTypes.SqlBinary" /> object is the same as object.  
  
 </description>  
</item>  
<item>  
<term> Greater than zero  
  
 </term>  
<description> This <see cref="T:System.Data.SqlTypes.SqlBinary" /> object is greater than object.  
  
 -or-  
  
 The object is a null reference.  
  
 </description>  
</item>  
</list></returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBinary Concat (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBinary Concat(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Concatenates two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to create a new <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</summary>
        <returns>The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be compared.</param>
        <summary>Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</summary>
        <returns>
          <see langword="true" /> if object is an instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> and the two are equal; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean Equals(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether they are equal.</summary>
        <returns>
          <see langword="true" /> if the two values are equal. Otherwise, <see langword="false" />. If either instance is null, then the <see langword="SqlBinary" /> will be null.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetXsdType">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlQualifiedName GetXsdType(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">An <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
        <summary>Returns the XML Schema definition language (XSD) of the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
        <returns>A <see langword="string" /> that indicates the XSD of the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean GreaterThan(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is greater than the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is greater than the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is greater than or equal to the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is greater than or equal to the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure is null. This property is read-only.</summary>
        <value>
          <see langword="true" /> if <see langword="null" />; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The position of the byte to be retrieved.</param>
        <summary>Gets the single byte from the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property located at the position indicated by the integer parameter, <paramref name="index" />. If <paramref name="index" /> indicates a position beyond the end of the byte array, a <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> will be raised. This property is read-only.</summary>
        <value>The byte located at the position indicated by the integer parameter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property and the <xref:System.Data.SqlTypes.SqlBinary.Length%2A> property before reading this property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The property is read when the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property contains <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />  
  
 \- or -  
  
 The <paramref name="index" /> parameter indicates a position byond the length of the byte array as indicated by the &lt;xref:System.Data.SqlTypes.SqlBinary.Length%2A&gt; property.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length in bytes of the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property. This property is read-only.</summary>
        <value>The length of the binary data in the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Length property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Length property is read when the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property contains <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean LessThan(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is less than the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is less than the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean LessThanOrEqual(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is less than or equal to the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is less than or equal to the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean NotEquals(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether they are not equal.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the two instances are not equal or <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the two instances are equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlBinary Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlBinary Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a <see cref="T:System.DBNull" /> that can be assigned to this instance of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlBinary> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBinary op_Addition (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBinary op_Addition(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Concatenates the two <see cref="T:System.Data.SqlTypes.SqlBinary" /> parameters to create a new <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</summary>
        <returns>The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Equality(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether they are equal.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the two instances are equal or <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the two instances are not equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static byte[] op_Explicit (System.Data.SqlTypes.SqlBinary x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(valuetype System.Data.SqlTypes.SqlBinary x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBinary op_Explicit (System.Data.SqlTypes.SqlGuid x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBinary op_Explicit(valuetype System.Data.SqlTypes.SqlGuid x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlGuid" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_GreaterThan(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is greater than the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is greater than the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structues to determine whether the first is greater than or equal to the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is greater than or equal to the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBinary op_Implicit (byte[] x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBinary op_Implicit(unsigned int8[] x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Inequality(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether they are not equal.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the two instances are not equal or <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the two instances are equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LessThan(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is less than the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is less than the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual(valuetype System.Data.SqlTypes.SqlBinary x, valuetype System.Data.SqlTypes.SqlBinary y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBinary" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBinary" />
      </Parameters>
      <Docs>
        <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</param>
        <summary>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine whether the first is less than or equal to the second.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="T:System.Data.SqlTypes.SqlBoolean" /> if the first instance is less than or equal to the second instance. Otherwise <see cref="T:System.Data.SqlTypes.SqlBoolean" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A&gt;.</summary>
        <returns>An &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">A &lt;xref:System.Xml.XmlReader&gt;.</param>
        <summary>For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A &lt;xref:System.Xml.XmlWriter&gt;.</param>
        <summary>For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToSqlGuid">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlGuid ToSqlGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlGuid ToSqlGuid() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> to <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
        <returns>A <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to a string.</summary>
        <returns>A string that contains the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; of the <see cref="T:System.Data.SqlTypes.SqlBinary" />. If the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; is null the string will contain "null".</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure. This property is read-only.</summary>
        <value>The value of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To avoid raising a SqlNullValueException, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Value property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The Value property is read when the property contains <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>