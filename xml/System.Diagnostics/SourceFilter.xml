<Type Name="SourceFilter" FullName="System.Diagnostics.SourceFilter">
  <TypeSignature Language="C#" Value="public class SourceFilter : System.Diagnostics.TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SourceFilter extends System.Diagnostics.TraceFilter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Indicates whether a listener should trace a message based on the source of a trace.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 One of several different types of filters can be assigned to a trace listener to provide a layer of screening beyond that provided by the trace switch. The filter can be used to control the level of tracing that is produced by the listener.  
  
 This class filters events based on a specific trace source set by the user.  
  
 SourceFilter overrides the [TraceFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object\[\], Object, Object\[\])](assetId:///M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])?qualifyHint=False&autoUpgrade=True) method and defines a <xref:System.Diagnostics.SourceFilter.Source%2A> property that specifies the name of the trace source to be traced by the listener.  
  
> [!NOTE]
>  This filter is provided because multiple trace sources can simultaneously use the same trace listener.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SourceFilter (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">The name of the trace source.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SourceFilter" /> class, specifying the name of the trace source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of the `source` parameter is used to initialize the <xref:System.Diagnostics.SourceFilter.Source%2A> property.  
  
   
  
## Examples  
 The following code example calls the <xref:System.Diagnostics.TraceSource.TraceData%2A> method using two different source filters, one with a fictitious name, the other with the name of the current trace source. In the first case, the trace is not written to the console; in the second case, the trace is written. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  
  
 [!code-cs[System.Diagnostics.TraceSource#28](~/add/codesnippet/csharp/m-system.diagnostics.sou_1_1.cs)]
 [!code-vb[System.Diagnostics.TraceSource#28](~/add/codesnippet/visualbasic/m-system.diagnostics.sou_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">An object that represents the information cache for the trace event.</param>
        <param name="source">The name of the source.</param>
        <param name="eventType">One of the enumeration values that identifies the event type.</param>
        <param name="id">A trace identifier number.</param>
        <param name="formatOrMessage">The format to use for writing an array of arguments or a message to write.</param>
        <param name="args">An array of argument objects.</param>
        <param name="data1">A trace data object.</param>
        <param name="data">An array of trace data objects.</param>
        <summary>Determines whether the trace listener should trace the event.</summary>
        <returns>
          <see langword="true" /> if the trace should be produced; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the value of the `source` parameter matches the value of the <xref:System.Diagnostics.SourceFilter.Source%2A> property, the method returns `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the trace source.</summary>
        <value>The name of the trace source.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Source identifies the trace source for which to write trace information. Trace information will not be written for other trace sources. The name of the trace source is the `name` parameter from the constructor for the <xref:System.Diagnostics.TraceSource>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>