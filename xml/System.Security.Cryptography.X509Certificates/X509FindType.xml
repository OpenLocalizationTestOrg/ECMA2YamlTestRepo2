<Type Name="X509FindType" FullName="System.Security.Cryptography.X509Certificates.X509FindType">
  <TypeSignature Language="C#" Value="public enum X509FindType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed X509FindType extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the type of value the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A?displayProperty=fullName&gt; method searches for.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 X509FindType identifies the type of value provided in the `findValue` parameter for the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A> method. You can use X509FindType to search an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> collection by subject name, thumbprint, serial number, valid date range, or other value.  
  
 You can use a combination of `FindByTime` value types to find certificates that are valid in a given time range. The union of certificates returned using FindByTimeValid, FindByTimeNotYetValid, and FindByTimeExpired for a given time represents all certificates in the queried collection.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, finds only valid certificates, allows the user to select a certificate, and then writes certificate information to the console. The output depends on the certificate you select.  
  
 [!code-vb[certselect#1](~/add/codesnippet/visualbasic/t-system.security.crypto_116_1.vb)]
 [!code-cs[certselect#1](~/add/codesnippet/csharp/t-system.security.crypto_116_1.cs)]
 [!code-cpp[certselect#1](~/add/codesnippet/cpp/t-system.security.crypto_116_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="FindByApplicationPolicy">
      <MemberSignature Language="C#" Value="FindByApplicationPolicy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByApplicationPolicy = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing either the application policy friendly name or the object identifier (OID, or <see cref="T:System.Security.Cryptography.Oid" />) of the certificate. For example, "Encrypting File System" or "1.3.6.1.4.1.311.10.3.4" can be used. For an application that will be localized, the OID value must be used, because the friendly name is localized.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByCertificatePolicy">
      <MemberSignature Language="C#" Value="FindByCertificatePolicy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByCertificatePolicy = int32(11)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing either the friendly name or the object identifier (OID, or <see cref="T:System.Security.Cryptography.Oid" />) of the certificate policy. The best practice is to use the OID, such as "1.3.6.1.4.1.311.10.3.4". For an application that will be localized, the OID must be used, because the friendly name is localized.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByExtension">
      <MemberSignature Language="C#" Value="FindByExtension" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByExtension = int32(12)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string describing the extension to find. The object identifier (OID) is most commonly used to direct the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method to search for all certificates that have an extension matching that OID value.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByIssuerDistinguishedName">
      <MemberSignature Language="C#" Value="FindByIssuerDistinguishedName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerDistinguishedName = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the issuer distinguished name of the certificate. This is a more specific search than that provided by the FindByIssuerName enumeration value. Using the FindByIssuerDistinguishedName value, the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method performs a case-insensitive string comparison for the entire distinguished name. Searching by issuer name is a less precise search.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByIssuerName">
      <MemberSignature Language="C#" Value="FindByIssuerName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerName = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the issuer name of the certificate. This is a less specific search than that provided by the FindByIssuerDistinguishedName enumeration value. Using the FindByIssuerName value, the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method performs a case-insensitive string comparison using the supplied value. For example, if you pass "MyCA" to the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method, it will find all certificates with the issuer name containing that string, regardless of other issuer values.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByKeyUsage">
      <MemberSignature Language="C#" Value="FindByKeyUsage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByKeyUsage = int32(13)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be either a string representing the key usage or an integer representing a bit mask containing all the requested key usages. For the string value, only one key usage at a time can be specified, but the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method can be used in a cascading sequence to get the intersection of the requested usages. For example, the <paramref name="findValue" /> parameter can be set to "KeyEncipherment" or an integer (0x30 indicates "KeyEncipherment" and "DataEncipherment"). Values of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> enumeration can also be used.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindBySerialNumber">
      <MemberSignature Language="C#" Value="FindBySerialNumber" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindBySerialNumber = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string that represents the serial number of the certificate as displayed by the certificate dialog box, but without the spaces, or as returned by the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString%2A&gt; method.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindBySubjectDistinguishedName">
      <MemberSignature Language="C#" Value="FindBySubjectDistinguishedName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectDistinguishedName = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the subject distinguished name of the certificate. This is a more specific search than that provided by the FindBySubjectName enumeration value. Using the FindBySubjectDistinguishedName value, the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method performs a case-insensitive string comparison for the entire distinguished name. Searching by subject name is a less precise search.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindBySubjectKeyIdentifier">
      <MemberSignature Language="C#" Value="FindBySubjectKeyIdentifier" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectKeyIdentifier = int32(14)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the subject key identifier in hexadecimal, such as "F3E815D45E83B8477B9284113C64EF208E897112", as displayed in the UI.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindBySubjectName">
      <MemberSignature Language="C#" Value="FindBySubjectName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectName = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the subject name of the certificate. This is a less specific search than that provided by the FindBySubjectDistinguishedName enumeration value. Using the FindBySubjectName value, the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method performs a case-insensitive string comparison using the supplied value. For example, if you pass "MyCert" to the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method, it will find all certificates with the subject name containing that string, regardless of other subject values. Searching by distinguished name is a more precise search.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByTemplateName">
      <MemberSignature Language="C#" Value="FindByTemplateName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByTemplateName = int32(9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the template name of the certificate, such as "ClientAuth". A template name is an X509 version 3 extension that specifies the uses of the certificate.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByThumbprint">
      <MemberSignature Language="C#" Value="FindByThumbprint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByThumbprint = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a string representing the thumbprint of the certificate.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByTimeExpired">
      <MemberSignature Language="C#" Value="FindByTimeExpired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByTimeExpired = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a &lt;xref:System.DateTime&gt; value in local time. For example, you can find all the certificates that will be valid until the end of the year by eliminating the results of a &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; operation for FindByTimeExpired of the last day of the year from the results of a &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; operation for &lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByTimeNotYetValid">
      <MemberSignature Language="C#" Value="FindByTimeNotYetValid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByTimeNotYetValid = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a &lt;xref:System.DateTime&gt; value in local time. The value does not have to be in the future. For example, you can use FindByTimeNotYetValid to find certificates that became valid in the current year by taking the intersection of the results of a &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; operation for FindByTimeNotYetValid for the last day of last year with the results of a &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; operation for FindByTimeValid of &lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FindByTimeValid">
      <MemberSignature Language="C#" Value="FindByTimeValid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.X509FindType FindByTimeValid = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509FindType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <paramref name="findValue" /> parameter for the &lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A&gt; method must be a &lt;xref:System.DateTime&gt; value in local time. You can use &lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt; to find all the currently valid certificates.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>