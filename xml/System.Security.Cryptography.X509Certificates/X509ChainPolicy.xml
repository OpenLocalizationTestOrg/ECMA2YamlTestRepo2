<Type Name="X509ChainPolicy" FullName="System.Security.Cryptography.X509Certificates.X509ChainPolicy">
  <TypeSignature Language="C#" Value="public sealed class X509ChainPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509ChainPolicy extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the chain policy to be applied when building an X509 certificate chain. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object can have an X509ChainPolicy property that specifies the policy to be used in the verification process. Note that only <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objects can construct an X509ChainPolicy object.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#1](~/add/codesnippet/cpp/t-system.security.crypto_101_1.cpp)]
 [!code-cs[x509chaintest#1](~/add/codesnippet/csharp/t-system.security.crypto_101_1.cs)]
 [!code-vb[x509chaintest#1](~/add/codesnippet/visualbasic/t-system.security.crypto_101_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509ChainPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ApplicationPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.OidCollection ApplicationPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.OidCollection ApplicationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.OidCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of object identifiers (OIDs) specifying which application policies or enhanced key usages (EKUs) the certificate supports.</summary>
        <value>An <see cref="T:System.Security.Cryptography.OidCollection" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, this collection is empty. You can add additional object identifiers (OIDs) to the collection using the following code:  
  
 [!code-cs[x509chaintest#5](~/add/codesnippet/csharp/adddaa46-87de-45bb-a760-_1.cs)]
 [!code-cpp[x509chaintest#5](~/add/codesnippet/cpp/adddaa46-87de-45bb-a760-_1.cpp)]
 [!code-vb[x509chaintest#5](~/add/codesnippet/visualbasic/adddaa46-87de-45bb-a760-_1.vb)]  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#3](~/add/codesnippet/cpp/adddaa46-87de-45bb-a760-_2.cpp)]
 [!code-cs[x509chaintest#3](~/add/codesnippet/csharp/adddaa46-87de-45bb-a760-_2.cs)]
 [!code-vb[x509chaintest#3](~/add/codesnippet/visualbasic/adddaa46-87de-45bb-a760-_2.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CertificatePolicy">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.OidCollection CertificatePolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.OidCollection CertificatePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.OidCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of object identifiers (OIDs) specifying which certificate policies the certificate supports.</summary>
        <value>An <see cref="T:System.Security.Cryptography.OidCollection" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, this collection is empty. This property is only supported on Windows XP and later operating systems.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#3](~/add/codesnippet/cpp/8885175e-8d55-429f-ae12-_1.cpp)]
 [!code-cs[x509chaintest#3](~/add/codesnippet/csharp/8885175e-8d55-429f-ae12-_1.cs)]
 [!code-vb[x509chaintest#3](~/add/codesnippet/visualbasic/8885175e-8d55-429f-ae12-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExtraStore">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Collection ExtraStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2Collection ExtraStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents an additional collection of certificates that can be searched by the chaining engine when validating a certificate chain.</summary>
        <value>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protocols such as Secure Sockets Layer (SSL) and Secure MIME (S/MIME) allow the inclusion of additional certificates for use in validating a certificate chain; these certificates can prove to be useful in the validation process. This property allows these certificates to be passed to the chain validation engine. By default, this collection is empty.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> members to their default values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Resets all class properties to their default values.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RevocationFlag">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationFlag RevocationFlag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationFlag RevocationFlag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets values for X509 revocation flags.</summary>
        <value>An <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property uses values from the <xref:System.Security.Cryptography.X509Certificates.X509RevocationFlag> enumeration. <xref:System.Security.Cryptography.X509Certificates.X509RevocationFlag> is the default value.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#3](~/add/codesnippet/cpp/p-system.security.crypto_78_1.cpp)]
 [!code-cs[x509chaintest#3](~/add/codesnippet/csharp/p-system.security.crypto_78_1.cs)]
 [!code-vb[x509chaintest#3](~/add/codesnippet/visualbasic/p-system.security.crypto_78_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" /> value supplied is not a valid flag.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RevocationMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets values for X509 certificate revocation mode.</summary>
        <value>An <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property uses values from the <xref:System.Security.Cryptography.X509Certificates.X509RevocationMode> enumeration. <xref:System.Security.Cryptography.X509Certificates.X509RevocationMode> is the default value.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#3](~/add/codesnippet/cpp/p-system.security.crypto_99_1.cpp)]
 [!code-cs[x509chaintest#3](~/add/codesnippet/csharp/p-system.security.crypto_99_1.cs)]
 [!code-vb[x509chaintest#3](~/add/codesnippet/visualbasic/p-system.security.crypto_99_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> value supplied is not a valid flag.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UrlRetrievalTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan UrlRetrievalTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan UrlRetrievalTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time span that elapsed during online revocation verification or downloading the certificate revocation list (CRL).</summary>
        <value>A &lt;xref:System.TimeSpan&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When using online revocation checking, this property can be used to set the URL retrieval timeout.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerificationFlags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509VerificationFlags VerificationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509VerificationFlags VerificationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509VerificationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets verification flags for the certificate.</summary>
        <value>A value from the <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property returns values from the <xref:System.Security.Cryptography.X509Certificates.X509VerificationFlags> enumeration.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#3](~/add/codesnippet/cpp/795cd2c8-a4b3-4672-9b1f-_1.cpp)]
 [!code-cs[x509chaintest#3](~/add/codesnippet/csharp/795cd2c8-a4b3-4672-9b1f-_1.cs)]
 [!code-vb[x509chaintest#3](~/add/codesnippet/visualbasic/795cd2c8-a4b3-4672-9b1f-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> value supplied is not a valid flag. <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> is the default value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerificationTime">
      <MemberSignature Language="C#" Value="public DateTime VerificationTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime VerificationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The time that the certificate was verified expressed in local time.</summary>
        <value>A &lt;xref:System.DateTime&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property returns a value indicating the time the certificate was validated, expressed in local time. This is important when validating signed messages, since the signature must have been valid at the time of signing, not at the time of validation.  
  
   
  
## Examples  
 The following example opens the current user's personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  
  
 [!code-cpp[x509chaintest#3](~/add/codesnippet/cpp/816ff40d-4fcf-461a-9ff9-_1.cpp)]
 [!code-cs[x509chaintest#3](~/add/codesnippet/csharp/816ff40d-4fcf-461a-9ff9-_1.cs)]
 [!code-vb[x509chaintest#3](~/add/codesnippet/visualbasic/816ff40d-4fcf-461a-9ff9-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>