<Type Name="OpenFlags" FullName="System.Security.Cryptography.X509Certificates.OpenFlags">
  <TypeSignature Language="C#" Value="public enum OpenFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OpenFlags extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the way to open the X.509 certificate store.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ReadOnly, ReadWrite, and MaxAllowed flags are mutually exclusive. The OpenExistingOnly flag is the only flag that does not require the <xref:System.Security.Permissions.StorePermissionFlags> permission to be granted.  
  
   
  
## Examples  
 The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes you have three certificates to add to and remove from a local store.  
  
 [!code-cs[x509store2#1](~/add/codesnippet/csharp/t-system.security.crypto_22_1.cs)]
 [!code-cpp[x509store2#1](~/add/codesnippet/cpp/t-system.security.crypto_22_1.cpp)]
 [!code-vb[x509store2#1](~/add/codesnippet/visualbasic/t-system.security.crypto_22_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="IncludeArchived">
      <MemberSignature Language="C#" Value="IncludeArchived" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.OpenFlags IncludeArchived = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.OpenFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Open the X.509 certificate store and include archived certificates.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxAllowed">
      <MemberSignature Language="C#" Value="MaxAllowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.OpenFlags MaxAllowed = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.OpenFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Open the X.509 certificate store for the highest access allowed.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OpenExistingOnly">
      <MemberSignature Language="C#" Value="OpenExistingOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.OpenFlags OpenExistingOnly = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.OpenFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opens only existing stores; if no store exists, the &lt;xref:System.Security.Cryptography.X509Certificates.X509Store.Open%2A&gt; method will not create a new store.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="ReadOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.OpenFlags ReadOnly = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.OpenFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Open the X.509 certificate store for reading only.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReadWrite">
      <MemberSignature Language="C#" Value="ReadWrite" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.X509Certificates.OpenFlags ReadWrite = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.OpenFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Open the X.509 certificate store for both reading and writing.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>