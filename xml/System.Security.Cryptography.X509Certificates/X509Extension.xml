<Type Name="X509Extension" FullName="System.Security.Cryptography.X509Certificates.X509Extension">
  <TypeSignature Language="C#" Value="public class X509Extension : System.Security.Cryptography.AsnEncodedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509Extension extends System.Security.Cryptography.AsnEncodedData" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsnEncodedData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an X509 extension.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 X509 extensions are dynamic, extended properties that can be added to an X509 certificate and changed. The X509Extension class can be used to create extensions that are associated with a certificate but are not part of a certificate as issued by a certification authority (CA).  
  
 In its most basic form, an X509 extension has an object identifier (OID), a Boolean value describing whether the extension is considered critical or not, and ASN-encoded data. Custom extensions can be registered in a <xref:System.Security.Cryptography.CryptoConfig> file.  
  
 The.NET Framework includes implementations of several common X509 extensions:  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>. Describes the key usages of a certificate.  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension>. Describes the constraints for a certificate.  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension>. Describes the enhanced key usages of a certificate.  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>. Describes the key identifier. For example, used with XMLDSIG.  
  
   
  
## Examples  
 The following code example demonstrates using the X509Extension class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/t-system.security.crypto_59_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/t-system.security.crypto_59_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/t-system.security.crypto_59_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Extension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Extension> object, unlike the other constructors for this class that use certificate information from either a byte array, a pointer or a certificate file to create the object.  
  
   
  
## Examples  
 The following code example demonstrates using the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/m-system.security.crypto_68_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/m-system.security.crypto_68_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/m-system.security.crypto_68_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Extension (System.Security.Cryptography.AsnEncodedData encodedExtension, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.AsnEncodedData encodedExtension, bool critical) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encodedExtension" Type="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encodedExtension">The encoded data to be used to create the extension.</param>
        <param name="critical">
          <see langword="true" /> if the extension is critical; otherwise <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor if the information to create the extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.  
  
   
  
## Examples  
 The following code example demonstrates using the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/24571bbb-4006-4ff7-b1fb-_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/24571bbb-4006-4ff7-b1fb-_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/24571bbb-4006-4ff7-b1fb-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Extension (System.Security.Cryptography.Oid oid, byte[] rawData, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Oid oid, unsigned int8[] rawData, bool critical) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oid" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oid">The object identifier used to identify the extension.</param>
        <param name="rawData">The encoded data used to create the extension.</param>
        <param name="critical">
          <see langword="true" /> if the extension is critical; otherwise <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor uses information from the `oid` parameter to provide an object identifier for the extension.  
  
   
  
## Examples  
 The following code example demonstrates using the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/6d309490-0350-4c31-ba31-_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/6d309490-0350-4c31-ba31-_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/6d309490-0350-4c31-ba31-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="oid" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="oid" /> is an empty string ("").</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Extension (string oid, byte[] rawData, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string oid, unsigned int8[] rawData, bool critical) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oid" Type="System.String" />
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oid">A string representing the object identifier.</param>
        <param name="rawData">The encoded data used to create the extension.</param>
        <param name="critical">
          <see langword="true" /> if the extension is critical; otherwise <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor uses information from the `oid` parameter to provide an object identifier for the extension.  
  
   
  
## Examples  
 The following code example demonstrates using the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/cae4ae8a-153f-416c-a91e-_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/cae4ae8a-153f-416c-a91e-_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/cae4ae8a-153f-416c-a91e-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.Security.Cryptography.AsnEncodedData asnEncodedData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" />
      </Parameters>
      <Docs>
        <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> to be copied.</param>
        <summary>Copies the extension properties of the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to copy the extension properties of the specified <xref:System.Security.Cryptography.X509Certificates.X509Extension> and add them to the instance of the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class from which this method is called.  
  
   
  
## Examples  
 The following code example demonstrates using the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/a22400c0-f0a8-491f-a816-_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/a22400c0-f0a8-491f-a816-_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/a22400c0-f0a8-491f-a816-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asnEncodedData" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asnEncodedData" /> does not have a valid X.509 extension.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Critical">
      <MemberSignature Language="C#" Value="public bool Critical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Critical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value indicating whether the extension is critical.</summary>
        <value>
          <see langword="true" /> if the extension is critical; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to designate whether an extension is critical.  
  
   
  
## Examples  
 The following code example demonstrates using the <xref:System.Security.Cryptography.X509Certificates.X509Extension> class.  
  
 [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/p-system.security.crypto_27_1.cs)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/p-system.security.crypto_27_1.vb)]
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/p-system.security.crypto_27_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>