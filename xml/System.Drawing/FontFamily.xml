<Type Name="FontFamily" FullName="System.Drawing.FontFamily">
  <TypeSignature Language="C#" Value="public sealed class FontFamily : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FontFamily extends System.MarshalByRefObject implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows all the font families in the <xref:System.Drawing.FontFamily.Families%2A> property of the FontFamily class. This example is designed to be used with a Windows Form. To run this example, add a <xref:System.Windows.Forms.ListBox> named `listBox1` to a form and call the `PopulateListBoxWithFonts` method from the form's constructor.  
  
 [!code-cs[System.Drawing.MiscExamples#1](~/add/codesnippet/csharp/t-system.drawing.fontfam_1.cs)]
 [!code-cpp[System.Drawing.MiscExamples#1](~/add/codesnippet/cpp/t-system.drawing.fontfam_1.cpp)]
 [!code-vb[System.Drawing.MiscExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.fontfam_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (System.Drawing.Text.GenericFontFamilies genericFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Text.GenericFontFamilies genericFamily) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="genericFamily" Type="System.Drawing.Text.GenericFontFamilies" />
      </Parameters>
      <Docs>
        <param name="genericFamily">The <see cref="T:System.Drawing.Text.GenericFontFamilies" /> from which to create the new <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.FontFamily" /> from the specified generic font family.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the new <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.FontFamily" /> with the specified name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passing empty string ("") for the `name` parameter causes an exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string ("").  
  
 -or-  
  
 <paramref name="name" /> specifies a font that is not installed on the computer running the application.  
  
 -or-  
  
 <paramref name="name" /> specifies a font that is not a TrueType font.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string name, System.Drawing.Text.FontCollection fontCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Drawing.Text.FontCollection fontCollection) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fontCollection" Type="System.Drawing.Text.FontCollection" />
      </Parameters>
      <Docs>
        <param name="name">A &lt;xref:System.String&gt; that represents the name of the new <see cref="T:System.Drawing.FontFamily" />.</param>
        <param name="fontCollection">The <see cref="T:System.Drawing.Text.FontCollection" /> that contains this <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.FontFamily" /> in the specified <see cref="T:System.Drawing.Text.FontCollection" /> with the specified name.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string ("").  
  
 -or-  
  
 <paramref name="name" /> specifies a font that is not installed on the computer running the application.  
  
 -or-  
  
 <paramref name="name" /> specifies a font that is not a TrueType font.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources used by this <see cref="T:System.Drawing.FontFamily" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Calling Dispose allows the resources used by this <xref:System.Drawing.FontFamily> to be reallocated for other purposes.  
  
 Call Dispose when you are finished using the <xref:System.Drawing.FontFamily>. The Dispose method leaves the <xref:System.Drawing.FontFamily> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.FontFamily> so the garbage collector can reclaim the memory that the <xref:System.Drawing.FontFamily> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  
  
> [!NOTE]
>  Always call Dispose before you release your last reference to the <xref:System.Drawing.FontFamily>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.FontFamily> object's `Finalize` method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to test.</param>
        <summary>Indicates whether the specified object is a <see cref="T:System.Drawing.FontFamily" /> and is identical to this <see cref="T:System.Drawing.FontFamily" />.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.FontFamily" /> and is identical to this <see cref="T:System.Drawing.FontFamily" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates two <xref:System.Drawing.Font> objects.  
  
-   Tests whether they are equivalent.  
  
-   Displays the result of the test in a message box.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#1](~/add/codesnippet/cpp/m-system.drawing.fontfam_0_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#1](~/add/codesnippet/csharp/m-system.drawing.fontfam_0_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Families">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily[] Families { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily[] Families" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects associated with the current graphics context.</summary>
        <value>An array of <see cref="T:System.Drawing.FontFamily" /> objects associated with the current graphics context.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows all the font families in the Families property of the <xref:System.Drawing.FontFamily> class. This example is designed to be used with a Windows Form. To run this example, add a <xref:System.Windows.Forms.ListBox> named `listBox1` to a form and call the `PopulateListBoxWithFonts` method from the form's constructor.  
  
 [!code-cs[System.Drawing.MiscExamples#1](~/add/codesnippet/csharp/p-system.drawing.fontfam_0_1.cs)]
 [!code-cpp[System.Drawing.MiscExamples#1](~/add/codesnippet/cpp/p-system.drawing.fontfam_0_1.cpp)]
 [!code-vb[System.Drawing.MiscExamples#1](~/add/codesnippet/visualbasic/p-system.drawing.fontfam_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenericMonospace">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericMonospace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericMonospace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a generic monospace <see cref="T:System.Drawing.FontFamily" />.</summary>
        <value>A <see cref="T:System.Drawing.FontFamily" /> that represents a generic monospace font.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenericSansSerif">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericSansSerif { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericSansSerif" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a generic sans serif <see cref="T:System.Drawing.FontFamily" /> object.</summary>
        <value>A <see cref="T:System.Drawing.FontFamily" /> object that represents a generic sans serif font.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenericSerif">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericSerif { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericSerif" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a generic serif <see cref="T:System.Drawing.FontFamily" />.</summary>
        <value>A <see cref="T:System.Drawing.FontFamily" /> that represents a generic serif font.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCellAscent">
      <MemberSignature Language="C#" Value="public int GetCellAscent (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellAscent(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">A <see cref="T:System.Drawing.FontStyle" /> that contains style information for the font.</param>
        <summary>Returns the cell ascent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> of the specified style.</summary>
        <returns>The cell ascent for this <see cref="T:System.Drawing.FontFamily" /> that uses the specified <see cref="T:System.Drawing.FontStyle" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Gets the cell ascent for that font family.  
  
-   Draws the value of the cell ascent to the screen as text.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#2](~/add/codesnippet/cpp/m-system.drawing.fontfam_7_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#2](~/add/codesnippet/csharp/m-system.drawing.fontfam_7_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_7_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCellDescent">
      <MemberSignature Language="C#" Value="public int GetCellDescent (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellDescent(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">A <see cref="T:System.Drawing.FontStyle" /> that contains style information for the font.</param>
        <summary>Returns the cell descent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> of the specified style.</summary>
        <returns>The cell descent metric for this <see cref="T:System.Drawing.FontFamily" /> that uses the specified <see cref="T:System.Drawing.FontStyle" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Gets the cell descent for that font family.  
  
-   Draws the value of the cell descent to the screen as text.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#3](~/add/codesnippet/cpp/m-system.drawing.fontfam_5_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#3](~/add/codesnippet/csharp/m-system.drawing.fontfam_5_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_5_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEmHeight">
      <MemberSignature Language="C#" Value="public int GetEmHeight (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEmHeight(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> for which to get the em height.</param>
        <summary>Gets the height, in font design units, of the em square for the specified style.</summary>
        <returns>The height of the em square.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *Em square* is a typography term that refers to the rectangle occupied by the font's widest letter, traditionally the letter M.  
  
   
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Gets the em square height for that font family.  
  
-   Draws the value of the em height to the screen as text.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#4](~/add/codesnippet/cpp/m-system.drawing.fontfam_3_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#4](~/add/codesnippet/csharp/m-system.drawing.fontfam_3_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFamilies">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily[] GetFamilies (System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.FontFamily[] GetFamilies(class System.Drawing.Graphics graphics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not use method GetFamilies, use property Families instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> object from which to return <see cref="T:System.Drawing.FontFamily" /> objects.</param>
        <summary>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects available for the specified graphics context.</summary>
        <returns>An array of <see cref="T:System.Drawing.FontFamily" /> objects available for the specified <see cref="T:System.Drawing.Graphics" /> object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics " /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a hash code for this <see cref="T:System.Drawing.FontFamily" />.</summary>
        <returns>The hash code for this <see cref="T:System.Drawing.FontFamily" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Gets the hash code for the font family.  
  
-   Draws the value of the hash code to the screen as text.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#6](~/add/codesnippet/cpp/m-system.drawing.fontfam_8_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#6](~/add/codesnippet/csharp/m-system.drawing.fontfam_8_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_8_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetLineSpacing">
      <MemberSignature Language="C#" Value="public int GetLineSpacing (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineSpacing(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> to apply.</param>
        <summary>Returns the line spacing, in design units, of the <see cref="T:System.Drawing.FontFamily" /> of the specified style. The line spacing is the vertical distance between the base lines of two consecutive lines of text.</summary>
        <returns>The distance between two consecutive lines of text.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Gets the line spacing for the font family.  
  
-   Draws the value of the line spacing to the screen as text.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#7](~/add/codesnippet/cpp/m-system.drawing.fontfam_2_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#7](~/add/codesnippet/csharp/m-system.drawing.fontfam_2_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_2_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (int language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetName(int32 language) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="language">The language in which the name is returned.</param>
        <summary>Returns the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" />.</summary>
        <returns>A &lt;xref:System.String&gt; that represents the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To indicate language neutral, you should specify 0 for the `language` parameter. For a listing of the available languages and sublanguages, see the Winnt.h header file. If you have [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installed, this header file can typically be found relative to the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] installation directory at \\\VC\PlatformSDK\Include.  
  
   
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Gets the name of the font family.  
  
-   Draws the name of the font family to the screen as text.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#8](~/add/codesnippet/cpp/m-system.drawing.fontfam_4_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#8](~/add/codesnippet/csharp/m-system.drawing.fontfam_4_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_4_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAvailable">
      <MemberSignature Language="C#" Value="public bool IsStyleAvailable (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStyleAvailable(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> to test.</param>
        <summary>Indicates whether the specified <see cref="T:System.Drawing.FontStyle" /> enumeration is available.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Drawing.FontStyle" /> is available; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  
  
-   Creates a <xref:System.Drawing.FontFamily>.  
  
-   Tests whether the font family is available in an italic font.  
  
-   If it is, draws text to the screen.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#9](~/add/codesnippet/cpp/m-system.drawing.fontfam_6_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#9](~/add/codesnippet/csharp/m-system.drawing.fontfam_6_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_6_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of this <see cref="T:System.Drawing.FontFamily" />.</summary>
        <value>A &lt;xref:System.String&gt; that represents the name of this <see cref="T:System.Drawing.FontFamily" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows all the font families in the <xref:System.Drawing.FontFamily.Families%2A> property of the <xref:System.Drawing.FontFamily> class. This example is designed to be used with a Windows Form. To run this example, add a <xref:System.Windows.Forms.ListBox> named `listBox1` to a form, and call the `PopulateListBoxWithFonts` method from the form's constructor.  
  
 [!code-cs[System.Drawing.MiscExamples#1](~/add/codesnippet/csharp/p-system.drawing.fontfam_1_1.cs)]
 [!code-cpp[System.Drawing.MiscExamples#1](~/add/codesnippet/cpp/p-system.drawing.fontfam_1_1.cpp)]
 [!code-vb[System.Drawing.MiscExamples#1](~/add/codesnippet/visualbasic/p-system.drawing.fontfam_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <see cref="T:System.Drawing.FontFamily" /> to a human-readable string representation.</summary>
        <returns>The string that represents this <see cref="T:System.Drawing.FontFamily" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.FontFamily> and draws a string representation of the font family to the screen.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#10](~/add/codesnippet/cpp/m-system.drawing.fontfam_1_1.cpp)]
 [!code-cs[System.Drawing.ClassicFontFamilyExamples#10](~/add/codesnippet/csharp/m-system.drawing.fontfam_1_1.cs)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#10](~/add/codesnippet/visualbasic/m-system.drawing.fontfam_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>