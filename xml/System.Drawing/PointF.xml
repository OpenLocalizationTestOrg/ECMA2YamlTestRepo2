<Type Name="PointF" FullName="System.Drawing.PointF">
  <TypeSignature Language="C#" Value="public struct PointF" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit PointF extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To convert a PointF to a <xref:System.Drawing.Point>, use <xref:System.Drawing.Point.Round%2A?displayProperty=fullName> or <xref:System.Drawing.Point.Truncate%2A?displayProperty=fullName>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PointF (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The horizontal position of the point.</param>
        <param name="y">The vertical position of the point.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Drawing.PointF" /> class with the specified coordinates.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF Add (System.Drawing.PointF pt, System.Drawing.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF Add(valuetype System.Drawing.PointF pt, valuetype System.Drawing.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.Size" /> that specifies the numbers to add to the coordinates of `pt`.</param>
        <summary>Translates a given <see cref="T:System.Drawing.PointF" /> by the specified <see cref="T:System.Drawing.Size" />.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Drawing.PointF.Add%2A> method adds the <xref:System.Drawing.Size.Width%2A> of the specified size to the x-coordinate of the <xref:System.Drawing.PointF> and the <xref:System.Drawing.Size.Height%2A> to the y-coordinate of the <xref:System.Drawing.PointF>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF Add (System.Drawing.PointF pt, System.Drawing.SizeF sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF Add(valuetype System.Drawing.PointF pt, valuetype System.Drawing.SizeF sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the coordinates of `pt`.</param>
        <summary>Translates a given <see cref="T:System.Drawing.PointF" /> by a specified <see cref="T:System.Drawing.SizeF" />.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Add method adds the <xref:System.Drawing.SizeF.Width%2A> of the specified size to the x-coordinate of the <xref:System.Drawing.PointF> and the <xref:System.Drawing.SizeF.Height%2A> to the y-coordinate of the <xref:System.Drawing.PointF>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Add method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `AddExample`, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-vb[System.Drawing.Misc3#6](~/add/codesnippet/visualbasic/m-system.drawing.pointf._3_1.vb)]
 [!code-cs[System.Drawing.Misc3#6](~/add/codesnippet/csharp/m-system.drawing.pointf._3_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.PointF Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Drawing.PointF Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a new instance of the <see cref="T:System.Drawing.PointF" /> class with member data left uninitialized.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The &lt;xref:System.Object&gt; to test.</param>
        <summary>Specifies whether this <see cref="T:System.Drawing.PointF" /> contains the same coordinates as the specified &lt;xref:System.Object&gt;.</summary>
        <returns>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.PointF" /> and has the same coordinates as this <see cref="T:System.Drawing.Point" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code for this <see cref="T:System.Drawing.PointF" /> structure.</summary>
        <returns>An integer value that specifies a hash value for this <see cref="T:System.Drawing.PointF" /> structure.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this <see cref="T:System.Drawing.PointF" /> is empty.</summary>
        <value>
          <see langword="true" /> if both &lt;xref:System.Drawing.PointF.X%2A&gt; and &lt;xref:System.Drawing.PointF.Y%2A&gt; are 0; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF op_Addition (System.Drawing.PointF pt, System.Drawing.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.PointF op_Addition(valuetype System.Drawing.PointF pt, valuetype System.Drawing.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">A <see cref="T:System.Drawing.Size" /> that specifies the pair of numbers to add to the coordinates of `pt`.</param>
        <summary>Translates a <see cref="T:System.Drawing.PointF" /> by a given <see cref="T:System.Drawing.Size" />.</summary>
        <returns>Returns the translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
-   The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> using the Addition operator. This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Make sure the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  
  
 [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.pointf._1_1.cs)]
 [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.pointf._1_1.cpp)]
 [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.pointf._1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF op_Addition (System.Drawing.PointF pt, System.Drawing.SizeF sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.PointF op_Addition(valuetype System.Drawing.PointF pt, valuetype System.Drawing.SizeF sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the x- and y-coordinates of the <see cref="T:System.Drawing.PointF" />.</param>
        <summary>Translates the <see cref="T:System.Drawing.PointF" /> by the specified <see cref="T:System.Drawing.SizeF" />.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Addition operator adds the <xref:System.Drawing.SizeF.Width%2A> of the specified size to the x-coordinate of the <xref:System.Drawing.PointF> and the <xref:System.Drawing.SizeF.Height%2A> to the y-coordinate of the <xref:System.Drawing.PointF>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Addition operator. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `opAdditionExample`, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-vb[System.Drawing.Misc3#5](~/add/codesnippet/visualbasic/m-system.drawing.pointf._2_1.vb)]
 [!code-cs[System.Drawing.Misc3#5](~/add/codesnippet/csharp/m-system.drawing.pointf._2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Drawing.PointF left, System.Drawing.PointF right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.PointF left, valuetype System.Drawing.PointF right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Drawing.PointF" />
        <Parameter Name="right" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="left">A <see cref="T:System.Drawing.PointF" /> to compare.</param>
        <param name="right">A <see cref="T:System.Drawing.PointF" /> to compare.</param>
        <summary>Compares two <see cref="T:System.Drawing.PointF" /> structures. The result specifies whether the values of the &lt;xref:System.Drawing.PointF.X%2A&gt; and &lt;xref:System.Drawing.PointF.Y%2A&gt; properties of the two <see cref="T:System.Drawing.PointF" /> structures are equal.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Drawing.PointF.X%2A&gt; and &lt;xref:System.Drawing.PointF.Y%2A&gt; values of the left and right <see cref="T:System.Drawing.PointF" /> structures are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the Equality operator. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `opAdditionExample`, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-vb[System.Drawing.Misc3#5](~/add/codesnippet/visualbasic/m-system.drawing.pointf._0_1.vb)]
 [!code-cs[System.Drawing.Misc3#5](~/add/codesnippet/csharp/m-system.drawing.pointf._0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Drawing.PointF left, System.Drawing.PointF right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.PointF left, valuetype System.Drawing.PointF right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Drawing.PointF" />
        <Parameter Name="right" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="left">A <see cref="T:System.Drawing.PointF" /> to compare.</param>
        <param name="right">A <see cref="T:System.Drawing.PointF" /> to compare.</param>
        <summary>Determines whether the coordinates of the specified points are not equal.</summary>
        <returns>
          <see langword="true" /> to indicate the &lt;xref:System.Drawing.PointF.X%2A&gt; and &lt;xref:System.Drawing.PointF.Y%2A&gt; values of <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the Inequality operator. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `AddExample`, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-vb[System.Drawing.Misc3#6](~/add/codesnippet/visualbasic/3117f4d9-e39e-4649-bb04-_1.vb)]
 [!code-cs[System.Drawing.Misc3#6](~/add/codesnippet/csharp/3117f4d9-e39e-4649-bb04-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF op_Subtraction (System.Drawing.PointF pt, System.Drawing.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.PointF op_Subtraction(valuetype System.Drawing.PointF pt, valuetype System.Drawing.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.Size" /> that specifies the numbers to subtract from the coordinates of `pt`.</param>
        <summary>Translates a <see cref="T:System.Drawing.PointF" /> by the negative of a given <see cref="T:System.Drawing.Size" />.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF op_Subtraction (System.Drawing.PointF pt, System.Drawing.SizeF sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.PointF op_Subtraction(valuetype System.Drawing.PointF pt, valuetype System.Drawing.SizeF sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of `pt`.</param>
        <summary>Translates a <see cref="T:System.Drawing.PointF" /> by the negative of a specified <see cref="T:System.Drawing.SizeF" />.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Subtraction operator subtracts the <xref:System.Drawing.SizeF.Width%2A> of the specified size from the x-coordinate of the <xref:System.Drawing.PointF> and the <xref:System.Drawing.SizeF.Height%2A> from the y-coordinate of the <xref:System.Drawing.PointF>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Subtraction operator. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `opSubtractionExample`, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-vb[System.Drawing.Misc3#8](~/add/codesnippet/visualbasic/23dc6487-4718-4095-8b92-_1.vb)]
 [!code-cs[System.Drawing.Misc3#8](~/add/codesnippet/csharp/23dc6487-4718-4095-8b92-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF Subtract (System.Drawing.PointF pt, System.Drawing.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF Subtract(valuetype System.Drawing.PointF pt, valuetype System.Drawing.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.Size" /> that specifies the numbers to subtract from the coordinates of `pt`.</param>
        <summary>Translates a <see cref="T:System.Drawing.PointF" /> by the negative of a specified size.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Subtract method subtracts the <xref:System.Drawing.Size.Width%2A> of the specified size from the x-coordinate of the <xref:System.Drawing.PointF> and the <xref:System.Drawing.Size.Height%2A> from the y-coordinate of the <xref:System.Drawing.PointF>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Drawing.PointF Subtract (System.Drawing.PointF pt, System.Drawing.SizeF sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF Subtract(valuetype System.Drawing.PointF pt, valuetype System.Drawing.SizeF sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="sz" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="pt">The <see cref="T:System.Drawing.PointF" /> to translate.</param>
        <param name="sz">The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of `pt`.</param>
        <summary>Translates a <see cref="T:System.Drawing.PointF" /> by the negative of a specified size.</summary>
        <returns>The translated <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Subtract method subtracts the <xref:System.Drawing.SizeF.Width%2A> of the specified size from the x-coordinate of the <xref:System.Drawing.PointF> and the <xref:System.Drawing.SizeF.Height%2A> from the y-coordinate of the <xref:System.Drawing.PointF>.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Subtract operator. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `SubtractExample`, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-vb[System.Drawing.Misc3#7](~/add/codesnippet/visualbasic/m-system.drawing.pointf._4_1.vb)]
 [!code-cs[System.Drawing.Misc3#7](~/add/codesnippet/csharp/m-system.drawing.pointf._4_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <see cref="T:System.Drawing.PointF" /> to a human readable string.</summary>
        <returns>A string that represents this <see cref="T:System.Drawing.PointF" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the x-coordinate of this <see cref="T:System.Drawing.PointF" />.</summary>
        <value>The x-coordinate of this <see cref="T:System.Drawing.PointF" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the y-coordinate of this <see cref="T:System.Drawing.PointF" />.</summary>
        <value>The y-coordinate of this <see cref="T:System.Drawing.PointF" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>