<Type Name="ColorTranslator" FullName="System.Drawing.ColorTranslator">
  <TypeSignature Language="C#" Value="public sealed class ColorTranslator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColorTranslator extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Translates colors to and from GDI+ <see cref="T:System.Drawing.Color" /> structures. This class cannot be inherited.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="FromHtml">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color FromHtml (string htmlColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color FromHtml(string htmlColor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="htmlColor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="htmlColor">The string representation of the Html color to translate.</param>
        <summary>Translates an HTML color representation to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</summary>
        <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated HTML color or <see cref="T:System.Drawing.Color" /> if <paramref name="htmlColor" /> is <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method translates a string representation of an HTML color name, such as Blue or Red, to a GDI+ <xref:System.Drawing.Color> structure.  
  
   
  
## Examples  
 The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code translates an HTML color name to a <xref:System.Drawing.Color> structure, and then uses that color to fill a rectangle.  
  
 [!code-cpp[System.Drawing.ClassicColorTranslatorExamples#1](~/add/codesnippet/cpp/m-system.drawing.colortr_5_1.cpp)]
 [!code-cs[System.Drawing.ClassicColorTranslatorExamples#1](~/add/codesnippet/csharp/m-system.drawing.colortr_5_1.cs)]
 [!code-vb[System.Drawing.ClassicColorTranslatorExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.colortr_5_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <paramref name="htmlColor" /> is not a valid HTML color name.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FromOle">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color FromOle (int oleColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color FromOle(int32 oleColor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oleColor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oleColor">The OLE color to translate.</param>
        <summary>Translates an OLE color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</summary>
        <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated OLE color.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code translates an OLE color value to a <xref:System.Drawing.Color> structure, and then uses that color to fill a rectangle.  
  
 [!code-cpp[System.Drawing.ClassicColorTranslatorExamples#2](~/add/codesnippet/cpp/m-system.drawing.colortr_0_1.cpp)]
 [!code-cs[System.Drawing.ClassicColorTranslatorExamples#2](~/add/codesnippet/csharp/m-system.drawing.colortr_0_1.cs)]
 [!code-vb[System.Drawing.ClassicColorTranslatorExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.colortr_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FromWin32">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color FromWin32 (int win32Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color FromWin32(int32 win32Color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="win32Color">The Windows color to translate.</param>
        <summary>Translates a Windows color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</summary>
        <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated Windows color.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code translates a Windows color value to a <xref:System.Drawing.Color> structure, and then uses that color to fill a rectangle.  
  
 [!code-cpp[System.Drawing.ClassicColorTranslatorExamples#3](~/add/codesnippet/cpp/m-system.drawing.colortr_3_1.cpp)]
 [!code-cs[System.Drawing.ClassicColorTranslatorExamples#3](~/add/codesnippet/csharp/m-system.drawing.colortr_3_1.cs)]
 [!code-vb[System.Drawing.ClassicColorTranslatorExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.colortr_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToHtml">
      <MemberSignature Language="C#" Value="public static string ToHtml (System.Drawing.Color c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToHtml(valuetype System.Drawing.Color c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="c">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
        <summary>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an HTML string color representation.</summary>
        <returns>The string that represents the HTML color.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method translates a <xref:System.Drawing.Color> structure to a string representation of an HTML color. This is the commonly used name of a color, such as "Red", "Blue", or "Green", and not string representation of a numeric color value, such as "FF33AA".  
  
   
  
## Examples  
 The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code translates a <xref:System.Drawing.Color> structure to a string representation of an HTML color, and then shows a message box with the resulting string.  
  
 [!code-cpp[System.Drawing.ClassicColorTranslatorExamples#4](~/add/codesnippet/cpp/m-system.drawing.colortr_1_1.cpp)]
 [!code-cs[System.Drawing.ClassicColorTranslatorExamples#4](~/add/codesnippet/csharp/m-system.drawing.colortr_1_1.cs)]
 [!code-vb[System.Drawing.ClassicColorTranslatorExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.colortr_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToOle">
      <MemberSignature Language="C#" Value="public static int ToOle (System.Drawing.Color c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToOle(valuetype System.Drawing.Color c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="c">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
        <summary>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an OLE color.</summary>
        <returns>The OLE color value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code translates a <xref:System.Drawing.Color> structure to an integer that represents an OLE color, and then shows a message box with the resulting string.  
  
 [!code-cpp[System.Drawing.ClassicColorTranslatorExamples#5](~/add/codesnippet/cpp/m-system.drawing.colortr_2_1.cpp)]
 [!code-cs[System.Drawing.ClassicColorTranslatorExamples#5](~/add/codesnippet/csharp/m-system.drawing.colortr_2_1.cs)]
 [!code-vb[System.Drawing.ClassicColorTranslatorExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.colortr_2_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToWin32">
      <MemberSignature Language="C#" Value="public static int ToWin32 (System.Drawing.Color c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToWin32(valuetype System.Drawing.Color c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="c">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
        <summary>Translates the specified <see cref="T:System.Drawing.Color" /> structure to a Windows color.</summary>
        <returns>The Windows color value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code translates a <xref:System.Drawing.Color> structure to an integer that represents a Windows color, and then shows a message box with the resulting string.  
  
 [!code-cpp[System.Drawing.ClassicColorTranslatorExamples#6](~/add/codesnippet/cpp/m-system.drawing.colortr_4_1.cpp)]
 [!code-cs[System.Drawing.ClassicColorTranslatorExamples#6](~/add/codesnippet/csharp/m-system.drawing.colortr_4_1.cs)]
 [!code-vb[System.Drawing.ClassicColorTranslatorExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.colortr_4_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>