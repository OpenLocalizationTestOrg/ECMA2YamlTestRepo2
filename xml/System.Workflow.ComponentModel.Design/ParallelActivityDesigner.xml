<Type Name="ParallelActivityDesigner" FullName="System.Workflow.ComponentModel.Design.ParallelActivityDesigner">
  <TypeSignature Language="C#" Value="public class ParallelActivityDesigner : System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelActivityDesigner extends System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides methods and properties for all activity designers that display parallel vertical layouts on a workflow design surface.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  
  
 An activity designer that displays a parallel vertical layout represents an activity on the workflow design surface that has two code paths that a workflow can follow. For example, the designer used for the <xref:System.Workflow.Activities.IfElseActivity> activity displays the <xref:System.Workflow.Activities.IfElseActivity> activity on the workflow design surface and has a parallel vertical layout. Each branch of the parallel layout visually represents an <xref:System.Workflow.Activities.IfElseBranchActivity> activity contained in the <xref:System.Workflow.Activities.IfElseActivity> activity.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanMoveActivities">
      <MemberSignature Language="C#" Value="public override bool CanMoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanMoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation">The <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that describes the location to move the activities to.</param>
        <param name="activitiesToMove">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to move.</param>
        <summary>Returns a value that indicates whether child activities of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> can be moved.</summary>
        <returns>
          <see langword="true" /> if the activities can be moved from the parent activity; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to override the CanMoveActivities method to allow the moving of child activities within the <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner>.  
  
 [!code-cs[WF_Samples#26](~/add/codesnippet/csharp/wf_snippets/snippets.cs#26)]
 [!code-vb[WF_Samples#26](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#26)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanRemoveActivities">
      <MemberSignature Language="C#" Value="public override bool CanRemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanRemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove">The read-only collection of activities to remove.</param>
        <summary>Returns a value that indicates whether child activities of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> can be deleted.</summary>
        <returns>
          <see langword="true" /> if the activities can be deleted from the parent activity; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to override the CanRemoveActivities method to allow the moving of child activities within the <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner>.  
  
 [!code-cs[WF_Samples#27](~/add/codesnippet/csharp/wf_snippets/snippets.cs#27)]
 [!code-vb[WF_Samples#27](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#27)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FirstSelectableObject">
      <MemberSignature Language="C#" Value="public override object FirstSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <value>An &lt;xref:System.Object&gt; that is the first selectable object in the designer navigation order.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the designer's <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> property or the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> property is set to `false`, FirstSelectableObject returns a null reference (`Nothing` in Visual Basic). If the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> property count is greater than 0, FirstSelectableObject returns the <xref:System.Workflow.ComponentModel.Activity> associated with the first activity designer in the collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDropTargets">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle[] GetDropTargets (System.Drawing.Point dropPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle[] GetDropTargets(valuetype System.Drawing.Point dropPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dropPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="dropPoint">The <see cref="T:System.Drawing.Point" /> that defines the x- and y-coordinates for the drop target.</param>
        <summary>Returns array of rectangles that represent the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>The <see cref="T:System.Drawing.Rectangle" /> array that represents the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetNextSelectableObject">
      <MemberSignature Language="C#" Value="public override object GetNextSelectableObject (object obj, System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetNextSelectableObject(object obj, valuetype System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="direction" Type="System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="obj">The current &lt;xref:System.Object&gt; in the navigation order.</param>
        <param name="direction">A <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> enumeration value that determines the navigation order of the designer.</param>
        <summary>Returns the first selectable object that follows the specified object in the navigation order of the current <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>An &lt;xref:System.Object&gt; that follows the specified object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LastSelectableObject">
      <MemberSignature Language="C#" Value="public override object LastSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the last selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <value>The &lt;xref:System.Object&gt; that is the last selectable object in the designer navigation order.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the designer's <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> or <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> property is set to `false`, LastSelectableObject returns a null reference (`Nothing` in Visual Basic). If <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner> contains child activity designers, LastSelectableObject returns the last selectable object associated with the first child activity designer. If the child activity designer is collapsed, LastSelectableObject returns the <xref:System.Workflow.ComponentModel.Activity> associated with the first activity designer in the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCreateNewBranch">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.CompositeActivity OnCreateNewBranch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Workflow.ComponentModel.CompositeActivity OnCreateNewBranch() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates that the user has created a new branch activity on the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>The <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that was added as the new branch of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected override void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
        <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
        <summary>Sets the size of the visual cues on the designers contained within the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <returns>The <see cref="T:System.Drawing.Size" /> that contains the new size settings for the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing arguments.</param>
        <summary>Draws the visual representation of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> at design time.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of designer verbs to be associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
        <value>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> that contains the designer verbs to associate with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Verbs property determines the commands that are displayed on the <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner> context menu.  
  
 The verb collection includes any designer verbs <xref:System.Workflow.ComponentModel.Design.ParallelActivityDesigner> inherits from the designer classes it extends.  
  
   
  
## Examples  
 The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs%2A> property to insert custom verb actions for a <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner>. The `CreateActivityVerbs` creates a new <xref:System.Workflow.ComponentModel.Design.ActivityDesignerVerb> named `"Add New Parallel Branch"` and associates an event handler named `OnAddParallelBranch`. When the verb is clicked in the workflow designer, the event handler is called.  
  
 [!code-cs[WF_Samples#73](~/add/codesnippet/csharp/wf_snippets/snippets.cs#73)]
 [!code-vb[WF_Samples#73](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#73)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>