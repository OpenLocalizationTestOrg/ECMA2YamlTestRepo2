<Type Name="WorkflowMenuCommands" FullName="System.Workflow.ComponentModel.Design.WorkflowMenuCommands">
  <TypeSignature Language="C#" Value="public sealed class WorkflowMenuCommands : System.ComponentModel.Design.StandardCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowMenuCommands extends System.ComponentModel.Design.StandardCommands" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.StandardCommands</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines a set of <see cref="T:System.ComponentModel.Design.CommandID" /> fields that each corresponds to a command function provided by the workflow designers. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  
  
 WorkflowMenuCommands contains a set of <xref:System.ComponentModel.Design.CommandID> fields that can be used to specify a command to link when adding a command using the <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method of the <xref:System.ComponentModel.Design.IMenuCommandService>.  
  
   
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the WorkflowMenuCommands class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMenuCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowMenuCommands" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the <xref:System.Workflow.ComponentModel.Design.WorkflowMenuCommands> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BreakpointActionMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID BreakpointActionMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID BreakpointActionMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint action menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The breakpoint action menu is typically used to set, remove, or change breakpoints.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BreakpointConditionMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID BreakpointConditionMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID BreakpointConditionMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint condition menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The breakpoint condition menu is typically used to set, remove, or change conditional breakpoints.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BreakpointConstraintsMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID BreakpointConstraintsMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID BreakpointConstraintsMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint constraints menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The breakpoint constraints menu is typically used to set, remove or change constraints on breakpoints.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BreakpointHitCountMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID BreakpointHitCountMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID BreakpointHitCountMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint hit count menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The breakpoint hit count menu typically displays the hit count for breakpoints.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BreakpointLocationMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID BreakpointLocationMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID BreakpointLocationMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint location menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The breakpoint location menu is typically used to modify the location of breakpoints.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ChangeTheme">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ChangeTheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ChangeTheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the change theme menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The theme change menu is typically used to change the theme for the designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClearBreakpointsMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ClearBreakpointsMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ClearBreakpointsMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the clear breakpoints menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The clear breakpoints menu is typically used to clear all breakpoints set in the debugger.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Collapse;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Collapse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the collapse menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The collapse menu is typically used to collapse composite activities.  
  
   
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the <xref:System.Workflow.ComponentModel.Design.WorkflowMenuCommands> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyToClipboard">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID CopyToClipboard;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID CopyToClipboard" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the copy menu. This field is read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateTheme">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID CreateTheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID CreateTheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the create theme menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The create theme menu is typically used to create a new theme for the designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DebugCommandSetId">
      <MemberSignature Language="C#" Value="public static readonly Guid DebugCommandSetId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid DebugCommandSetId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a unique identifier for the debug command set. This field is read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DebugStepBranchMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID DebugStepBranchMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID DebugStepBranchMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the debug step branch menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The debug step branch menu is typically used to step into a branch in the debugger.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DebugStepInstanceMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID DebugStepInstanceMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID DebugStepInstanceMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the debug step instance menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The debug step instance menu is typically used to step into an instance of an object in the debugger.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DebugWorkflowGroupId">
      <MemberSignature Language="C#" Value="public static readonly Guid DebugWorkflowGroupId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid DebugWorkflowGroupId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a unique identifier for the debug workflow group of menus. This field is read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultFilter">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID DefaultFilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID DefaultFilter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the default filter menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default filter menu is typically used to set or modify the default filter for the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultPage">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID DefaultPage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID DefaultPage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the default page menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default page menu is typically used to set or modify the default page for the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DesignerActionsMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID DesignerActionsMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID DesignerActionsMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the designer actions menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The designer actions menu is typically used to access actions available to the designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DesignerProperties">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID DesignerProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID DesignerProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the designer properties menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The designer properties menu typically provides a dialog to set designer properties.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Disable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Disable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the disable menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The disable menu typically disables an activity on a workflow.  
  
   
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the <xref:System.Workflow.ComponentModel.Design.WorkflowMenuCommands> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Enable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Enable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the enable menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The enable menu typically enables an activity on a workflow.  
  
   
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the <xref:System.Workflow.ComponentModel.Design.WorkflowMenuCommands> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EnableBreakpointMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID EnableBreakpointMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID EnableBreakpointMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the enable breakpoint menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The enable breakpoint menu typically enables a previously set breakpoint.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExecutionStateMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ExecutionStateMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ExecutionStateMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the execution state menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The execution state menu typically indicates the state of the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Expand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Expand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the expand menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The expand menu typically causes collapsed sections of code to expand.  
  
   
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the <xref:System.Workflow.ComponentModel.Design.WorkflowMenuCommands> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FirstZoomCommand">
      <MemberSignature Language="C#" Value="public const int FirstZoomCommand = 12544;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FirstZoomCommand = (12544)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>12544</MemberValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom first menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom first command typically restores the workflow view to the first zoom level.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GotoDisassemblyMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID GotoDisassemblyMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID GotoDisassemblyMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the goto disassembly menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The goto disassembly menu is typically used to navigate to disassembled code in the debugger.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InsertBreakpointMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID InsertBreakpointMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID InsertBreakpointMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the insert breakpoint menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The insert breakpoint menu is typically used to insert a breakpoint into the workflow at the cursor or before the current selection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InsertTracePointMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID InsertTracePointMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID InsertTracePointMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the insert tracepoint menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The insert tracepoint menu is typically used to insert a tracepoint at the cursor or before the current selection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LastZoomCommand">
      <MemberSignature Language="C#" Value="public const int LastZoomCommand = 12551;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LastZoomCommand = (12551)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>12551</MemberValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom last menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The last zoom command typically restores the workflow view to the last zoom level.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuGuid">
      <MemberSignature Language="C#" Value="public static readonly Guid MenuGuid;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid MenuGuid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a unique identifier for the menu. This field is read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NewDataBreakpointMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID NewDataBreakpointMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID NewDataBreakpointMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the new data breakpoint menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The new data breakpoint menu typically inserts a new data-driven breakpoint.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NewFileTracePointMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID NewFileTracePointMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID NewFileTracePointMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the new file tracepoint menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The new file tracepoint menu typically inserts a new tracepoint.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PageDown;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PageDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the PageDown menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The page down menu is typically used to scroll the workflow down one page.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PageLayoutMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PageLayoutMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PageLayoutMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the page layout menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The page layout menu is typically used to adjust the page layout options.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PageSetup;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PageSetup" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the page setup menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The page setup menu is typically used to bring forward the page setup dialog.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PageUp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PageUp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the PageUp menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The page up menu is typically used to scroll the workflow up one page.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Pan">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Pan;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Pan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the pan menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The pan menu is typically used to scroll the visible area of the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PanMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PanMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PanMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the pan menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The pan menu is typically used to scroll the visible area of the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Print;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Print" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the print menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The print menu is typically used to print the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PrintPreview;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PrintPreview" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the print preview menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The print preview menu is typically used to preview the printing of a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrintPreviewPage">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID PrintPreviewPage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID PrintPreviewPage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the print preview page menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The print preview page menu is typically used to page through a print preview.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RunToCursorMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID RunToCursorMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID RunToCursorMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the run to cursor menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The run to cursor menu is typically used to place a breakpoint in the workflow at the location of the cursor and resume execution until that breakpoint is reached.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SaveAsImage">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID SaveAsImage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID SaveAsImage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the save as image menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The save as image menu saves the workflow as an image.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID SelectionMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID SelectionMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the selection menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The selection menu is typically used to manage a selection within the workflow.  
  
   
  
## Examples  
 The following example demonstrates how to create a custom <xref:System.ComponentModel.Design.MenuCommandService>. In this example, a context menu is created when the `ShowContextMenu` is called. In the `GetSelectionMenuItems` method, the <xref:System.Workflow.ComponentModel.Design.WorkflowMenuCommands> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate `MenuCommand` is invoked.  
  
 [!code-cs[WF_Samples#44](~/add/codesnippet/csharp/wf_snippets/snippets.cs#44)]
 [!code-vb[WF_Samples#44](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#44)]  
  
 To enable this service, call the `AddService` method of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property in a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class as shown in the following example.  
  
 [!code-cs[WF_Samples#31](~/add/codesnippet/csharp/wf_snippets/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetNextStatementMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID SetNextStatementMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID SetNextStatementMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the set next statement menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The set next statement menu is typically used to set the next statement to execute while stepping through the execution of a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowAll">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ShowAll;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ShowAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the show all menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The show all menu is typically used to show all child objects in the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowNextStatementMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ShowNextStatementMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ShowNextStatementMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the show next statement menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The show next statement menu is typically used to highlight the next statement to be executed while stepping through the execution of a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToggleBreakpointMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ToggleBreakpointMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ToggleBreakpointMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the toggle breakpoint menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The toggle breakpoint menu is typically used to turn on or off a breakpoint.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupActions">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupActions;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupActions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the verb group actions menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The verb group actions menu is typically used to access actions arranged by verb group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupDesignerActions">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupDesignerActions;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupDesignerActions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the verb group designer actions menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The verb group designer actions menu is typically used to access designer actions arranged by verb group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupEdit">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupEdit;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupEdit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the edit verb group menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The edit verb group is typically used to access the verbs in the edit group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupGeneral">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupGeneral;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupGeneral" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the general verb group menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The general verb group menu is typically used to access verbs in the general group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupMisc">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupMisc;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupMisc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the miscellaneous verb group menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The miscellaneous verb group menu is typically used to access verbs in the miscellaneous group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupOptions">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupOptions;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupOptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the options verb group menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The options very group menu is typically used to access verbs in the options group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerbGroupView">
      <MemberSignature Language="C#" Value="public static readonly int VerbGroupView;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 VerbGroupView" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the view verb group menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The view verb group menu is typically used to access verbs in the view group.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WorkflowCommandSetId">
      <MemberSignature Language="C#" Value="public static readonly Guid WorkflowCommandSetId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid WorkflowCommandSetId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a unique identifier for the workflow command set. This field is read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WorkflowToolBar">
      <MemberSignature Language="C#" Value="public const int WorkflowToolBar = 1292;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WorkflowToolBar = (1292)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1292</MemberValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the workflow toolbar menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The workflow toolbar menu appears at the bottom of the workflow design surface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom100Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom100Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom100Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 100% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 100% menu is typically used to set the zoom level to 100% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom150Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom150Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom150Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 150% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 150% menu is typically used to set the zoom level to 150% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom200Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom200Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom200Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 200% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 200% menu is typically used to set the zoom level to 200% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom300Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom300Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom300Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 300% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 300% menu is typically used to set the zoom level to 300% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom400Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom400Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom400Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 400% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 400% menu is typically used to set the zoom level to 400% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom50Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom50Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom50Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 50% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 50% menu is typically used to set the zoom level to 50% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Zoom75Mode">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID Zoom75Mode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID Zoom75Mode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 75% menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom 75% menu is typically used to set the zoom level to 75% on a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ZoomIn">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ZoomIn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ZoomIn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom in menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom in menu is typically used to increase the magnification of a workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ZoomLevelCombo">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ZoomLevelCombo;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ZoomLevelCombo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom level combo menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom level combo menu is typically used to bring forward a dialog from which the user can select a zoom level from a combo box.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ZoomLevelListHandler">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ZoomLevelListHandler;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ZoomLevelListHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom level list handler menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom level list handler typically provides a mechanism to switch between different view levels.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ZoomMenu">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ZoomMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ZoomMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom menu typically provides a choice of zoom levels for the workflow view.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ZoomOut">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.Design.CommandID ZoomOut;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.Design.CommandID ZoomOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom out menu. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The zoom out menu is typically used to decrease the magnification of the workflow.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>