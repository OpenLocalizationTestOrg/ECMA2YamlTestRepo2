<Type Name="Typography" FullName="System.Windows.Documents.Typography">
  <TypeSignature Language="C#" Value="public sealed class Typography" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Typography extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides access to a rich set of [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] typography properties.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Typography object exposes the set of features that an [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] font supports. By setting the properties of Typography in markup or code, you can easily author documents that take advantage of [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] features.  
  
 The following text displays standard capital letters for the Pescadero font, followed by the letters styled as "SmallCaps" and "AllSmallCaps". In this case, the same font size is used for all three words.  
  
 ![Text using OpenType capitals](~/add/media/opentypefont11.gif "Text using OpenType capitals")  
Text using OpenType capitals  
  
 The following markup example shows how to define capitals for the Pescadero font, using properties of the Typography object. When the "SmallCaps" format is used, any leading capital letter is ignored.  
  
 [!code-xml[OpenTypeFontSnippets#9](~/add/codesnippet/xaml/t-system.windows.documen_9_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#9](~/add/codesnippet/xaml/t-system.windows.documen_9_1.xaml)]  
  
 The following code example accomplishes the same task as the previous markup example.  
  
 [!code-vb[TypographyCodeSnippets#TypographyCodeSnippet1](~/add/codesnippet/visualbasic/typographycodesnippets/page1.xaml.vb#typographycodesnippet1)]
 [!code-cs[TypographyCodeSnippets#TypographyCodeSnippet1](~/add/codesnippet/csharp/TypographyCodeSnippets/Page1.xaml.cs#typographycodesnippet1)]  
  
## Typography Properties  
 The following table lists the properties, values, and default value of the Typography object.  
  
|Property|Value(s)|Default Value|  
|--------------|----------------|-------------------|  
|<xref:System.Windows.Documents.Typography.AnnotationAlternates%2A>|Numeric value – byte|0|  
|<xref:System.Windows.Documents.Typography.Capitals%2A>|<xref:System.Windows.FontCapitals> &#124; <xref:System.Windows.FontCapitals> &#124; <xref:System.Windows.FontCapitals> &#124; <xref:System.Windows.FontCapitals> &#124; <xref:System.Windows.FontCapitals> &#124; <xref:System.Windows.FontCapitals> &#124; <xref:System.Windows.FontCapitals>|<xref:System.Windows.FontCapitals>.<xref:System.Windows.FontCapitals>|  
|<xref:System.Windows.Documents.Typography.CapitalSpacing%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.ContextualAlternates%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.ContextualLigatures%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.ContextualSwashes%2A>|Numeric value - byte|0|  
|<xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.EastAsianLanguage%2A>|<xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage> &#124; <xref:System.Windows.FontEastAsianLanguage>|<xref:System.Windows.FontEastAsianLanguage>.<xref:System.Windows.FontEastAsianLanguage>|  
|<xref:System.Windows.Documents.Typography.EastAsianWidths%2A>|<xref:System.Windows.FontEastAsianWidths> &#124; <xref:System.Windows.FontEastAsianWidths> &#124; <xref:System.Windows.FontEastAsianWidths> &#124; <xref:System.Windows.FontEastAsianWidths> &#124; <xref:System.Windows.FontEastAsianWidths> &#124; <xref:System.Windows.FontEastAsianWidths>|<xref:System.Windows.FontEastAsianWidths>.<xref:System.Windows.FontEastAsianWidths>|  
|<xref:System.Windows.Documents.Typography.Fraction%2A>|<xref:System.Windows.FontFraction> &#124; <xref:System.Windows.FontFraction> &#124; <xref:System.Windows.FontFraction>|<xref:System.Windows.FontFraction>.<xref:System.Windows.FontFraction>|  
|<xref:System.Windows.Documents.Typography.HistoricalForms%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.HistoricalLigatures%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.Kerning%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.MathematicalGreek%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.NumeralAlignment%2A>|<xref:System.Windows.FontNumeralAlignment> &#124; <xref:System.Windows.FontNumeralAlignment> &#124; <xref:System.Windows.FontNumeralAlignment>|<xref:System.Windows.FontNumeralAlignment>.<xref:System.Windows.FontNumeralAlignment>|  
|<xref:System.Windows.Documents.Typography.NumeralStyle%2A>|<xref:System.Boolean>|<xref:System.Windows.FontNumeralStyle>.<xref:System.Windows.FontNumeralStyle>|  
|<xref:System.Windows.Documents.Typography.SlashedZero%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StandardLigatures%2A>|<xref:System.Boolean>|`true`|  
|<xref:System.Windows.Documents.Typography.StandardSwashes%2A>|numeric value – byte|0|  
|<xref:System.Windows.Documents.Typography.StylisticAlternates%2A>|numeric value – byte|0|  
|<xref:System.Windows.Documents.Typography.StylisticSet1%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet2%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet3%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet4%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet5%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet6%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet7%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet8%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet9%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet10%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet11%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet12%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet13%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet14%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet15%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet16%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet17%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet18%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet19%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.StylisticSet20%2A>|<xref:System.Boolean>|`false`|  
|<xref:System.Windows.Documents.Typography.Variants%2A>|<xref:System.Windows.FontVariants> &#124; <xref:System.Windows.FontVariants> &#124; <xref:System.Windows.FontVariants> &#124; <xref:System.Windows.FontVariants> &#124; <xref:System.Windows.FontVariants> &#124; <xref:System.Windows.FontVariants>|<xref:System.Windows.FontVariants>.<xref:System.Windows.FontVariants>|  
  
 All dependency properties of this class also have an attached property usage in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. For instance, you can set the <xref:System.Windows.Documents.Typography.AnnotationAlternates%2A> property through this syntax: `<`*object*``**Typography.AnnotationAlternates**`="`*value*`".../>`  
  
   
  
## Examples  
 The following code sample shows the use typographic <xref:System.Windows.Documents.Typography.Capitals%2A> in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. Notice that the variant feature is applied to all text contained with the <xref:System.Windows.Documents.Paragraph> element.  
  
 [!code-xml[TypographySnippets#TypographySnippet2](~/add/codesnippet/xaml/TypographySnippets/PageTwo.xaml#typographysnippet2)]  
  
 The following code sample shows the use typographic <xref:System.Windows.Documents.Typography.Capitals%2A> and <xref:System.Windows.Documents.Typography.NumeralStyle%2A> features in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. Notice that both typographic properties are applied to the entire paragraph.  
  
 [!code-xml[TypographySnippets#TypographySnippet3](~/add/codesnippet/xaml/TypographySnippets/PageThree.xaml#typographysnippet3)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="AnnotationAlternates">
      <MemberSignature Language="C#" Value="public int AnnotationAlternates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AnnotationAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the index of an alternate annotation form.</summary>
        <value>The index of the alternate annotation form. The default value is 0 (zero).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Annotation forms include glyphs placed in open or solid circles, squares, parentheses, diamonds or rounded boxes.  
  
 If the value of AnnotationAlternates is greater than zero and the selected font does not support annotation alternates, the default form of the letter is displayed.  
  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
<a name="xamlAttributeUsage_AnnotationAlternates"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.AnnotationAlternates**="*int*"/>  
  
<a name="dependencyPropertyInfo_AnnotationAlternates"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.AnnotationAlternatesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AnnotationAlternatesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AnnotationAlternatesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AnnotationAlternatesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.AnnotationAlternates%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Capitals">
      <MemberSignature Language="C#" Value="public System.Windows.FontCapitals Capitals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontCapitals Capitals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontCapitals" /> enumerated value that indicates the capital form of the selected font.</summary>
        <value>A <see cref="T:System.Windows.FontCapitals" /> enumerated value. The default value is <see cref="T:System.Windows.FontCapitals" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Capitals are a set of typographical forms that render text in capital-styled glyphs. Typically, when text is rendered as all capitals, the spacing between letters can appear too tight, and the weight and proportion of the letters too heavy. OpenType supports a number of styling formats for capitals, including small capitals, petite capitals, titling, and capital spacing. These styling formats allow you to control the appearance of capitals.  
  
 The following text displays standard capital letters for the Pescadero font, followed by the letters styled as "SmallCaps" and "AllSmallCaps". In this case, the same font size is used for all three words.  
  
 ![Text using OpenType capitals](~/add/media/opentypefont11.gif "Text using OpenType capitals")  
Example of capitals  
  
 The following code example shows how to define capitals for the Pescadero font, using the Capitals property. When the "SmallCaps" format is used, any leading capital letter is ignored.  
  
 [!code-xml[OpenTypeFontSnippets#9](~/add/codesnippet/xaml/p-system.windows.documen_5_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#9](~/add/codesnippet/xaml/p-system.windows.documen_5_1.xaml)]  
  
 The following code example accomplishes the same task as the previous markup example.  
  
 [!code-vb[TypographyCodeSnippets#TypographyCodeSnippet1](~/add/codesnippet/visualbasic/typographycodesnippets/page1.xaml.vb#typographycodesnippet1)]
 [!code-cs[TypographyCodeSnippets#TypographyCodeSnippet1](~/add/codesnippet/csharp/TypographyCodeSnippets/Page1.xaml.cs#typographycodesnippet1)]  
  
<a name="xamlAttributeUsage_Capitals"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.Capitals**="<xref:System.Windows.FontCapitals>"/>  
  
<a name="dependencyPropertyInfo_Capitals"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.CapitalsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CapitalSpacing">
      <MemberSignature Language="C#" Value="public bool CapitalSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapitalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether inter-glyph spacing for all-capital text is globally adjusted to improve readability.</summary>
        <value>
          <see langword="true" /> if spacing is adjusted; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Capital spacing is a feature that allows you to provide more spacing when using all capitals in text. Capital letters are typically designed to blend with lowercase letters. Spacing that appears attractive between and a capital letter and a lowercase letter may look too tight when all capital letters are used. The following text displays normal and capital spacing for the Pescadero font.  
  
 ![Text using OpenType capital spacing](~/add/media/opentypefont21.gif "Text using OpenType capital spacing")  
Example of normal and capital spacing  
  
 The following code example shows how to define capital spacing for the Pescadero font, using the CapitalSpacing property.  
  
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet18](~/add/codesnippet/xaml/p-system.windows.documen_84_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet18](~/add/codesnippet/xaml/p-system.windows.documen_84_1.xaml)]  
  
<a name="xamlAttributeUsage_CapitalSpacing"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.CapitalSpacing**="*bool*"/>  
  
<a name="dependencyPropertyInfo_CapitalSpacing"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.CapitalSpacingProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CapitalSpacingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CapitalSpacingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CapitalSpacingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.CapitalSpacing%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CapitalsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CapitalsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CapitalsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.Capitals%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaseSensitiveForms">
      <MemberSignature Language="C#" Value="public bool CaseSensitiveForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitiveForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether glyphs adjust their vertical position to better align with uppercase glyphs.</summary>
        <value>
          <see langword="true" /> if the vertical position is adjusted; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
<a name="xamlAttributeUsage_CaseSensitiveForms"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.CaseSensitiveForms**="*bool*"/>  
  
<a name="dependencyPropertyInfo_CaseSensitiveForms"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.CaseSensitiveFormsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaseSensitiveFormsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaseSensitiveFormsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaseSensitiveFormsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextualAlternates">
      <MemberSignature Language="C#" Value="public bool ContextualAlternates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextualAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether custom glyph forms can be used based upon the context of the text being rendered.</summary>
        <value>
          <see langword="true" /> if custom glyph forms can be used; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Random contextual alternates provide multiple substitute glyphs for a single character. When implemented with script-type fonts, this feature can simulate handwriting by using of a set of randomly chosen glyphs with slight differences in appearance. The following text uses random contextual alternates for the Lindsey font. Notice that the letter "a" varies slightly in appearance  
  
 ![Text using OpenType random contextual alternates](~/add/media/opentypefont23.gif "Text using OpenType random contextual alternates")  
Example of random contextual alternates  
  
 The following code example shows how to define random contextual alternates for the Lindsey font, using the ContextualAlternates property.  
  
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet20](~/add/codesnippet/xaml/p-system.windows.documen_3_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet20](~/add/codesnippet/xaml/p-system.windows.documen_3_1.xaml)]  
  
<a name="xamlAttributeUsage_ContextualAlternates"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.ContextualAlternates**="*bool*"/>  
  
<a name="dependencyPropertyInfo_ContextualAlternates"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.ContextualAlternatesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextualAlternatesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualAlternatesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualAlternatesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.ContextualAlternates%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextualLigatures">
      <MemberSignature Language="C#" Value="public bool ContextualLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextualLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether contextual ligatures are enabled.</summary>
        <value>
          <see langword="true" /> if contextual ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Contextual ligatures are designed to enhance readability by providing better joining behavior between the characters that make up the ligature.  
  
 If the value of ContextualLigatures is `true` and the selected font does not support contextual ligatures, the default form of the letter is displayed.  
  
<a name="xamlAttributeUsage_ContextualLigatures"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.ContextualLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_ContextualLigatures"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.ContextualLigaturesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextualLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.ContextualLigatures%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextualSwashes">
      <MemberSignature Language="C#" Value="public int ContextualSwashes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContextualSwashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the index of a contextual swashes form.</summary>
        <value>The index of the standard swashes form. The default value is 0 (zero).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Certain combinations of swash glyphs can cause an unattractive appearance, such as overlapping descenders on adjacent letters. Using a contextual swash allows you to use a substitute swash glyph that produces a better appearance. The following text shows the same word before and after a contextual swash is applied.  
  
 ![Text using OpenType contextual swashes](~/add/media/opentypefont19.gif "Text using OpenType contextual swashes")  
Example of a contextual swash  
  
 The following code example shows how to define a contextual swash for the Pescadero font, using the ContextualSwashes property.  
  
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet16](~/add/codesnippet/xaml/p-system.windows.documen_107_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet16](~/add/codesnippet/xaml/p-system.windows.documen_107_1.xaml)]  
  
<a name="xamlAttributeUsage_ContextualSwashes"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.ContextualSwashes**="*int*"/>  
  
<a name="dependencyPropertyInfo_ContextualSwashes"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.ContextualSwashesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContextualSwashesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualSwashesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualSwashesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.ContextualSwashes%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public bool DiscretionaryLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscretionaryLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether discretionary ligatures are enabled.</summary>
        <value>
          <see langword="true" /> if discretionary ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Discretionary ligatures are designed to be ornamental, and not specifically designed for readability. The following text displays discretionary ligature glyphs for the Pericles font.  
  
 ![Text using OpenType discretionary ligatures](~/add/media/opentypefont05.gif "Text using OpenType discretionary ligatures")  
Example of discretionary set of ligatures  
  
 The following code example shows how to define discretionary ligature glyphs for the Pericles font, using the DiscretionaryLigatures property.  
  
 [!code-xml[OpenTypeFontSnippets#5](~/add/codesnippet/xaml/p-system.windows.documen_69_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#5](~/add/codesnippet/xaml/p-system.windows.documen_69_1.xaml)]  
  
<a name="xamlAttributeUsage_DiscretionaryLigatures"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.DiscretionaryLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_DiscretionaryLigatures"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DiscretionaryLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DiscretionaryLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DiscretionaryLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EastAsianExpertForms">
      <MemberSignature Language="C#" Value="public bool EastAsianExpertForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EastAsianExpertForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether the standard Japanese font forms have been replaced with the corresponding preferred typographic forms.</summary>
        <value>
          <see langword="true" /> if standard Japanese font forms have been replaced with the corresponding preferred typographic forms; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
<a name="xamlAttributeUsage_EastAsianExpertForms"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.ExpertForms**="*bool*"/>  
  
<a name="dependencyPropertyInfo_EastAsianExpertForms"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.EastAsianExpertFormsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EastAsianExpertFormsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EastAsianExpertFormsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EastAsianExpertFormsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EastAsianLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.FontEastAsianLanguage EastAsianLanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontEastAsianLanguage EastAsianLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianLanguage" /> enumerated value that indicates the version of glyphs to be used for a specific writing system or language.</summary>
        <value>A <see cref="T:System.Windows.FontEastAsianLanguage" /> enumerated value. The default value is <see cref="T:System.Windows.FontEastAsianLanguage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
<a name="xamlAttributeUsage_EastAsianLanguage"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.EastAsianLanguage**="<xref:System.Windows.FontEastAsianLanguage>"/>  
  
<a name="dependencyPropertyInfo_EastAsianLanguage"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.EastAsianLanguageProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EastAsianLanguageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EastAsianLanguageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EastAsianLanguageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.EastAsianLanguage%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EastAsianWidths">
      <MemberSignature Language="C#" Value="public System.Windows.FontEastAsianWidths EastAsianWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontEastAsianWidths EastAsianWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianWidths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianWidths" /> enumerated value that indicates the proportional width to be used for Latin characters in an East Asian font.</summary>
        <value>A <see cref="T:System.Windows.FontEastAsianWidths" /> enumerated value. The default value is <see cref="T:System.Windows.FontEastAsianWidths" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
<a name="xamlAttributeUsage_EastAsianWidths"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.EastAsianWidths**="<xref:System.Windows.FontEastAsianWidths>"/>  
  
<a name="dependencyPropertyInfo_EastAsianWidths"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.EastAsianWidthsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EastAsianWidthsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EastAsianWidthsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EastAsianWidthsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.EastAsianWidths%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Fraction">
      <MemberSignature Language="C#" Value="public System.Windows.FontFraction Fraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontFraction Fraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontFraction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontFraction" /> enumerated value that indicates the fraction style.</summary>
        <value>A <see cref="T:System.Windows.FontFraction" /> enumerated value. The default value is <see cref="T:System.Windows.FontFraction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 OpenType fonts support styles for fractions, including slashed and stacked.  
  
 The following text displays fraction styles for the Palatino Linotype font.  
  
 ![Text using OpenType slashed and stacked fractions](~/add/media/opentypefont12.gif "Text using OpenType slashed and stacked fractions")  
Example of slashed and stacked fraction styles  
  
 The following code example shows how to define fraction styles for the Palatino Linotype font, using the Fraction property.  
  
 [!code-xml[OpenTypeFontSnippets#10](~/add/codesnippet/xaml/p-system.windows.documen_64_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#10](~/add/codesnippet/xaml/p-system.windows.documen_64_1.xaml)]  
  
<a name="xamlAttributeUsage_Fraction"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.Fraction**="<xref:System.Windows.FontFraction>"/>  
  
<a name="dependencyPropertyInfo_Fraction"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.FractionProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FractionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FractionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FractionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.Fraction%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotationAlternates">
      <MemberSignature Language="C#" Value="public static int GetAnnotationAlternates (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAnnotationAlternates(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.AnnotationAlternates%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.AnnotationAlternates%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.TextElement.FontFamily%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCapitals">
      <MemberSignature Language="C#" Value="public static System.Windows.FontCapitals GetCapitals (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontCapitals GetCapitals(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.Capitals%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.Capitals%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.Capitals%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCapitalSpacing">
      <MemberSignature Language="C#" Value="public static bool GetCapitalSpacing (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCapitalSpacing(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.CapitalSpacing%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.CapitalSpacing%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.CapitalSpacing%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCaseSensitiveForms">
      <MemberSignature Language="C#" Value="public static bool GetCaseSensitiveForms (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCaseSensitiveForms(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetContextualAlternates">
      <MemberSignature Language="C#" Value="public static bool GetContextualAlternates (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetContextualAlternates(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.ContextualAlternates%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.ContextualAlternates%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.ContextualAlternates%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetContextualLigatures">
      <MemberSignature Language="C#" Value="public static bool GetContextualLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetContextualLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.ContextualLigatures%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.ContextualLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.ContextualLigatures%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetContextualSwashes">
      <MemberSignature Language="C#" Value="public static int GetContextualSwashes (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetContextualSwashes(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.ContextualSwashes%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.ContextualSwashes%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.ContextualSwashes%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public static bool GetDiscretionaryLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetDiscretionaryLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEastAsianExpertForms">
      <MemberSignature Language="C#" Value="public static bool GetEastAsianExpertForms (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetEastAsianExpertForms(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEastAsianLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.FontEastAsianLanguage GetEastAsianLanguage (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontEastAsianLanguage GetEastAsianLanguage(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianLanguage%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianLanguage%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.EastAsianLanguage%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEastAsianWidths">
      <MemberSignature Language="C#" Value="public static System.Windows.FontEastAsianWidths GetEastAsianWidths (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontEastAsianWidths GetEastAsianWidths(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianWidths</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianWidths%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianWidths%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.EastAsianWidths%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFraction">
      <MemberSignature Language="C#" Value="public static System.Windows.FontFraction GetFraction (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontFraction GetFraction(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontFraction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.Fraction%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.Fraction%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.Fraction%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalForms">
      <MemberSignature Language="C#" Value="public static bool GetHistoricalForms (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHistoricalForms(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalForms%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalForms%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.HistoricalForms%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalLigatures">
      <MemberSignature Language="C#" Value="public static bool GetHistoricalLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHistoricalLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalLigatures%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.HistoricalLigatures%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetKerning">
      <MemberSignature Language="C#" Value="public static bool GetKerning (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetKerning(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.Kerning%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.Kerning%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.Kerning%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetMathematicalGreek">
      <MemberSignature Language="C#" Value="public static bool GetMathematicalGreek (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetMathematicalGreek(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.MathematicalGreek%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.MathematicalGreek%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.MathematicalGreek%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetNumeralAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.FontNumeralAlignment GetNumeralAlignment (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontNumeralAlignment GetNumeralAlignment(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.NumeralAlignment%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.NumeralAlignment%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.NumeralAlignment%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetNumeralStyle">
      <MemberSignature Language="C#" Value="public static System.Windows.FontNumeralStyle GetNumeralStyle (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontNumeralStyle GetNumeralStyle(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.NumeralStyle%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.NumeralStyle%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.NumeralStyle%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetSlashedZero">
      <MemberSignature Language="C#" Value="public static bool GetSlashedZero (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetSlashedZero(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.SlashedZero%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.SlashedZero%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.SlashedZero%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStandardLigatures">
      <MemberSignature Language="C#" Value="public static bool GetStandardLigatures (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStandardLigatures(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StandardLigatures%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StandardLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StandardLigatures%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStandardSwashes">
      <MemberSignature Language="C#" Value="public static int GetStandardSwashes (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStandardSwashes(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StandardSwashes%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StandardSwashes%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StandardSwashes%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticAlternates">
      <MemberSignature Language="C#" Value="public static int GetStylisticAlternates (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStylisticAlternates(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticAlternates%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticAlternates%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticAlternates%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet1">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet1 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet1(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet1%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet1%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet1%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet10">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet10 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet10(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet10%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet10%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet10%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet11">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet11 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet11(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet11%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet11%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet11%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet12">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet12 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet12(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet12%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet12%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet12%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet13">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet13 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet13(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet13%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet13%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet13%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet14">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet14 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet14(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet14%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet14%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet14%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet15">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet15 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet15(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet15%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet15%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet15%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet16">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet16 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet16(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet16%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet16%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet16%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet17">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet17 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet17(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet17%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet17%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet17%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet18">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet18 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet18(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet18%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet18%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet18%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet19">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet19 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet19(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet19%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet19%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet19%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet2">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet2 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet2(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet2%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet2%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet2%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet20">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet20 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet20(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet20%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet20%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet20%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet3">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet3 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet3(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet3%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet3%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet3%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet4">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet4 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet4(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet4%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet4%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet4%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet5">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet5 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet5(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet5%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet5%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet5%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet6">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet6 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet6(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet6%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet6%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet6%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet7">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet7 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet7(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet7%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet7%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet7%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet8">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet8 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet8(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStylisticSet9">
      <MemberSignature Language="C#" Value="public static bool GetStylisticSet9 (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetStylisticSet9(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetVariants">
      <MemberSignature Language="C#" Value="public static System.Windows.FontVariants GetVariants (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FontVariants GetVariants(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontVariants</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to retrieve the value of the &lt;xref:System.Windows.Documents.Typography.Variants%2A&gt; property.</param>
        <summary>Returns the value of the &lt;xref:System.Windows.Documents.Typography.Variants%2A&gt; attached property for a specified dependency object.</summary>
        <returns>The current value of the &lt;xref:System.Windows.Documents.Typography.Variants%2A&gt; attached property on the specified dependency object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HistoricalForms">
      <MemberSignature Language="C#" Value="public bool HistoricalForms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HistoricalForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether historical forms are enabled.</summary>
        <value>
          <see langword="true" /> if historical forms are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Historical forms are typographic conventions that were common in the past. The following text displays the phrase, "Boston, Massachusetts", using an historical form of glyphs for the Palatino Linotype font.  
  
 ![Text using OpenType historical forms](~/add/media/opentypefont10.gif "Text using OpenType historical forms")  
Example of historical forms  
  
 The following code example shows how to define historical forms for the Palatino Linotype font, using the HistoricalForms property.  
  
 [!code-xml[OpenTypeFontSnippets#8](~/add/codesnippet/xaml/p-system.windows.documen_100_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#8](~/add/codesnippet/xaml/p-system.windows.documen_100_1.xaml)]  
  
<a name="xamlAttributeUsage_HistoricalForms"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.HistoricalForms**="*bool*"/>  
  
<a name="dependencyPropertyInfo_HistoricalForms"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.HistoricalFormsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HistoricalFormsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HistoricalFormsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HistoricalFormsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.HistoricalForms%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HistoricalLigatures">
      <MemberSignature Language="C#" Value="public bool HistoricalLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HistoricalLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether historical ligatures are enabled.</summary>
        <value>
          <see langword="true" /> if historical ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Historical ligatures are typographic forms used in historical typography that font designers may add to their fonts.  
  
<a name="xamlAttributeUsage_HistoricalLigatures"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.HistoricalLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_HistoricalLigatures"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.HistoricalLigaturesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HistoricalLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HistoricalLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HistoricalLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.HistoricalLigatures%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Kerning">
      <MemberSignature Language="C#" Value="public bool Kerning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Kerning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether kerning is enabled.</summary>
        <value>
          <see langword="true" /> if kerning is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Kerning is a typographic function that adjusts the spacing between characters to enhance word shape.  
  
<a name="xamlAttributeUsage_Kerning"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.Kerning**="*bool*"/>  
  
<a name="dependencyPropertyInfo_Kerning"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.KerningProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KerningProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KerningProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KerningProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.Kerning%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MathematicalGreek">
      <MemberSignature Language="C#" Value="public bool MathematicalGreek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathematicalGreek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether standard typographic font forms of Greek glyphs have been replaced with corresponding font forms commonly used in mathematical notation.</summary>
        <value>
          <see langword="true" /> if mathematical Greek forms are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 If the value of MathematicalGreek is `true` and the selected font does not support mathematical Greek forms, the default form of the letter is displayed.  
  
<a name="xamlAttributeUsage_MathematicalGreek"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.MethematicalGreek**="*bool*"/>  
  
<a name="dependencyPropertyInfo_MathematicalGreek"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.MathematicalGreekProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MathematicalGreekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MathematicalGreekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MathematicalGreekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.MathematicalGreek%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NumeralAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.FontNumeralAlignment NumeralAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontNumeralAlignment NumeralAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontNumeralAlignment" /> enumerated value that indicates the alighnment of widths when using numerals.</summary>
        <value>A <see cref="T:System.Windows.FontNumeralAlignment" /> enumerated value. The default value is <see cref="T:System.Windows.FontNumeralAlignment" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 OpenType fonts support a proportional and tabular figure feature to control the alignment of widths when using numerals. Proportional figures treat each numeral as having a different width—"1" is narrower than "5". Tabular figures are treated as equal-width numerals so that they align vertically, which increases the readability of financial type information.  
  
 The following text displays two proportional figures in the first column using the Miramonte font. Note the difference in width between the numerals "5" and "1". The second column shows the same two numeric values with the widths adjusted by using the tabular figure feature.  
  
 ![Text using OpenType proportional & tabular figures](~/add/media/opentypefont22.gif "Text using OpenType proportional & tabular figures")  
Example of proportional and tabbed figures  
  
 The following code example shows how to define proportional and tabular figures for the Miramonte font, using the NumeralAlignment property.  
  
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet19](~/add/codesnippet/xaml/p-system.windows.documen_156_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet19](~/add/codesnippet/xaml/p-system.windows.documen_156_1.xaml)]  
  
<a name="xamlAttributeUsage_NumeralAlignment"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.NumericalAlignment**="<xref:System.Windows.FontNumeralAlignment>"/>  
  
<a name="dependencyPropertyInfo_NumeralAlignment"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.NumeralAlignmentProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NumeralAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NumeralAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NumeralAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.NumeralAlignment%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NumeralStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontNumeralStyle NumeralStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontNumeralStyle NumeralStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontNumeralStyle" /> enumerated value that determines the set of glyphs that are used to render numeric alternate font forms.</summary>
        <value>A <see cref="T:System.Windows.FontNumeralStyle" /> enumerated value. The default value is <see cref="T:System.Windows.FontNumeralStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 OpenType fonts support an old style numeral format. This format is useful for displaying numerals in styles that are no longer standard. The following text displays an 18th century date in standard and old style numeral formats for the Palatino Linotype font.  
  
 ![Text using OpenType old style numerals](~/add/media/opentypefont24.gif "Text using OpenType old style numerals")  
Example of standard and old style numerals  
  
 The following text displays standard numerals for the Palatino Linotype font, followed by old style numerals.  
  
 ![Text using OpenType old style numeral sets](~/add/media/opentypefont13.gif "Text using OpenType old style numeral sets")  
Example of standard and old style numeral sets  
  
 The following code example shows how to define old style numerals for the Palatino Linotype font, using the NumeralStyle property.  
  
 [!code-xml[OpenTypeFontSnippets#11](~/add/codesnippet/xaml/p-system.windows.documen_37_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#11](~/add/codesnippet/xaml/p-system.windows.documen_37_1.xaml)]  
  
<a name="xamlAttributeUsage_NumeralStyle"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.NumeralStyle**="<xref:System.Windows.FontNumeralStyle>"/>  
  
<a name="dependencyPropertyInfo_NumeralStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.NumeralStyleProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NumeralStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NumeralStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NumeralStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.NumeralStyle%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetAnnotationAlternates">
      <MemberSignature Language="C#" Value="public static void SetAnnotationAlternates (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAnnotationAlternates(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.AnnotationAlternates%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.AnnotationAlternates%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCapitals">
      <MemberSignature Language="C#" Value="public static void SetCapitals (System.Windows.DependencyObject element, System.Windows.FontCapitals value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCapitals(class System.Windows.DependencyObject element, valuetype System.Windows.FontCapitals value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontCapitals" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.Capitals%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.Capitals%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCapitalSpacing">
      <MemberSignature Language="C#" Value="public static void SetCapitalSpacing (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCapitalSpacing(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.CapitalSpacing%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.CapitalSpacing%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCaseSensitiveForms">
      <MemberSignature Language="C#" Value="public static void SetCaseSensitiveForms (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCaseSensitiveForms(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.CaseSensitiveForms%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetContextualAlternates">
      <MemberSignature Language="C#" Value="public static void SetContextualAlternates (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContextualAlternates(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.ContextualAlternates%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.ContextualAlternates%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetContextualLigatures">
      <MemberSignature Language="C#" Value="public static void SetContextualLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContextualLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.ContextualLigatures%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.ContextualLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetContextualSwashes">
      <MemberSignature Language="C#" Value="public static void SetContextualSwashes (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContextualSwashes(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.ContextualSwashes%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.ContextualSwashes%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetDiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public static void SetDiscretionaryLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDiscretionaryLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.DiscretionaryLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetEastAsianExpertForms">
      <MemberSignature Language="C#" Value="public static void SetEastAsianExpertForms (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEastAsianExpertForms(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianExpertForms%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetEastAsianLanguage">
      <MemberSignature Language="C#" Value="public static void SetEastAsianLanguage (System.Windows.DependencyObject element, System.Windows.FontEastAsianLanguage value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEastAsianLanguage(class System.Windows.DependencyObject element, valuetype System.Windows.FontEastAsianLanguage value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontEastAsianLanguage" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianLanguage%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianLanguage%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetEastAsianWidths">
      <MemberSignature Language="C#" Value="public static void SetEastAsianWidths (System.Windows.DependencyObject element, System.Windows.FontEastAsianWidths value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEastAsianWidths(class System.Windows.DependencyObject element, valuetype System.Windows.FontEastAsianWidths value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontEastAsianWidths" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianWidths%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.EastAsianWidths%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetFraction">
      <MemberSignature Language="C#" Value="public static void SetFraction (System.Windows.DependencyObject element, System.Windows.FontFraction value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFraction(class System.Windows.DependencyObject element, valuetype System.Windows.FontFraction value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontFraction" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.Fraction%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.Fraction%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetHistoricalForms">
      <MemberSignature Language="C#" Value="public static void SetHistoricalForms (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHistoricalForms(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalForms%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalForms%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetHistoricalLigatures">
      <MemberSignature Language="C#" Value="public static void SetHistoricalLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHistoricalLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalLigatures%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.HistoricalLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetKerning">
      <MemberSignature Language="C#" Value="public static void SetKerning (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKerning(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.Kerning%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.Kerning%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetMathematicalGreek">
      <MemberSignature Language="C#" Value="public static void SetMathematicalGreek (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMathematicalGreek(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.MathematicalGreek%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.MathematicalGreek%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetNumeralAlignment">
      <MemberSignature Language="C#" Value="public static void SetNumeralAlignment (System.Windows.DependencyObject element, System.Windows.FontNumeralAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNumeralAlignment(class System.Windows.DependencyObject element, valuetype System.Windows.FontNumeralAlignment value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontNumeralAlignment" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.NumeralAlignment%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.NumeralAlignment%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetNumeralStyle">
      <MemberSignature Language="C#" Value="public static void SetNumeralStyle (System.Windows.DependencyObject element, System.Windows.FontNumeralStyle value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNumeralStyle(class System.Windows.DependencyObject element, valuetype System.Windows.FontNumeralStyle value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontNumeralStyle" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.NumeralStyle%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.NumeralStyle%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetSlashedZero">
      <MemberSignature Language="C#" Value="public static void SetSlashedZero (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSlashedZero(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.SlashedZero%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.SlashedZero%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStandardLigatures">
      <MemberSignature Language="C#" Value="public static void SetStandardLigatures (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStandardLigatures(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StandardLigatures%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StandardLigatures%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStandardSwashes">
      <MemberSignature Language="C#" Value="public static void SetStandardSwashes (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStandardSwashes(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StandardSwashes%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StandardSwashes%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticAlternates">
      <MemberSignature Language="C#" Value="public static void SetStylisticAlternates (System.Windows.DependencyObject element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticAlternates(class System.Windows.DependencyObject element, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticAlternates%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticAlternates%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet1">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet1 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet1(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet1%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet1%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet10">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet10 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet10(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet10%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet10%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet11">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet11 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet11(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet11%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet11%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet12">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet12 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet12(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet12%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet12%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet13">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet13 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet13(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet13%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet13%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet14">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet14 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet14(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet14%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet14%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet15">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet15 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet15(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet15%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet15%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet16">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet16 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet16(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet16%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet16%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet17">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet17 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet17(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet17%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet17%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet18">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet18 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet18(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet18%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet18%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet19">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet19 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet19(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet19%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet19%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet2">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet2 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet2(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet2%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet2%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet20">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet20 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet20(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet20%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet20%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet3">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet3 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet3(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet3%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet3%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet4">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet4 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet4(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet4%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet4%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet5">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet5 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet5(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet5%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet5%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet6">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet6 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet6(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet6%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet6%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet7">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet7 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet7(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet7%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet7%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet8">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet8 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet8(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetStylisticSet9">
      <MemberSignature Language="C#" Value="public static void SetStylisticSet9 (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStylisticSet9(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet9%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.StylisticSet9%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetVariants">
      <MemberSignature Language="C#" Value="public static void SetVariants (System.Windows.DependencyObject element, System.Windows.FontVariants value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetVariants(class System.Windows.DependencyObject element, valuetype System.Windows.FontVariants value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FontVariants" />
      </Parameters>
      <Docs>
        <param name="element">The dependency object for which to set the value of the &lt;xref:System.Windows.Documents.Typography.Variants%2A&gt; property.</param>
        <param name="value">The new value to set the property to.</param>
        <summary>Sets the value of the &lt;xref:System.Windows.Documents.Typography.Variants%2A&gt; attached property for a specified dependency object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Raised when <paramref name="element" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SlashedZero">
      <MemberSignature Language="C#" Value="public bool SlashedZero { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SlashedZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a nominal zero font form should be replaced with a slashed zero.</summary>
        <value>
          <see langword="true" /> if slashed zero forms are enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 OpenType fonts support a slashed zero numeral format to emphasize the difference between the letter "O" and the numeral "0". The slashed zero numeral is often used for identifiers in financial and business information.  
  
 The following text displays a sample order identifier using the Miramonte font. The first line uses standard numerals. The second line used slashed zero numerals to provide better contrast with the uppercase "O" letter.  
  
 ![Text using OpenType slashed zero numerals](~/add/media/opentypefont17.gif "Text using OpenType slashed zero numerals")  
Example of slashed zero numerals  
  
 The following code example shows how to define slashed zero numerals for the Miramonte font, using the SlashedZero property.  
  
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet15](~/add/codesnippet/xaml/p-system.windows.documen_77_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#OpenTypeFontSnippet15](~/add/codesnippet/xaml/p-system.windows.documen_77_1.xaml)]  
  
 If the value of SlashedZero is `true` and the selected font does not support slashed zero forms, the default form of the numeral is displayed.  
  
<a name="xamlAttributeUsage_SlashedZero"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.SlashedZero**="*bool*"/>  
  
<a name="dependencyPropertyInfo_SlashedZero"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.SlashedZeroProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SlashedZeroProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlashedZeroProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlashedZeroProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.SlashedZero%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StandardLigatures">
      <MemberSignature Language="C#" Value="public bool StandardLigatures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether standard ligatures are enabled.</summary>
        <value>
          <see langword="true" /> if standard ligatures are enabled; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 The following text displays standard ligature glyphs for the Pericles font.  
  
 ![Text using OpenType standard ligatures](~/add/media/opentypefont04.gif "Text using OpenType standard ligatures")  
Example of standard set of ligatures  
  
 The following code example shows how to define standard ligature glyphs for the Pericles font, using the StandardLigatures property.  
  
 [!code-xml[OpenTypeFontSnippets#4](~/add/codesnippet/xaml/p-system.windows.documen_159_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#4](~/add/codesnippet/xaml/p-system.windows.documen_159_1.xaml)]  
  
 By default, OpenTypes fonts in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] enable standard ligatures. For example, if you use the Palatino Linotype font, the standard ligatures "fi", "ff", and "fl" appear as a combined character glyph. Notice that the pair of characters for each standard ligature touch each other.  
  
 ![Text using OpenType standard ligatures](~/add/media/opentypefont06.gif "Text using OpenType standard ligatures")  
Example of standard ligatures enabled by default  
  
 However, you can disable standard ligature features so that a standard ligature such as "ff" displays as two separate glyphs, rather than as a combined character glyph.  
  
 ![Text using disabled OpenType standard ligatures](~/add/media/opentypefont07.gif "Text using disabled OpenType standard ligatures")  
Example of disabled standard ligatures  
  
 The following code example shows how to disable standard ligature glyphs for the Palatino Linotype font, using the StandardLigatures property.  
  
 [!code-xml[OpenTypeFontSnippets#6](~/add/codesnippet/xaml/p-system.windows.documen_159_2.xaml)]
 [!code-xml[OpenTypeFontSnippets#6](~/add/codesnippet/xaml/p-system.windows.documen_159_2.xaml)]  
  
 If the value of StandardLigatures is `true` and the selected font does not support standard ligatures, the default form of the letter is displayed.  
  
<a name="xamlAttributeUsage_StandardLigatures"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StandardLigatures**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StandardLigatures"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StandardLigaturesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StandardLigaturesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StandardLigaturesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StandardLigaturesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StandardLigatures%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StandardSwashes">
      <MemberSignature Language="C#" Value="public int StandardSwashes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StandardSwashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the index of a standard swashes form.</summary>
        <value>The index of the standard swashes form. The default value is 0 (zero).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Swashes are decorative glyphs that use elaborate ornamentation often associated with calligraphy. The following text displays standard and swash glyphs for the Pescadero font.  
  
 ![Text using OpenType standard and swash glyphs](~/add/media/opentypefont08.gif "Text using OpenType standard and swash glyphs")  
Example of standard and swash glyphs  
  
 Swashes are often used as decorative elements in short phrases such as event announcements. The following text uses swashes to emphasize the capital letters of the name of the event.  
  
 ![Text using OpenType swashes](~/add/media/opentypefont09.gif "Text using OpenType swashes")  
Example of swashes used for capital letters  
  
 The following code example shows how to define swashes for a font, using the StandardSwashes property.  
  
 [!code-xml[OpenTypeFontSnippets#7](~/add/codesnippet/xaml/p-system.windows.documen_123_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#7](~/add/codesnippet/xaml/p-system.windows.documen_123_1.xaml)]  
  
 If the value of StandardSwashes is greater than zero and the selected font does not support standard swashes forms at the given index value, the default form of the letter is displayed.  
  
<a name="xamlAttributeUsage_StandardSwashes"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StandardSwashes**="*int*"/>  
  
<a name="dependencyPropertyInfo_StandardSwashes"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StandardSwashesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StandardSwashesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StandardSwashesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StandardSwashesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StandardSwashes%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticAlternates">
      <MemberSignature Language="C#" Value="public int StylisticAlternates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StylisticAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the index of a stylistic alternates form.</summary>
        <value>The index of the stylistic alternates form. The default value is 0 (zero).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Alternates are glyphs that can be substituted for a standard glyph. OpenType fonts, such as the Pericles font used in the following examples, contain alternate glyphs that you can use to create different appearances for text. The following text displays standard glyphs for the Pericles font.  
  
 ![Text using OpenType standard glyphs](~/add/media/opentypefont01.gif "Text using OpenType standard glyphs")  
Example of standard set of glyphs  
  
 The Pericles OpenType font contains additional glyphs that provide stylistic alternates to the standard set of glyphs. The following text displays stylistic alternate glyphs.  
  
 ![Text using OpenType stylistic alternate glyphs](~/add/media/opentypefont02.gif "Text using OpenType stylistic alternate glyphs")  
Example of stylistic alternate glyphs  
  
 The following code example shows how to define stylistic alternate glyphs for the Pericles font, using the StylisticAlternates property.  
  
 [!code-xml[OpenTypeFontSnippets#2](~/add/codesnippet/xaml/p-system.windows.documen_48_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#2](~/add/codesnippet/xaml/p-system.windows.documen_48_1.xaml)]  
  
 The following text displays several other stylistic alternate glyphs for the Pericles font.  
  
 ![Text using OpenType stylistic alternate glyphs](~/add/media/opentypefont03.gif "Text using OpenType stylistic alternate glyphs")  
Example of other stylistic alternate glyphs  
  
 The following code example shows how to define these other stylistic alternate glyphs.  
  
 [!code-xml[OpenTypeFontSnippets#3](~/add/codesnippet/xaml/p-system.windows.documen_48_2.xaml)]
 [!code-xml[OpenTypeFontSnippets#3](~/add/codesnippet/xaml/p-system.windows.documen_48_2.xaml)]  
  
<a name="xamlAttributeUsage_StylisticAlternates"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticAlternates**="*int*"/>  
  
<a name="dependencyPropertyInfo_StylisticAlternates"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticAlternatesProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticAlternatesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticAlternatesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticAlternatesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticAlternates%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet1">
      <MemberSignature Language="C#" Value="public bool StylisticSet1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet1"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet1**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet1"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet1Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet10">
      <MemberSignature Language="C#" Value="public bool StylisticSet10 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet10" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet10"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet10**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet10"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet10Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet10Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet10Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet10Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet10%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet11">
      <MemberSignature Language="C#" Value="public bool StylisticSet11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet11"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet11**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet11"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet11Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet11Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet11Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet11Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet11%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet12">
      <MemberSignature Language="C#" Value="public bool StylisticSet12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet12"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet12**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet12"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet12Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet12Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet12Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet12Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet12%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet13">
      <MemberSignature Language="C#" Value="public bool StylisticSet13 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet13" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet13"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet13**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet13"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet13Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet13Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet13Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet13Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet13%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet14">
      <MemberSignature Language="C#" Value="public bool StylisticSet14 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet14" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet14"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet14**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet14"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet14Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet14Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet14Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet14Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet14%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet15">
      <MemberSignature Language="C#" Value="public bool StylisticSet15 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet15"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet15**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet15"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet15Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet15Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet15Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet15Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet15%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet16">
      <MemberSignature Language="C#" Value="public bool StylisticSet16 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet16"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet16**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet16"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet16Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet16Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet16Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet16Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet16%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet17">
      <MemberSignature Language="C#" Value="public bool StylisticSet17 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet17" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet17"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet17**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet17"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet17Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet17Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet17Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet17Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet17%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet18">
      <MemberSignature Language="C#" Value="public bool StylisticSet18 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet18" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet18"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet18**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet18"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet18Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet18Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet18Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet18Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet18%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet19">
      <MemberSignature Language="C#" Value="public bool StylisticSet19 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet19" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet19"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet19**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet19"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet19Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet19Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet19Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet19Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet19%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet1Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet1%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet2">
      <MemberSignature Language="C#" Value="public bool StylisticSet2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet2"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet2**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet2"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet2Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet20">
      <MemberSignature Language="C#" Value="public bool StylisticSet20 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet20" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet20"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet20**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet20"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet20Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet20Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet20Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet20Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet20%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet2Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet2%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet3">
      <MemberSignature Language="C#" Value="public bool StylisticSet3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet3"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet3**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet3"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet3Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet3Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet3%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet4">
      <MemberSignature Language="C#" Value="public bool StylisticSet4 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet4"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet4**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet4"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet4Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet4Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet4Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet4Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet4%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet5">
      <MemberSignature Language="C#" Value="public bool StylisticSet5 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet5"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet5**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet5"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet5Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet5Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet5Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet5Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet5%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet6">
      <MemberSignature Language="C#" Value="public bool StylisticSet6 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet6"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet6**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet6"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet6Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet6Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet6Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet6Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet6%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet7">
      <MemberSignature Language="C#" Value="public bool StylisticSet7 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
 \<*object* **Typography.StylisticSet7**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet7"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet7Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet7Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet7Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet7Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet7%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet8">
      <MemberSignature Language="C#" Value="public bool StylisticSet8 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet8"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet8**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet8"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet8Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet8Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet8Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet8Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet8%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet9">
      <MemberSignature Language="C#" Value="public bool StylisticSet9 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet9" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
        <value>
          <see langword="true" /> if the stylistic set of the font form is enabled; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Some fonts contain stylistic variant glyphs that correspond to portions of a character set. Glyphs in stylistic sets may be designed to harmonize visually, interact in particular ways, or work together in other ways.  
  
<a name="xamlAttributeUsage_StylisticSet9"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.StylisticSet9**="*bool*"/>  
  
<a name="dependencyPropertyInfo_StylisticSet9"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.StylisticSet9Property>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet9Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StylisticSet9Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StylisticSet9Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.StylisticSet9%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Variants">
      <MemberSignature Language="C#" Value="public System.Windows.FontVariants Variants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontVariants Variants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontVariants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.FontVariants" /> enumerated value that indicates a variation of the standard typographic form to be used.</summary>
        <value>A <see cref="T:System.Windows.FontVariants" /> enumerated value. The default value is <see cref="T:System.Windows.FontVariants" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property gets or sets a value on the object that owns a `Typography` property, which is the only way to access a <xref:System.Windows.Documents.Typography> class instance. In addition, this property supports an attached property usage so that it can be set on text-containing objects in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  
  
 Variants are similar to superscript or subscript font forms. It is possible for a font form to contain differing glyph sets between superscript and the ordinal form, or between subscript and inferior forms. The Variants property allows you to set superscript and subscript values for an OpenType font.  
  
 The following text displays superscripts for the Palatino Linotype font.  
  
 ![Text using OpenType superscripts](~/add/media/opentypefont14.gif "Text using OpenType superscripts")  
Example of superscripts  
  
 The following code example shows how to define superscripts for the Palatino Linotype font, using the Variants property.  
  
 [!code-xml[OpenTypeFontSnippets#12](~/add/codesnippet/xaml/p-system.windows.documen_61_1.xaml)]
 [!code-xml[OpenTypeFontSnippets#12](~/add/codesnippet/xaml/p-system.windows.documen_61_1.xaml)]  
  
 The following text displays subscripts for the Palatino Linotype font.  
  
 ![Text using OpenType subscripts](~/add/media/opentypefont15.gif "Text using OpenType subscripts")  
Example of subscripts  
  
 The following code example shows how to define subscripts for the Palatino Linotype font, using the Variants property.  
  
 [!code-xml[OpenTypeFontSnippets#13](~/add/codesnippet/xaml/p-system.windows.documen_61_2.xaml)]
 [!code-xml[OpenTypeFontSnippets#13](~/add/codesnippet/xaml/p-system.windows.documen_61_2.xaml)]  
  
 Fonts that do not support variants may have an algorithmic approximation of the font form.  
  
<a name="xamlAttributeUsage_Variants"></a>   
## XAML Attribute Usage  
 \<*object* **Typography.Variants**="<xref:System.Windows.FontVariants>"/>  
  
<a name="dependencyPropertyInfo_Variants"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.Typography.VariantsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VariantsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VariantsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VariantsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Documents.Typography.Variants%2A&gt; attached property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>