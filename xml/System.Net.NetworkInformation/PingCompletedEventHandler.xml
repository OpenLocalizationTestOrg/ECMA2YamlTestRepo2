<Type Name="PingCompletedEventHandler" FullName="System.Net.NetworkInformation.PingCompletedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PingCompletedEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</param>
    <param name="e">A <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> object that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event of a <see cref="T:System.Net.NetworkInformation.Ping" /> object.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 User data that is specified in a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call is available to the method invoked by this delegate in the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates specifying a PingCompletedEventHandler to respond to a <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.  
  
 [!code-cpp[NclPingAsync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_2_1.cpp)]
 [!code-cs[NclPingAsync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_2_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>