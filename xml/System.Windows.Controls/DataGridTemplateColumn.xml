<Type Name="DataGridTemplateColumn" FullName="System.Windows.Controls.DataGridTemplateColumn">
  <TypeSignature Language="C#" Value="public class DataGridTemplateColumn : System.Windows.Controls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DataGridTemplateColumn extends System.Windows.Controls.DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts template-specified content in its cells.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DataGridTemplateColumn type enables you to create your own column types by specifying the cell templates to use when displaying and editing values. To specify the template that is used to display the contents of a cell that is not in editing mode, set the <xref:System.Windows.Controls.DataGridTemplateColumn.CellTemplate%2A> property. To specify the template that is used to display the contents of a cell that is in editing mode, set the <xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate%2A> property. For more information about templates, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md) and [Styling and Templating](~/add/includes/ajax-current-ext-md.md).  
  
 For convenience, <xref:System.Windows.Controls.DataGrid> provides the following pre-defined column types:  
  
|Column Type|Data Display|  
|-----------------|------------------|  
|<xref:System.Windows.Controls.DataGridHyperlinkColumn>|Use to display URI data.|  
|<xref:System.Windows.Controls.DataGridComboBoxColumn>|Use to display enumeration data.|  
|<xref:System.Windows.Controls.DataGridTextColumn>|Use to display text.|  
|<xref:System.Windows.Controls.DataGridCheckBoxColumn>|Use to display Boolean data.|  
  
   
  
## Examples  
 The following example shows how to create a DataGridTemplateColumn.  
  
 [!code-xml[DataGrid_TemplateColumn#1](~/add/codesnippet/xaml/datagrid_templatecolumn/window1.xaml#1)]
 [!code-xml[DataGrid_TemplateColumn#1](~/add/codesnippet/xaml/t-system.windows.control_101_1.xaml)]  
  
 The following illustration shows the output from the previous XAML.  
  
 ![A column using a DataTemplate](~/add/media/ndp-wpf-templatecolumn.png "A column using a DataTemplate")  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridTemplateColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellEditingTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate CellEditingTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate CellEditingTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template to use to display the contents of a cell that is in editing mode.</summary>
        <value>The template that is used to display the contents of a cell that is in editing mode. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The cell editing template defines how the content is displayed in the column cells when in editing mode. For more information about data templates, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md) and [Styling and Templating](~/add/includes/ajax-current-ext-md.md).  
  
 To define the template for the cell that is not in editing mode, use the <xref:System.Windows.Controls.DataGridTemplateColumn.CellTemplate%2A>.  
  
   
  
## Examples  
 The following example shows how to create the CellEditingTemplate for displaying and editing a column of dates.  
  
 [!code-xml[DataGrid_TemplateColumn#1](~/add/codesnippet/xaml/datagrid_templatecolumn/window1.xaml#1)]
 [!code-xml[DataGrid_TemplateColumn#1](~/add/codesnippet/xaml/p-system.windows.control_196_1.xaml)]  
  
 The following illustration shows the output from the previous XAML.  
  
 ![A column using a DataTemplate](~/add/media/ndp-wpf-templatecolumn.png "A column using a DataTemplate")  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellEditingTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellEditingTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellEditingTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellEditingTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector CellEditingTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector CellEditingTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the object that determines which template to use to display the contents of a cell that is in editing mode.</summary>
        <value>The object that determines which template to use to display the contents of a cell that is in editing mode. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellEditingTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellEditingTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellEditingTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template to use to display the contents of a cell that is not in editing mode.</summary>
        <value>The template to use to display the contents of a cell that is not in editing mode. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The cell template defines how the content is displayed in the column cells. For more information about data templates, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md) and [Styling and Templating](~/add/includes/ajax-current-ext-md.md).  
  
 To define the template for a cell that is in editing mode, use the <xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate%2A>.  
  
   
  
## Examples  
 The following example shows how to create the CellTemplate for displaying a column of dates.  
  
 [!code-xml[DataGrid_TemplateColumn#1](~/add/codesnippet/xaml/datagrid_templatecolumn/window1.xaml#1)]
 [!code-xml[DataGrid_TemplateColumn#1](~/add/codesnippet/xaml/p-system.windows.control_409_1.xaml)]  
  
 The following illustration shows the output from the previous XAML.  
  
 ![A column using a DataTemplate](~/add/media/ndp-wpf-templatecolumn.png "A column using a DataTemplate")  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridTemplateColumn.CellTemplate%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector CellTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector CellTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the object that determines which template to use to display the contents of a cell that is not in editing mode.</summary>
        <value>The object that determines which template to use. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateEditingElement">
      <MemberSignature Language="C#" Value="protected override System.Windows.FrameworkElement GenerateEditingElement (System.Windows.Controls.DataGridCell cell, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.FrameworkElement GenerateEditingElement(class System.Windows.Controls.DataGridCell cell, object dataItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Controls.DataGridCell" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cell">The cell that will contain the generated element.</param>
        <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
        <summary>Gets an element defined by the &lt;xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate%2A&gt; that is bound to the column's &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value.</summary>
        <returns>A new editing element that is bound to the column's &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateElement">
      <MemberSignature Language="C#" Value="protected override System.Windows.FrameworkElement GenerateElement (System.Windows.Controls.DataGridCell cell, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.FrameworkElement GenerateElement(class System.Windows.Controls.DataGridCell cell, object dataItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Controls.DataGridCell" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cell">The cell that will contain the generated element.</param>
        <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
        <summary>Gets an element defined by the &lt;xref:System.Windows.Controls.DataGridTemplateColumn.CellTemplate%2A&gt; that is bound to the column's &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value.</summary>
        <returns>A new, read-only element that is bound to the column's &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RefreshCellContent">
      <MemberSignature Language="C#" Value="protected override void RefreshCellContent (System.Windows.FrameworkElement element, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RefreshCellContent(class System.Windows.FrameworkElement element, string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.FrameworkElement" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">The cell to update.</param>
        <param name="propertyName">The name of the column property that has changed.</param>
        <summary>Refreshes the contents of a cell in the column in response to a template property value change.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>