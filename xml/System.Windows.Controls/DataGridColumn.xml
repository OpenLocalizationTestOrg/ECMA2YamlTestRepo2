<Type Name="DataGridColumn" FullName="System.Windows.Controls.DataGridColumn">
  <TypeSignature Language="C#" Value="public abstract class DataGridColumn : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridColumn extends System.Windows.DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This abstract class provides the base functionality for all <xref:System.Windows.Controls.DataGrid> columns.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataGridColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumn" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ActualWidth">
      <MemberSignature Language="C#" Value="public double ActualWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current width of the column, in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)].</summary>
        <value>The width of the column in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]. The registered default is 0. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of the ActualWidth property is used to arrange the cells and header of the column. The value is coerced to be within the <xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A> and <xref:System.Windows.Controls.DataGridColumn.MinWidth%2A> constraints.  
  
 To get the rendered width of the column, use the <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> of the <xref:System.Windows.Controls.DataGridColumn.Width%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ActualWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActualWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActualWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.ActualWidth%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CancelCellEdit">
      <MemberSignature Language="C#" Value="protected virtual void CancelCellEdit (System.Windows.FrameworkElement editingElement, object uneditedValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelCellEdit(class System.Windows.FrameworkElement editingElement, object uneditedValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingElement" Type="System.Windows.FrameworkElement" />
        <Parameter Name="uneditedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
        <param name="uneditedValue">The original, unedited value in the cell being edited.</param>
        <summary>Causes the cell being edited to revert to the original, unedited value.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanUserReorder">
      <MemberSignature Language="C#" Value="public bool CanUserReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the user can change the column display position by dragging the column header.</summary>
        <value>
          <see langword="true" /> if the user can drag the column header to a new position; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can set this reorder behavior for all columns by setting the <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A?displayProperty=fullName> property. If the CanUserReorder property and the <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A?displayProperty=fullName> property are both set, a value of `false` takes precedence over a value of `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanUserReorderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserReorderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserReorderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.CanUserReorder%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanUserResize">
      <MemberSignature Language="C#" Value="public bool CanUserResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the user can adjust the column width by using the mouse.</summary>
        <value>
          <see langword="true" /> if the user can resize the column; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property does not affect whether column widths can be changed programmatically, such as by changing the <xref:System.Windows.Controls.DataGridColumn.Width%2A> property.  
  
 You can set this resize behavior for all columns by setting the <xref:System.Windows.Controls.DataGrid.CanUserResizeColumns%2A?displayProperty=fullName> property. If the CanUserResize property and the <xref:System.Windows.Controls.DataGrid.CanUserResizeColumns%2A?displayProperty=fullName> property are both set, a value of `false` takes precedence over a value of `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanUserResizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserResizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserResizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.CanUserResize%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanUserSort">
      <MemberSignature Language="C#" Value="public bool CanUserSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the user can sort the column by clicking the column header.</summary>
        <value>
          <see langword="true" /> if the user can sort the column; otherwise, <see langword="false" />. The registered default is <see langword="true" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can set this sorting behavior for all columns by setting the <xref:System.Windows.Controls.DataGrid.CanUserSortColumns%2A?displayProperty=fullName> property. If the CanUserSort property and the <xref:System.Windows.Controls.DataGrid.CanUserSortColumns%2A?displayProperty=fullName> property are both set, a value of `false` takes precedence over a value of `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanUserSortProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserSortProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserSortProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.CanUserSort%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style that is used to render cells in the column.</summary>
        <value>The style that is used to render cells in the column. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To define a <xref:System.Windows.Style> for a cell, specify a <xref:System.Windows.Style.TargetType%2A> of <xref:System.Windows.Controls.DataGridCell>.  
  
 A <xref:System.Windows.Style> can be applied to a cell at the table, column, or cell level. To apply a <xref:System.Windows.Style> to all cells in a column, set the CellStyle property, which takes precedence over the <xref:System.Windows.Controls.DataGrid.CellStyle%2A?displayProperty=fullName> property. To apply a <xref:System.Windows.Style> to an individual cell, set the <xref:System.Windows.FrameworkElement.Style%2A> property directly on the <xref:System.Windows.Controls.DataGridCell> object, which takes precedence over all other styles that you apply to the cell.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.CellStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClipboardContentBinding">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Data.BindingBase ClipboardContentBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ClipboardContentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the binding object to use when getting or setting cell content for the clipboard.</summary>
        <value>An object that represents the binding.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommitCellEdit">
      <MemberSignature Language="C#" Value="protected virtual bool CommitCellEdit (System.Windows.FrameworkElement editingElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CommitCellEdit(class System.Windows.FrameworkElement editingElement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingElement" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
        <summary>Performs any required validation before exiting cell editing mode.</summary>
        <returns>
          <see langword="true" /> if no validation errors are found; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyingCellClipboardContent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridCellClipboardEventArgs&gt; CopyingCellClipboardContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridCellClipboardEventArgs&gt; CopyingCellClipboardContent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridCellClipboardEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after the cell clipboard content is prepared.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Event handlers can modify the cell content before it gets stored on the clipboard.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataGridOwner">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.DataGrid DataGridOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataGrid DataGridOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGrid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Controls.DataGrid" /> control that contains this column.</summary>
        <value>The <see cref="T:System.Windows.Controls.DataGrid" /> control that contains this column.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayIndex">
      <MemberSignature Language="C#" Value="public int DisplayIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the display position of the column relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>The zero-based position of the column, as it is displayed in the associated <see cref="T:System.Windows.Controls.DataGrid" />. The registered default is -1. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DisplayIndex property has a default value of -1 before it is added to the <xref:System.Windows.Controls.DataGrid.Columns%2A?displayProperty=fullName> collection. This value is updated when the column is added to the <xref:System.Windows.Controls.DataGrid>.  
  
 The <xref:System.Windows.Controls.DataGrid> requires that the DisplayIndex property of each column must be a unique integer from 0 to the <xref:System.Windows.Controls.ColumnDefinitionCollection.Count%2A> of <xref:System.Windows.Controls.DataGrid.Columns%2A> -1. Therefore, when the DisplayIndex of one column changes, the change typically causes the DisplayIndex of other columns to also change.  
  
 The restrictions on the DisplayIndex value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism. If you attempt to set a value that is not valid, a run-time exception is thrown.  
  
 When the value of the DisplayIndex property is changed, the <xref:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged?displayProperty=fullName> event is raised.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DragIndicatorStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style DragIndicatorStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style DragIndicatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style object to apply to the column header during a drag operation.</summary>
        <value>The style object to apply to the column header during a drag operation. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to set the DragIndicatorStyle for an individual column in the <xref:System.Windows.Controls.DataGrid>. To define a <xref:System.Windows.Style> for the drag indicator, specify a <xref:System.Windows.Style.TargetType%2A> of <xref:System.Windows.Controls.Control>.  
  
 You can set properties in the style to change the appearance of certain elements of the drag indicator, such as the border around the column header. However, the default template for the drag indicator uses a <xref:System.Windows.Media.VisualBrush> to paint a <xref:System.Windows.Controls.Canvas> with an image of the original column header that is being dragged. As a result, if you set some properties in your style, such as <xref:System.Windows.Controls.Control.Background%2A> or <xref:System.Windows.Controls.Control.Foreground%2A>, they will appear to not be applied. To change the appearance of the column header while it is being dragged, apply a new template that does not use the default <xref:System.Windows.Media.VisualBrush>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DragIndicatorStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DragIndicatorStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DragIndicatorStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.DragIndicatorStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateEditingElement">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.FrameworkElement GenerateEditingElement (System.Windows.Controls.DataGridCell cell, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.FrameworkElement GenerateEditingElement(class System.Windows.Controls.DataGridCell cell, object dataItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Controls.DataGridCell" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cell">The cell that will contain the generated element.</param>
        <param name="dataItem">The data item that is represented by the row that contains the intended cell.</param>
        <summary>When overridden in a derived class, gets an editing element that is bound to the &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value of the column.</summary>
        <returns>A new editing element that is bound to the &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value of the column.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method creates the visual tree for the cell content when the cell is in editing mode.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateElement">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.FrameworkElement GenerateElement (System.Windows.Controls.DataGridCell cell, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.FrameworkElement GenerateElement(class System.Windows.Controls.DataGridCell cell, object dataItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Controls.DataGridCell" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cell">The cell that will contain the generated element.</param>
        <param name="dataItem">The data item that is represented by the row that contains the intended cell.</param>
        <summary>When overridden in a derived class, gets a read-only element that is bound to the &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value of the column.</summary>
        <returns>A new read-only element that is bound to the &lt;xref:System.Windows.Controls.DataGridBoundColumn.Binding%2A&gt; property value of the column.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method creates the visual tree for the cell content when the cell is in display mode.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCellContent">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement GetCellContent (object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FrameworkElement GetCellContent(object dataItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataItem">The data item that is represented by the row that contains the intended cell.</param>
        <summary>Gets the &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt; property value for the cell at the intersection of this column and the row that represents the specified data item.</summary>
        <returns>The cell content; or <see langword="null" />, if the cell is not found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataItem" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCellContent">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement GetCellContent (System.Windows.Controls.DataGridRow dataGridRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FrameworkElement GetCellContent(class System.Windows.Controls.DataGridRow dataGridRow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridRow" Type="System.Windows.Controls.DataGridRow" />
      </Parameters>
      <Docs>
        <param name="dataGridRow">The row that contains the intended cell.</param>
        <summary>Retrieves the &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt; property value for the cell at the intersection of this column and the specified row.</summary>
        <returns>The cell content; or <see langword="null" />, if the cell is not found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridRow" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public object Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the content of the column header.</summary>
        <value>The column header content. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.Header%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the format pattern to apply to the content of the column header.</summary>
        <value>A string value that represents the formatting pattern. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.HeaderStringFormat%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style that is used when rendering the column header.</summary>
        <value>The style that is used to render the column header; or <see langword="null" />, to use the &lt;xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A&gt; setting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To define a <xref:System.Windows.Style> for a column header, specify a <xref:System.Windows.Style.TargetType%2A> of <xref:System.Windows.Controls.Primitives.DataGridColumnHeader>.  
  
 A <xref:System.Windows.Style> can be applied to all column headers or to an individual column header. To apply a <xref:System.Windows.Style> to an individual header, set the HeaderStyle property, which takes precedence over the <xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A?displayProperty=fullName> property.  
  
   
  
## Examples  
 The following example uses a style resource to change the style of column headers in the <xref:System.Windows.Controls.DataGrid>. The style of the first column header is then set with an inline style that overrides the <xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A?displayProperty=fullName>.  
  
 [!code-xml[DataGrid_ColumnHeaderStyle#1](~/add/codesnippet/xaml/datagrid_columnheaderstyle/mainwindow.xaml#1)]
 [!code-xml[DataGrid_ColumnHeaderStyle#1](~/add/codesnippet/xaml/p-system.windows.control_49_1.xaml)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.HeaderStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template that defines the visual representation of the column header.</summary>
        <value>The object that defines the visual representation of the column header. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.HeaderTemplate%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the object that selects which template to use for the column header.</summary>
        <value>The object that selects the template. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsAutoGenerated">
      <MemberSignature Language="C#" Value="public bool IsAutoGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the column is auto-generated.</summary>
        <value>
          <see langword="true" /> if the column is auto-generated; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsAutoGeneratedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsAutoGeneratedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsAutoGeneratedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.IsAutoGenerated%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the column is prevented from scrolling horizontally.</summary>
        <value>
          <see langword="true" /> if the column cannot be scrolled horizontally; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsFrozen cannot be used to freeze a column. Instead, set the <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> property. The leftmost columns up to the column that is specified by the <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> number will freeze in place.  
  
   
  
## Examples  
 The following example shows how to freeze a column when "Freeze Column" is selected from the <xref:System.Windows.Controls.ContextMenu>. Columns are moved to the left in order to be included in the frozen columns.  
  
 [!code-xml[DataGrid_FrozenColumn#1](~/add/codesnippet/xaml/datagrid_frozencolumns/window1.xaml#1)]  
  
 [!code-cs[DataGrid_FrozenColumn#2](~/add/codesnippet/csharp/datagrid_frozencolumns/window1.xaml.cs#2)]
 [!code-vb[DataGrid_FrozenColumn#2](~/add/codesnippet/visualbasic/datagrid_frozencolumn_vb/window1.xaml.vb#2)]  
[!code-cs[DataGrid_FrozenColumn#3](~/add/codesnippet/csharp/datagrid_frozencolumns/window1.xaml.cs#3)]
[!code-vb[DataGrid_FrozenColumn#3](~/add/codesnippet/visualbasic/datagrid_frozencolumn_vb/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsFrozenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrozenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrozenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.IsFrozen%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether cells in the column can be edited.</summary>
        <value>
          <see langword="true" /> if cells in the column cannot be edited; otherwise, <see langword="false" />. The registered default is <see langword="false" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set the IsReadOnly property to `true` to make all cells in an individual column read-only. Set the <xref:System.Windows.Controls.DataGrid.IsReadOnly%2A?displayProperty=fullName> property to `true` to make all cells in the <xref:System.Windows.Controls.DataGrid> read-only. Set the <xref:System.Windows.Controls.DataGridCell.IsReadOnly%2A?displayProperty=fullName> property to `true` to make an individual cell read-only. If a conflict exists between the settings at the <xref:System.Windows.Controls.DataGrid>, column, or cell levels, a value of `true` takes precedence over a value of `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.IsReadOnly%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public double MaxWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum width constraint of the column.</summary>
        <value>The maximum column width, in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]. The registered default is &lt;xref:System.Double&gt;. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you set a value for the MaxWidth property, it must be greater than or equal to 0.0.  
  
 <xref:System.Double.NaN?displayProperty=fullName> is not a valid value for this property. The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism. If you attempt to set a value that is not valid, a run-time exception is thrown.  
  
 The <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> of the <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A?displayProperty=fullName> and <xref:System.Windows.Controls.DataGridColumn.Width%2A?displayProperty=fullName> properties are constrained by the following properties, if they are set, in order of precedence:  
  
-   MaxWidth  
  
-   <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.DataGridColumn.MinWidth%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum width constraint of the column.</summary>
        <value>The minimum column width, in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]. The registered default is 20. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you set a value for the MinWidth property, the value must be greater than or equal to 0.0.  
  
 <xref:System.Double.PositiveInfinity?displayProperty=fullName> and <xref:System.Double.NaN?displayProperty=fullName> are not valid values for this property. The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism. If you attempt to set a value that is not valid, a run-time exception is thrown.  
  
 The <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> of the <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A?displayProperty=fullName> and <xref:System.Windows.Controls.DataGridColumn.Width%2A?displayProperty=fullName> properties are constrained by the following properties, if they are set, in order of precedence:  
  
-   <xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A?displayProperty=fullName>  
  
-   MinWidth  
  
-   <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.MinWidth%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NotifyPropertyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyPropertyChanged(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the column property that changed.</param>
        <summary>Notifies the <see cref="T:System.Windows.Controls.DataGrid" /> that contains this column that a column property has changed.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCoerceIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool OnCoerceIsReadOnly (bool baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnCoerceIsReadOnly(bool baseValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseValue">The value that was passed to the delegate.</param>
        <summary>Determines the value of the &lt;xref:System.Windows.Controls.DataGridColumn.IsReadOnly%2A&gt; property based on the property rules of the <see cref="T:System.Windows.Controls.DataGrid" /> that contains this column.</summary>
        <returns>
          <see langword="true" /> if cells in the column cannot be edited based on rules from the <see cref="T:System.Windows.Controls.DataGrid" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCopyingCellClipboardContent">
      <MemberSignature Language="C#" Value="public virtual object OnCopyingCellClipboardContent (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OnCopyingCellClipboardContent(object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The data context for the selected element.</param>
        <summary>Raises the <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> event.</summary>
        <returns>An object that represents the content of the cell.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called for each selected cell to retrieve the default cell content. It then raises the <xref:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent> event. You can handle the event to modify the cell content before it is returned.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPastingCellClipboardContent">
      <MemberSignature Language="C#" Value="public virtual void OnPastingCellClipboardContent (object item, object cellContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPastingCellClipboardContent(object item, object cellContent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="cellContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The data context for the selected element.</param>
        <param name="cellContent">The content to paste into the cell.</param>
        <summary>Raises the <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method can be used as a helper if you provide a custom paste implementation for the <xref:System.Windows.Controls.DataGrid>. The cell content is stored in the `item` object.  
  
 This method raises the <xref:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent> event. You can handle the event to modify the cell content before it is pasted into the cell. You can set `cellContent` to `null` to cancel the paste action.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PastingCellClipboardContent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridCellClipboardEventArgs&gt; PastingCellClipboardContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridCellClipboardEventArgs&gt; PastingCellClipboardContent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridCellClipboardEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before the clipboard content is moved to the cell.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Event handlers can modify the clipboard content before it gets stored in the cell content.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrepareCellForEdit">
      <MemberSignature Language="C#" Value="protected virtual object PrepareCellForEdit (System.Windows.FrameworkElement editingElement, System.Windows.RoutedEventArgs editingEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object PrepareCellForEdit(class System.Windows.FrameworkElement editingElement, class System.Windows.RoutedEventArgs editingEventArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingElement" Type="System.Windows.FrameworkElement" />
        <Parameter Name="editingEventArgs" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
        <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
        <summary>When overridden in a derived class, sets cell content as needed for editing.</summary>
        <returns>When returned by a derived class, the unedited cell value. This implementation returns <see langword="null" /> in all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derived column types override this method to respond to the user gesture that is indicated by `editingEventArgs` and to return the current value before editing.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RefreshCellContent">
      <MemberSignature Language="C#" Value="protected virtual void RefreshCellContent (System.Windows.FrameworkElement element, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RefreshCellContent(class System.Windows.FrameworkElement element, string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.FrameworkElement" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">The cell to update.</param>
        <param name="propertyName">The name of the column property that changed.</param>
        <summary>When overridden in a derived class, updates the contents of a cell in the column in response to a column property value that changed.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.ComponentModel.ListSortDirection&gt; SortDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ComponentModel.ListSortDirection&gt; SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ComponentModel.ListSortDirection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the sort direction (ascending or descending) of the column.</summary>
        <value>A value that represents the direction for sorting. The registered default is <see langword="null" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SortDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SortDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SortDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.SortDirection%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SortMemberPath">
      <MemberSignature Language="C#" Value="public string SortMemberPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortMemberPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a property name, or a period-delimited hierarchy of property names, that indicates the member to sort by.</summary>
        <value>The path of the data-item member to sort by. The registered default is an empty string (""). For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SortMemberPathProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SortMemberPathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SortMemberPathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.SortMemberPath%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the visibility of the column.</summary>
        <value>An enumeration value that specifies the column visibility. The registered default is <see cref="T:System.Windows.Visibility" />. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To hide a column, set its Visibility property to <xref:System.Windows.Visibility>.  
  
   
  
## Examples  
 The following example shows how to set the visibility of the column.  
  
 [!code-xml[DataGrid_ColumnsManipulation#Visible](~/add/codesnippet/xaml/datagrid_columnsmanipulation/window1.xaml#visible)]  
[!code-xml[DataGrid_ColumnsManipulation#DataGrid](~/add/codesnippet/xaml/datagrid_columnsmanipulation/window1.xaml#datagrid)]  
  
 [!code-cs[DataGrid_ColumnsManipulation#Visible2](~/add/codesnippet/csharp/datagrid_columnsmanipulation/window1.xaml.cs#visible2)]
 [!code-vb[DataGrid_ColumnsManipulation#Visible2](~/add/codesnippet/visualbasic/datagrid_columnsmanipulation_vb/window1.xaml.vb#visible2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.Visibility%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridLength Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridLength Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridLength</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the column width or automatic sizing mode.</summary>
        <value>A structure that represents the column width or automatic sizing mode. The registered default is &lt;xref:System.Windows.Controls.DataGridLength.Auto%2A&gt;. For information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Width property, when set on an individual <xref:System.Windows.Controls.DataGridColumn>, takes precedence over the <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A?displayProperty=fullName> property.  
  
 The <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> of the Width property is constrained by the following properties, if they are set, in order of precedence:  
  
-   <xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.DataGridColumn.MinWidth%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.DataGridColumn.Width%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>