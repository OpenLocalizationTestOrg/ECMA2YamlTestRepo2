<Type Name="ItemsControl" FullName="System.Windows.Controls.ItemsControl">
  <TypeSignature Language="C#" Value="public class ItemsControl : System.Windows.Controls.Control, System.Windows.Controls.Primitives.IContainItemStorage, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ItemsControl extends System.Windows.Controls.Control implements class System.Windows.Controls.Primitives.IContainItemStorage, class System.Windows.Markup.IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IContainItemStorage</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("OnItemsChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a control that can be used to present a collection of items.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An ItemsControl is a type of <xref:System.Windows.Controls.Control> that can contain multiple items, such as strings, objects, or other elements. The following illustration shows a <xref:System.Windows.Controls.ListBox> control that contains the following different types of items:  
  
-   A string.  
  
-   A <xref:System.DateTime> object.  
  
-   A <xref:System.Windows.UIElement> object.  
  
-   A <xref:System.Windows.Controls.Panel> control that contains an <xref:System.Windows.Shapes.Ellipse> and a <xref:System.Windows.Controls.TextBlock>.  
  
 ![ListBox with four types of content](~/add/media/controlcontentmodellistbox2.PNG "ListBox with four types of content")  
ListBox that contains multiple types of objects  
  
 Use either the <xref:System.Windows.Controls.ItemsControl.Items%2A> or the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to specify the collection to use to generate the content of your ItemsControl. You can set the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to any type that implements <xref:System.Collections.IEnumerable>. <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is typically used to display a data collection or to bind an ItemsControl to a collection object.  
  
 If you do not want to use an object that implements <xref:System.Collections.IEnumerable> to populate the ItemsControl, you can add items by using the <xref:System.Windows.Controls.ItemsControl.Items%2A> property. The items in an ItemsControl can have different types. For example, a <xref:System.Windows.Controls.ListBox> can contain one item that is a string and another item that is an <xref:System.Windows.Controls.Image>.  
  
 When the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is set, the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection is set to read-only and fixed-size. This means that you cannot add items to the collection directly. When <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is in use, setting the property to `null` removes the collection and restores usage to <xref:System.Windows.Controls.ItemsControl.Items%2A>, which will be an empty <xref:System.Windows.Controls.ItemCollection>.  
  
 Each ItemsControl type has a corresponding item container type. The corresponding item container for each ItemsControl appends `Item` to its name. For example, for <xref:System.Windows.Controls.ListBox>, the item containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls. You can explicitly create a container type for each item in the ItemsControl, but it is not necessary. When you do not explicitly create the container type, one is generated that contains a data item in the item collection. For example, if you bind a collection of string objects to the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of a <xref:System.Windows.Controls.ListBox>, you do not explicitly create <xref:System.Windows.Controls.ListBoxItem> objects, but the <xref:System.Windows.Controls.ListBox> will generate one for each string. You can access a generated item container by using the <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> property.  
  
> [!NOTE]
>  Certain features of UI Automation do not work correctly when an ItemsControl contains duplicate objects.   If an object appears multiple times, only the first instance appears in the automation tree.   (Two objects **x** and **y** are considered to be duplicates if `Object.Equals(x, y)` returns `true`.)  
>   
>  While an object **x** is in use by an ItemsControl the value returned by **x.**`GetHashCode()` must not change.  Changes to this value are unsupported, and lead to unpredictable behavior.  
  
 Dependency properties for this control might be set by the controlâ€™s default style. If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running. For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
   
  
## Examples  
 The following examples demonstrate binding data to an ItemsControl. The first example creates a class called `MyData` that is a simple string collection.  
  
 [!code-cs[ControlContentOverviewSnippets#8](~/add/codesnippet/csharp/ControlContentOverviewSnippets/Window1.xaml.cs#8)]
 [!code-vb[ControlContentOverviewSnippets#8](~/add/codesnippet/visualbasic/ControlContentOverviewSnippets/Window1.xaml.vb#8)]  
  
 The following example binds the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> object of an ItemsControl to `MyData`.  
  
 [!code-xml[ControlContentOverviewSnippets#7](~/add/codesnippet/xaml/ControlContentOverviewSnippets/Window1.xaml#7)]  
[!code-xml[ControlContentOverviewSnippets#6](~/add/codesnippet/xaml/ControlContentOverviewSnippets/Window1.xaml#6)]  
  
 [!code-cs[ControlContentOverviewSnippets#9](~/add/codesnippet/csharp/ControlContentOverviewSnippets/Window1.xaml.cs#9)]
 [!code-vb[ControlContentOverviewSnippets#9](~/add/codesnippet/visualbasic/ControlContentOverviewSnippets/Window1.xaml.vb#9)]  
  
 The following illustration shows the <xref:System.Windows.Controls.ListBox> control created in the previous example.  
  
 ![ListBox](~/add/media/controlcontentmodellistbox1.PNG "ListBox")  
  
 The following example demonstrates how to populate an ItemsControl by using the <xref:System.Windows.Controls.ItemsControl.Items%2A> property. The example adds the following different types of items to the <xref:System.Windows.Controls.ListBox>:  
  
-   A string.  
  
-   A <xref:System.DateTime> object.  
  
-   A <xref:System.Windows.UIElement> object.  
  
-   A <xref:System.Windows.Controls.Panel> control that contains other <xref:System.Windows.UIElement> objects.  
  
 [!code-xml[ControlContentOverviewSnippets#3](~/add/codesnippet/xaml/ControlContentOverviewSnippets/Window1.xaml#3)]  
  
 [!code-cs[ControlContentOverviewSnippets#4](~/add/codesnippet/csharp/ControlContentOverviewSnippets/Window1.xaml.cs#4)]
 [!code-vb[ControlContentOverviewSnippets#4](~/add/codesnippet/visualbasic/ControlContentOverviewSnippets/Window1.xaml.vb#4)]  
  
 The following illustration shows the <xref:System.Windows.Controls.ListBox> created in the previous example.  
  
 ![ListBox with four types of content](~/add/media/controlcontentmodellistbox2.PNG "ListBox with four types of content")  
  
 The following example illustrates how to use the different styling and templating-related properties that are provided by the ItemsControl. The ItemsControl in this example is bound to a collection of `Task` objects. For demonstration purposes, the styles and templates in this example are all declared inline.  
  
 [!code-xml[DataTemplatingIntro_snip#ItemsControlProperties](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#itemscontrolproperties)]  
  
 The following illustration is a screenshot of the example when it is rendered.  
  
 ![ItemsControl example screenshot](~/add/media/databinding-itemscontrolproperties.png "ItemsControl example screenshot")  
  
 Two other style-related properties of the ItemsControl that are not shown here are <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> and <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemsControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsControl" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to add as a child.</param>
        <summary>Adds the specified object as the child of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The string to add.</param>
        <summary>Adds the specified text string to the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of alternating item containers in the <see cref="T:System.Windows.Controls.ItemsControl" />, which enables alternating containers to have a unique appearance.</summary>
        <value>The number of alternating item containers in the <see cref="T:System.Windows.Controls.ItemsControl" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AlternationCount and <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> properties enable you to specify the appearance for two or more alternating item containers. For example, you can specify alternating background colors for every third item in an <xref:System.Windows.Controls.ItemsControl>.  The <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> is assigned to each item container in the <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> begins at 0, increments until it is AlternationCount minus 1, and then restarts at 0. For example, if AlternationCount is 3 and there are seven items in the <xref:System.Windows.Controls.ItemsControl>, the following table lists the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> for each item.  
  
|Position of Item in the <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 There are several methods you can use to specify different appearances for the alternating item containers. One method is to bind properties of the items container to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>. You can then use an <xref:System.Windows.Controls.AlternationConverter> to specify which value should be applied to the item container that has a certain <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> value. You can also use triggers to change the value of an item container's property depending on the value of its <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.  
  
   
  
## Examples  
 The following example specifies that the <xref:System.Windows.Controls.ListBox> (which inherits from <xref:System.Windows.Controls.ItemsControl>) has alternating item containers (which are of type <xref:System.Windows.Controls.ListBoxItem>) and specifies a different background and foreground for each one.  The example binds the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and provides an <xref:System.Windows.Controls.AlternationConverter> for each property.  
  
 [!code-xml[AlternationIndexSnippets#2](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#2)]  
  
 The following example does the same as the previous example by using <xref:System.Windows.Trigger> objects.  
  
 [!code-xml[AlternationIndexSnippets#1](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AlternationCountProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternationCountProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternationCountProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AlternationIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternationIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternationIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public override void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates that the initialization of the <see cref="T:System.Windows.Controls.ItemsControl" /> object is about to start.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">The container element.</param>
        <param name="item">The item.</param>
        <summary>When overridden in a derived class, undoes the effects of the &lt;xref:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride%2A&gt; method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The base implementation does nothing.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContainerFromElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The element to return the container for.</param>
        <summary>Returns the container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element.</summary>
        <returns>The container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element or <see langword="null" /> if no such container exists.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContainerFromElement">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject ContainerFromElement (System.Windows.Controls.ItemsControl itemsControl, System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject ContainerFromElement(class System.Windows.Controls.ItemsControl itemsControl, class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsControl" Type="System.Windows.Controls.ItemsControl" />
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="itemsControl">The <see cref="T:System.Windows.Controls.ItemsControl" /> to return the container for.</param>
        <param name="element">The element to return the container for.</param>
        <summary>Returns the container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given container element.</summary>
        <returns>The container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element, if <paramref name="itemsControl" /> is not <see langword="null" />. If <paramref name="itemsControl" /> is <see langword="null" />, returns the closest container that belongs to any <see cref="T:System.Windows.Controls.ItemsControl" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPath">
      <MemberSignature Language="C#" Value="public string DisplayMemberPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMemberPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a path to a value on the source object to serve as the visual representation of the object.</summary>
        <value>The path to a value on the source object. This can be any path, or an XPath such as "@Name". The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is a simple way to define a default template that describes how to display the data objects.  
  
<a name="dependencyPropertyInfo_DisplayMemberPath"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 In the following example, the static resource named `places` is defined as a collection of `Place` objects, in which each `Place` object has a `CityName` property and a `State` property. The prefix `src` is mapped to the namespace where the data source `Places` is defined. The prefixes `scm` and `dat` are mapped to the <xref:System.ComponentModel> and <xref:System.Windows.Data> namespaces, respectively.  
  
 The following example creates a view of the data collection that is sorted by the city name and grouped by the state.  
  
 [!code-xml[CollectionViewSource#1](~/add/codesnippet/xaml/collectionviewsource/window1.xaml#1)]  
  
 The view can be a binding source, as in the following example. Because of the specified DisplayMemberPath, each`Place` object is shown with its `CityName` value. If DisplayMemberPath is not specified and there is no <xref:System.Windows.DataTemplate>, then the <xref:System.Windows.Controls.ListBox> displays a string representation of each object in the underlying collection (in this case, "SDKSample.Place").  
  
 [!code-xml[CollectionViewSource#2](~/add/codesnippet/xaml/collectionviewsource/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPathProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayMemberPathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayMemberPathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public override void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates that the initialization of the <see cref="T:System.Windows.Controls.ItemsControl" /> object is complete.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetAlternationIndex">
      <MemberSignature Language="C#" Value="public static int GetAlternationIndex (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAlternationIndex(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The object from which to get the &lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName&gt;.</param>
        <summary>Gets the &lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName&gt; for the specified object.</summary>
        <returns>The value of the &lt;xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName&gt;.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates or identifies the element that is used to display the given item.</summary>
        <returns>The element that is used to display the given item.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetItemsOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ItemsControl GetItemsOwner (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ItemsControl GetItemsOwner(class System.Windows.DependencyObject element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">The host element.</param>
        <summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for.</summary>
        <returns>The <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for, or <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If <xref:System.Windows.Controls.Panel.IsItemsHost%2A> is set to `true` on `element` in a style or if `element` is a panel created by the <xref:System.Windows.Controls.ItemsPresenter> for an <xref:System.Windows.Controls.ItemsControl>, the <xref:System.Windows.Controls.ItemsControl> is returned; otherwise, `null`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GroupStyle">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt; GroupStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.Windows.Controls.GroupStyle&gt; GroupStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of <see cref="T:System.Windows.Controls.GroupStyle" /> objects that define the appearance of each level of groups.</summary>
        <value>A collection of <see cref="T:System.Windows.Controls.GroupStyle" /> objects that define the appearance of each level of groups.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The entry at index 0 describes the top-level groups, the entry at index 1 describes the next level, and so on. If there are more levels of grouping than entries in the collection, the last entry is used for the extra levels.  
  
<a name="xamlPropertyElementUsage_GroupStyle"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.GroupStyle>  
    OneOrMoreGroupStyleObjects  
  </object.GroupStyle>  
</object>  
  
```  
  
<a name="xamlValues_GroupStyle"></a>   
## XAML Values  
 *OneOrMoreGroupStyleObjects*  
 One or more <xref:System.Windows.Controls.GroupStyle> objects.  
  
   
  
## Examples  
 The following examples show an <xref:System.Windows.Controls.ItemsControl> that is bound to an <xref:System.Windows.Data.XmlDataProvider> and the code-behind content that contains the logic to add and remove grouping. When the check box is checked, the content of the <xref:System.Windows.Controls.ItemsControl> is grouped by the `Type` attribute.  
  
 Each group is of type <xref:System.Windows.Data.CollectionViewGroup>. The <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> is specified so that it appears as a <xref:System.Windows.Controls.TextBlock> that displays the <xref:System.Windows.Data.CollectionViewGroup.Name%2A> of each the group. In this case, the <xref:System.Windows.Data.CollectionViewGroup.Name%2A> is either `Work` or `Home`.  
  
 [!code-xml[GroupingSample#XAML](~/add/codesnippet/xaml/GroupingSample/Window1.xaml#xaml)]  
  
 [!code-cs[GroupingSample#Code](~/add/codesnippet/csharp/GroupingSample/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/add/codesnippet/visualbasic/groupingsample/window1.xaml.vb#code)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GroupStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.GroupStyleSelector GroupStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.GroupStyleSelector GroupStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle" /> to apply to each group in a collection.</summary>
        <value>A method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle" /> to apply to each group in a collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_GroupStyleSelector"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GroupStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GroupStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GroupStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HasItems">
      <MemberSignature Language="C#" Value="public bool HasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ItemsControl" /> contains items.</summary>
        <value>
          <see langword="true" /> if the items count is greater than 0; otherwise, <see langword="false" />.The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HasItems"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.HasItemsProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HasItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.HasItems%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="public bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the control is using grouping.</summary>
        <value>
          <see langword="true" /> if a control is using grouping; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsGrouping"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.IsGroupingProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsGroupingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsGroupingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsGroupingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.IsGrouping%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainer">
      <MemberSignature Language="C#" Value="public bool IsItemItsOwnContainer (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsItemItsOwnContainer(object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The item to check.</param>
        <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
        <returns>
          <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method calls the <xref:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected virtual bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The item to check.</param>
        <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
        <returns>
          <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchCaseSensitive">
      <MemberSignature Language="C#" Value="public bool IsTextSearchCaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearchCaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether case is a condition when searching for items.</summary>
        <value>
          <see langword="true" /> if text searches are case-sensitive; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabled%2A> property is set to `true`, the IsTextSearchCaseSensitive property specifies whether the case determines whether an item is selected in an <xref:System.Windows.Controls.ItemsControl>. For example, if an <xref:System.Windows.Controls.ItemsControl> contain two strings that differ only in case, such as "ITEM" and "item", the first string will always be selected, regardless of the case of the input.  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Controls.ComboBox> that contains the strings, "DOG", "CAT", "dog", and "cat". The example binds the IsTextSearchCaseSensitive property to the <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> property of a <xref:System.Windows.Controls.CheckBox>. If the check box is selected and the user types "dog", the third item in the <xref:System.Windows.Controls.ItemsControl> is selected. If the user unselects the check box and types "dog", the first item is selected because case is not a condition of the search.  
  
 [!code-xml[ComboBoxProps_snip#4](~/add/codesnippet/xaml/comboboxsimple/pane1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchCaseSensitiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTextSearchCaseSensitiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTextSearchCaseSensitiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchEnabled">
      <MemberSignature Language="C#" Value="public bool IsTextSearchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearchEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether <see cref="T:System.Windows.Controls.TextSearch" /> is enabled on the <see cref="T:System.Windows.Controls.ItemsControl" /> instance.</summary>
        <value>
          <see langword="true" /> if <see cref="T:System.Windows.Controls.TextSearch" /> is enabled; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTextSearchEnabled"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTextSearchEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTextSearchEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabled%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each item in the <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
        <value>The <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each item in the <see cref="T:System.Windows.Controls.ItemsControl" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you set the ItemBindingGroup property, each item container gets a <xref:System.Windows.Data.BindingGroup> that has the same <xref:System.Windows.Controls.ValidationRule> objects as the ItemBindingGroup, but the properties that describe the data in the bindings, such as <xref:System.Windows.Data.BindingGroup.Items%2A> and <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, are specific to the data for each item in the <xref:System.Windows.Controls.ItemsControl>.  You must access the item container's <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> to perform operations such as validate the data and check for errors on an item.  
  
   
  
## Examples  
 The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer, and then checks that the sales representative and the customer belong to the same region. The example sets the ItemBindingGroup of the <xref:System.Windows.Controls.ItemsControl> so the <xref:System.Windows.Controls.ValidationRule>, `AreasMatch`, will validate each item. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors. Notice that the <xref:System.Windows.Controls.ContentControl.Content%2A> of the <xref:System.Windows.Controls.Label> is bound to a <xref:System.Windows.Controls.ValidationError> that it gets from the <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=fullName> property. The value of <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=fullName> is the item container that has the error.  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/add/codesnippet/xaml/BindingGroupSnippets/Window2.xaml#validationadornersitefor)]  
  
 The following example gets the item container and calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> on the container's <xref:System.Windows.Data.BindingGroup> to validate the data. You must validate the data by calling a method on the item container's <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>, not on the ItemBindingGroup of the <xref:System.Windows.Controls.ItemsControl>.  
  
 [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemBindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemBindingGroupProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemContainerGenerator">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerGenerator ItemContainerGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerGenerator ItemContainerGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> that is associated with the control.</summary>
        <value>The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> that is associated with the control. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An ItemContainerGenerator is responsible for generating the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] for its host, such as an <xref:System.Windows.Controls.ItemsControl>. It maintains the association between the items in the data view of the control and the corresponding <xref:System.Windows.UIElement> objects. Every <xref:System.Windows.Controls.ItemsControl> has an associated item container that contains a data item in the item collection. You can use the ItemContainerGenerator property to access the item container that is associated with your <xref:System.Windows.Controls.ItemsControl>. For example, if you have a data-bound <xref:System.Windows.Controls.TreeView> control and you want to get a <xref:System.Windows.Controls.TreeViewItem> based on its index or its associated data item, you can use the <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex%2A?displayProperty=fullName> or the <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A?displayProperty=fullName> method. Alternatively, you can use the <xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%2A?displayProperty=fullName> or the <xref:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer%2A?displayProperty=fullName> method to get the index or data item that is associated with a given generated container element.  
  
 The <xref:System.Windows.Controls.Primitives.IItemContainerGenerator> interface is also used in advanced scenarios. Typically, advanced applications that have their own implementation of a virtualizing panel call members of the interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Content")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</summary>
        <value>The <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use this property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items. For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.  
  
 The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties. To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property. If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property. To specify the visualization of data objects, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property. For more information about when to specify an <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
<a name="xamlAttributeUsage_ItemContainerStyle"></a>   
## XAML Attribute Usage  
  
```  
<objectÂ ItemContainerStyle="ResourceExtensionÂ StyleResourceKey"/>  
```  
  
<a name="xamlValues_ItemContainerStyle"></a>   
## XAML Values  
 *ResourceExtension*  
 One of the following: `StaticResource`, or `DynamicResource`. Unless the styles themselves contain references to potential run-time references such as system resources or user preferences, `StaticResource` reference to a style is usually recommended for performance.  
  
 *StyleResourceKey*  
 `x:Key` string value referring to the style being requested as a resource.  
  
<a name="dependencyPropertyInfo_ItemContainerStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example demonstrates how to use this property. Consider the following data-bound <xref:System.Windows.Controls.ListBox>:  
  
 [!code-xml[StylingIntroSample#UIListBox](~/add/codesnippet/xaml/p-system.windows.control_210_1.xaml)]
 [!code-xml[StylingIntroSample#UIListBox](~/add/codesnippet/xaml/p-system.windows.control_210_1.xaml)]  
  
 To create a style for the elements that contain the data items, create a <xref:System.Windows.Controls.ListBoxItem> style, as shown in the following example. The style is applied to all <xref:System.Windows.Controls.ListBoxItem> elements within the scope the style is defined in.  
  
 [!code-xml[StylingIntroSample#ListBoxItemStyle](~/add/codesnippet/xaml/p-system.windows.control_210_2.xaml)]
 [!code-xml[StylingIntroSample#ListBoxItemStyle](~/add/codesnippet/xaml/p-system.windows.control_210_2.xaml)]  
  
 The <xref:System.Windows.Controls.ListBoxItem> is the container element for the <xref:System.Windows.Controls.ListBox> control. Therefore, an alternative to the preceding is to set the ItemContainerStyle property of the <xref:System.Windows.Controls.ListBox> to the defined style. To do that, give the <xref:System.Windows.Controls.ListBoxItem> style an `x:Key` so it is available as a resource:  
  
 [!code-xml[StylingIntroSample_snip#ContainerStyle1](~/add/codesnippet/xaml/p-system.windows.control_210_3.xaml)]  
[!code-xml[StylingIntroSample_snip#ContainerStyle2](~/add/codesnippet/xaml/p-system.windows.control_210_4.xaml)]  
  
 Next, set the ItemContainerStyle property to the resource, as in the following example:  
  
 [!code-xml[StylingIntroSample_snip#ListBox](~/add/codesnippet/xaml/p-system.windows.control_210_5.xaml)]  
  
 Both of the preceding scenarios produce the same result. However, one of the advantages of making the style available as a resource is that you can reuse the style. Setting the ItemContainerStyle property explicitly can also provide greater readability.  
  
 For the complete example, see [Introduction to Styling and Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160010).  
  
 The following example is designed to illustrate the function of the different styling and templating related properties provided by the <xref:System.Windows.Controls.ItemsControl>. The <xref:System.Windows.Controls.ItemsControl> in this example is bound to a collection of `Task` objects. For demonstration purposes, the styles and templates in this example are all declared inline.  
  
 [!code-xml[DataTemplatingIntro_snip#ItemsControlProperties](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#itemscontrolproperties)]  
  
 The following is a screenshot of the example when it is rendered:  
  
 ![ItemsControl example screenshot](~/add/media/databinding-itemscontrolproperties.png "ItemsControl example screenshot")  
  
 Two other style-related properties of the <xref:System.Windows.Controls.ItemsControl> that are not shown here are <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> and <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Content")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets custom style-selection logic for a style that can be applied to each generated container element.</summary>
        <value>A <see cref="T:System.Windows.Controls.StyleSelector" /> object that contains logic that chooses the style to use as the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt;. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property to set a style to affect the appearance of the elements that contain the data items. For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls. If you have more than one style defined and need to supply logic to choose which one to apply, then you use the ItemContainerStyleSelector property instead of the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property. Note that this property is ignored if the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property is set.  
  
 The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties. To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property. If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property. To specify the visualization of data objects, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property. For more information about when to specify an <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
<a name="dependencyPropertyInfo_ItemContainerStyleSelector"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemCollection Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
        <value>The collection that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />. The default is an empty collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property may be used to add items to an <xref:System.Windows.Controls.ItemsControl>. Adding a child to an <xref:System.Windows.Controls.ItemsControl> object implicitly adds it to the <xref:System.Windows.Controls.ItemCollection> for the <xref:System.Windows.Controls.ItemsControl> object.  
  
> [!NOTE]
>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as `Add`. The property to access the collection object itself is read-only, and the collection itself is read-write.  
  
 Note that you use either the Items or the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to specify the collection that should be used to generate the content of your <xref:System.Windows.Controls.ItemsControl>. When the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is set, the Items collection is made read-only and fixed-size.  
  
 When <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is in use, setting the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to `null` removes the collection and restores usage to Items, which will be an empty <xref:System.Windows.Controls.ItemCollection>.  
  
<a name="xamlPropertyElementUsage_Items"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  OneOrMoreElements  
</object>  
```  
  
<a name="xamlValues_Items"></a>   
## XAML Values  
 *OneOrMoreElements*  
 One or more <xref:System.Windows.UIElement> objects.  
  
   
  
## Examples  
 The following examples demonstrate binding data to an <xref:System.Windows.Controls.ItemsControl>. The first example creates a class called `MyData` that is a simple string collection.  
  
 [!code-cs[ControlContentOverviewSnippets#8](~/add/codesnippet/csharp/ControlContentOverviewSnippets/Window1.xaml.cs#8)]
 [!code-vb[ControlContentOverviewSnippets#8](~/add/codesnippet/visualbasic/ControlContentOverviewSnippets/Window1.xaml.vb#8)]  
  
 The following example binds the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> object of an <xref:System.Windows.Controls.ItemsControl> to `MyData`.  
  
 [!code-xml[ControlContentOverviewSnippets#7](~/add/codesnippet/xaml/ControlContentOverviewSnippets/Window1.xaml#7)]  
[!code-xml[ControlContentOverviewSnippets#6](~/add/codesnippet/xaml/ControlContentOverviewSnippets/Window1.xaml#6)]  
  
 [!code-cs[ControlContentOverviewSnippets#9](~/add/codesnippet/csharp/ControlContentOverviewSnippets/Window1.xaml.cs#9)]
 [!code-vb[ControlContentOverviewSnippets#9](~/add/codesnippet/visualbasic/ControlContentOverviewSnippets/Window1.xaml.vb#9)]  
  
 The following illustration shows the <xref:System.Windows.Controls.ListBox> control created in the previous example.  
  
 ![ListBox](~/add/media/controlcontentmodellistbox1.PNG "ListBox")  
  
 The following example demonstrates how to populate an <xref:System.Windows.Controls.ItemsControl> by using the Items property. The example adds the following different types of items to the <xref:System.Windows.Controls.ListBox>:  
  
-   A string.  
  
-   A <xref:System.DateTime> object.  
  
-   A <xref:System.Windows.UIElement> object.  
  
-   A <xref:System.Windows.Controls.Panel> control that contains other <xref:System.Windows.UIElement> objects.  
  
 [!code-xml[ControlContentOverviewSnippets#3](~/add/codesnippet/xaml/ControlContentOverviewSnippets/Window1.xaml#3)]  
  
 [!code-cs[ControlContentOverviewSnippets#4](~/add/codesnippet/csharp/ControlContentOverviewSnippets/Window1.xaml.cs#4)]
 [!code-vb[ControlContentOverviewSnippets#4](~/add/codesnippet/visualbasic/ControlContentOverviewSnippets/Window1.xaml.vb#4)]  
  
 The following illustration shows the <xref:System.Windows.Controls.ListBox> created in the previous example.  
  
 ![ListBox with four types of content](~/add/media/controlcontentmodellistbox2.PNG "ListBox with four types of content")  
  
 Note that the <xref:System.Windows.Controls.ItemCollection> is a view, so you can use the view-related functionalities such as sorting, filtering, and grouping.  
  
 For example, if you have an instance of a <xref:System.Windows.Controls.ListBox>, `myListBox`, you can do the following to sort the content of the <xref:System.Windows.Controls.ListBox>. In this example, `Content` is the name of the property to sort by.  
  
 [!code-cs[ListBoxSort_snip#Sort](~/add/codesnippet/csharp/ListBoxSort_snip/Window1.xaml.cs#sort)]
 [!code-vb[ListBoxSort_snip#Sort](~/add/codesnippet/visualbasic/listboxsort_snip/window1.xaml.vb#sort)]  
  
 Note that when you do this, if the control is bound to a collection directly, the default collection view is used, and the sort criteria are applied to all other controls bound to the same collection directly. The view will not be the default view if  the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is bound to a <xref:System.Windows.Data.CollectionViewSource>.  
  
 If your <xref:System.Windows.Controls.ItemsControl> is bound directly to a collection, then you can do the following to get the default view:  
  
 [!code-cs[GroupingSample#MyView](~/add/codesnippet/csharp/GroupingSample/Window1.xaml.cs#myview)]
 [!code-vb[GroupingSample#MyView](~/add/codesnippet/visualbasic/groupingsample/window1.xaml.vb#myview)]  
[!code-cs[GroupingSample#GetView](~/add/codesnippet/csharp/GroupingSample/Window1.xaml.cs#getview)]
[!code-vb[GroupingSample#GetView](~/add/codesnippet/visualbasic/groupingsample/window1.xaml.vb#getview)]  
  
 Alternately, you can specify filtering, sorting, and grouping criteria in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] or code by using a <xref:System.Windows.Data.CollectionViewSource>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsControlFromItemContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ItemsControl ItemsControlFromItemContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ItemsControl ItemsControlFromItemContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">The container element to return the <see cref="T:System.Windows.Controls.ItemsControl" /> for.</param>
        <summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</summary>
        <returns>The <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate ItemsPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate ItemsPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template that defines the panel that controls the layout of items.</summary>
        <value>An <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that defines the panel to use for the layout of the items. The default value for the <see cref="T:System.Windows.Controls.ItemsControl" /> is an <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that specifies a <see cref="T:System.Windows.Controls.StackPanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For the <xref:System.Windows.Controls.ListBox>, the default <xref:System.Windows.Controls.ItemsPanelTemplate> specifies the <xref:System.Windows.Controls.VirtualizingStackPanel>. For <xref:System.Windows.Controls.MenuItem>, the default uses <xref:System.Windows.Controls.WrapPanel>. For <xref:System.Windows.Controls.Primitives.StatusBar>, the default uses <xref:System.Windows.Controls.DockPanel>.  
  
 To affect the layout of the items in an <xref:System.Windows.Controls.ItemsControl>, you use this property to specify a <xref:System.Windows.Controls.ItemsPanelTemplate>.  
  
 The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties. You use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items. For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls. If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property. To specify the visualization of the data objects, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property. For more information, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
<a name="dependencyPropertyInfo_ItemsPanel"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.ItemsPanelProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 To create a horizontal <xref:System.Windows.Controls.ListBox>, you can create a template that specifies a horizontal <xref:System.Windows.Controls.StackPanel> and set it as the ItemsPanel property. The following example shows a <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Style> that creates a horizontal <xref:System.Windows.Controls.ListBox>.  
  
 [!code-xml[StylingIntroSample_snip#ItemsPanel](~/add/codesnippet/xaml/p-system.windows.control_120_1.xaml)]  
  
 The following example uses a <xref:System.Windows.Controls.ControlTemplate> to create a horizontal <xref:System.Windows.Controls.ListBox> that has rounded corners. In this example, instead of setting the ItemsPanel property as in previous example, the horizontal <xref:System.Windows.Controls.StackPanel> is specified within the <xref:System.Windows.Controls.ControlTemplate>. The <xref:System.Windows.Controls.Panel.IsItemsHost%2A> property is set to `true` on the <xref:System.Windows.Controls.StackPanel>, indicating that the generated items should go in the panel. When you specify it this way, the ItemsPanel cannot be replaced by the user of the control without using a <xref:System.Windows.Controls.ControlTemplate>. Therefore, only do this if you know you would not want the panel to be replaced without the use of a template.  
  
 [!code-xml[StylingIntroSample#ListBoxCT](~/add/codesnippet/xaml/p-system.windows.control_120_2.xaml)]
 [!code-xml[StylingIntroSample#ListBoxCT](~/add/codesnippet/xaml/p-system.windows.control_120_2.xaml)]  
  
 Alternatively, you can do the following to achieve the same results. In this case, the <xref:System.Windows.Controls.ItemsPresenter> creates the panel for the layout of the items based on what is specified by the <xref:System.Windows.Controls.ItemsPanelTemplate>.  
  
 [!code-xml[StyleOvw01#ItemsPanelTemplate](~/add/codesnippet/xaml/StyleOvw1/Page1.xaml#itemspaneltemplate)]
 [!code-xml[StyleOvw01#ItemsPanelTemplate](~/add/codesnippet/xaml/p-system.windows.control_120_3.xaml)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsPanelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemsPanelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemsPanelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
        <value>A collection that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Content Model:** This property may be used to add items to an <xref:System.Windows.Controls.ItemsControl>.  
  
 A common scenario is to use an <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.ListView>, or <xref:System.Windows.Controls.TreeView> to display a data collection, or to bind an <xref:System.Windows.Controls.ItemsControl> to a collection object. To bind an <xref:System.Windows.Controls.ItemsControl> to a collection object, use the ItemsSource property. Note that the ItemsSource property supports <xref:System.Windows.Data.BindingMode> binding by default.  
  
 When the ItemsSource property is set, the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection is made read-only and fixed-size.  
  
 When ItemsSource is in use, setting the property to `null` removes the collection and restores usage to <xref:System.Windows.Controls.ItemsControl.Items%2A>, which will be an empty <xref:System.Windows.Controls.ItemCollection>. When ItemsSource is not in use, the value of this property is `null`, and setting it to `null` has no effect.  
  
> [!NOTE]
>  In most cases you do not need to implement your own collections. Instead, consider using <xref:System.Collections.ObjectModel.ObservableCollection%601> or other existing collections. For more information, see the "Collection Objects Used as Binding Source" in [Binding Sources Overview](~/add/includes/ajax-current-ext-md.md).  
  
<a name="xamlAttributeUsage_ItemsSource"></a>   
## XAML Attribute Usage  
  
<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  
<a name="xamlValues_ItemsSource"></a>   
## XAML Values  
 *bindingDeclaration*  
 A <xref:System.Windows.Data.Binding> declaration. See [Binding Markup Extension](~/add/includes/ajax-current-ext-md.md) for more information.  
  
<a name="dependencyPropertyInfo_ItemsSource"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.ItemsSourceProperty>|  
|Metadata properties set to `true`|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemsSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemsSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a composite string that specifies how to format the items in the <see cref="T:System.Windows.Controls.ItemsControl" /> if they are displayed as strings.</summary>
        <value>A composite string that specifies how to format the items in the <see cref="T:System.Windows.Controls.ItemsControl" /> if they are displayed as strings.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ItemStringFormat can be a predefined, composite, or custom string format. For more information about string formats, see [Formatting Types](~/add/includes/ajax-current-ext-md.md). If you set the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> of a <xref:System.Windows.Controls.ItemsControl>, the ItemStringFormat property is ignored.  
  
   
  
## Examples  
 The following example uses the ItemStringFormat to specify the format of a list of <xref:System.DateTime> objects.  
  
 [!code-xml[ContentStringSnippets#ItemsControl](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#itemscontrol)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used to display each item.</summary>
        <value>A <see cref="T:System.Windows.DataTemplate" /> that specifies the visualization of the data objects. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use the ItemTemplate to specify the visualization of the data objects. If your <xref:System.Windows.Controls.ItemsControl> is bound to a collection object and you do not provide specific display instructions using a <xref:System.Windows.DataTemplate>, the resulting [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] of each item is a string representation of each object in the underlying collection.  
  
 When you set an ItemTemplate on an <xref:System.Windows.Controls.ItemsControl>, the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] is generated as follows (using the <xref:System.Windows.Controls.ListBox> as an example):  
  
1.  During content generation, the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> initiates a request for the <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> to create a container for each data item. For <xref:System.Windows.Controls.ListBox>, the container is a <xref:System.Windows.Controls.ListBoxItem>. The generator calls back into the <xref:System.Windows.Controls.ItemsControl> to prepare the container.  
  
2.  Part of the preparation involves the copying of the ItemTemplate of the <xref:System.Windows.Controls.ListBox> to be the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> of the <xref:System.Windows.Controls.ListBoxItem>.  
  
3.  Similar to all <xref:System.Windows.Controls.ContentControl> types, the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.ListBoxItem> contains a <xref:System.Windows.Controls.ContentPresenter>. When the template is applied, it creates a <xref:System.Windows.Controls.ContentPresenter> whose <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> is bound to the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> of the <xref:System.Windows.Controls.ListBoxItem>.  
  
4.  Finally, the <xref:System.Windows.Controls.ContentPresenter> applies that <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> to itself, and that creates the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  
  
 If you have more than one <xref:System.Windows.DataTemplate> defined and you want to supply logic to programmatically choose and apply a <xref:System.Windows.DataTemplate>, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property.  
  
 The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties. Use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items. For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls. To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property. If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.  
  
 For more information, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
<a name="xamlAttributeUsage_ItemTemplate"></a>   
## XAML Attribute Usage  
  
```  
<objectÂ ItemTemplate=" ResourceExtensionÂ TemplateResourceKey"/>  
```  
  
<a name="xamlValues_ItemTemplate"></a>   
## XAML Values  
 *ResourceExtension*  
 One of the following: [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md), or [DynamicResource Markup Extension](~/add/includes/ajax-current-ext-md.md). Unless the styles themselves contain references to potential run-time references such as system resources or user preferences, [StaticResource Markup Extension](../Topic/StaticResource%20Markup%20Extension.md) reference to a style is usually recommended for performance.  
  
 *TemplateResourceKey*  
 [x:Key Directive](~/add/includes/ajax-current-ext-md.md) string value referring to the template being requested as a resource.  
  
<a name="dependencyPropertyInfo_ItemTemplate"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.ItemTemplateProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.DataTemplate> inline. The <xref:System.Windows.DataTemplate> specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  
  
 [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  
  
 It is more common to define a <xref:System.Windows.DataTemplate> in the resources section so it can be a reusable object, as in the following example:  
  
 [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  
[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  
[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  
  
 Now you can use `myTaskTemplate` as a resource, as in the following example:  
  
 [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  
  
 For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom logic for choosing a template used to display each item.</summary>
        <value>A custom <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that provides logic and returns a <see cref="T:System.Windows.DataTemplate" />. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> to specify the visualization of the data objects. If you have more than one template defined and want to supply logic to return a template to use, then you use this property. Note that this property is ignored if <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> is set.  
  
 The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties. Use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items. For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls. To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property. If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.  
  
 For more information, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
<a name="xamlAttributeUsage_ItemTemplateSelector"></a>   
## XAML Attribute Usage  
  
```  
<objectÂ ItemTemplateSelector="ResourceExtensionÂ SelectorResourceKey"/>  
```  
  
<a name="xamlValues_ItemTemplateSelector"></a>   
## XAML Values  
 *ResourceExtension*  
 One of the following: `StaticResource`, or `DynamicResource`. Unless the styles themselves contain references to potential run-time references such as system resources or user preferences, `StaticResource` reference to a style is usually recommended for performance.  
  
 *SelectorResourceKey*  
 `x:Key` string value referring to the selector being requested as a resource.  
  
<a name="dependencyPropertyInfo_ItemTemplateSelector"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 In the following example, the `auctionItemDataTemplateSelector` resource name (corresponding to an `AuctionItemDataTemplateSelector` class) is assigned to the ItemTemplateSelector property of the <xref:System.Windows.Controls.ItemsControl>.  
  
 [!code-xml[DataTemplateSelector#ItemTemplateSelector](~/add/codesnippet/xaml/DateTemplateSelectorSample/Window1.xaml#itemtemplateselector)]  
  
 The following example shows the implementation of the `AuctionItemDataTemplateSelector` class with an override of the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>method:  
  
 [!code-cs[DataTemplateSelector#DataTemplateSelector](~/add/codesnippet/csharp/DateTemplateSelectorSample/AuctionItemDataTemplateSelector.cs#datatemplateselector)]
 [!code-vb[DataTemplateSelector#DataTemplateSelector](~/add/codesnippet/visualbasic/datetemplateselectorsample/auctionitemdatatemplateselector.vb#datatemplateselector)]  
  
 In this case, within the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the class, there is logic to return the appropriate template based on the value of the `SpecialFeatures` property of the `item` object passed. The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.  
  
 When you set the ItemTemplateSelector property, the <xref:System.Windows.Controls.ItemsControl> is directed to automatically call the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of `AuctionItemDataTemplateSelector` for each of the items in the collection to which the <xref:System.Windows.Controls.ItemsControl> is bound. The call passes the data item as an object. The <xref:System.Windows.DataTemplate> that is returned by the method is then used to display that data item.  
  
 For another example, see [Data Templating Overview](../Topic/Data%20Templating%20Overview.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumerator for the logical child objects of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
        <value>An enumerator for the logical child objects of the <see cref="T:System.Windows.Controls.ItemsControl" /> object. The default is <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnAlternationCountChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternationCountChanged (int oldAlternationCount, int newAlternationCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternationCountChanged(int32 oldAlternationCount, int32 newAlternationCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAlternationCount" Type="System.Int32" />
        <Parameter Name="newAlternationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldAlternationCount">The old value of &lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;.</param>
        <param name="newAlternationCount">The new value of &lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt;.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.AlternationCount%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberPathChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayMemberPathChanged (string oldDisplayMemberPath, string newDisplayMemberPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayMemberPathChanged(string oldDisplayMemberPath, string newDisplayMemberPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDisplayMemberPath" Type="System.String" />
        <Parameter Name="newDisplayMemberPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldDisplayMemberPath">The old value of the &lt;xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A&gt; property.</param>
        <param name="newDisplayMemberPath">New value of the &lt;xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnGroupStyleSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGroupStyleSelectorChanged (System.Windows.Controls.GroupStyleSelector oldGroupStyleSelector, System.Windows.Controls.GroupStyleSelector newGroupStyleSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGroupStyleSelectorChanged(class System.Windows.Controls.GroupStyleSelector oldGroupStyleSelector, class System.Windows.Controls.GroupStyleSelector newGroupStyleSelector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldGroupStyleSelector" Type="System.Windows.Controls.GroupStyleSelector" />
        <Parameter Name="newGroupStyleSelector" Type="System.Windows.Controls.GroupStyleSelector" />
      </Parameters>
      <Docs>
        <param name="oldGroupStyleSelector">Old value of the &lt;xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A&gt; property.</param>
        <param name="newGroupStyleSelector">New value of the &lt;xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemBindingGroupChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemBindingGroupChanged (System.Windows.Data.BindingGroup oldItemBindingGroup, System.Windows.Data.BindingGroup newItemBindingGroup);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemBindingGroupChanged(class System.Windows.Data.BindingGroup oldItemBindingGroup, class System.Windows.Data.BindingGroup newItemBindingGroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemBindingGroup" Type="System.Windows.Data.BindingGroup" />
        <Parameter Name="newItemBindingGroup" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="oldItemBindingGroup">The old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt;.</param>
        <param name="newItemBindingGroup">The new value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt;.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemContainerStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemContainerStyleChanged (System.Windows.Style oldItemContainerStyle, System.Windows.Style newItemContainerStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemContainerStyleChanged(class System.Windows.Style oldItemContainerStyle, class System.Windows.Style newItemContainerStyle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemContainerStyle" Type="System.Windows.Style" />
        <Parameter Name="newItemContainerStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldItemContainerStyle">Old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt; property.</param>
        <param name="newItemContainerStyle">New value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemContainerStyleSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemContainerStyleSelectorChanged (System.Windows.Controls.StyleSelector oldItemContainerStyleSelector, System.Windows.Controls.StyleSelector newItemContainerStyleSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemContainerStyleSelectorChanged(class System.Windows.Controls.StyleSelector oldItemContainerStyleSelector, class System.Windows.Controls.StyleSelector newItemContainerStyleSelector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemContainerStyleSelector" Type="System.Windows.Controls.StyleSelector" />
        <Parameter Name="newItemContainerStyleSelector" Type="System.Windows.Controls.StyleSelector" />
      </Parameters>
      <Docs>
        <param name="oldItemContainerStyleSelector">Old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A&gt; property.</param>
        <param name="newItemContainerStyleSelector">New value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Information about the change.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemsPanelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsPanelChanged (System.Windows.Controls.ItemsPanelTemplate oldItemsPanel, System.Windows.Controls.ItemsPanelTemplate newItemsPanel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsPanelChanged(class System.Windows.Controls.ItemsPanelTemplate oldItemsPanel, class System.Windows.Controls.ItemsPanelTemplate newItemsPanel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemsPanel" Type="System.Windows.Controls.ItemsPanelTemplate" />
        <Parameter Name="newItemsPanel" Type="System.Windows.Controls.ItemsPanelTemplate" />
      </Parameters>
      <Docs>
        <param name="oldItemsPanel">Old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt; property.</param>
        <param name="newItemsPanel">New value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemsSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsSourceChanged (System.Collections.IEnumerable oldValue, System.Collections.IEnumerable newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsSourceChanged(class System.Collections.IEnumerable oldValue, class System.Collections.IEnumerable newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="newValue" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="oldValue">Old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt; property.</param>
        <param name="newValue">New value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt; property.</param>
        <summary>Called when the &lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemStringFormatChanged (string oldItemStringFormat, string newItemStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemStringFormatChanged(string oldItemStringFormat, string newItemStringFormat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemStringFormat" Type="System.String" />
        <Parameter Name="newItemStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldItemStringFormat">The old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A&gt; property.</param>
        <param name="newItemStringFormat">The new value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemTemplateChanged (System.Windows.DataTemplate oldItemTemplate, System.Windows.DataTemplate newItemTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemTemplateChanged(class System.Windows.DataTemplate oldItemTemplate, class System.Windows.DataTemplate newItemTemplate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newItemTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldItemTemplate">The old &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A&gt; property value.</param>
        <param name="newItemTemplate">The new &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A&gt; property value.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnItemTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldItemTemplateSelector, System.Windows.Controls.DataTemplateSelector newItemTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldItemTemplateSelector, class System.Windows.Controls.DataTemplateSelector newItemTemplateSelector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newItemTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldItemTemplateSelector">Old value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt; property.</param>
        <param name="newItemTemplateSelector">New value of the &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt; property.</param>
        <summary>Invoked when the &lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Information about the event.</param>
        <summary>Invoked when the <see cref="E:System.Windows.UIElement.KeyDown" /> event is received.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Information about the event.</param>
        <summary>Invoked when the <see cref="E:System.Windows.UIElement.TextInput" /> event is received.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Element used to display the specified item.</param>
        <param name="item">Specified item.</param>
        <summary>Prepares the specified element to display the specified item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Preparing the element may involve applying styles, setting bindings, and so on.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">The container element.</param>
        <param name="item">The item of interest.</param>
        <summary>Returns a value that indicates whether to apply the style from the &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A&gt; or &lt;xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A&gt; property to the container element of the specified item.</summary>
        <returns>Always <see langword="true" /> for the base implementation.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeGroupStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeGroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeGroupStyle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the &lt;xref:System.Windows.Controls.ItemsControl.GroupStyle%2A&gt; property.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Controls.ItemsControl.GroupStyle%2A&gt; property value should be serialized; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeItems">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeItems() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the &lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt; property.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt; property value should be serialized; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <MemberSignature Language="C#" Value="void IContainItemStorage.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears all property associations.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.ClearItemValue (object item, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(object item, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="item">The associated item.</param>
        <param name="dp">The associated property.</param>
        <summary>Removes the association between the specified item and property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ClearValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.ClearValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The property to remove.</param>
        <summary>Removes the specified property from all property lists.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue">
      <MemberSignature Language="C#" Value="object IContainItemStorage.ReadItemValue (object item, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(object item, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="item">The item that has the specified property associated with it.</param>
        <param name="dp">The property whose value to return.</param>
        <summary>Returns the value of the specified property that is associated with the specified item.</summary>
        <returns>The value of the specified property that is associated with the specified item.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.StoreItemValue (object item, System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(object item, class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The item to associate the value and property with.</param>
        <param name="dp">The property that is associated with the specified item.</param>
        <param name="value">The value of the associated property.</param>
        <summary>Stores the specified property and value and associates them with the specified item.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to add as a child.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to add.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a string representation of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</summary>
        <returns>The string representation of the object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>