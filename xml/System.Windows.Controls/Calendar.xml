<Type Name="Calendar" FullName="System.Windows.Controls.Calendar">
  <TypeSignature Language="C#" Value="public class Calendar : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Calendar extends System.Windows.Controls.Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Panel))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CalendarItem", Type=typeof(System.Windows.Controls.Primitives.CalendarItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a control that enables a user to select a date by using a visual calendar display.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A Calendar control can be used on its own, or as a drop-down part of a <xref:System.Windows.Controls.DatePicker> control. For more information, see <xref:System.Windows.Controls.DatePicker>.  
  
> [!NOTE]
>  The Calendar supports only the Gregorian calendar.  
  
 The following table provides information about tasks that are typically associated with the Calendar.  
  
|Task|Implementation|  
|----------|--------------------|  
|Have the Calendar display a month, an entire year, or a decade.|Set the <xref:System.Windows.Controls.Calendar.DisplayMode%2A> property to Month, Year, or Decade.|  
|Specify whether the user can select a date, a range of dates, or multiple ranges of dates.|Use the <xref:System.Windows.Controls.Calendar.SelectionMode%2A>.|  
|Specify dates that cannot be selected.|Use the <xref:System.Windows.Controls.Calendar.BlackoutDates%2A> property.|  
|Specify the range of dates that the Calendar displays.|Use the <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> and <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> properties.|  
|Specify whether the current date is highlighted.|Use the <xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> property. By default, <xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> is `true`.|  
|Change the size of the Calendar.|Use a <xref:System.Windows.Controls.Viewbox> or set the <xref:System.Windows.FrameworkElement.LayoutTransform%2A> property to a <xref:System.Windows.Media.ScaleTransform>.  Note that if you set the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties of a Calendar, the actual calendar does not change its size.|  
  
 The Calendar control provides basic navigation using either the mouse or keyboard. The following table summarizes keyboard navigation.  
  
|Key Combination|<xref:System.Windows.Controls.Calendar.DisplayMode%2A>|Action|  
|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|ARROW|<xref:System.Windows.Controls.CalendarMode>|Changes the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> property if the <xref:System.Windows.Controls.Calendar.SelectionMode%2A> property is not set to <xref:System.Windows.Controls.CalendarSelectionMode>.|  
|ARROW|<xref:System.Windows.Controls.CalendarMode>|Changes the month of the <xref:System.Windows.Controls.Calendar.DisplayDate%2A> property.  Note that the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> does not change.|  
|ARROW|<xref:System.Windows.Controls.CalendarMode>|Changes the year of the <xref:System.Windows.Controls.Calendar.DisplayDate%2A>.  Note that the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> does not change.|  
|SHIFT+ARROW|<xref:System.Windows.Controls.CalendarMode>|If <xref:System.Windows.Controls.Calendar.SelectionMode%2A> is not set to <xref:System.Windows.Controls.CalendarSelectionMode> or <xref:System.Windows.Controls.CalendarSelectionMode>, extends the range of selected dates.|  
|HOME|<xref:System.Windows.Controls.CalendarMode>|Changes the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> to the first day of the current month.|  
|HOME|<xref:System.Windows.Controls.CalendarMode>|Changes the month of the <xref:System.Windows.Controls.Calendar.DisplayDate%2A> to the first month of the year. The <xref:System.Windows.Controls.Calendar.SelectedDate%2A> does not change.|  
|HOME|<xref:System.Windows.Controls.CalendarMode>|Changes the year of the <xref:System.Windows.Controls.Calendar.DisplayDate%2A> to the first year of the decade. The <xref:System.Windows.Controls.Calendar.SelectedDate%2A> does not change.|  
|END|<xref:System.Windows.Controls.CalendarMode>|Changes the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> to the last day of the current month.|  
|END|<xref:System.Windows.Controls.CalendarMode>|Changes the month of the <xref:System.Windows.Controls.Calendar.DisplayDate%2A> to the last month of the year. The <xref:System.Windows.Controls.Calendar.SelectedDate%2A> does not change.|  
|END|<xref:System.Windows.Controls.CalendarMode>|Changes the year of the <xref:System.Windows.Controls.Calendar.DisplayDate%2A> to the last year of the decade. The <xref:System.Windows.Controls.Calendar.SelectedDate%2A> does not change.|  
|CTRL+UP ARROW|Any|Switches to the next larger <xref:System.Windows.Controls.Calendar.DisplayMode%2A>. If <xref:System.Windows.Controls.Calendar.DisplayMode%2A> is already <xref:System.Windows.Controls.CalendarMode>, no action.|  
|CTRL+DOWN ARROW|Any|Switches to the next smaller <xref:System.Windows.Controls.Calendar.DisplayMode%2A>. If <xref:System.Windows.Controls.Calendar.DisplayMode%2A> is already <xref:System.Windows.Controls.CalendarMode>, no action.|  
|SPACEBAR or ENTER|<xref:System.Windows.Controls.CalendarMode> or <xref:System.Windows.Controls.CalendarMode>|Switches <xref:System.Windows.Controls.Calendar.DisplayMode%2A> to the <xref:System.Windows.Controls.CalendarMode> or <xref:System.Windows.Controls.CalendarMode> represented by focused item.|  
  
## Customizing the Calendar Control  
 To apply the same property settings to multiple Calendar controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  To see the parts and states that are specific to the Calendar, see [Calendar Styles and Templates](~/add/includes/ajax-current-ext-md.md).  
  
 Dependency properties for this control might be set by the control’s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Setting a visual property will only have an effect if that property is both present in Calendar control's default template and is set by using a . You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md).  
  
<a name="xamlObjectElementUsage_Calendar"></a>   
## XAML Object Element Usage  
  
```  
<Calendar .../>  
```  
  
   
  
## Examples  
 The following illustration shows two Calendar controls, one with selections and blackout dates and one without.  
  
 ![Calendar controls](~/add/media/ndp-calendarcontrols.png "Calendar controls")  
Calendar controls  
  
 The following code and XAML creates a page with two Calendar controls that is similar to the previous illustration.  
  
 [!code-cs[CalendarSnippets#1](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#1)]
 [!code-xml[CalendarSnippets#1](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#1)]
 [!code-vb[CalendarSnippets#1](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Calendar" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of dates that are marked as not selectable.</summary>
        <value>A collection of dates that cannot be selected. The default value is an empty collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dates in this collection will appear gray and crossed out on the calendar.  
  
 To make all past dates not selectable, you can use the <xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A> method provided by the collection returned by this property.  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## XAML Values  
 *oneOrMoreCalendarDateRanges*  
 One or more object elements of type <xref:System.Windows.Controls.CalendarDateRange>.  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Controls.Calendar> that has some dates that cannot be selected.  
  
 [!code-cs[CalendarSnippets#3](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#3)]
 [!code-xml[CalendarSnippets#3](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#3)]
 [!code-vb[CalendarSnippets#3](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#3)]  
  
 The preceding example produces output that is similar to the following illustration.  
  
 ![Calendar with dates that cannot be selected.](~/add/media/ndp-calendarblackout.png "Calendar with dates that cannot be selected.")  
Calendar with dates that cannot be selected  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</summary>
        <value>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarButtonStyle"></a>   
## XAML Attribute Usage  
  
```  
<object CalendarButtonStyle="{resourceExtension styleResourceKey"/>  
  
```  
  
<a name="xamlValues_CalendarButtonStyle"></a>   
## XAML Values  
 *resourceExtension*  
 One of the following: `StaticResource` or `DynamicResource`. For more information, see [XAML Resources](~/add/includes/ajax-current-ext-md.md).  
  
 *styleResourceKey*  
 The key that identifies the resource being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  
  
<a name="dependencyPropertyInfo_CalendarButtonStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.CalendarButtonStyleProperty>|  
|Metadata properties set to **true**|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.CalendarButtonStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarDayButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarDayButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</summary>
        <value>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarDayButtonStyle"></a>   
## XAML Attribute Usage  
  
```  
<object CalendarDayButtonStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarDayButtonStyle"></a>   
## XAML Values  
 *resourceExtension*  
 One of the following: `StaticResource` or `DynamicResource`. For more information, see [XAML Resources](~/add/includes/ajax-current-ext-md.md).  
  
 *styleResourceKey*  
 The key that identifies the resource being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  
  
<a name="dependencyPropertyInfo_CalendarDayButtonStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty>|  
|Metadata properties set to **true**|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarDayButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.CalendarDayButtonStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</summary>
        <value>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarItemStyle"></a>   
## XAML Attribute Usage  
  
```  
<object CalendarItemStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarItemStyle"></a>   
## XAML Values  
 *resourceExtension*  
 One of the following: `StaticResource` or `DynamicResource`. For more information, see [XAML Resources](~/add/includes/ajax-current-ext-md.md).  
  
 *styleResourceKey*  
 The key that identifies the resource being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  
  
<a name="dependencyPropertyInfo_CalendarItemStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.CalendarItemStyleProperty>|  
|Metadata properties set to **true**|None|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarItemStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.CalendarItemStyle%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the date to display.</summary>
        <value>The date to display. The default is &lt;xref:System.DateTime.Today%2A?displayProperty=fullName&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DisplayDate and <xref:System.Windows.Controls.Calendar.DisplayMode%2A> properties specify what the calendar displays and what has focus within the calendar.  The user can change the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> only when <xref:System.Windows.Controls.Calendar.DisplayMode%2A> is set to Month, but the user might change the DisplayDate when the Calendar is in Year and Decade mode.  The following table describes how the mode changes the DisplayDate.  
  
|DisplayMode|Action|  
|-----------------|------------|  
|Month|DisplayDate changes when the user navigates to a different month.|  
|Year|The month of DisplayDate changes when the user clicks or navigates to a different month.|  
|Decade|The year of DisplayDate changes when the user clicks or navigates to another year.|  
  
 DisplayDate is ignored if its value is outside of the range of dates that is specified by <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> and <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> properties.  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.DisplayDateProperty>|  
|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## XAML Attribute Usage  
  
```  
<Calendar DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## XAML Values  
 *dateTimeString*  
 A date that is in one of the formats that are listed in the [DateTime XAML Syntax](~/add/includes/ajax-current-ext-md.md) topic.  
  
   
  
## Examples  
 The following code sets up a <xref:System.Windows.Controls.Calendar> with a particular range of displayable dates, and sets the currently selected and displayed date.  
  
 [!code-cs[CalendarSnippets#2](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#2)]
 [!code-xml[CalendarSnippets#2](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#2)]
 [!code-vb[CalendarSnippets#2](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the &lt;xref:System.Windows.Controls.Calendar.DisplayDate%2A&gt; property is changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This event occurs after <xref:System.Windows.Controls.Calendar.DisplayDate%2A> is assigned its new value.  
  
<a name="xamlAttributeUsage_DisplayDateChanged"></a>   
## XAML Attribute Usage  
  
```  
<Calendar DisplayDateChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 The following event handler updates a <xref:System.Windows.Controls.TextBox> with information from the DisplayDateChanged event. This example is part of a larger example available in the <xref:System.Windows.Controls.Calendar> overview.  
  
 [!code-xml[CalendarSnippets#6](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last date in the date range that is available in the calendar.</summary>
        <value>The last date that is available in the calendar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can restrict the range of a <xref:System.Windows.Controls.Calendar> by setting the <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> and DisplayDateEnd properties.  A user cannot scroll to or select dates outside of this range.  If you set the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> property to a date that is after DisplayDateEnd, DisplayDateEnd is set to the same value as <xref:System.Windows.Controls.Calendar.SelectedDate%2A>.  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.DisplayDateEndProperty>|  
|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## XAML Attribute Usage  
  
```  
<Calendar DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## XAML Values  
 *dateTimeString*  
 A date that is in one of the formats that are listed in the [DateTime XAML Syntax](~/add/includes/ajax-current-ext-md.md) topic.  
  
   
  
## Examples  
 The following code sets up a <xref:System.Windows.Controls.Calendar> with a particular range of displayable dates, and sets the currently selected and displayed date.  
  
 [!code-cs[CalendarSnippets#2](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#2)]
 [!code-xml[CalendarSnippets#2](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#2)]
 [!code-vb[CalendarSnippets#2](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.DisplayDate%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the first date that is available in the calendar.</summary>
        <value>The first date that is available in the calendar. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can restrict the range of a Calendar by setting the DisplayDateStart and <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> properties.  A user cannot scroll to or select dates outside of this range.  If you set the <xref:System.Windows.Controls.Calendar.SelectedDate%2A> property to a date that is before DisplayDateStart, DisplayDateStart is set to the same value as <xref:System.Windows.Controls.Calendar.SelectedDate%2A>.  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.DisplayDateStartProperty>|  
|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## XAML Attribute Usage  
  
```  
<Calendar DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## XAML Values  
 *dateTimeString*  
 A date that is in one of the formats that are listed in the [DateTime XAML Syntax](~/add/includes/ajax-current-ext-md.md) topic.  
  
   
  
## Examples  
 The following code sets up a <xref:System.Windows.Controls.Calendar> with a particular range of displayable dates, and sets the currently selected and displayed date.  
  
 [!code-cs[CalendarSnippets#2](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#2)]
 [!code-xml[CalendarSnippets#2](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#2)]
 [!code-vb[CalendarSnippets#2](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.DisplayDateStart%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarMode DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the calendar displays a month, year, or decade.</summary>
        <value>A value that indicates what length of time the <see cref="T:System.Windows.Controls.Calendar" /> should display.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A Calendar can display a month, a year, or a decade. The following table lists how the user navigates to each mode.  
  
|DisplayMode|Action|  
|-----------------|------------|  
|Month|To navigate to Year mode, click the month heading.|  
|Year|To navigate to Decade mode, click the year heading. To navigate to Month mode, click one of the displayed months.|  
|Decade|To navigate to Year mode, click one of the displayed years.|  
  
<a name="dependencyPropertyInfo_DisplayMode"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.DisplayModeProperty>|  
|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 The following example creates a calendar that displays the months in a year and handles the <xref:System.Windows.Controls.Calendar.DisplayModeChanged> event so that when the user clicks on a month or the year, the calendar does not change its DisplayMode.  
  
 [!code-cs[CalendarSnippets#4](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#4)]
 [!code-xml[CalendarSnippets#4](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#4)]
 [!code-vb[CalendarSnippets#4](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#4)]  
  
 [!code-cs[CalendarSnippets#5](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the &lt;xref:System.Windows.Controls.Calendar.DisplayMode%2A&gt; property is changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DisplayModeChanged"></a>   
## XAML Attribute Usage  
  
```  
<Calendar DisplayModeChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 The following example creates a calendar that displays the months in a year and handles the DisplayModeChanged event so that when the user clicks on a month or the year, the calendar does not change its <xref:System.Windows.Controls.Calendar.DisplayMode%2A>.  
  
 [!code-cs[CalendarSnippets#4](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#4)]
 [!code-xml[CalendarSnippets#4](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#4)]
 [!code-vb[CalendarSnippets#4](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#4)]  
  
 [!code-cs[CalendarSnippets#5](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplayModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.DisplayMode%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the day that is considered the beginning of the week.</summary>
        <value>A &lt;xref:System.DayOfWeek&gt; that represents the beginning of the week. The default is the &lt;xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A&gt; that is determined by the current culture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.FirstDayOfWeekProperty>|  
|Metadata properties set to **true**|None|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## XAML Attribute Usage  
 \<Calendar **FirstDayOfWeek**="<xref:System.DayOfWeek>"/>  
  
   
  
## Examples  
 The following example sets the FirstDayOfWeek property to <xref:System.DayOfWeek>.  
  
 [!code-xml[CalendarSnippets#8](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#8)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the current date is highlighted.</summary>
        <value>
          <see langword="true" /> if the current date is highlighted; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.IsTodayHighlightedProperty>|  
|Metadata properties set to **true**|None|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## XAML Attribute Usage  
  
```  
<Calendar IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Controls.Calendar> where the current date is not highlighted.  
  
 [!code-cs[CalendarSnippets#3](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#3)]
 [!code-xml[CalendarSnippets#3](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#3)]
 [!code-vb[CalendarSnippets#3](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Calendar" /> control when a new template is applied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is invoked whenever application code or an internal process, such as rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for use by the [!INCLUDE[silverlight](~/add/includes/silverlight-md.md)] automation infrastructure.</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Calendar" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method creates a new <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> instance if one has not been created for the control instance; otherwise, it returns the <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> previously created.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayDateChanged (System.Windows.Controls.CalendarDateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayDateChanged(class System.Windows.Controls.CalendarDateChangedEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarDateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Windows.Controls.CalendarModeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Windows.Controls.CalendarModeChangedEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarModeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> overrides the OnKeyDown method to support keyboard navigation.  For more information, see the <xref:System.Windows.Controls.Calendar> class. This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when a keystroke, such as pressing an ARROW key, performs a navigation action.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> overrides the <xref:System.Windows.Controls.Calendar.OnKeyDown%2A> method to support keyboard navigation.  For more information, see the <xref:System.Windows.Controls.Calendar> class. This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDatesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDatesChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDatesChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> routed event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The control raises the <xref:System.Windows.Controls.Calendar.SelectedDatesChanged> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>. For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionModeChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Raises the <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the currently selected date.</summary>
        <value>The date currently selected. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.SelectedDateProperty>|  
|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 Use this property when <xref:System.Windows.Controls.Calendar.SelectionMode%2A> is set to <xref:System.Windows.Controls.CalendarSelectionMode>. In other modes, this property will always be the first date in <xref:System.Windows.Controls.Calendar.SelectedDates%2A>.  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## XAML Attribute Usage  
  
```  
<Calendar SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## XAML Values  
 *dateTimeString*  
 A date that is in one of the formats that are listed in the [DateTime XAML Syntax](~/add/includes/ajax-current-ext-md.md) topic.  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Controls.Calendar> with a particular range of displayable dates, and sets the currently selected and displayed date.  
  
 [!code-cs[CalendarSnippets#2](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#2)]
 [!code-xml[CalendarSnippets#2](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#2)]
 [!code-vb[CalendarSnippets#2](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified date is outside the range specified by &lt;xref:System.Windows.Controls.Calendar.DisplayDateStart%2A&gt; and &lt;xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A&gt;  
  
 -or-  
  
 The specified date is in the &lt;xref:System.Windows.Controls.Calendar.BlackoutDates%2A&gt; collection.</exception>
        <exception cref="T:System.InvalidOperationException">If set to anything other than <see langword="null" /> when &lt;xref:System.Windows.Controls.Calendar.SelectionMode%2A&gt; is set to <see cref="T:System.Windows.Controls.CalendarSelectionMode" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.SelectedDate%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectedDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectedDatesCollection SelectedDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SelectedDatesCollection SelectedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectedDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of selected dates.</summary>
        <value>A <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> object that contains the currently selected dates. The default is an empty collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dates can be added to the collection either individually or in a range using the <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> method. Depending on the value of the <xref:System.Windows.Controls.Calendar.SelectionMode%2A> property, adding a date or range to the collection may cause it to be cleared. The following table lists how <xref:System.Windows.Controls.CalendarSelectionMode> affects the SelectedDates property.  
  
|CalendarSelectionMode|Description|  
|---------------------------|-----------------|  
|<xref:System.Windows.Controls.CalendarSelectionMode>|No selections are allowed. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> cannot be set and no values can be added to SelectedDates.|  
|<xref:System.Windows.Controls.CalendarSelectionMode>|Only a single date can be selected, either by setting <xref:System.Windows.Controls.Calendar.SelectedDate%2A> or the first value in SelectedDates. <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> cannot be used.|  
|<xref:System.Windows.Controls.CalendarSelectionMode>|A single range of dates can be selected. Setting <xref:System.Windows.Controls.Calendar.SelectedDate%2A>, adding a date individually to SelectedDates, or using <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> will clear all previous values from SelectedDates.|  
|<xref:System.Windows.Controls.CalendarSelectionMode>|Multiple non-contiguous ranges of dates can be selected. Adding a date individually to SelectedDates or using <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> will not clear SelectedDates. Setting <xref:System.Windows.Controls.Calendar.SelectedDate%2A> will still clear SelectedDates, but additional dates or ranges can then be added. Adding a range that includes some dates that are already selected or overlaps with another range results in the union of the ranges and does not cause an exception.|  
  
<a name="xamlPropertyElementUsage_SelectedDates"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.SelectedDates>  
    oneOrMoreDateTimeObjects  
  </object.SelectedDates>  
</object>  
  
```  
  
<a name="xamlValues_SelectedDates"></a>   
## XAML Values  
 *oneOrMoreDateTimeObjects*  
 One or more <xref:System.DateTime> object elements.  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Controls.Calendar> that has multiple ranges of dates selected.  
  
 [!code-cs[CalendarSnippets#3](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#3)]
 [!code-xml[CalendarSnippets#3](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#3)]
 [!code-vb[CalendarSnippets#3](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the collection returned by the &lt;xref:System.Windows.Controls.Calendar.SelectedDates%2A&gt; property is changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## XAML Attribute Usage  
  
```  
<Calendar SelectedDatesChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDatesChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDatesChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> routed event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarSelectionMode SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates what kind of selections are allowed.</summary>
        <value>A value that indicates the current selection mode. The default is <see cref="T:System.Windows.Controls.CalendarSelectionMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Calendar.SelectionModeProperty>|  
|Metadata properties set to **true**|None|  
  
 This property determines whether the <xref:System.Windows.Controls.Calendar> allows no selection, selection of a single date, or selection of multiple dates. The selection mode is specified with the <xref:System.Windows.Controls.CalendarSelectionMode> enumeration.  
  
 When this property is changed, all selected dates will be cleared.  
  
<a name="xamlAttributeUsage_SelectionMode"></a>   
## XAML Attribute Usage  
 \<Calendar **SelectionMode**="<xref:System.Windows.Controls.CalendarSelectionMode>"/>  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Controls.Calendar> that has multiple ranges of dates selected.  
  
 [!code-cs[CalendarSnippets#3](~/add/codesnippet/csharp/calendarsnippets/window1.xaml.cs#3)]
 [!code-xml[CalendarSnippets#3](~/add/codesnippet/xaml/calendarsnippets_xaml/window1.xaml#3)]
 [!code-vb[CalendarSnippets#3](~/add/codesnippet/visualbasic/calendarsnippets_vb/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; SelectionModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; SelectionModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the &lt;xref:System.Windows.Controls.Calendar.SelectionMode%2A&gt; changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Controls.Calendar.SelectionMode%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a text representation of the selected date.</summary>
        <returns>A text representation of the selected date, or an empty string if &lt;xref:System.Windows.Controls.Calendar.SelectedDate%2A&gt; is <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>