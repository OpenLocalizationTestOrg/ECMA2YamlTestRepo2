<Type Name="ItemContainerGenerator" FullName="System.Windows.Controls.ItemContainerGenerator">
  <TypeSignature Language="C#" Value="public sealed class ItemContainerGenerator : System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ItemContainerGenerator extends System.Object implements class System.Windows.Controls.Primitives.IItemContainerGenerator, class System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator, class System.Windows.IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Generates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] on behalf of its host, such as an <see cref="T:System.Windows.Controls.ItemsControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ItemContainerGenerator implements <xref:System.Windows.Controls.Primitives.IItemContainerGenerator>, which is the interface that defines a type which:  
  
-   Maintains an association between the data view of a multiple-item control, such as <xref:System.Windows.Controls.ItemsControl.ContainerFromElement%2A> and the corresponding <xref:System.Windows.UIElement> items.  
  
-   Generates <xref:System.Windows.UIElement> items on behalf of a multiple-item control.  
  
 Each <xref:System.Windows.Controls.ItemsControl> type has a corresponding container type. Container elements are the objects that contain the data items in the item collection. For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.  
  
 The <xref:System.Windows.Controls.ItemsControl> generates its items through the <xref:System.Windows.Controls.Primitives.IItemContainerGenerator> interface. The <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> property of the <xref:System.Windows.Controls.ItemsControl> is of type ItemContainerGenerator, which implements the <xref:System.Windows.Controls.Primitives.IItemContainerGenerator> interface. Therefore, you can access the ItemContainerGenerator object associated with your <xref:System.Windows.Controls.ItemsControl> using the <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> property. For example, if you have a data-bound <xref:System.Windows.Controls.TreeView>, and you want to get a <xref:System.Windows.Controls.TreeViewItem> based on its index or its associated data item, you can use the <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex%2A?displayProperty=fullName> or the <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A?displayProperty=fullName> method. Alternatively, you can use the <xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%2A?displayProperty=fullName> or the <xref:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer%2A?displayProperty=fullName> method to get the index or data item associated with a given generated container element.  
  
 Apart from those usages, the <xref:System.Windows.Controls.Primitives.IItemContainerGenerator> interface is used in advanced scenarios. Typically, advanced applications that have their own implementation of a virtualizing panel call members of the interface.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ContainerFromIndex">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromIndex(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the desired item.</param>
        <summary>Returns the element corresponding to the item at the given index within the <see cref="T:System.Windows.Controls.ItemCollection" />.</summary>
        <returns>Returns the element corresponding to the item at the given index within the <see cref="T:System.Windows.Controls.ItemCollection" /> or returns <see langword="null" /> if the item is not realized.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContainerFromItem">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromItem(object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The &lt;xref:System.Object&gt; item to find the <see cref="T:System.Windows.UIElement" /> for.</param>
        <summary>Returns the <see cref="T:System.Windows.UIElement" /> corresponding to the given item.</summary>
        <returns>A <see cref="T:System.Windows.UIElement" /> that corresponds to the given item. Returns <see langword="null" /> if the item does not belong to the item collection, or if a <see cref="T:System.Windows.UIElement" /> has not been generated for it.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateBatches">
      <MemberSignature Language="C#" Value="public IDisposable GenerateBatches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GenerateBatches() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an object that manages the &lt;xref:System.Windows.Controls.ItemContainerGenerator.Status%2A&gt; property.</summary>
        <returns>An object that manages the &lt;xref:System.Windows.Controls.ItemContainerGenerator.Status%2A&gt; property.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A class that inherits from <xref:System.Windows.Controls.VirtualizingPanel> can use this method to get an object that will properly set the generated property.  When the GenerateBatches method returns, <xref:System.Windows.Controls.ItemContainerGenerator.Status%2A> property is set to <xref:System.Windows.Controls.Primitives.GeneratorStatus>.  When the object is disposed, <xref:System.Windows.Controls.ItemContainerGenerator.Status%2A> is set to <xref:System.Windows.Controls.Primitives.GeneratorStatus>.  You can pass the object to a `using` statement that encapsulates your logic that generates item containers.  When the object returned from GenerateBatches goes out of scope, the <xref:System.Windows.Controls.ItemContainerGenerator.Status%2A> property will be properly set.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexFromContainer">
      <MemberSignature Language="C#" Value="public int IndexFromContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to the index to be returned.</param>
        <summary>Returns the index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />.</summary>
        <returns>An &lt;xref:System.Int32&gt; index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" /> or -1 if <paramref name="container" /> is not found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Calling this method is identical to calling the <xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%28System.Windows.DependencyObject%2CSystem.Boolean%29?displayProperty=fullName> method and passing `false` to the `returnLocalIndex` parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="container" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexFromContainer">
      <MemberSignature Language="C#" Value="public int IndexFromContainer (System.Windows.DependencyObject container, bool returnLocalIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromContainer(class System.Windows.DependencyObject container, bool returnLocalIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="returnLocalIndex" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to the index to be returned.</param>
        <param name="returnLocalIndex">
          <see langword="true" /> to search the current level of hierarchical items; <see langword="false" /> to recursively search hierarchical items.</param>
        <summary>Returns the index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />, optionally recursively searching hierarchical items.</summary>
        <returns>An &lt;xref:System.Int32&gt; index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" /> or -1 if <paramref name="container" /> is not found.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemFromContainer">
      <MemberSignature Language="C#" Value="public object ItemFromContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ItemFromContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">The <see cref="T:System.Windows.DependencyObject" /> that corresponds to the item to be returned.</param>
        <summary>Returns the item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />.</summary>
        <returns>A <see cref="T:System.Windows.DependencyObject" /> that is the item which corresponds to the specified, generated <see cref="T:System.Windows.UIElement" />. If the <see cref="T:System.Windows.UIElement" /> has not been generated, <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> is returned.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="container" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of items that belong to this <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
        <value>The collection of items that belong to this <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property frequently updates, so do not save its value.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.Primitives.ItemsChangedEventHandler ItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.Primitives.ItemsChangedEventHandler ItemsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.ItemsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The ItemsChanged event is raised by a <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> to inform layouts that the items collection has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The items collection changes when an item is either added, removed, moved, or the <xref:System.Windows.Controls.ItemContainerGenerator> is refreshed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.GeneratorStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.GeneratorStatus Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.GeneratorStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The generation status of the <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</summary>
        <value>A <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus" /> value that represents the generation status of the <see cref="T:System.Windows.Controls.ItemContainerGenerator" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StatusChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The StatusChanged event is raised by a <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> to inform controls that its status has changed.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <MemberSignature Language="C#" Value="System.Windows.DependencyObject IItemContainerGenerator.GenerateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.DependencyObject System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the container element used to display the next item.</summary>
        <returns>A DependencyObject that is the container element which is used to display the next item.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <MemberSignature Language="C#" Value="System.Windows.DependencyObject IItemContainerGenerator.GenerateNext (out bool isNewlyRealized);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.DependencyObject System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(bool isNewlyRealized) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNewlyRealized" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="isNewlyRealized">Is true if the returned DependencyObject is newly generated (realized); otherwise, false.</param>
        <summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
        <returns>A DependencyObject that is the container element which is used to display the next item.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex">
      <MemberSignature Language="C#" Value="System.Windows.Controls.Primitives.GeneratorPosition IItemContainerGenerator.GeneratorPositionFromIndex (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Controls.Primitives.GeneratorPosition System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(int32 itemIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.GeneratorPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">The index of desired item.</param>
        <summary>Returns the GeneratorPosition object that maps to the item at the specified index.</summary>
        <returns>A GeneratorPosition object that maps to the item at the specified index.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel">
      <MemberSignature Language="C#" Value="System.Windows.Controls.ItemContainerGenerator IItemContainerGenerator.GetItemContainerGeneratorForPanel (System.Windows.Controls.Panel panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Controls.ItemContainerGenerator System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(class System.Windows.Controls.Panel panel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Controls.Panel" />
      </Parameters>
      <Docs>
        <param name="panel">The panel for which to return an appropriate ItemContainerGenerator.</param>
        <summary>Returns the ItemContainerGenerator appropriate for use by the specified panel.</summary>
        <returns>An ItemContainerGenerator appropriate for use by the specified panel.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition">
      <MemberSignature Language="C#" Value="int IItemContainerGenerator.IndexFromGeneratorPosition (System.Windows.Controls.Primitives.GeneratorPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(valuetype System.Windows.Controls.Primitives.GeneratorPosition position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
      </Parameters>
      <Docs>
        <param name="position">The index of desired item.</param>
        <summary>Returns the index that maps to the specified GeneratorPosition.</summary>
        <returns>An Int32 that is the index which maps to the specified GeneratorPosition.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer">
      <MemberSignature Language="C#" Value="void IItemContainerGenerator.PrepareItemContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">The container to prepare. Normally, container is the result of the previous call to GenerateNext.</param>
        <summary>Prepares the specified element as the container for the corresponding item.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.Remove">
      <MemberSignature Language="C#" Value="void IItemContainerGenerator.Remove (System.Windows.Controls.Primitives.GeneratorPosition position, int count);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Removes one or more generated (realized) items.</param>
        <param name="count">The Int32 number of elements to remove, starting at `position`.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <MemberSignature Language="C#" Value="void IItemContainerGenerator.RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all generated (realized) items.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt">
      <MemberSignature Language="C#" Value="IDisposable IItemContainerGenerator.StartAt (System.Windows.Controls.Primitives.GeneratorPosition position, System.Windows.Controls.Primitives.GeneratorDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IDisposable System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, valuetype System.Windows.Controls.Primitives.GeneratorDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="direction" Type="System.Windows.Controls.Primitives.GeneratorDirection" />
      </Parameters>
      <Docs>
        <param name="position">A GeneratorPosition that specifies the position of the item to start generating items at.</param>
        <param name="direction">A GeneratorDirection that specifies the direction which to generate items.</param>
        <summary>Prepares the generator to generate items, starting at the specified GeneratorPosition, and in the specified GeneratorDirection.</summary>
        <returns>An IDisposable object that tracks the lifetime of the generation process.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt">
      <MemberSignature Language="C#" Value="IDisposable IItemContainerGenerator.StartAt (System.Windows.Controls.Primitives.GeneratorPosition position, System.Windows.Controls.Primitives.GeneratorDirection direction, bool allowStartAtRealizedItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IDisposable System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, valuetype System.Windows.Controls.Primitives.GeneratorDirection direction, bool allowStartAtRealizedItem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="direction" Type="System.Windows.Controls.Primitives.GeneratorDirection" />
        <Parameter Name="allowStartAtRealizedItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">A GeneratorPosition that specifies the position of the item to start generating items at.</param>
        <param name="direction">A GeneratorDirection that specifies the direction which to generate items.</param>
        <param name="allowStartAtRealizedItem">A Boolean that specifies whether to start at a generated (realized) item.</param>
        <summary>Prepares the generator to generate items, starting at the specified GeneratorPosition, and in the specified GeneratorDirection, and controlling whether or not to start at a generated (realized) item.</summary>
        <returns>An IDisposable object that tracks the lifetime of the generation process.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle">
      <MemberSignature Language="C#" Value="void IRecyclingItemContainerGenerator.Recycle (System.Windows.Controls.Primitives.GeneratorPosition position, int count);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">The index of the first element to reuse. `position` must refer to a previously generated (realized) item.</param>
        <param name="count">The number of elements to reuse, starting at `position`.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
        <param name="sender">Object that originated the event.</param>
        <param name="e">Event data.</param>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <returns>
          <see langword="true" /> if the listener handled the event.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>