<Type Name="ThumbButtonInfo" FullName="System.Windows.Shell.ThumbButtonInfo">
  <TypeSignature Language="C#" Value="public sealed class ThumbButtonInfo : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThumbButtonInfo extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents information about how to display a button in the [!INCLUDE[win7](~/add/includes/win7-md.md)] taskbar thumbnail.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The [!INCLUDE[win7](~/add/includes/win7-md.md)] taskbar provides enhanced functionality that enables you to use the taskbar button to communicate status to a user and expose common tasks when the window is minimized or hidden. You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window. For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that you can use to control media playback from the taskbar thumbnail when the application is minimized.  
  
 The ThumbButtonInfo class contains properties that describe how the [!INCLUDE[win7](~/add/includes/win7-md.md)] shell displays the buttons in the taskbar thumbnail. It provides a managed wrapper around the native Windows API. ThumbButtonInfo objects are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A?displayProperty=fullName> collection.  
  
 The enhanced taskbar functionality is not available in versions of Windows earlier than [!INCLUDE[win7](~/add/includes/win7-md.md)]. In [!INCLUDE[win7](~/add/includes/win7-md.md)], some functionality might not be available depending on the user's settings. For example, buttons are only shown in the taskbar thumbnail when [!INCLUDE[TLA#tla_aero](~/add/includes/tlasharptla-aero-md.md)] is enabled. Your application should provide alternate ways of interacting with the user that are not dependent on the enhanced taskbar functionality.  
  
 The following illustration shows a taskbar preview with two thumb buttons that provide access to the Play and Stop commands.  
  
 ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")  
Windows Taskbar Thumb Buttons  
  
   
  
## Examples  
 The following example shows how to create a ThumbButtonInfo in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of ThumbButtonInfo objects that provide access to the Play and Stop commands from the taskbar item. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  
  
 [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThumbButtonInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the thumbnail button is clicked.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you handle the Click event, the event handler executes instead of any <xref:System.Windows.Shell.ThumbButtonInfo.Command%2A> that is bound to the thumbnail button.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the command to invoke when this thumbnail button is clicked.</summary>
        <value>The command to invoke when this thumbnail button is clicked. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you handle the <xref:System.Windows.Shell.ThumbButtonInfo.Click> event, the event handler executes instead of any Command that is bound to the thumbnail button.  
  
 In XAML, this property is often set to be a static command value from one of the existing command libraries, such as from the <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands> library.  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Shell.ThumbButtonInfo> in markup. The <xref:System.Windows.Shell.ThumbButtonInfo> is bound to the <xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=fullName> command. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  
  
 [!code-xml[Shell_TaskbarItemSample#020](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the parameter to pass to the &lt;xref:System.Windows.Shell.ThumbButtonInfo.Command%2A&gt; property.</summary>
        <value>The parameter to pass to the &lt;xref:System.Windows.Shell.ThumbButtonInfo.Command%2A&gt; property. The default is <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.CommandParameter%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.Command%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the element on which to raise the specified command.</summary>
        <value>The element on which to raise the specified command. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CommandTarget property provides a reference to an element that is already defined in your application.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.CommandTarget%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text to display for the thumbnail button tooltip.</summary>
        <value>The text to display for the thumbnail button tooltip. The default is an empty string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can add an image to a thumbnail button, but no property exists for setting text on the thumbnail button face. However, you can set the Description property to add descriptive text that is displayed in a tooltip when the mouse pointer moves over the thumbnail button.  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Shell.ThumbButtonInfo> in markup. The <xref:System.Windows.Shell.ThumbButtonInfo> is bound to the <xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=fullName> command. The tooltip descriptive text is **Stop**. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  
  
 [!code-xml[Shell_TaskbarItemSample#020](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.Description%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClicked">
      <MemberSignature Language="C#" Value="public bool DismissWhenClicked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DismissWhenClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the taskbar thumbnail closes when the thumbnail button is clicked.</summary>
        <value>
          <see langword="true" /> if the thumbnail closes; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the taskbar thumbnail remains visible when a thumbnail button is clicked. To make the thumbnail close when a thumbnail button is clicked, set the DismissWhenClicked property to `true`.  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Shell.ThumbButtonInfo> in markup. The <xref:System.Windows.Shell.ThumbButtonInfo> is bound to the <xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=fullName> command. It is configured to close when the button is clicked. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  
  
 [!code-xml[Shell_TaskbarItemSample#020](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClickedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DismissWhenClickedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DismissWhenClickedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImageSource">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource ImageSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource ImageSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the image that is displayed on the thumbnail button.</summary>
        <value>The image that is displayed on the thumbnail button. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can place a static or animated <xref:System.Windows.Media.ImageSource> on the thumbnail button. The images are rendered at the appropriate size. If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used.  
  
 To provide additional textual information about the thumbnail button, set the <xref:System.Windows.Shell.ThumbButtonInfo.Description%2A> property.  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Shell.ThumbButtonInfo> in markup. The <xref:System.Windows.Shell.ThumbButtonInfo> is bound to the <xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=fullName> command. The button image is a dark gray square defined in XAML as a static resource. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  
  
 [!code-xml[Shell_TaskbarItemSample#020](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImageSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ImageSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ImageSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundVisible">
      <MemberSignature Language="C#" Value="public bool IsBackgroundVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBackgroundVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a border and highlight is displayed around the thumbnail button.</summary>
        <value>
          <see langword="true" /> if a border and highlight is displayed around the thumbnail button; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, a border appears around the <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>, and a highlight is displayed when the mouse pointer is moved over the thumbnail button. To display only the <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> without the border and highlight, set the IsBackgroundVisible property to `false`. If IsBackgroundVisible is `false`, the <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> still shifts when the thumbnail button is clicked to provide visual feedback to the user.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsBackgroundVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsBackgroundVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the thumbnail button is enabled.</summary>
        <value>
          <see langword="true" /> if the thumbnail button is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the IsEnabled property is `false`, the thumbnail button does not respond to <xref:System.Windows.Shell.ThumbButtonInfo.Click> events and the <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> is dimmed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.IsEnabled%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsInteractive">
      <MemberSignature Language="C#" Value="public bool IsInteractive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the user can interact with the thumbnail button.</summary>
        <value>
          <see langword="true" /> if the user can interact with the thumbnail button; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the IsInteractive property is `false`, the thumbnail button does not respond to <xref:System.Windows.Shell.ThumbButtonInfo.Click> events. However, the <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> is not dimmed. You can use a thumbnail button that is not interactive as a status icon.  
  
 If the <xref:System.Windows.Shell.ThumbButtonInfo.IsEnabled%2A> property is `false`, the setting for IsInteractive does not have any effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsInteractiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInteractiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInteractiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.IsInteractive%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the display state of the thumbnail button.</summary>
        <value>An enumeration value that specifies the display state of the thumbnail button. The default is <see cref="T:System.Windows.Visibility" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the thumbnail button is <xref:System.Windows.Visibility>. [!INCLUDE[win7](~/add/includes/win7-md.md)] allows a maximum of seven buttons in the taskbar thumbnail. When the Visibility property is set to <xref:System.Windows.Visibility>, the thumbnail button has no visible elements, but space is still reserved for it. When the thumbnail button is <xref:System.Windows.Visibility>, it does not have any visible elements and no space is reserved for it. In this case, additional thumbnail buttons in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection are displayed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shell.ThumbButtonInfo.Visibility%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>