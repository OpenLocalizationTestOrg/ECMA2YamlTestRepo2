<Type Name="TransactedInstaller" FullName="System.Configuration.Install.TransactedInstaller">
  <TypeSignature Language="C#" Value="public class TransactedInstaller : System.Configuration.Install.Installer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransactedInstaller extends System.Configuration.Install.Installer" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.Installer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines an installer that either succeeds completely or fails and leaves the computer in its initial state.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To run installers in a transaction, add them to the <xref:System.Configuration.Install.Installer.Installers%2A> property of this TransactedInstaller instance.  
  
   
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> and <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> methods of the TransactedInstaller class.  
  
 This example provides an implementation similar to that of [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md). It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assembly's options are used if there is a previous assembly in the list. If either the "/u" or "/uninstall" option is specified, the assemblies are uninstalled. If the "/?" or "/help" option is provided, the help information is displayed to the console.  
  
 [!code-cpp[TransactedInstaller#1](~/add/codesnippet/cpp/t-system.configuration.i_8_1.cpp)]
 [!code-vb[TransactedInstaller#1](~/add/codesnippet/visualbasic/t-system.configuration.i_8_1.vb)]
 [!code-cs[TransactedInstaller#1](~/add/codesnippet/csharp/t-system.configuration.i_8_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactedInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.Install.TransactedInstaller" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary savedState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">An &lt;xref:System.Collections.IDictionary&gt; in which this method saves information needed to perform a commit, rollback, or uninstall operation.</param>
        <summary>Performs the installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method calls the Install method of each installer contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property of this instance. The <xref:System.Collections.IDictionary> object referenced by the `savedState` parameter is updated to reflect the status of the installation after the contained installers have run. If all the Install methods succeed, the <xref:System.Configuration.Install.Installer.Commit%2A> method is called. Otherwise, the <xref:System.Configuration.Install.Installer.Rollback%2A> method is called for each installer.  
  
   
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, Install and <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> methods of the <xref:System.Configuration.Install.TransactedInstaller> class.  
  
 This example provides an implementation similar to that of InstallUtil.exe. It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assemblies options are taken if there is a previous assembly in the list. If the '/u' or '/uninstall' option is specified then the assemblies are uninstalled. If the '/?' or '/help' option is provided then the help information is printed to the console.  
  
 [!code-cpp[TransactedInstaller#1](~/add/codesnippet/cpp/4da9ed08-6dc0-426b-afe8-_1.cpp)]
 [!code-vb[TransactedInstaller#1](~/add/codesnippet/visualbasic/4da9ed08-6dc0-426b-afe8-_1.vb)]
 [!code-cs[TransactedInstaller#1](~/add/codesnippet/csharp/4da9ed08-6dc0-426b-afe8-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="savedState" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.Exception">The installation failed, and is being rolled back.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">An &lt;xref:System.Collections.IDictionary&gt; that contains the state of the computer after the installation completed.</param>
        <summary>Removes an installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Call this method to remove a previously completed installation. This Uninstall method calls the <xref:System.Configuration.Install.Installer.Uninstall%2A> method of each installer in the <xref:System.Configuration.Install.Installer.Installers%2A> property to uninstall any resources set during installation. Any exceptions during uninstallation are ignored.  
  
> [!NOTE]
>  Although the <xref:System.Configuration.Install.Installer.Install%2A> and <xref:System.Configuration.Install.Installer.Commit%2A> methods save the state of the computer after the installations, the file containing the <xref:System.Collections.IDictionary> from the `savedState` parameter might have been deleted at some point after the installation was complete. If the file is deleted, the `savedState` parameter is `null`.  
  
   
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> and Uninstall methods of the <xref:System.Configuration.Install.TransactedInstaller> class.  
  
 This example provides an implementation similar to that of [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md). It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assembly's options are used if there is a previous assembly in the list. If either the "/u" or "/uninstall" option is specified, the assemblies are uninstalled. If the "/?" or "/help" option is provided, the help information is displayed to the console.  
  
 [!code-cpp[TransactedInstaller#1](~/add/codesnippet/cpp/cbb5706c-5d1b-4a61-92b9-_1.cpp)]
 [!code-vb[TransactedInstaller#1](~/add/codesnippet/visualbasic/cbb5706c-5d1b-4a61-92b9-_1.vb)]
 [!code-cs[TransactedInstaller#1](~/add/codesnippet/csharp/cbb5706c-5d1b-4a61-92b9-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>