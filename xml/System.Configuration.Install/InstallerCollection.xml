<Type Name="InstallerCollection" FullName="System.Configuration.Install.InstallerCollection">
  <TypeSignature Language="C#" Value="public class InstallerCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallerCollection extends System.Collections.CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains a collection of installers to be run during an installation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The InstallerCollection provides the methods and properties that your application needs to manage a collection of <xref:System.Configuration.Install.Installer> objects.  
  
 Use any of the following three ways to add installers to the collection:  
  
-   The <xref:System.Configuration.Install.InstallerCollection.Add%2A> method adds a single installer to the collection.  
  
-   The <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> methods add multiple installers to the collection.  
  
-   The <xref:System.Configuration.Install.InstallerCollection.Insert%2A> method and the <xref:System.Configuration.Install.InstallerCollection.Item%2A> property, which is the InstallerCollection indexer, each add a single installer to the collection at the specified index.  
  
 Remove installers through the <xref:System.Configuration.Install.InstallerCollection.Remove%2A> method. Check whether an installer is in the collection by using the <xref:System.Configuration.Install.InstallerCollection.Contains%2A> method. Find where an installer is located in the collection by using the <xref:System.Configuration.Install.InstallerCollection.IndexOf%2A> method.  
  
 The installers in a collection are run when the installer containing the collection, as specified by the <xref:System.Configuration.Install.Installer.Parent%2A?displayProperty=fullName> property, calls their <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.  
  
 For examples of the usage of an installer collection, see the <xref:System.Configuration.Install.AssemblyInstaller> and <xref:System.Configuration.Install.TransactedInstaller> classes.  
  
   
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.InstallerCollection.Add%2A> method of the InstallerCollection class. This example provides an implementation similar to that of [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md). It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assembly's options are taken if there is a previous assembly in the list. If the "/u" or "/uninstall" option is specified, the assemblies are uninstalled. If the "/?" or "/help" option is provided, the help information is displayed to the console.  
  
 [!code-cpp[InstallerCollection_Add#1](~/add/codesnippet/cpp/t-system.configuration.i_9_1.cpp)]
 [!code-vb[InstallerCollection_Add#1](~/add/codesnippet/visualbasic/t-system.configuration.i_9_1.vb)]
 [!code-cs[InstallerCollection_Add#1](~/add/codesnippet/csharp/t-system.configuration.i_9_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Configuration.Install.Installer value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to add to the collection.</param>
        <summary>Adds the specified installer to this collection of installers.</summary>
        <returns>The zero-based index of the added installer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.Install.Installer.Parent%2A> property of the added <xref:System.Configuration.Install.Installer> is set to specify the <xref:System.Configuration.Install.Installer> containing this collection.  
  
   
  
## Examples  
 The following example is an excerpt of the example in the <xref:System.Configuration.Install.InstallerCollection> class.  
  
 [!code-cpp[InstallerCollection_Add#1](~/add/codesnippet/cpp/6458b837-7887-4bd0-b832-_1.cpp)]
 [!code-vb[InstallerCollection_Add#1](~/add/codesnippet/visualbasic/6458b837-7887-4bd0-b832-_1.vb)]
 [!code-cs[InstallerCollection_Add#1](~/add/codesnippet/csharp/6458b837-7887-4bd0-b832-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Configuration.Install.Installer[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Configuration.Install.Installer[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer[]" />
      </Parameters>
      <Docs>
        <param name="value">An array of type <see cref="T:System.Configuration.Install.Installer" /> that represents the installers to add to this collection.</param>
        <summary>Adds the specified array of installers to this collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.Install.Installer.Parent%2A> property of each added <xref:System.Configuration.Install.Installer> is set to the <xref:System.Configuration.Install.Installer> containing this collection.  
  
   
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> method of the <xref:System.Configuration.Install.InstallerCollection> class. It creates <xref:System.Configuration.Install.AssemblyInstaller> instances for `MyAssembly1.exe` and `MyAssembly2.exe`.These instances are added to a <xref:System.Configuration.Install.TransactedInstaller>. The installation process installs both `MyAssembly1.exe` and `MyAssembly2.exe`.  
  
 [!code-cs[InstallerCollection_AddRange1#1](~/add/codesnippet/csharp/bd71e022-e229-4111-a2ce-_1.cs)]
 [!code-cpp[InstallerCollection_AddRange1#1](~/add/codesnippet/cpp/bd71e022-e229-4111-a2ce-_1.cpp)]
 [!code-vb[InstallerCollection_AddRange1#1](~/add/codesnippet/visualbasic/bd71e022-e229-4111-a2ce-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Configuration.Install.InstallerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Configuration.Install.InstallerCollection value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.InstallerCollection" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.Configuration.Install.InstallerCollection" /> that represents the installers to add to this collection.</param>
        <summary>Adds the specified collection of installers to this collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.Install.Installer.Parent%2A> property of each added <xref:System.Configuration.Install.Installer> is set to the <xref:System.Configuration.Install.Installer> containing this collection.  
  
   
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.InstallerCollection.Insert%2A> method and the AddRange methods of the <xref:System.Configuration.Install.InstallerCollection> class. It creates <xref:System.Configuration.Install.AssemblyInstaller> instances for `MyAssembly1.exe` and `MyAssembly2.exe`. These instances of <xref:System.Configuration.Install.AssemblyInstaller> are added to a <xref:System.Configuration.Install.TransactedInstaller> named `myTransactedInstaller1`. The installers in the `myTransactedInstaller1` are copied to another <xref:System.Configuration.Install.TransactedInstaller> named `myTransactedInstaller2`. The installation process installs both `MyAssembly1.exe` and `MyAssembly2.exe`.  
  
 [!code-cpp[InstallerCollection_Insert#1](~/add/codesnippet/cpp/f470fccb-ed28-4fca-b9b4-_1.cpp)]
 [!code-vb[InstallerCollection_Insert#1](~/add/codesnippet/visualbasic/f470fccb-ed28-4fca-b9b4-_1.vb)]
 [!code-cs[InstallerCollection_Insert#1](~/add/codesnippet/csharp/f470fccb-ed28-4fca-b9b4-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Configuration.Install.Installer value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to look for.</param>
        <summary>Determines whether the specified installer is included in collection.</summary>
        <returns>
          <see langword="true" /> if the specified installer is in this collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the <xref:System.Configuration.Install.InstallerCollection.Remove%2A> method, Contains method, and <xref:System.Configuration.Install.InstallerCollection.IndexOf%2A> method of the <xref:System.Configuration.Install.InstallerCollection> class. It creates <xref:System.Configuration.Install.AssemblyInstaller> instances for `MyAssembly1.exe` and `MyAssembly2.exe`. These instances are added to a <xref:System.Configuration.Install.TransactedInstaller>. `MyAssembly2.exe` is then removed from the <xref:System.Configuration.Install.InstallerCollection> of the <xref:System.Configuration.Install.TransactedInstaller>. The installation process starts and installs only `MyAssembly1.exe`.  
  
 [!code-cpp[InstallerCollection_Remove#1](~/add/codesnippet/cpp/a36b6219-ead2-42df-8eae-_1.cpp)]
 [!code-cs[InstallerCollection_Remove#1](~/add/codesnippet/csharp/a36b6219-ead2-42df-8eae-_1.cs)]
 [!code-vb[InstallerCollection_Remove#1](~/add/codesnippet/visualbasic/a36b6219-ead2-42df-8eae-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Configuration.Install.Installer[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Configuration.Install.Installer[] array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Configuration.Install.Installer[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array to copy to.</param>
        <param name="index">The index of the array at which to paste the collection.</param>
        <summary>Copies the items from the collection to an array, begining at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the CopyTo method of the <xref:System.Configuration.Install.InstallerCollection> class. It creates <xref:System.Configuration.Install.AssemblyInstaller> instances for `MyAssembly1.exe` and `MyAssembly2.exe`. These instances are added to a <xref:System.Configuration.Install.TransactedInstaller>. The names of the assemblies to be installed are displayed on the console. The installation process installs both `MyAssembly1.exe` and `MyAssembly2.exe`.  
  
 [!code-cpp[InstallerCollection_CopyTo#1](~/add/codesnippet/cpp/a9076988-1db9-4bd3-96aa-_1.cpp)]
 [!code-cs[InstallerCollection_CopyTo#1](~/add/codesnippet/csharp/a9076988-1db9-4bd3-96aa-_1.cs)]
 [!code-vb[InstallerCollection_CopyTo#1](~/add/codesnippet/visualbasic/a9076988-1db9-4bd3-96aa-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Configuration.Install.Installer value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Configuration.Install.Installer" /> to locate in the collection.</param>
        <summary>Determines the index of a specified installer in the collection.</summary>
        <returns>The zero-based index of the installer in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example is the same as the example in the <xref:System.Configuration.Install.InstallerCollection.Contains%2A> method. For more information on this example, please see the Example section of the <xref:System.Configuration.Install.InstallerCollection.Contains%2A> method.  
  
 [!code-cpp[InstallerCollection_Remove#1](~/add/codesnippet/cpp/eaf38333-589b-4463-9993-_1.cpp)]
 [!code-cs[InstallerCollection_Remove#1](~/add/codesnippet/csharp/eaf38333-589b-4463-9993-_1.cs)]
 [!code-vb[InstallerCollection_Remove#1](~/add/codesnippet/visualbasic/eaf38333-589b-4463-9993-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Configuration.Install.Installer value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which to insert the installer.</param>
        <param name="value">The <see cref="T:System.Configuration.Install.Installer" /> to insert.</param>
        <summary>Inserts the specified installer into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example is the same as the example in the <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> method. For more information on this example, please see the Example section of the <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> method.  
  
 [!code-cpp[InstallerCollection_Insert#1](~/add/codesnippet/cpp/a458559c-959a-40d4-8b29-_1.cpp)]
 [!code-vb[InstallerCollection_Insert#1](~/add/codesnippet/visualbasic/a458559c-959a-40d4-8b29-_1.vb)]
 [!code-cs[InstallerCollection_Insert#1](~/add/codesnippet/csharp/a458559c-959a-40d4-8b29-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.Installer this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.Install.Installer Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.Installer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the installer to get or set.</param>
        <summary>Gets or sets an installer at the specified index.</summary>
        <value>An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer at the specified index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the specified <xref:System.Configuration.Install.Installer> is placed in the <xref:System.Configuration.Install.InstallerCollection>, the <xref:System.Configuration.Install.Installer.Parent%2A> property of the <xref:System.Configuration.Install.Installer> is set to the <xref:System.Configuration.Install.Installer> that contains the collection.  
  
   
  
## Examples  
 The following example creates <xref:System.Configuration.Install.AssemblyInstaller> instances for `MyAssembly1.exe` and `MyAssembly2.exe`. These instances are added to a <xref:System.Configuration.Install.TransactedInstaller>. The names of all the assemblies that are to be installed are displayed to the console. The installation process installs both `MyAssembly1.exe` and `MyAssembly2.exe`.  
  
 [!code-cs[InstallerCollection_Item#1](~/add/codesnippet/csharp/p-system.configuration.i_14_1.cs)]
 [!code-cpp[InstallerCollection_Item#1](~/add/codesnippet/cpp/p-system.configuration.i_14_1.cpp)]
 [!code-vb[InstallerCollection_Item#1](~/add/codesnippet/visualbasic/p-system.configuration.i_14_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which to insert `value`.</param>
        <param name="value">The new value of the installer at `index`.</param>
        <summary>Performs additional custom processes before a new installer is inserted into the collection.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected override void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which `value` can be found.</param>
        <param name="value">The installer to be removed from `index`.</param>
        <summary>Performs additional custom processes before an installer is removed from the collection.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected override void OnSet (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSet(int32 index, object oldValue, object newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which to replace `oldValue`.</param>
        <param name="oldValue">The value to replace with `newValue.`</param>
        <param name="newValue">The new value of the installer at `index`.</param>
        <summary>Performs additional custom processes before an existing installer is set to a new value.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Configuration.Install.Installer value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to remove.</param>
        <summary>Removes the specified <see cref="T:System.Configuration.Install.Installer" /> from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.Install.Installer.Parent%2A> property of the removed <xref:System.Configuration.Install.Installer> is set to `null`.  
  
   
  
## Examples  
 The following example is the same as the example in the <xref:System.Configuration.Install.InstallerCollection.Contains%2A> method. For more information on this example, please see the Example section of the <xref:System.Configuration.Install.InstallerCollection.Contains%2A> method.  
  
 [!code-cpp[InstallerCollection_Remove#1](~/add/codesnippet/cpp/c86e149b-39c8-4cba-af08-_1.cpp)]
 [!code-cs[InstallerCollection_Remove#1](~/add/codesnippet/csharp/c86e149b-39c8-4cba-af08-_1.cs)]
 [!code-vb[InstallerCollection_Remove#1](~/add/codesnippet/visualbasic/c86e149b-39c8-4cba-af08-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>