<Type Name="IStateRuntime" FullName="System.Web.SessionState.IStateRuntime">
  <TypeSignature Language="C#" Value="public interface IStateRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateRuntime" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the interface used by the ASP.NET state service to manage session data.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET can manage session state out-of-process by using a Windows service called the ASP.NET state service. The <xref:System.Web.SessionState.StateRuntime> class is used by unmanaged code in this service to manage session data. This class supports the .NET Framework infrastructure implementation of the ASP.NET state service and is not intended be used directly from your code.  
  
 Using the ASP.NET state service is not the default method of managing sessionstate in ASP.NET; ASP.NET supports in-process session-state management by default. It also supports a second out-of-process option that manages session state in a Microsoft SQL Server database, and it enables custom session-state management solutions. For more information about session-state storage options, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(native int tracker, int32 verb, string uri, int32 exclusive, int32 timeout, int32 lockCookieExists, int32 lockCookie, int32 contentLength, native int content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" />
        <Parameter Name="verb" Type="System.Int32" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="exclusive" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="lockCookieExists" Type="System.Int32" />
        <Parameter Name="lockCookie" Type="System.Int32" />
        <Parameter Name="contentLength" Type="System.Int32" />
        <Parameter Name="content" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tracker">An &lt;xref:System.IntPtr&gt; pointer to an object stored in the unmanaged ASP.NET state server.</param>
        <param name="verb">The action to take on the object.</param>
        <param name="uri">An identifier for the session.</param>
        <param name="exclusive">The type of access to objects in the store.</param>
        <param name="timeout">The number of minutes the session data is stored.</param>
        <param name="lockCookieExists">A value that indicates whether the lock cookie exists in the original request from the ASP.NET Web server to the ASP.NET state server.</param>
        <param name="lockCookie">The owner of the lock on the session state.</param>
        <param name="contentLength">The length, in bytes, of the data stored for the session.</param>
        <param name="content">An &lt;xref:System.IntPtr&gt; pointer to the content stored for the session in the unmanaged ASP.NET state server.</param>
        <summary>Used by the ASP.NET state server to process session data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET can manage session state out-of-process by using a Windows service called the ASP.NET state service. The <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A> method is used by unmanaged code in this service to manage the session data.  
  
 This member supports the .NET Framework infrastructure implementation of the ASP.NET state service and is not intended be used directly from your code. For more information about session-state storage options, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(native int tracker, int32 verb, string uri, int32 exclusive, int32 extraFlags, int32 timeout, int32 lockCookieExists, int32 lockCookie, int32 contentLength, native int content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" />
        <Parameter Name="verb" Type="System.Int32" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="exclusive" Type="System.Int32" />
        <Parameter Name="extraFlags" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="lockCookieExists" Type="System.Int32" />
        <Parameter Name="lockCookie" Type="System.Int32" />
        <Parameter Name="contentLength" Type="System.Int32" />
        <Parameter Name="content" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tracker">An &lt;xref:System.IntPtr&gt; pointer to an object stored in the unmanaged ASP.NET state server.</param>
        <param name="verb">The action to take on the object.</param>
        <param name="uri">An identifier for the session.</param>
        <param name="exclusive">The type of access to objects in the store.</param>
        <param name="extraFlags">A value that indicates whether the current session is an uninitialized, cookieless session.</param>
        <param name="timeout">The number of minutes the session data is stored.</param>
        <param name="lockCookieExists">A value that indicates whether the lock cookie exists in the original request from the ASP.NET Web server to the ASP.NET state server.</param>
        <param name="lockCookie">The owner of the lock on the session state.</param>
        <param name="contentLength">The length, in bytes, of the data stored for the session.</param>
        <param name="content">An &lt;xref:System.IntPtr&gt; pointer to the content stored for the session in the unmanaged ASP.NET state server.</param>
        <summary>Used by the ASP.NET state server to process session data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET can manage session state out-of-process by using a Windows service called the ASP.NET state service. The ProcessRequest method is used by unmanaged code in this service to manage the session data.  
  
 This member supports the .NET Framework infrastructure implementation of the ASP.NET state service and is not intended be used directly from your code. For more information about session-state storage options, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopProcessing">
      <MemberSignature Language="C#" Value="public void StopProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the processing of session data stored in ASP.NET state server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET can manage session state out-of-process by using a Windows service called the ASP.NET state service. The <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A> method is used by unmanaged code in this service to stop processing the session data. This member is provided to support the .NET Framework infrastructure implementation of the ASP.NET state service and is not intended be used directly from your code. For more information about session-state storage options, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>