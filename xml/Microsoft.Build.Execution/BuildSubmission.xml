<Type Name="BuildSubmission" FullName="Microsoft.Build.Execution.BuildSubmission">
  <TypeSignature Language="C#" Value="public class BuildSubmission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildSubmission extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a build request that has been submitted to the build manager for processing. The methods of this class may be used to execute synchronous or asynchronous build requests and to provide access to the results upon completion.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class is thread-safe.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="AsyncContext">
      <MemberSignature Language="C#" Value="public object AsyncContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the asynchronous context provided to &lt;xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync%2A&gt;, if any.</summary>
        <value>Returns the asynchronous context provided to &lt;xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync%2A&gt;. Returns null if no context is provided.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BuildManager">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildManager BuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.BuildManager BuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the build manager this build submission is associated with.</summary>
        <value>Returns the build manager this build submission is associated with.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BuildResult">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResult BuildResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.BuildResult BuildResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the result of the build.</summary>
        <value>Returns the result of the build.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The result is not valid until <xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A> is signalled.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResult Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.BuildResult Execute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts a build request synchronously and waits until results are available.</summary>
        <returns>Returns the build request.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The request has already been started or is already complete.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public void ExecuteAsync (Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAsync(class Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Microsoft.Build.Execution.BuildSubmissionCompleteCallback" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The callback method to call when the build submission is complete.</param>
        <param name="context">The context in which the build submission occurs.</param>
        <summary>Starts a build request asynchronously and within the given context. Immediately returns control to the caller.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The request has already been started or is already complete.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether this build submission is complete.</summary>
        <value>Returns true if this build submission is complete; false otherwise.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SubmissionId">
      <MemberSignature Language="C#" Value="public int SubmissionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubmissionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an ID uniquely identifying this build submission.</summary>
        <value>Returns an ID uniquely identifying this build submission.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This ID is used to distinguish this build submission from other build submissions within the same build.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a &lt;xref:System.Threading.WaitHandle&gt; object that will be signalled when the build is complete.</summary>
        <value>Returns null until &lt;xref:Microsoft.Build.Execution.BuildSubmission.Execute%2A&gt; or &lt;xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync%2A&gt; returns, then returns the WaitHandle object.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>