<Type Name="ColorConvertedBitmap" FullName="System.Windows.Media.Imaging.ColorConvertedBitmap">
  <TypeSignature Language="C#" Value="public sealed class ColorConvertedBitmap : System.Windows.Media.Imaging.BitmapSource, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ColorConvertedBitmap extends System.Windows.Media.Imaging.BitmapSource implements class System.ComponentModel.ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Imaging.BitmapSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Changes the color space of a <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For XAML usage information, see [ColorConvertedBitmap Markup Extension](~/add/includes/ajax-current-ext-md.md).  
  
 ColorConvertedBitmap implements the <xref:System.ComponentModel.ISupportInitialize> interface to optimize initialization on multiple properties. Property changes can only occur during object initialization. Call <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> to signal that initialization has begun and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> to signal that initialization has completed. After initialization, property changes are ignored.  
  
 ColorConvertedBitmap objects created using the <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.%23ctor%28System.Windows.Media.Imaging.BitmapSource%2CSystem.Windows.Media.ColorContext%2CSystem.Windows.Media.ColorContext%2CSystem.Windows.Media.PixelFormat%29> constructor are automatically initialized, and property changes are ignored.  
  
 A ColorConvertedBitmap is never cached.  
  
<a name="xamlTextUsage_ColorConvertedBitmap"></a>   
## XAML Text Usage  
 See Remarks  
  
   
  
## Examples  
 The following example shows how to create an instance of ColorConvertedBitmap and use it to convert color.  
  
 [!code-cs[bitmapimageprops#2](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#2)]
 [!code-vb[bitmapimageprops#2](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorConvertedBitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> implements the <xref:System.ComponentModel.ISupportInitialize> interface to optimize initialization on multiple properties. To initialize a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> created using this constructor, you must perform property initialization between <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> calls.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorConvertedBitmap (System.Windows.Media.Imaging.BitmapSource source, System.Windows.Media.ColorContext sourceColorContext, System.Windows.Media.ColorContext destinationColorContext, System.Windows.Media.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Imaging.BitmapSource source, class System.Windows.Media.ColorContext sourceColorContext, class System.Windows.Media.ColorContext destinationColorContext, valuetype System.Windows.Media.PixelFormat format) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Media.Imaging.BitmapSource" />
        <Parameter Name="sourceColorContext" Type="System.Windows.Media.ColorContext" />
        <Parameter Name="destinationColorContext" Type="System.Windows.Media.ColorContext" />
        <Parameter Name="format" Type="System.Windows.Media.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="source">The <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is converted.</param>
        <param name="sourceColorContext">The <see cref="T:System.Windows.Media.ColorContext" /> of the source bitmap.</param>
        <param name="destinationColorContext">The <see cref="T:System.Windows.Media.ColorContext" /> of the converted bitmap.</param>
        <param name="format">The <see cref="T:System.Windows.Media.PixelFormat" /> of the converted bitmap.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> class by using the specified values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> objects created using this constructor are automatically initialized. After initialization, property changes are ignored.  
  
   
  
## Examples  
 The following example shows how to initialize an instance of <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> by using the ColorConvertedBitmap constructor.  
  
 [!code-cs[bitmapimageprops#2](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#2)]
 [!code-vb[bitmapimageprops#2](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals the start of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> initialization.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Property initialization must be done between BeginInit and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> calls. After the <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> has been initialized, property changes are ignored.  
  
   
  
## Examples  
 The following example demonstrates how to initialize a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> with a set of properties by using the BeginInit and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> methods.  
  
 [!code-cs[bitmapimageprops#3](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#3)]
 [!code-vb[bitmapimageprops#3](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> is currently being initialized. BeginInit has already been called.  
  
 -or-  
  
 The <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> has already been initialized.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.ColorConvertedBitmap Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.ColorConvertedBitmap Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.ColorConvertedBitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen%2A&gt; property will be <see langword="false" /> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen%2A&gt; property was <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.ColorConvertedBitmap CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.ColorConvertedBitmap CloneCurrentValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.ColorConvertedBitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
        <returns>A modifiable clone of the current object. The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen%2A&gt; property will be <see langword="false" /> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen%2A&gt; property was <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationColorContext">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ColorContext DestinationColorContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ColorContext DestinationColorContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ColorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that identifies the color profile, as defined by the <see cref="T:System.Windows.Media.ColorContext" /> class, of the converted bitmap.</summary>
        <value>An instance of <see cref="T:System.Windows.Media.ColorContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you make property changes to a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap>, the changes must be done within a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> block.  
  
<a name="xamlTextUsage_Property"></a>   
## XAML Text Usage  
  
<a name="dependencyPropertyInfo_DestinationColorContext"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContextProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to set the value of the DestinationColorContext property.  
  
 [!code-cs[bitmapimageprops#3](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#3)]
 [!code-vb[bitmapimageprops#3](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DestinationColorContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DestinationColorContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DestinationColorContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContext%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DestinationFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PixelFormat DestinationFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.PixelFormat DestinationFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that represents the <see cref="T:System.Windows.Media.PixelFormat" /> of the converted bitmap.</summary>
        <value>An instance of <see cref="T:System.Windows.Media.PixelFormat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you make property changes to a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap>, the changes must be done within a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> block.  
  
<a name="xamlTextUsage_Property2"></a>   
## XAML Text Usage  
  
<a name="dependencyPropertyInfo_DestinationFormat"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormatProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to set the value of the DestinationFormat property.  
  
 [!code-cs[bitmapimageprops#3](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#3)]
 [!code-vb[bitmapimageprops#3](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DestinationFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DestinationFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DestinationFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormat%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals the end of the <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> initialization.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Property initialization must be done between <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> and EndInit calls. After the <xref:System.Windows.Media.Imaging.ColorConvertedBitmap> has been initialized, property changes are ignored.  
  
   
  
## Examples  
 The following example shows how to use the EndInit method in order to change the properties of a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap>.  
  
 [!code-cs[bitmapimageprops#3](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#3)]
 [!code-vb[bitmapimageprops#3](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.Source%2A&gt;, &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContext%2A&gt;, or &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContext%2A&gt; property is <see langword="null" />.  
  
 -or-  
  
 The EndInit method is called without first calling &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapSource Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that identifies the source bitmap that is converted.</summary>
        <value>A value that identifies the source bitmap that is converted.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you make property changes to a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap>, the changes must be done within a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> block.  
  
<a name="xamlTextUsage_Property3"></a>   
## XAML Text Usage  
  
<a name="dependencyPropertyInfo_Source"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to set the value of the Source property.  
  
 [!code-cs[bitmapimageprops#3](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#3)]
 [!code-vb[bitmapimageprops#3](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SourceColorContext">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ColorContext SourceColorContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ColorContext SourceColorContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ColorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that identifies the color profile of the source bitmap.</summary>
        <value>An instance of <see cref="T:System.Windows.Media.ColorContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you make property changes to a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap>, the changes must be done within a <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.BeginInit%2A> and <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.EndInit%2A> block.  
  
<a name="xamlTextUsage_Property4"></a>   
## XAML Text Usage  
  
<a name="dependencyPropertyInfo_SourceColorContext"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContextProperty>|  
|Metadata properties set to `true`|None|  
  
   
  
## Examples  
 The following example shows how to set the value of the SourceColorContext property.  
  
 [!code-cs[bitmapimageprops#3](~/add/codesnippet/csharp/BitmapImageProps/BitmapImageProps.cs#3)]
 [!code-vb[bitmapimageprops#3](~/add/codesnippet/visualbasic/BitmapImageProps/BitmapImageProps.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SourceColorContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceColorContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceColorContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContext%2A&gt; dependency property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The identifier for the <xref:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContext%2A> dependency property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Media.Imaging.ColorConvertedBitmap.Source%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>