<Type Name="HtmlControlAdapter" FullName="System.Web.UI.MobileControls.Adapters.HtmlControlAdapter">
  <TypeSignature Language="C#" Value="public class HtmlControlAdapter : System.Web.UI.MobileControls.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlControlAdapter extends System.Web.UI.MobileControls.Adapters.ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Mobile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.MobileControls.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides the control adapter base class for the HTML adapter set. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">for operating in a hosted environment. Demand value: <see cref="T:System.Security.Permissions.SecurityAction" />; Permission value: <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</permission>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Web.UI.MobileControls.Adapters.HtmlControlAdapter" /> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddAccesskeyAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAccesskeyAttribute (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAccesskeyAttribute(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <summary>Writes a custom attribute access key method, provided that the device supports the attribute. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AddAccesskeyAttribute method can be called by any HTML control adapter to add an attribute. Because it is virtual, it also can be customized by adapters that inherit this method.  
  
 To determine whether a device supports an access key attribute, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributes (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributes(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <summary>Writes additional attributes that are specific to an adapter. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can call this method from any control adapter to provide customization by inheriting adapters.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="protected virtual void AddJPhoneMultiMediaAttributes (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddJPhoneMultiMediaAttributes(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer to use to write the custom attributes.</param>
        <summary>Use this method to write custom attributes for J-Phone multimedia attributes. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AddJPhoneMultiMediaAttributes method writes the `src`, `soundstart`, `loop`, `volume`, `vibration`, and `viblength` attributes in `<a>` and `<input>` elements, if the device supports the attributes. To determine whether a device supports an access key attribute, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute%2A> property.  
  
 This method can be called by any HTML control adapter to add the attributes. Because it is virtual, it also can be customized by adapters that inherit this method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExitSecondaryUIMode">
      <MemberSignature Language="C#" Value="protected void ExitSecondaryUIMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ExitSecondaryUIMode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exits any secondary user interface (UI) mode for the control. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is equivalent to setting the <xref:System.Web.UI.MobileControls.Adapters.HtmlControlAdapter.SecondaryUIMode%2A> property to <xref:System.Web.UI.MobileControls.Adapters.HtmlControlAdapter.NotSecondaryUI>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FormAdapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.MobileControls.Adapters.HtmlFormAdapter FormAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MobileControls.Adapters.HtmlFormAdapter FormAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.MobileControls.Adapters.HtmlFormAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the form adapter for the form on which the associated control resides. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <value>The form adapter for the form on which the associated control resides.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterState">
      <MemberSignature Language="C#" Value="public override void LoadAdapterState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadAdapterState(object state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">The current view state.</param>
        <summary>Loads the view state. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NotSecondaryUI">
      <MemberSignature Language="C#" Value="protected static readonly int NotSecondaryUI;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly int32 NotSecondaryUI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a constant that defines a mode where no secondary user interface (UI) is displayed. This field is read-only. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HTML and WML adapter sets support a concept called *secondary UI*. Secondary UI is used by controls that need to show additional screens of UI, in the same way that a Windows-based application shows dialog boxes. For more information about secondary user interfaces, see the [Adapter Sets Functionality](http://msdn.microsoft.com/en-us/903adf84-e45c-407e-8b55-98796c084ff7) documentation.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.MobileControls.Adapters.HtmlPageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MobileControls.Adapters.HtmlPageAdapter PageAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.MobileControls.Adapters.HtmlPageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the page adapter for the mobile page. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <value>The page adapter for the mobile page.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer to receive output.</param>
        <summary>Called by the control's Render method to perform rendering. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public virtual void Render (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Render(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer to receive output.</param>
        <summary>Called by the control's &lt;xref:System.Web.UI.Control.Render%2A&gt; method to perform rendering. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For the <xref:System.Web.UI.MobileControls.Adapters.ControlAdapter> class, this method renders all the children of the control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderAsHiddenInputField">
      <MemberSignature Language="C#" Value="protected virtual void RenderAsHiddenInputField (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderAsHiddenInputField(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <summary>Renders hidden field text for a control. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginLink">
      <MemberSignature Language="C#" Value="protected void RenderBeginLink (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderBeginLink(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <param name="target">The specified target (form or URL).</param>
        <summary>Renders the opening tag of a link. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method automatically checks for the type of link and renders the appropriate markup language. The specified target can refer to another URL or to a form on the same page.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderEndLink">
      <MemberSignature Language="C#" Value="protected void RenderEndLink (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderEndLink(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <summary>Renders the end tag of a link. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEventAsAnchor">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEventAsAnchor (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string argument, string linkText);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEventAsAnchor(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string argument, string linkText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="linkText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <param name="argument">The rendering parameter.</param>
        <param name="linkText">The text specified for the label.</param>
        <summary>Renders a postback event as an anchor, with the text specified by the <paramref name="linkText" /> parameter as a label. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEventAsAttribute">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEventAsAttribute (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string attributeName, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEventAsAttribute(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string attributeName, string argument) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <param name="attributeName">The attribute name.</param>
        <param name="argument">The rendering parameter.</param>
        <summary>Renders a postback event as an attribute. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEventReference">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEventReference (System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEventReference(class System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter writer, string argument) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.MobileControls.Adapters.HtmlMobileTextWriter" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">The text writer.</param>
        <param name="argument">The rendering parameter.</param>
        <summary>Renders a postback event reference. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RequiresFormTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresFormTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresFormTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether an adapter, such as the <see cref="T:System.Web.UI.MobileControls.Adapters.ChtmlCommandAdapter" /> class, generates markup that requires <see langword="&lt;Form&gt;" /> tags for form submission. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <value>
          <see langword="true" /> if the adapter generates markup that requires &lt;<see langword="Form" />&gt; tags for form submission; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is used by the <xref:System.Web.UI.MobileControls.Adapters.ChtmlFormAdapter> class to determine whether the form tag is needed in the resulting markup. Currently, only the settings on cHTML adapters are recognized. However, you can use this property to provide your own rendering in your adapters.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterState">
      <MemberSignature Language="C#" Value="public override object SaveAdapterState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object SaveAdapterState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is called when the control saves its private view state. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <returns>
          <see langword="Null" /> in all cases.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SecondaryUIMode">
      <MemberSignature Language="C#" Value="protected int SecondaryUIMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SecondaryUIMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or returns the secondary user interface (UI) mode for the control. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.</summary>
        <value>The secondary UI mode for the control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HTML and WML adapter sets support a concept called *secondary UI*. Secondary UI is used by controls that need to show additional screens of UI, in the same way as a dialog box in a Windows-based application. For more information about secondary user interfaces, see [Adapter Sets Functionality](http://msdn.microsoft.com/en-us/903adf84-e45c-407e-8b55-98796c084ff7).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>