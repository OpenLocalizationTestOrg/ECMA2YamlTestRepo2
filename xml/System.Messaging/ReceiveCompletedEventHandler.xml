<Type Name="ReceiveCompletedEventHandler" FullName="System.Messaging.ReceiveCompletedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ReceiveCompletedEventHandler(object sender, ReceiveCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReceiveCompletedEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Messaging.ReceiveCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />.</param>
    <param name="e">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a ReceiveCompletedEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
   
  
## Examples  
 The following code example illustrates how to create an event delegate (ReceiveCompletedEventHandler) for the event handler (`MyReceiveCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=fullName> event. The event handler receives a message from a queue, and writes its label to the screen.  
  
 [!code-cs[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/csharp/t-system.messaging.recei_0_1.cs)]
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/cpp/t-system.messaging.recei_0_1.cpp)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/visualbasic/t-system.messaging.recei_0_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>