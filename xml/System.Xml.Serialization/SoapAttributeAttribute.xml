<Type Name="SoapAttributeAttribute" FullName="System.Xml.Serialization.SoapAttributeAttribute">
  <TypeSignature Language="C#" Value="public class SoapAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies that the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; must serialize the class member as an encoded SOAP attribute.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SoapAttributeAttribute class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1". For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.  
  
 Apply the SoapAttributeAttribute to a public field to specify that the <xref:System.Xml.Serialization.XmlSerializer> serializes the field as an XML attribute. You can specify an alternative name of the attribute by setting the <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> property. Set the <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> if the attribute must be given a specific XML Schema definition language (XSD) data type. If the attribute belongs to a specific XML namespace, set the <xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A> property.  
  
 For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)  
  
> [!NOTE]
>  You can use the word `SoapAttribute` in your code instead of the longer SoapAttributeAttribute.  
  
   
  
## Examples  
 The following example serializes a class that contains several fields to which a SoapAttributeAttribute is applied.  
  
 [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/t-system.xml.serializati_15_1.cs)]
 [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_15_1.vb)]
 [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/t-system.xml.serializati_15_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create a <xref:System.Xml.Serialization.SoapAttributeAttribute> when you override the serialization of a class member. Create the <xref:System.Xml.Serialization.SoapAttributeAttribute>, set its properties, and set the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> object. For more details, see the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview.  
  
   
  
## Examples  
 The following example creates a new <xref:System.Xml.Serialization.SoapAttributeAttribute> that is used to override the serialization of a field. After creating a <xref:System.Xml.Serialization.SoapAttributeAttribute> and setting its properties, the object is set to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. The <xref:System.Xml.Serialization.SoapAttributes> is then added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapAttributeAttributeEx2#1](~/add/codesnippet/cpp/m-system.xml.serializati_10_1.cpp)]
 [!code-vb[SoapAttributeAttributeEx2#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_10_1.vb)]
 [!code-cs[SoapAttributeAttributeEx2#1](~/add/codesnippet/csharp/m-system.xml.serializati_10_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">The name of the XML attribute.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class using the specified value as the name of the XML attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied.  
  
 [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/m-system.xml.serializati_2_1.cs)]
 [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_2_1.vb)]
 [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/m-system.xml.serializati_2_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the XML attribute generated by the &lt;xref:System.Xml.Serialization.XmlSerializer&gt;.</summary>
        <value>The name of the XML attribute. The default is the member identifier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the AttributeName property to specify an XML attribute name when the default value cannot be used. For example, if the XML attribute name is invalid as a member identifier, use a valid name for the identifier while setting the AttributeName to an invalid name.  
  
   
  
## Examples  
 The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The AttributeName property is set for the `Today` field.  
  
 [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_0_1.cs)]
 [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_0_1.vb)]
 [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_0_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;xref:System.Xml.Serialization.XmlSerializer&gt;.</summary>
        <value>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table lists the XML Schema simple data types with their.NET equivalents.  
  
 For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.SoapAttributeAttribute> with the DataType set to "base64Binary" or "hexBinary", as appropriate. For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.SoapAttributeAttribute> with the DataType set to "date" or "time".  
  
 For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.SoapAttributeAttribute> with its DataType property set to the XML Schema data type. Note that this does not change the serialization format, only the schema for the member.  
  
> [!NOTE]
>  The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.  
  
> [!NOTE]
>  Passing binary data as an XML element is more efficient then passing it as an XML attribute.  
  
 For more information about XML Schema data types, see the World Wide Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".  
  
|XSD data type|.NET data type|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Array of <xref:System.Byte> objects|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ENTITIES|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Array of <xref:System.Byte> objects|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|time|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The DataType property is set for the `GroupNumber` and the `Today` fields.  
  
 [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_31_1.cs)]
 [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_31_1.vb)]
 [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_31_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">The XML Schema data type you have specified cannot be mapped to the .NET data type.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XML namespace of the XML attribute.</summary>
        <value>The XML namespace of the XML attribute.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML".  
  
 To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document. The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>. When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name.  
  
   
  
## Examples  
 The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The Namespace property is set for the `GroupName` the field.  
  
 [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_28_1.cs)]
 [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_28_1.vb)]
 [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_28_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>