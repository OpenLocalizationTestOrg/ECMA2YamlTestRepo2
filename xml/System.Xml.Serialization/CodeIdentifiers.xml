<Type Name="CodeIdentifiers" FullName="System.Xml.Serialization.CodeIdentifiers">
  <TypeSignature Language="C#" Value="public class CodeIdentifiers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeIdentifiers extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Maintains a group of names for related code entities or type mappings that are generated by the .NET Framework's XML serialization infrastructure.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following list identifies tools and classes that use the CodeIdentifiers:  
  
-   The [Web Services Description Language Tool (Wsdl.exe)](http://msdn.microsoft.com/en-us/b9210348-8bc2-4367-8c91-d1a04b403e88), or the <xref:System.Web.Services.Description.ServiceDescriptionImporter> class, while generating client proxy classes or abstract server classes from a Web Services Description Language (WSDL) document.  
  
-   The [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) tool while generating classes from XML Schema Definition (XSD) documents.  
  
-   The <xref:System.Web.Services.Description.ServiceDescriptionReflector> class while creating <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services via the <xref:System.Web.Services.WebServiceAttribute> attribute.  
  
 Instead of using the CodeIdentifiers class directly, use the aforementioned tools or classes. If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes.  
  
 Depending on its scope, a CodeIdentifiers instance can be used to maintain the names of any of the items in the following list:  
  
-   Types, methods, or fields.  
  
-   The parameters and return value of a method corresponding to WSDL input and output messages.  
  
-   Objects within a <xref:System.Web.Services.Description.ServiceDescription> instance that can be serialized to a WSDL document.  
  
 Typically, the class is used to avoid naming collisions between code entities within a particular scope, including collisions with the name of a containing entity.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifiers (bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool caseSensitive) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caseSensitive">
          <see langword="true" /> if identifiers are case sensitive; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> class and determines whether code identifiers are case sensitive.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string identifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string identifier, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="identifier">A name that is used to index the code entity.</param>
        <param name="value">The code entity or type mapping information.</param>
        <summary>Adds a named code entity or type mapping to the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unlike the <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> method, the Add method does not prevent naming collisions.  
  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddReserved">
      <MemberSignature Language="C#" Value="public void AddReserved (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReserved(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">A name that will not be available within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" />instance's scope.</param>
        <summary>Prevents a specified name from being used within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A reserved name can belong to a containing code entity, such as a type for which member names must also be generated.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddUnique">
      <MemberSignature Language="C#" Value="public string AddUnique (string identifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddUnique(string identifier, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="identifier">A candidate name that is used to index the code entity.</param>
        <param name="value">The code entity or type mapping information.</param>
        <summary>Adds a named code entity or type mapping to the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope, ensuring that the name is unique within the scope.</summary>
        <returns>The identifier parameter value or a modified string if there is a name collision.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the identifier parameter value is not unique within the <xref:System.Xml.Serialization.CodeIdentifiers> instance's scope, a new, unique string is generated and used in its place. The new string is generated by appending to the input name. The original name is not unique if it was passed previously to the <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>, AddUnique, or <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> method, or if it was generated by a previous call to the AddUnique method. In each case, if the new identifier is not unique, it is first passed to the <xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A> method to create a new unique identifier.  
  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all code entities or type mappings, including their names, from the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reserved names, as added through the <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> method, are not removed.  
  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsInUse">
      <MemberSignature Language="C#" Value="public bool IsInUse (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInUse(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The name to check for use within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</param>
        <summary>Determines whether a specified name is already being used within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</summary>
        <returns>
          <see langword="true" /> if the name is already in use; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The input name is not unique if it was passed previously to the <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>, <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>, or <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> method, or if it was generated by the <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> method.  
  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MakeRightCase">
      <MemberSignature Language="C#" Value="public string MakeRightCase (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeRightCase(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The name to possibly modify.</param>
        <summary>Ensures that the input is of the correct case by modifying the name according to the value of the &lt;xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A&gt; property.</summary>
        <returns>A string that is the same as the input identifier or has the first letter's case modified.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the value of the <xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A> property is `true` and the first character of the input is a letter, it is made lowercase, if necessary. If the value of the <xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A> is `false`, Pascal case is in effect and the first character, if a letter, is capitalized, if necessary.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MakeUnique">
      <MemberSignature Language="C#" Value="public string MakeUnique (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeUnique(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The name to modify if it is not already unique.</param>
        <summary>Determines whether the input name conflicts with another name within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope and, if it does, generates a modified string.</summary>
        <returns>The identifier parameter value or a modified string if there is a name collision.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The input name is not unique if it was passed previously to the <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>, <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>, or <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> method, or if it was generated by the <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> method. If the name is not unique, a new string is generated by appending to the original string.  
  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The name of the code entity or type mapping information to remove.</param>
        <summary>Removes from the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope the code entity or type mapping identified by the input name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveReserved">
      <MemberSignature Language="C#" Value="public void RemoveReserved (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveReserved(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">A name that will be made available within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</param>
        <summary>Removes the input name from the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's reserved names.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public object ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ToArray(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type of all the code entities or type mappings for the instance.</param>
        <summary>Returns an array of the code entities or type mappings within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> instance's scope.</summary>
        <returns>An array of the code entities or type mappings that is stored by the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <xref:System.Xml.Serialization.CodeIdentifiers> class. For a complete list, see [Attributes That Control XML Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UseCamelCasing">
      <MemberSignature Language="C#" Value="public bool UseCamelCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCamelCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the instance uses camel case.</summary>
        <value>
          <see langword="true" /> to indicate that the instance uses camel case; <see langword="false" /> to indicate that the instance uses Pascal case.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 With camel case, if the first character of an identifier is a letter, it must be lowercase. With Pascal case, if the first character is a letter, it must be uppercase.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>