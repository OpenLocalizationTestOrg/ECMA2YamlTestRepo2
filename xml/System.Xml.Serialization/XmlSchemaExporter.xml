<Type Name="XmlSchemaExporter" FullName="System.Xml.Serialization.XmlSchemaExporter">
  <TypeSignature Language="C#" Value="public class XmlSchemaExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaExporter extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Populates &lt;xref:System.Xml.Schema.XmlSchema&gt; objects with XML schema element declarations that are found in type mapping objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The XmlSchemaExporter class provides a programmatic representation of an XML Schema Definition language (XSD) document. Instead of using XmlSchemaExporter directly, use the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class or the [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md).  
  
 The <xref:System.Web.Services.Description.ServiceDescriptionReflector> class creates <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services. It uses the XmlSchemaExporter class when a Web service class specifies:  
  
-   Literal use, indicating that the contents of SOAP message parameters and return values (or request and response documents) are literally specified with XML schema definitions.  
  
-   Non-SOAP implementations of Web services using the HTTP-GET and HTTP-POST operations.  
  
 Xsd.exe generates XML schema documents from one or more types in a run-time assembly file using the XmlSchemaExporter class and reflection.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaExporter (System.Xml.Serialization.XmlSchemas schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
      </Parameters>
      <Docs>
        <param name="schemas">A collection of &lt;xref:System.Xml.Schema.XmlSchema&gt; objects to which element declarations obtained from type mappings are added.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Xml.Serialization.XmlSchemaExporter> class supplies the collection of <xref:System.Xml.Schema.XmlSchema> objects to which XML schema element declarations are to be added. You do not need to create an instance of the <xref:System.Xml.Serialization.XmlSchemaExporter> class directly.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExportAnyType">
      <MemberSignature Language="C#" Value="public string ExportAnyType (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAnyType(string ns) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">The namespace of the XML schema document to which to add an **&lt;any&gt;** element.</param>
        <summary>Exports an **&lt;any&gt;** element to the &lt;xref:System.Xml.Schema.XmlSchema&gt; object that is identified by the specified namespace.</summary>
        <returns>An arbitrary name assigned to the **&lt;any&gt;** element declaration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You do not need to call the method directly.  
  
 The <xref:System.Web.Services.Description.ServiceDescriptionReflector> creates <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services.  
  
 A field or property of type <xref:System.Xml.XmlElement>, with an attribute <xref:System.Xml.Serialization.XmlAnyElementAttribute>, is translated into an **\<any>** element.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExportAnyType">
      <MemberSignature Language="C#" Value="public string ExportAnyType (System.Xml.Serialization.XmlMembersMapping members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAnyType(class System.Xml.Serialization.XmlMembersMapping members) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="members">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains mappings to export.</param>
        <summary>Adds an element declaration for an object or type to a SOAP message or to an &lt;xref:System.Xml.Schema.XmlSchema&gt; object.</summary>
        <returns>The string "any" with an appended integer.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.</param>
        <summary>Adds an element declaration to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; for each of the element parts of a literal SOAP message definition.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For each SOAP message part, the ExportMembersMapping method adds an XML schema element declaration to the <xref:System.Xml.Schema.XmlSchema> that uses the same namespace as the part. A literal message definition normally contains a single part.  
  
 Use the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class instead.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping, bool exportEnclosingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping, bool exportEnclosingType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
        <Parameter Name="exportEnclosingType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">The internal mapping between a .NET Framework type and an XML schema element.</param>
        <param name="exportEnclosingType">
          <see langword="true" /> if the schema elements that enclose the schema are to be included; otherwise, <see langword="false" />.</param>
        <summary>Adds an element declaration to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName ExportTypeMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName ExportTypeMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.</param>
        <summary>Adds an element declaration to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; object for a single element part of a literal SOAP message definition.</summary>
        <returns>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the qualified XML name of the exported element declaration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This overload adds an XML schema element declaration to the <xref:System.Xml.Schema.XmlSchema> that uses the same namespace as the SOAP message part. The literal message definition must contain a single part.  
  
 Use the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class instead.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">The internal mapping between a .NET Framework type and an XML schema element.</param>
        <summary>Adds an element declaration for a .NET Framework type to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; object.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>