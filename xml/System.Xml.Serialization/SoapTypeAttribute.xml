<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controls the schema generated by the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; when a class instance is serialized as SOAP encoded XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SoapTypeAttribute class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1". For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 To serialize an object as an encoded SOAP message, construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.  
  
 The SoapTypeAttribute can only be applied to class declarations.  
  
 The <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream. To see the schema, compile the class into a DLL file. Pass the resulting file as an argument to the [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md). The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <xref:System.Xml.Serialization.XmlSerializer> class.  
  
 Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The SoapTypeAttribute is applied to the class, with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType". The SoapTypeAttribute is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.serializati_5_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_5_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.serializati_5_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type. Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>. See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_8_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_8_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_8_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">The name of the XML type that the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type. Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>. See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_11_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_11_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_11_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">The name of the XML type that the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).</param>
        <param name="ns">The XML namespace of the type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name and XML namespace of the type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type. Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>. See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details on overriding SOAP serialization.  
  
 If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) generates a separate schema file (.xsd) for each type. This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/b7d7a27e-07c4-4ae2-8b05-_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/b7d7a27e-07c4-4ae2-8b05-_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/b7d7a27e-07c4-4ae2-8b05-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</summary>
        <value>
          <see langword="true" /> to include the type in SOAP-encoded XML Schema documents; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class declaration to specify whether to include the type in the XML schema document. To see the results of setting the properties of the <xref:System.Xml.Serialization.SoapTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md). The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_18_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_18_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_18_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the namespace of the XML type.</summary>
        <value>The namespace of the XML type. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set a Namespace value for more than one type (that is, if you apply the attribute to more than one class with a different Namespace value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) generates a separate schema file (.xsd) for each type. This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_2_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_2_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_2_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the XML type.</summary>
        <value>The name of the XML type. The default is the class name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML Schema document. To see the results of setting the <xref:System.Xml.Serialization.SoapTypeAttribute> object's properties, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/add/includes/ajax-current-ext-md.md). The tool writes the schema, including the type definition.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the TypeName set to "SoapGroupType". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the TypeName to "Team". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  
  
 [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_14_1.cs)]
 [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_14_1.vb)]
 [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_14_1.cpp)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>