<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controls how the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; serializes an enumeration member.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SoapEnumAttribute class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document "Simple Object Access Protocol (SOAP) 1.1". For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.  
  
 Use the SoapEnumAttribute to change the enumeration that the <xref:System.Xml.Serialization.XmlSerializer> generates or recognizes (when it serializes or deserializes a class, respectively). For example, if an enumeration contains a member named `One`, but you prefer that the XML output be named `Single`, apply the SoapEnumAttribute to the enumeration member and set the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> property to "Single".  
  
 You can override the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> property value of a SoapEnumAttribute by creating an instance of the SoapEnumAttribute class and assigning it to the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. For details, see the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview.  
  
 To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.  
  
> [!NOTE]
>  You can use the word `SoapEnum` in your code instead of the longer SoapEnumAttribute.  
  
 For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a SoapEnumAttribute for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the SoapEnumAttribute. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_12_1.cs)]
 [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_12_1.cpp)]
 [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_12_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the SoapEnumAttribute to override an existing enumeration. Create a new <xref:System.Xml.Serialization.SoapEnumAttribute>, set its properties and assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. For each member of the enumeration, you must create a new <xref:System.Xml.Serialization.SoapAttributes> and add it to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. For more details, see the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview.  
  
> [!NOTE]
>  You can use the word `SoapEnum` in your code instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_7_1.cs)]
 [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_7_1.cpp)]
 [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_7_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The XML element name generated by the &lt;xref:System.Xml.Serialization.XmlSerializer&gt;.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class using the specified element name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specify the <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> when you want the generated XML enumerator to differ from the enumerator found in the enumeration.  
  
> [!NOTE]
>  You can use the word `SoapEnum` in your code instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_6_1.cs)]
 [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_6_1.cpp)]
 [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_6_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value generated in an XML document when the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.</summary>
        <value>The value generated in an XML document when the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specify the Name when you want the generated XML enumerator to differ from the enumerator found in the enumeration.  
  
> [!NOTE]
>  You can use the word `SoapEnum` instead of the longer <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_15_1.cs)]
 [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_15_1.cpp)]
 [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_15_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>