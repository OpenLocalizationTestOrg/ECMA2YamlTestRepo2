<Type Name="SoapIgnoreAttribute" FullName="System.Xml.Serialization.SoapIgnoreAttribute">
  <TypeSignature Language="C#" Value="public class SoapIgnoreAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapIgnoreAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Instructs the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; not to serialize the public field or public read/write property value.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SoapIgnoreAttribute class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1". For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/add/includes/ajax-current-ext-md.md).  
  
 To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.  
  
 Apply the SoapIgnoreAttribute to any class member that you want the <xref:System.Xml.Serialization.XmlSerializer> to ignore when an instance of the class is serialized. For example, you may do this when the member is used to contain metadata about the object being serialized.  
  
 For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
> [!NOTE]
>  You can use the word `SoapIgnore` in your code instead of the longer SoapIgnoreAttribute.  
  
   
  
## Examples  
 The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_16_1.cpp)]
 [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_16_1.vb)]
 [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_16_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapIgnoreAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_1_1.cpp)]
 [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_1_1.vb)]
 [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>