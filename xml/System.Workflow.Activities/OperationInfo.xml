<Type Name="OperationInfo" FullName="System.Workflow.Activities.OperationInfo">
  <TypeSignature Language="C#" Value="public sealed class OperationInfo : System.Workflow.Activities.OperationInfoBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationInfo extends System.Workflow.Activities.OperationInfoBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.OperationInfoBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the information for a contract operation defined in a workflow service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  
  
 The OperationInfo class is used to define service contract information for a <xref:System.Workflow.Activities.ReceiveActivity> activity.  
  
> [!NOTE]
>  The OperationInfo class can be used only with a workflow-first service. For more information about workflow-first services, see [Workflow Service Authoring Styles](http://msdn.microsoft.com/en-us/995bf98e-5b51-4c49-802b-c4e6293dd530).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.OperationInfo" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When activities are deserialized from Xoml, the constructors for the associated properties are called automatically.  
  
   
  
## Examples  
 The following example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.OperationInfo> class.  
  
 [!code-cs[OperationInfo#0](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#0)]
 [!code-vb[OperationInfo#0](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#0)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Workflow.Activities.OperationInfoBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Workflow.Activities.OperationInfoBase Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.OperationInfoBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of the object.</summary>
        <returns>The copy of the <see cref="T:System.Workflow.Activities.OperationInfo" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method creates a deep copy of the <xref:System.Workflow.Activities.OperationInfo> object, with the same <xref:System.Workflow.Activities.OperationInfo.ContractName%2A>, <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A>, <xref:System.Workflow.Activities.OperationInfo.Parameters%2A>, and <xref:System.Workflow.Activities.OperationInfo.ProtectionLevel%2A> values.  
  
   
  
## Examples  
 The following example demonstrates how to use the `Clone` method.  
  
 [!code-cs[OperationInfo#6](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#6)]
 [!code-vb[OperationInfo#6](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the full name of the contract that defines this operation.</summary>
        <value>A string that represents the full name of the contract that defines the operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to access the `ContractName` property.  
  
 [!code-cs[OperationInfo#1](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#1)]
 [!code-vb[OperationInfo#1](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current <see cref="T:System.Workflow.Activities.OperationInfo" />.</param>
        <summary>Determines whether two object instances are equal.</summary>
        <returns>
          <see langword="true" /> to indicate that the current <see cref="T:System.Workflow.Activities.OperationInfo" /> and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This operation compares the values of the <xref:System.Workflow.Activities.OperationInfo.ContractName%2A>, <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A>, <xref:System.Workflow.Activities.OperationInfo.Parameters%2A>, and <xref:System.Workflow.Activities.OperationInfo.ProtectionLevel%2A> values.  
  
   
  
## Examples  
 The following example demonstrates how to use the `Equals` method.  
  
 [!code-cs[OperationInfo#7](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#7)]
 [!code-vb[OperationInfo#7](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetContractFullName">
      <MemberSignature Language="C#" Value="protected override string GetContractFullName (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetContractFullName(class System.IServiceProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContractType">
      <MemberSignature Language="C#" Value="protected override Type GetContractType (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Type GetContractType(class System.IServiceProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code for the current <see cref="T:System.Workflow.Activities.OperationInfo" />.</summary>
        <returns>A hash code for this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the `GetHashCode` method.  
  
 [!code-cs[OperationInfo#8](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#8)]
 [!code-vb[OperationInfo#8](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetIsOneWay">
      <MemberSignature Language="C#" Value="protected override bool GetIsOneWay (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool GetIsOneWay(class System.IServiceProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfo">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodInfo (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodInfo(class System.IServiceProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="protected override System.Workflow.Activities.OperationParameterInfoCollection GetParameters (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.Activities.OperationParameterInfoCollection GetParameters(class System.IServiceProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.OperationParameterInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information on whether or not the operation has a defined <see cref="T:System.Net.Security.ProtectionLevel" />.</summary>
        <value>A Boolean value indicating whether or not the operation has a <see cref="T:System.Net.Security.ProtectionLevel" /> associated with it.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to access the `HasProtectionLevel` property.  
  
 [!code-cs[OperationInfo#2](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#2)]
 [!code-vb[OperationInfo#2](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsOneWay">
      <MemberSignature Language="C#" Value="public bool IsOneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets information on the operation to specify that communication between the service and a client is one-way.</summary>
        <value>
          <see langword="true" /> if the operation supports one-way communication; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is `false`.  
  
   
  
## Examples  
 The following example demonstrates how to access the `IsOneWay` property.  
  
 [!code-cs[OperationInfo#3](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#3)]
 [!code-vb[OperationInfo#3](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.OperationParameterInfoCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.OperationParameterInfoCollection Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.OperationParameterInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> objects that represents the parameter definitions used by the operation.</summary>
        <value>A collection of <see cref="T:System.Workflow.Activities.OperationParameterInfo" /> objects that represents the parameter definitions used by the operation when called by a client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `Parameters` collection will contain one element for each parameter in the method signature of the operation, plus one element for the return value of the operation.  
  
   
  
## Examples  
 The following example demonstrates how to access the `Parameters` property.  
  
 [!code-cs[OperationInfo#4](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#4)]
 [!code-vb[OperationInfo#4](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Net.Security.ProtectionLevel&gt; ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.Security.ProtectionLevel&gt; ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.Security.ProtectionLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> of an operation.</summary>
        <value>A <see cref="T:System.Net.Security.ProtectionLevel" /> object used by the operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is `null`, which means that the protection level is not set.  
  
   
  
## Examples  
 The following example demonstrates how to access the `ProtectionLevel` property.  
  
 [!code-cs[OperationInfo#5](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#5)]
 [!code-vb[OperationInfo#5](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a string that represents this instance.</summary>
        <returns>A string that represents this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns the <xref:System.Workflow.Activities.OperationInfo.ContractName%2A> value if extant; otherwise, it returns the <xref:System.Workflow.Activities.OperationInfoBase.Name%2A> value.  
  
   
  
## Examples  
 The following example demonstrates how to use the `ToString` method.  
  
 [!code-cs[OperationInfo#9](~/add/codesnippet/csharp/operationinfo/operationinfosnippets.cs#9)]
 [!code-vb[OperationInfo#9](~/add/codesnippet/visualbasic/operationinfo/operationinfosnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>