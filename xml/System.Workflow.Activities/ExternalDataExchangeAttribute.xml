<Type Name="ExternalDataExchangeAttribute" FullName="System.Workflow.Activities.ExternalDataExchangeAttribute">
  <TypeSignature Language="C#" Value="public sealed class ExternalDataExchangeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExternalDataExchangeAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Marks an interface as a local service interface. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  
  
 A class that implements a local service interface must be added to the <xref:System.Workflow.Activities.ExternalDataExchangeService> and can be used by <xref:System.Workflow.Activities.CallExternalMethodActivity> and <xref:System.Workflow.Activities.HandleExternalEventActivity>.  
  
 Events on interfaces that are attributed with ExternalDataExchangeAttribute should have event data that derive from <xref:System.Workflow.Activities.ExternalDataEventArgs>.  
  
 While generic types are supported for interface method and event declarations, generic types are not supported for the interface declaration itself. The following interface would not be valid for use as an `ExternalDataExchange`.  
  
```  
public interface IInterfaceName<TCommand>  
{   
    void MethodName(TCommand Request);  
}  
```  
  
   
  
## Examples  
 The following code example shows how to set the ExternalDataExchangeAttribute on an interface. This code example is part of the ActiveDirectoryRoles SDK sample from the IStartPurchaseOrder.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Active Directory Roles](http://msdn.microsoft.com/en-us/7b1708da-fd2a-47da-902b-3d50580ee781).  
  
 [!code-cs[wf_samples#285](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#285)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataExchangeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>