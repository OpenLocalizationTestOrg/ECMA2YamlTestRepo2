<Type Name="GeometryHitTestResult" FullName="System.Windows.Media.GeometryHitTestResult">
  <TypeSignature Language="C#" Value="public class GeometryHitTestResult : System.Windows.Media.HitTestResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GeometryHitTestResult extends System.Windows.Media.HitTestResult" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.HitTestResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Returns the results of a hit test that uses a <see cref="T:System.Windows.Media.Geometry" /> as a hit test parameter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can also perform a hit test on a visual object by using a <xref:System.Windows.Point> as a hit test parameter, and return the result as a <xref:System.Windows.Media.PointHitTestResult>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeometryHitTestResult (System.Windows.Media.Visual visualHit, System.Windows.Media.IntersectionDetail intersectionDetail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visualHit, valuetype System.Windows.Media.IntersectionDetail intersectionDetail) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visualHit" Type="System.Windows.Media.Visual" />
        <Parameter Name="intersectionDetail" Type="System.Windows.Media.IntersectionDetail" />
      </Parameters>
      <Docs>
        <param name="visualHit">The visual object that is hit during a hit test.</param>
        <param name="intersectionDetail">Describes the intersection between a <see cref="T:System.Windows.Media.Geometry" /> and `visualHit`.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryHitTestResult" /> class by using a specified visual object and <see cref="T:System.Windows.Media.IntersectionDetail" /> value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Media.GeometryHitTestResult> object and use it as a return value for an overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A>.  
  
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/add/codesnippet/visualbasic/hittestingoverview/geometryhittest.vb#hittestingoverviewsnippet13)]
 [!code-cs[HitTestingOverview#HitTestingOverviewSnippet13](~/add/codesnippet/csharp/HitTestingOverview/GeometryHitTest.cs#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IntersectionDetail">
      <MemberSignature Language="C#" Value="public System.Windows.Media.IntersectionDetail IntersectionDetail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.IntersectionDetail IntersectionDetail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Media.IntersectionDetail" /> value of the hit test.</summary>
        <value>The <see cref="T:System.Windows.Media.IntersectionDetail" /> value of the hit test.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IntersectionDetail property describes the intersection between a <xref:System.Windows.Media.Geometry> and the target visual object.  
  
 The following illustration shows the relationship between the hit test geometry (the blue circle) and the target object (the red square).  
  
 ![Diagram of IntersectionDetail used in hit testing](~/add/media/intersectiondetail01.png "Diagram of IntersectionDetail used in hit testing")  
The intersection between a hit test geometry and a target object  
  
   
  
## Examples  
 The following example shows how to use the IntersectionDetail property of <xref:System.Windows.Media.GeometryHitTestResult>.  
  
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet11](~/add/codesnippet/visualbasic/hittestingoverview/geometryhittest.vb#hittestingoverviewsnippet11)]
 [!code-cs[HitTestingOverview#HitTestingOverviewSnippet11](~/add/codesnippet/csharp/HitTestingOverview/GeometryHitTest.cs#hittestingoverviewsnippet11)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VisualHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual VisualHit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual VisualHit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the visual object that is returned from a hit test result.</summary>
        <value>A <see cref="T:System.Windows.Media.Visual" /> object that represents the hit test result.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to reference the value of the VisualHit property in a hit test callback procedure.  
  
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet11](~/add/codesnippet/visualbasic/hittestingoverview/geometryhittest.vb#hittestingoverviewsnippet11)]
 [!code-cs[HitTestingOverview#HitTestingOverviewSnippet11](~/add/codesnippet/csharp/HitTestingOverview/GeometryHitTest.cs#hittestingoverviewsnippet11)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>