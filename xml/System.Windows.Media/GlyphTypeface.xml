<Type Name="GlyphTypeface" FullName="System.Windows.Media.GlyphTypeface">
  <TypeSignature Language="C#" Value="public class GlyphTypeface : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlyphTypeface extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Specifies a physical font face that corresponds to a font file on the disk.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GlyphTypeface object is a low level text object that corresponds to a single face of a font family as represented by an OpenType font file, or serialized as a block of memory in a document. The correct GlyphTypeface to use for a run of characters in a given logical font is normally determined by the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] font system and recorded in the <xref:System.Windows.Media.GlyphRun> objects generated by the <xref:System.Windows.Media.FormattedText> object and line formatting text [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)].  
  
 The GlyphTypeface provides properties and methods for:  
  
-   Obtaining font face common metrics, such as the ratio of ascent and descent to em size.  
  
-   Obtaining metrics, outlines, and bitmaps for individual glyphs.  
  
-   Serialization in a document.  
  
 The following list describes the type of application scenarios that illustrate the value of using the low-level control that the GlyphTypeface object provides.  
  
-   A fixed format document generator may use the GlyphTypeface to obtain a binary image of the font for embedding in a document container  
  
-   A printer driver may use the GlyphTypeface to obtain font glyph outlines or bitmaps, or the entire font image for sending to the printer.  
  
-   A GlyphTypeface viewer application may use the GlyphTypeface to obtain metric and bitmap information.  
  
 Each glyph defines metrics that specify how it aligns with other <xref:System.Windows.Documents.Glyphs>. The following graphic defines metric values for glyph characters.  
  
 ![Diagraph of glyph measurements](~/add/media/glyph-example.png "Diagraph of glyph measurements")  
Metric values of glyph characters  
  
<a name="xamlTextUsage_GlyphTypeface"></a>   
## XAML Text Usage  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphTypeface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphTypeface" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphTypeface (Uri typefaceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri typefaceSource) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typefaceSource" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="typefaceSource">The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that specifies the location of the font file.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphTypeface" /> class using the specified font file location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a new <xref:System.Windows.Media.GlyphTypeface> object from an OpenType font face specified by `typefaceSource`. The constructed <xref:System.Windows.Media.GlyphTypeface> object does not use style simulations.  
  
   
  
## Examples  
 The following example shows how to create a new instance of the <xref:System.Windows.Media.GlyphTypeface> class by specifying a font file location.  
  
 [!code-vb[GlyphTypefaceSnippets#GlyphTypefaceSnippet1](~/add/codesnippet/visualbasic/glyphtypefacesnippets/window1.xaml.vb#glyphtypefacesnippet1)]
 [!code-cs[GlyphTypefaceSnippets#GlyphTypefaceSnippet1](~/add/codesnippet/csharp/GlyphTypefaceSnippets/Window1.xaml.cs#glyphtypefacesnippet1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphTypeface (Uri typefaceSource, System.Windows.Media.StyleSimulations styleSimulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri typefaceSource, valuetype System.Windows.Media.StyleSimulations styleSimulations) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typefaceSource" Type="System.Uri" />
        <Parameter Name="styleSimulations" Type="System.Windows.Media.StyleSimulations" />
      </Parameters>
      <Docs>
        <param name="typefaceSource">The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that specifies the location of the font file.</param>
        <param name="styleSimulations">One of the <see cref="T:System.Windows.Media.StyleSimulations" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphTypeface" /> class using the specified font file location and <see cref="T:System.Windows.Media.StyleSimulations" /> value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a new <xref:System.Windows.Media.GlyphTypeface> object from an OpenType font face specified by `typefaceSource` and `styleSimulations`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AdvanceHeights">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; AdvanceHeights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; AdvanceHeights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the advance heights for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key-value pairs that represents advance height information for the glyphs. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph index. The value is a &lt;xref:System.Double&gt; that represents the advance height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AdvanceHeights property is used for calculating vertical layout.  
  
   
  
## Examples  
 The following example shows how to return the collection of advance heights from the glyphs in the font.  
  
 [!code-vb[GlyphTypefaceSnippets#GlyphTypefaceSnippet2](~/add/codesnippet/visualbasic/glyphtypefacesnippets/window1.xaml.vb#glyphtypefacesnippet2)]
 [!code-cs[GlyphTypefaceSnippets#GlyphTypefaceSnippet2](~/add/codesnippet/csharp/GlyphTypefaceSnippets/Window1.xaml.cs#glyphtypefacesnippet2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AdvanceWidths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; AdvanceWidths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; AdvanceWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the advance widths for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represents advance width information for the glyphs. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph index. The value is a &lt;xref:System.Double&gt; that represents the advance width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.GlyphTypeface.AdvanceHeights%2A> property is used for calculating horizontal layout.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the baseline value for the <see cref="T:System.Windows.Media.GlyphTypeface" />.</summary>
        <value>A value of type &lt;xref:System.Double&gt; that represents the baseline.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The baseline value represents the distance from cell top to English baseline relative to em size.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BottomSideBearings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; BottomSideBearings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; BottomSideBearings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from bottom edge of the black box to the bottom end of the advance vector for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent distance information. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph. The value is a &lt;xref:System.Double&gt; that represents the distance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The BottomSideBearings value is positive when the bottom edge of the black box is within the alignment rectangle defined by the advance width and font cell height. The font cell height is a horizontal dimension in vertical layout.  
  
 The BottomSideBearings value is negative when the bottom edge of the black box overhangs the alignment rectangle.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CapsHeight">
      <MemberSignature Language="C#" Value="public double CapsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CapsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the baseline to the top of an English capital, relative to em size, for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>A &lt;xref:System.Double&gt; that indicates the distance from the baseline to the top of an English capital letter, expressed as a fraction of the font em size.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharacterToGlyphMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;int,ushort&gt; CharacterToGlyphMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;int32, unsigned int16&gt; CharacterToGlyphMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Int32,System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the nominal mapping of a Unicode code point to a glyph index as defined by the font 'CMAP' table.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains the mapping of a Unicode code points to glyph indices for all glyphs in the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ComputeSubset">
      <MemberSignature Language="C#" Value="public byte[] ComputeSubset (System.Collections.Generic.ICollection&lt;ushort&gt; glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeSubset(class System.Collections.Generic.ICollection`1&lt;unsigned int16&gt; glyphs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.Collections.Generic.ICollection&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="glyphs">The collection of glyph indices to be included in the subset.</param>
        <summary>Returns the binary image of the font subset based on a specified collection of glyphs.</summary>
        <returns>A &lt;xref:System.Byte&gt; array that represents the binary image of the font subset.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">for reading the contents of the specified <paramref name="glyphs" />. Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Copyrights">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; Copyrights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; Copyrights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the copyright information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent copyright information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a copyright information string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Copyrights property is separate from the trademark information that is access by the <xref:System.Windows.Media.GlyphTypeface.Trademarks%2A> property.  
  
   
  
## Examples  
 The following example shows how to return the collection of copyright information for the <xref:System.Windows.Media.GlyphTypeface> object.  
  
 [!code-vb[GlyphTypefaceSnippets#GlyphTypefaceSnippet3](~/add/codesnippet/visualbasic/glyphtypefacesnippets/window1.xaml.vb#glyphtypefacesnippet3)]
 [!code-cs[GlyphTypefaceSnippets#GlyphTypefaceSnippet3](~/add/codesnippet/csharp/GlyphTypefaceSnippets/Window1.xaml.cs#glyphtypefacesnippet3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Descriptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; Descriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; Descriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the description information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a description information string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The description information for a <xref:System.Windows.Media.GlyphTypeface> object can include revision notes, usage recommendations, history, features, as well as other information.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DesignerNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; DesignerNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; DesignerNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the designer information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent designer information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a designer information string.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DesignerUrls">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; DesignerUrls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; DesignerUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the designer URL information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent designer information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that references a designer URL.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DistancesFromHorizontalBaselineToBlackBoxBottom">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; DistancesFromHorizontalBaselineToBlackBoxBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; DistancesFromHorizontalBaselineToBlackBoxBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the offset value from the horizontal Western baseline to the bottom of the glyph black box for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent offsets for the glyphs. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph index. The value is a &lt;xref:System.Double&gt; that represents the offset value.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EmbeddingRights">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontEmbeddingRight EmbeddingRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.FontEmbeddingRight EmbeddingRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontEmbeddingRight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font embedding permission for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>One of the <see cref="T:System.Windows.Media.FontEmbeddingRight" /> values that represents the font embedding permission</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The &lt;xref:System.Object&gt; to compare with the current <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</param>
        <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <returns>
          <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.GlyphTypeface" /> and is equal to the current <see cref="T:System.Windows.Media.GlyphTypeface" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Two <xref:System.Windows.Media.GlyphTypeface> objects are considered equal if the <xref:System.Windows.Media.GlyphTypeface.StyleSimulations%2A> properties are equal.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FaceNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; FaceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; FaceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the face name for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent face name information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string containing the face name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the font file does not provide a name for the specified language, the FaceNames property returns the face name in English. The face name may identify weight, style, and/or stretch information.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the family name for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent family name information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string containing the family name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the font file does not provide a family name for the specified language, the FamilyNames property returns the family name in English. The family name excludes weight, style, and stretch information.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FontUri">
      <MemberSignature Language="C#" Value="public Uri FontUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri FontUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_FontUri"></a>   
## XAML Text Usage  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">for getting the original [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <see cref="T:System.Windows.Media.GlyphTypeface" />. The original [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] may reveal local file system information. Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFontStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetFontStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetFontStream() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the font file stream represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <returns>A &lt;xref:System.IO.Stream&gt; value that represents the font file.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetGlyphOutline">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry GetGlyphOutline (ushort glyphIndex, double renderingEmSize, double hintingEmSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry GetGlyphOutline(unsigned int16 glyphIndex, float64 renderingEmSize, float64 hintingEmSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.UInt16" />
        <Parameter Name="renderingEmSize" Type="System.Double" />
        <Parameter Name="hintingEmSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">The index of the glyph to get the outline for.</param>
        <param name="renderingEmSize">The font size in drawing surface units.</param>
        <param name="hintingEmSize">The size to hint for in points.</param>
        <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> value describing the path for a single glyph in the font.</summary>
        <returns>A <see cref="T:System.Windows.Media.Geometry" /> value that represents the path of the glyph.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The path represents the glyph without grid fitting applied for rendering at a specific resolution.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for <see cref="T:System.Windows.Media.GlyphTypeface" />.</summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GlyphCount">
      <MemberSignature Language="C#" Value="public int GlyphCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GlyphCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of glyphs for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>The total number of glyphs.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the character cell relative to the em size.</summary>
        <value>An &lt;xref:System.Double&gt; value that represents the height of the character cell.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LeftSideBearings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; LeftSideBearings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; LeftSideBearings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the leading end of the advance vector to the left edge of the black box for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent distance information for the glyphs. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph index. The value is a &lt;xref:System.Double&gt; that represents the distance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LeftSideBearings value is positive when the left edge of the black box is within the alignment rectangle defined by the advance width and font cell height.  
  
 The LeftSideBearings value is negative when the left edge of the black box overhangs the alignment rectangle.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LicenseDescriptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; LicenseDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; LicenseDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font license description information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs font license information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that describes the font license information.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ManufacturerNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; ManufacturerNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; ManufacturerNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font manufacturer information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs for the font manufacturer information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that describes the font manufacturer information.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RightSideBearings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; RightSideBearings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; RightSideBearings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the right edge of the black box to the right end of the advance vector for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent distance information. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph index. The value is a &lt;xref:System.Double&gt; that represents the distance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RightSideBearings value is positive when the trailing edge of the black box is within the alignment rectangle defined by the advance width and font cell height.  
  
 The RightSideBearings value is negative when the right edge of the black box overhangs the alignment rectangle.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SampleTexts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; SampleTexts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; SampleTexts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the sample text information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs sample text information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that describes the sample text information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SampleTexts value can be the font name, or any other text that the designer thinks is the best sample to display the font in.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch Stretch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.FontStretch" /> value for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>A <see cref="T:System.Windows.FontStretch" /> value that represents the font stretch.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StrikethroughPosition">
      <MemberSignature Language="C#" Value="public double StrikethroughPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StrikethroughPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.</summary>
        <value>A &lt;xref:System.Double&gt; that represents the strikethrough position.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The strikethrough position value is usually positive because the strikethrough is generally above the baseline.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StrikethroughThickness">
      <MemberSignature Language="C#" Value="public double StrikethroughThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StrikethroughThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the thickness of the strikethrough relative to the font em size.</summary>
        <value>A &lt;xref:System.Double&gt; that indicates the strikethrough thickness, expressed as a fraction of the font em size.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the style for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>A <see cref="T:System.Windows.FontStyle" /> value that represents the style value.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StyleSimulations">
      <MemberSignature Language="C#" Value="public System.Windows.Media.StyleSimulations StyleSimulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.StyleSimulations StyleSimulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.StyleSimulations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Media.StyleSimulations" /> for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>One of the <see cref="T:System.Windows.Media.StyleSimulations" /> values that represents the style simulation for the font.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_StyleSimulations"></a>   
## XAML Text Usage  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Symbol">
      <MemberSignature Language="C#" Value="public bool Symbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Symbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.GlyphTypeface" /> font conforms to Unicode encoding.</summary>
        <value>
          <see langword="true" /> if the font conforms to Unicode encoding; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The font may be considered as a simple collection of symbols indexed by a code point.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.ComponentModel.ISupportInitialize.BeginInit%2A?displayProperty=fullName&gt;.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.ComponentModel.ISupportInitialize.EndInit%2A?displayProperty=fullName&gt;.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TopSideBearings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;ushort,double&gt; TopSideBearings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;unsigned int16, float64&gt; TopSideBearings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.UInt16,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the top end of the vertical advance vector to the top edge of the black box for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent distance information. The key is a &lt;xref:System.UInt16&gt; that identifies the glyph index. The value is a &lt;xref:System.Double&gt; that represents the distance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TopSideBearings value is positive when the top edge of the black box is within the alignment rectangle defined by the advance height and font cell height. The font cell height is a horizontal dimension in vertical layout.  
  
 The TopSideBearings value is negative when the top edge of the black box overhangs the alignment rectangle.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Trademarks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; Trademarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; Trademarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the trademark notice information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent trademark notice information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that the trademark notice information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Trademarks property is separate from the copyright information that is access by the <xref:System.Windows.Media.GlyphTypeface.Copyrights%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UnderlinePosition">
      <MemberSignature Language="C#" Value="public double UnderlinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UnderlinePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the position of the underline in the <see cref="T:System.Windows.Media.GlyphTypeface" />.</summary>
        <value>A &lt;xref:System.Double&gt; value that represents the position of the underline.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The underline position is relative to the baseline and relative to the em size. The returned position value is usually negative because an underline is usually below the baseline.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UnderlineThickness">
      <MemberSignature Language="C#" Value="public double UnderlineThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UnderlineThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the thickness of the underline relative to em size.</summary>
        <value>A value of type &lt;xref:System.Double&gt;.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VendorUrls">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; VendorUrls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; VendorUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the vendor URL information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent vendor URL information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that references a vendor URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A font vendor could embed a unique serial number in the URL, which could then be used to register the font.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public double Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font face version interpreted from the font's 'NAME' table.</summary>
        <value>A &lt;xref:System.Double&gt; value that represents the version.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VersionStrings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; VersionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; VersionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version string information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object interpreted from the font's 'NAME' table.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent version string information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that represents the version.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Version strings vary significantly in format. To obtain the version as a numeric value, use the <xref:System.Windows.Media.GlyphTypeface.Version%2A>—do not attempt to parse the value of the VersionStrings property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight Weight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the designed weight of the font represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>A value of type <see cref="T:System.Windows.FontWeight" /> that represents the font weight.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Win32FaceNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; Win32FaceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; Win32FaceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Win32 face name for the font represented by the  <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent Win32 face name information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that represents the Win32 face name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the font does not provide a name for the specified language, it returns the face name in English. The Win32 face name may identify weights (other than regular or bold), and/or style, but may not identify stretch or other weights.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Win32FamilyNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,string&gt; Win32FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class System.Globalization.CultureInfo, string&gt; Win32FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Globalization.CultureInfo,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Win32 family name for the font represented by the  <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>An &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains key/value pairs that represent Win32 family name information. The key is a &lt;xref:System.Globalization.CultureInfo&gt; object that identifies the culture. The value is a string that represents the Win32 family name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the font does not provide a family name for the specified language, the Win32FamilyNames property returns the family name in English. The Win32 family name excludes regular or bold weights and style, but it includes other weights and stretch.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="XHeight">
      <MemberSignature Language="C#" Value="public double XHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Western x-height relative to em size for the font represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
        <value>A value of type &lt;xref:System.Double&gt;.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>