<Type Name="MultipleViewPattern" FullName="System.Windows.Automation.MultipleViewPattern">
  <TypeSignature Language="C#" Value="public class MultipleViewPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultipleViewPattern extends System.Windows.Automation.BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents controls that provide, and are able to switch between, multiple representations of the same set of information or child controls.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Examples of controls that can present multiple views include the list view (which can show its contents as thumbnails, tiles, icons, or details), [!INCLUDE[TLA#tla_xl](~/add/includes/tlasharptla-xl-md.md)] charts (pie, line, bar, cell value with a formula), [!INCLUDE[TLA#tla_word](~/add/includes/tlasharptla-word-md.md)] documents (normal, Web layout, print layout, reading layout, outline), [!INCLUDE[TLA#tla_outlook](~/add/includes/tlasharptla-outlook-md.md)] calendar (year, month, week, day) and [!INCLUDE[TLA#tla_wmp](~/add/includes/ajax-current-ext-md.md)] skins. The supported views are determined by the control developer and are specific to each control.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.MultipleViewPattern/MultipleViewPatternInformation Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.MultipleViewPattern+MultipleViewPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cached [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for this <see cref="T:System.Windows.Automation.MultipleViewPattern" />.</summary>
        <value>A structure containing the cached [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for the control pattern.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cached property values must have been previously requested using a <xref:System.Windows.Automation.CacheRequest>. Use <xref:System.Windows.Automation.MultipleViewPattern.Current%2A> to get the current value of a property.  
  
 For information on the properties available and their use, see <xref:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The requested property is not in the cache.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.MultipleViewPattern/MultipleViewPatternInformation Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.MultipleViewPattern+MultipleViewPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for this <see cref="T:System.Windows.Automation.MultipleViewPattern" />.</summary>
        <value>A structure containing the current [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] property values for the control pattern.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This pattern must be from an <xref:System.Windows.Automation.AutomationElement> with an <xref:System.Windows.Automation.AutomationElementMode> reference in order to get current values. If the <xref:System.Windows.Automation.AutomationElement> was obtained using <xref:System.Windows.Automation.AutomationElementMode>, it contains only cached data, and attempting to get the current value of any property raises an exception. Use <xref:System.Windows.Automation.MultipleViewPattern.Cached%2A> to get the cached value of a property that was previously specified using a <xref:System.Windows.Automation.CacheRequest>.  
  
 For information on the properties available and their use, see <xref:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CurrentViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CurrentViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CurrentViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView%2A&gt; property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This identifier is used by UI automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.MultipleViewPatternIdentifiers>.  
  
   
  
## Examples  
 In the following example, an integer is obtained that represents the current view for a control that supports <xref:System.Windows.Automation.MultipleViewPattern>.  
  
 [!code-cs[UIAMultipleViewPattern_snip#100](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#100)]
 [!code-vb[UIAMultipleViewPattern_snip#100](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#100)]  
[!code-cs[UIAMultipleViewPattern_snip#103](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#103)]
[!code-vb[UIAMultipleViewPattern_snip#103](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetViewName">
      <MemberSignature Language="C#" Value="public string GetViewName (int viewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetViewName(int32 viewId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The control-specific view identifier.</param>
        <summary>Retrieves the name of a control-specific view.</summary>
        <returns>A localized string representing the control-specific view name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 View identifiers can be retrieved by using <xref:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.GetSupportedViews%2A>.  
  
 The control-specific collection of view identifiers is identical across instances.  
  
 View names are suitable for use in Text to Speech, Braille, and other accessible applications.  
  
   
  
## Examples  
 In the following example, the control-specific name of the current view is retrieved from a control that supports <xref:System.Windows.Automation.MultipleViewPattern>.  
  
 [!code-cs[UIAMultipleViewPattern_snip#105](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#105)]
 [!code-vb[UIAMultipleViewPattern_snip#105](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewId" /> is not a member of the supported views collection.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="T:System.Windows.Automation.MultipleViewPattern" /> control pattern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.MultipleViewPatternIdentifiers>.  
  
 The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.  
  
   
  
## Examples  
 In the following example, a <xref:System.Windows.Automation.MultipleViewPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-cs[UIAMultipleViewPattern_snip#101](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#101)]
 [!code-vb[UIAMultipleViewPattern_snip#101](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentView">
      <MemberSignature Language="C#" Value="public void SetCurrentView (int viewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCurrentView(int32 viewId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">A control-specific view identifier.</param>
        <summary>Sets the current control-specific view.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 View identifiers can be retrieved by using <xref:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.GetSupportedViews%2A>.  
  
 The control-specific collection of view identifiers is identical across instances.  
  
   
  
## Examples  
 In the following example, the collection of views available for a control that supports the <xref:System.Windows.Automation.MultipleViewPattern>control pattern is retrieved. A member of the view identifiers collection is subsequently used to modify the current view of the control.  
  
 [!code-cs[UIAMultipleViewPattern_snip#104](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#104)]
 [!code-vb[UIAMultipleViewPattern_snip#104](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewId" /> is not a member of the supported views collection.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportedViewsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty SupportedViewsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty SupportedViewsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that gets the control-specific collection of views.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This identifier is used by UI automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.MultipleViewPatternIdentifiers>.  
  
 This property is not present in <xref:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation> and must be retrieved by using <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> or <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 In the following example, a collection of integer identifiers is obtained that represents the current views available for a control that supports <xref:System.Windows.Automation.MultipleViewPattern>.  
  
 [!code-cs[UIAMultipleViewPattern_snip#100](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#100)]
 [!code-vb[UIAMultipleViewPattern_snip#100](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#100)]  
[!code-cs[UIAMultipleViewPattern_snip#102](~/add/codesnippet/csharp/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.cs#102)]
[!code-vb[UIAMultipleViewPattern_snip#102](~/add/codesnippet/visualbasic/UIAMultipleViewPattern_snip/UIAMultipleViewPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>