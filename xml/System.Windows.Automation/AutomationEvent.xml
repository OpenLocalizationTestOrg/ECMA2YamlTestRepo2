<Type Name="AutomationEvent" FullName="System.Windows.Automation.AutomationEvent">
  <TypeSignature Language="C#" Value="public class AutomationEvent : System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationEvent extends System.Windows.Automation.AutomationIdentifier" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.AutomationIdentifier</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifies a [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identifiers of these types are found as fields in various classes to identify events; for example, <xref:System.Windows.Automation.InvokePattern.InvokedEvent>. They are also found in the event arguments passed to UI Automation clients.  
  
 It is not possible to create custom events.  
  
   
  
## Examples  
 In the following example event handler, the AutomationEvent in the event arguments is compared with the AutomationEvent that identifies the Invoked event.  
  
 [!code-vb[UIAClient_snip#173](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#173)]
 [!code-cs[UIAClient_snip#173](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#173)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="LookupById">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationEvent LookupById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationEvent LookupById(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Identifier of the event.</param>
        <summary>Retrieves an <see cref="T:System.Windows.Automation.AutomationEvent" /> that encapsulates the specified numerical identifier.</summary>
        <returns>An <see cref="T:System.Windows.Automation.AutomationEvent" /> that encapsulates the specified numerical identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normally, events are identified by an <xref:System.Windows.Automation.AutomationEvent> object. This method can be used by UI Automation providers to create such an object when only the numerical identifier (the <xref:System.Windows.Automation.AutomationIdentifier.Id%2A> inherited from <xref:System.Windows.Automation.AutomationIdentifier>) is known.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>