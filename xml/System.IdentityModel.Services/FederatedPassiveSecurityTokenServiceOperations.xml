<Type Name="FederatedPassiveSecurityTokenServiceOperations" FullName="System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations">
  <TypeSignature Language="C#" Value="public static class FederatedPassiveSecurityTokenServiceOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederatedPassiveSecurityTokenServiceOperations extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A utility class that encapsulates the operations typically performed by a Federated Passive Security Token Service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When implementing a passive security token service (STS), call the static methods exposed by this class from your code-behind to invoke an instance of your custom STS to process an incoming WS-Federation request message. You implement a custom STS by deriving from the <xref:System.IdentityModel.SecurityTokenService> class.  
  
   
  
## Examples  
 The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT), and it includes an implementation of a passive STS that is capable of serving an SWT token. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29> method from the code behind in the `default.aspx.cs` file.  
  
 [!code-cs[WIFCustomTokenSTS#1](~/add/codesnippet/csharp/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public static void ProcessRequest (System.Web.HttpRequest request, System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.SecurityTokenService sts, System.Web.HttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProcessRequest(class System.Web.HttpRequest request, class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.SecurityTokenService sts, class System.Web.HttpResponse response) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequest" />
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="sts" Type="System.IdentityModel.SecurityTokenService" />
        <Parameter Name="response" Type="System.Web.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="request">The incoming HTTP request.</param>
        <param name="principal">The principal associated with this request.</param>
        <param name="sts">The security token service (STS) to use to issue tokens.</param>
        <param name="response">The outgoing HTTP response.</param>
        <summary>Processes an incoming WS-Federation Passive Protocol request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT), and it includes an implementation of a passive STS that is capable of serving an SWT token. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the ProcessRequest method from the code behind in the `default.aspx.cs` file.  
  
 [!code-cs[WIFCustomTokenSTS#1](~/add/codesnippet/csharp/passivests/default.aspx.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="principal" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="sts" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="response" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public static void ProcessRequest (System.Web.HttpRequest request, System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.SecurityTokenService sts, System.Web.HttpResponse response, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProcessRequest(class System.Web.HttpRequest request, class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.SecurityTokenService sts, class System.Web.HttpResponse response, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequest" />
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="sts" Type="System.IdentityModel.SecurityTokenService" />
        <Parameter Name="response" Type="System.Web.HttpResponse" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="request">The incoming HTTP request.</param>
        <param name="principal">The principal associated with this request.</param>
        <param name="sts">The security token service (STS) to use to issue tokens.</param>
        <param name="response">The outgoing HTTP response.</param>
        <param name="federationSerializer">The serializer to use for handling WS-Federation Passive Protocol messages.</param>
        <summary>Processes an incoming WS-Federation Passive Protocol request by using the specified WS-Federation serializer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="principal" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="sts" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="response" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessSignInRequest">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.SignInResponseMessage ProcessSignInRequest (System.IdentityModel.Services.SignInRequestMessage requestMessage, System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.SecurityTokenService sts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.SignInResponseMessage ProcessSignInRequest(class System.IdentityModel.Services.SignInRequestMessage requestMessage, class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.SecurityTokenService sts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.IdentityModel.Services.SignInRequestMessage" />
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="sts" Type="System.IdentityModel.SecurityTokenService" />
      </Parameters>
      <Docs>
        <param name="requestMessage">The incoming sign-in request message.</param>
        <param name="principal">The principal associated with the request.</param>
        <param name="sts">The security token service (STS) to use to issue tokens.</param>
        <summary>Processes an incoming WS-Federation Passive Protocol SignIn request.</summary>
        <returns>The sign-in response message that results from handling the request.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestMessage" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="principal" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="sts" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessSignInRequest">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.SignInResponseMessage ProcessSignInRequest (System.IdentityModel.Services.SignInRequestMessage requestMessage, System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.SecurityTokenService sts, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.SignInResponseMessage ProcessSignInRequest(class System.IdentityModel.Services.SignInRequestMessage requestMessage, class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.SecurityTokenService sts, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.IdentityModel.Services.SignInRequestMessage" />
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="sts" Type="System.IdentityModel.SecurityTokenService" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="requestMessage">The incoming sign-in request message.</param>
        <param name="principal">The principal associated with the request.</param>
        <param name="sts">The security token service (STS) to use to issue tokens.</param>
        <param name="federationSerializer">The serializer to use for handling WS-Federation Passive Protocol messages.</param>
        <summary>Processes an incoming WS-Federation Passive Protocol SignIn request by using the specified WS-Federation serializer.</summary>
        <returns>The sign-in response message that results from handling the request.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestMessage" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="principal" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="sts" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessSignInResponse">
      <MemberSignature Language="C#" Value="public static void ProcessSignInResponse (System.IdentityModel.Services.SignInResponseMessage signInResponseMessage, System.Web.HttpResponse httpResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProcessSignInResponse(class System.IdentityModel.Services.SignInResponseMessage signInResponseMessage, class System.Web.HttpResponse httpResponse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signInResponseMessage" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="httpResponse" Type="System.Web.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="signInResponseMessage">The sign-in response message to be processed.</param>
        <param name="httpResponse">The outgoing HTTP response.</param>
        <summary>Processes a sign-in response message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This typical usage of this method is to process the <xref:System.IdentityModel.Services.SignInResponseMessage> returned from one of the overloaded <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signInResponseMessage" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="httpResponse" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessSignOutRequest">
      <MemberSignature Language="C#" Value="public static void ProcessSignOutRequest (System.IdentityModel.Services.FederationMessage requestMessage, System.Security.Claims.ClaimsPrincipal principal, string reply, System.Web.HttpResponse httpResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProcessSignOutRequest(class System.IdentityModel.Services.FederationMessage requestMessage, class System.Security.Claims.ClaimsPrincipal principal, string reply, class System.Web.HttpResponse httpResponse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.IdentityModel.Services.FederationMessage" />
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="reply" Type="System.String" />
        <Parameter Name="httpResponse" Type="System.Web.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="requestMessage">The incoming WS-Federation message representing a sign-out request. By default, this must be an instance of <see cref="T:System.IdentityModel.Services.SignOutRequestMessage" /> or <see cref="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />.</param>
        <param name="principal">The principal associated with the request.</param>
        <param name="reply">The reply URL to be redirected to after sign-out.</param>
        <param name="httpResponse">The outgoing HTTP response.</param>
        <summary>Processes an incoming WS-Federation Passive Protocol SignOut request.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="httpRequest" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="principal" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="httpResponse" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="httpRequest" /> is not an instance of <see cref="T:System.IdentityModel.Services.SignOutRequestMessage" /> or of <see cref="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>