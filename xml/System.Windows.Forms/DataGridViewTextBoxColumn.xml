<Type Name="DataGridViewTextBoxColumn" FullName="System.Windows.Forms.DataGridViewTextBoxColumn">
  <TypeSignature Language="C#" Value="public class DataGridViewTextBoxColumn : System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewTextBoxColumn extends System.Windows.Forms.DataGridViewColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewTextBoxColumn), "DataGridViewTextBoxColumn.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hosts a collection of <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" /> cells.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DataGridViewTextBoxColumn class is a specialized type of <xref:System.Windows.Forms.DataGridViewColumn> class used to logically host cells that enable displaying and editing of text strings. A DataGridViewTextBoxColumn has an associated <xref:System.Windows.Forms.DataGridViewTextBoxCell> object in every <xref:System.Windows.Forms.DataGridViewRow> that intersects it. When a <xref:System.Windows.Forms.DataGridViewTextBoxCell> becomes activated, it supplies a <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl> control to handle user input.  
  
 The sort mode for this column type defaults to <xref:System.Windows.Forms.DataGridViewColumnSortMode>.  
  
   
  
## Examples  
 The following code example illustrates the use of this type.  
  
 [!code-cs[System.Windows.Forms.DataGridViewSizingScenarios#20](~/add/codesnippet/csharp/t-system.windows.forms.d_111_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewSizingScenarios#20](~/add/codesnippet/visualbasic/t-system.windows.forms.d_111_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewTextBoxColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewTextBoxColumn" /> class to the default state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor initializes the column by setting the following properties.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Windows.Forms.DataGridViewTextBoxColumn.CellTemplate%2A>|A newly created <xref:System.Windows.Forms.DataGridViewTextBoxCell>.|  
|<xref:System.Windows.Forms.DataGridViewTextBoxColumn.SortMode%2A>|<xref:System.Windows.Forms.DataGridViewColumnSortMode>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template used to model cell appearance.</summary>
        <value>A <see cref="T:System.Windows.Forms.DataGridViewCell" /> that all other cells in the column are modeled after.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The constructor for the <xref:System.Windows.Forms.DataGridViewTextBoxColumn> class initializes this property to a newly created <xref:System.Windows.Forms.DataGridViewTextBoxCell>.  
  
> [!CAUTION]
>  Changing the properties of the cell template will not immediately affect the user interface (UI) of the column's existing cells. These changes are only apparent after the column is regenerated (for example, by sorting the column or through a call to the <xref:System.Windows.Forms.DataGridView.InvalidateColumn%2A?displayProperty=fullName> method).  
  
   
  
## Examples  
 The following code example demonstrates the use of the <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A?displayProperty=fullName> property, which is similar to this property. This example is part of a larger example available in [How to: Manipulate Columns in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/add/codesnippet/cpp/p-system.windows.forms.d_148_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/add/codesnippet/visualbasic/p-system.windows.forms.d_148_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#120](~/add/codesnippet/csharp/p-system.windows.forms.d_148_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The set type is not compatible with type <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxInputLength">
      <MemberSignature Language="C#" Value="public int MaxInputLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInputLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of characters that can be entered into the text box.</summary>
        <value>The maximum number of characters that can be entered into the text box; the default value is 32767.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MaxInputLength property does not affect the length of text entered programmatically through the cell's value or through cell formatting. It affects only what the user can input and edit.  
  
 Getting or setting this property gets or sets the <xref:System.Windows.Forms.DataGridViewTextBoxCell.MaxInputLength%2A> property of the object returned by the <xref:System.Windows.Forms.DataGridViewTextBoxColumn.CellTemplate%2A> property. Setting this property also sets the <xref:System.Windows.Forms.DataGridViewTextBoxCell.MaxInputLength%2A> property of every cell in the column. To override the specified value for individual cells, set the cell values after you set the column value.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the &lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn.CellTemplate%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SortMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnSortMode SortMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewColumnSortMode SortMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnSortMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the sort mode for the column.</summary>
        <value>A <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" /> that specifies the criteria used to order the rows based on the cell values in a column.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When a <xref:System.Windows.Forms.DataGridView> control is sorted using a column with a SortMode property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>, a sorting glyph is automatically displayed in the column header.  
  
 When the control is sorted using a column with a SortMode property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>, you must display the sorting glyph yourself through the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A> property.  
  
 The default sort mode of a <xref:System.Windows.Forms.DataGridViewTextBoxColumn> is <xref:System.Windows.Forms.DataGridViewColumnSortMode>. The default sort mode for other column types is <xref:System.Windows.Forms.DataGridViewColumnSortMode>.  
  
 The SortMode value does not prevent you from sorting a column programmatically, although other restrictions may apply. For more information, see the <xref:System.Windows.Forms.DataGridView.Sort%2A> method.  
  
 A SortMode property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode> will not prevent the <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick?displayProperty=fullName> event from occurring, but it will prevent the header from changing its appearance when it is clicked.  
  
   
  
## Examples  
 The following code example illustrates the use of this property.  
  
 [!code-cs[System.Windows.Forms.DataGridViewMisc#066](~/add/codesnippet/csharp/p-system.windows.forms.d_266_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#066](~/add/codesnippet/visualbasic/p-system.windows.forms.d_266_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a string that describes the column.</summary>
        <returns>A &lt;xref:System.String&gt; that describes the column.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>