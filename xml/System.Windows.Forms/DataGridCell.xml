<Type Name="DataGridCell" FullName="System.Windows.Forms.DataGridCell">
  <TypeSignature Language="C#" Value="public struct DataGridCell" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DataGridCell extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifies a cell in the grid.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DataGridCell can be used in conjunction with the <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control's <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> property to get or set the value of any cell. Setting the <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control's <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> property to a DataGridCell causes the focus to move to the cell specified by the DataGridCell.  
  
   
  
## Examples  
 The following example assigns the DataGridCell to the <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> of a <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> and returns the column and row number of the selected cell. The value stored in the <xref:System.Data.DataTable> is also printed using the DataGridCell object's <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> and <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A>.  
  
 [!code-cs[Classic DataGridCell Example#1](~/add/codesnippet/csharp/t-system.windows.forms.d_101_1.cs)]
 [!code-cpp[Classic DataGridCell Example#1](~/add/codesnippet/cpp/t-system.windows.forms.d_101_1.cpp)]
 [!code-vb[Classic DataGridCell Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_101_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridCell (int r, int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 r, int32 c) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="r">The number of a row in the <see cref="T:System.Windows.Forms.DataGrid" />.</param>
        <param name="c">The number of a column in the <see cref="T:System.Windows.Forms.DataGrid" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridCell" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:System.Windows.Forms.DataGridCell> and sets the new instance to the <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> of a <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control.  
  
 [!code-cs[Classic DataGridCell.DataGridCell Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_11_1.cs)]
 [!code-cpp[Classic DataGridCell.DataGridCell Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_11_1.cpp)]
 [!code-vb[Classic DataGridCell.DataGridCell Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_11_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ColumnNumber">
      <MemberSignature Language="C#" Value="public int ColumnNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of a column in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
        <value>The number of the column.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the ColumnNumber value to specify a <xref:System.Data.DataColumn> in the <xref:System.Data.DataTable> associated with the <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control.  
  
   
  
## Examples  
 The following example assigns the <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> property of a <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> to a <xref:System.Windows.Forms.DataGridCell>. The value stored in the <xref:System.Data.DataTable> is returned by specifying <xref:System.Data.DataRow> and <xref:System.Data.DataColumn> objects through the <xref:System.Windows.Forms.DataGridCell.RowNumber%2A> and ColumnNumber properties.  
  
 [!code-cpp[Classic DataGridCell.ColumnNumber Example#1](~/add/codesnippet/cpp/p-system.windows.forms.d_232_1.cpp)]
 [!code-cs[Classic DataGridCell.ColumnNumber Example#1](~/add/codesnippet/csharp/p-system.windows.forms.d_232_1.cs)]
 [!code-vb[Classic DataGridCell.ColumnNumber Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_232_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">An object you are to comparing.</param>
        <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.DataGridCell" /> is identical to a second <see cref="T:System.Windows.Forms.DataGridCell" />.</summary>
        <returns>
          <see langword="true" /> if the second object is identical to the first; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example compares two <xref:System.Windows.Forms.DataGridCell> objects.  
  
 [!code-vb[Classic DataGridCell.Equals Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_39_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a hash value that can be added to a <see cref="T:System.Collections.Hashtable" />.</summary>
        <returns>A number that uniquely identifies the <see cref="T:System.Windows.Forms.DataGridCell" /> in a <see cref="T:System.Collections.Hashtable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example adds the hash value of the selected cell in a <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control to a <xref:System.Collections.Hashtable>.  
  
 [!code-cs[Classic DataGridCell.GetHashCode Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_25_1.cs)]
 [!code-cpp[Classic DataGridCell.GetHashCode Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_25_1.cpp)]
 [!code-vb[Classic DataGridCell.GetHashCode Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_25_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RowNumber">
      <MemberSignature Language="C#" Value="public int RowNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of a row in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
        <value>The number of the row.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the RowNumber value to specify a <xref:System.Data.DataRow> in the <xref:System.Data.DataTable> associated with the <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control.  
  
   
  
## Examples  
 The following example assigns the <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> property of a <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> to a <xref:System.Windows.Forms.DataGridCell> and returns the value stored in the <xref:System.Data.DataTable> object's RowNumber and <xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A> properties.  
  
 [!code-cpp[Classic DataGridCell.ColumnNumber Example#1](~/add/codesnippet/cpp/p-system.windows.forms.d_308_1.cpp)]
 [!code-cs[Classic DataGridCell.ColumnNumber Example#1](~/add/codesnippet/csharp/p-system.windows.forms.d_308_1.cs)]
 [!code-vb[Classic DataGridCell.ColumnNumber Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_308_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the row number and column number of the cell.</summary>
        <returns>A string containing the row number and column number.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example returns the row number of the <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control's <xref:System.Windows.Forms.DataGrid.CurrentCell%2A> using the <xref:System.Windows.Forms.DataGridCell> object's ToString method.  
  
 [!code-cpp[Classic DataGridCell.ToString Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_105_1.cpp)]
 [!code-vb[Classic DataGridCell.ToString Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_105_1.vb)]
 [!code-cs[Classic DataGridCell.ToString Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_105_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>