<Type Name="RadioButtonRenderer" FullName="System.Windows.Forms.RadioButtonRenderer">
  <TypeSignature Language="C#" Value="public sealed class RadioButtonRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RadioButtonRenderer extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides methods used to render an option button control (also known as a radio button) with or without visual styles. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RadioButtonRenderer class provides a set of `static` methods that can be used to render an option button control. Rendering a control refers to drawing the user interface of a control. To draw an option button, use one of the <xref:System.Windows.Forms.RadioButtonRenderer.DrawRadioButton%2A> methods. These methods provide a variety of options, such as drawing text or an image with the option button.  
  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, <xref:System.Windows.Forms.RadioButtonRenderer.DrawRadioButton%2A> will draw the option button with the current visual style. Otherwise, <xref:System.Windows.Forms.RadioButtonRenderer.DrawRadioButton%2A> will draw the option button with the classic Windows style. This is useful if you are drawing a custom control that should automatically match the current visual style setting of the operating system.  
  
 This class wraps the functionality of a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer?displayProperty=fullName> that is set to one of the elements exposed by the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton?displayProperty=fullName> class. For more information, see [Rendering Controls with Visual Styles](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates how to write a custom control that uses the <xref:System.Windows.Forms.RadioButtonRenderer.DrawRadioButton%2A> method to draw an option button that responds to mouse clicks.  
  
 [!code-vb[System.Windows.Forms.RadioButtonRenderer#0](~/add/codesnippet/visualbasic/t-system.windows.forms.r_6_1.vb)]
 [!code-cpp[System.Windows.Forms.RadioButtonRenderer#0](~/add/codesnippet/cpp/t-system.windows.forms.r_6_1.cpp)]
 [!code-cs[System.Windows.Forms.RadioButtonRenderer#0](~/add/codesnippet/csharp/t-system.windows.forms.r_6_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public static void DrawParentBackground (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawParentBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the background of the parent of `childControl`.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the parent control's background. This rectangle should be inside the child controlâ€™s bounds.</param>
        <param name="childControl">The control whose parent's background will be drawn.</param>
        <summary>Draws the background of a control's parent in the specified area.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the option button (also known as a radio button) with the current visual style. Otherwise, this method will draw the option button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics g, System.Drawing.Point glyphLocation, System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics g, valuetype System.Drawing.Point glyphLocation, valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="glyphLocation" Type="System.Drawing.Point" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the option button.</param>
        <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the option button glyph at.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Draws an option button control (also known as a radio button) in the specified state and location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the option button with the current visual style. Otherwise, this method will draw the option button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics g, System.Drawing.Point glyphLocation, System.Drawing.Rectangle textBounds, string radioButtonText, System.Drawing.Font font, bool focused, System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics g, valuetype System.Drawing.Point glyphLocation, valuetype System.Drawing.Rectangle textBounds, string radioButtonText, class System.Drawing.Font font, bool focused, valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="glyphLocation" Type="System.Drawing.Point" />
        <Parameter Name="textBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="radioButtonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the option button.</param>
        <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the option button glyph at.</param>
        <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw `radioButtonText` in.</param>
        <param name="radioButtonText">The &lt;xref:System.String&gt; to draw with the option button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `radioButtonText`.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Draws an option button control (also known as a radio button) in the specified state and location, with the specified text, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the option button with the current visual style. Otherwise, this method will draw the option button with the classic Windows style.  
  
   
  
## Examples  
 The following code example uses the DrawRadioButton method in a custom control's <xref:System.Windows.Forms.Control.OnPaint%2A> method to draw an option button in the state determined by the location of the mouse pointer. This code example is part of a larger example provided for the <xref:System.Windows.Forms.RadioButtonRenderer> class.  
  
 [!code-vb[System.Windows.Forms.RadioButtonRenderer#4](~/add/codesnippet/visualbasic/dd94c6d1-07ed-48af-8d38-_1.vb)]
 [!code-cpp[System.Windows.Forms.RadioButtonRenderer#4](~/add/codesnippet/cpp/dd94c6d1-07ed-48af-8d38-_1.cpp)]
 [!code-cs[System.Windows.Forms.RadioButtonRenderer#4](~/add/codesnippet/csharp/dd94c6d1-07ed-48af-8d38-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics g, System.Drawing.Point glyphLocation, System.Drawing.Rectangle textBounds, string radioButtonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, bool focused, System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics g, valuetype System.Drawing.Point glyphLocation, valuetype System.Drawing.Rectangle textBounds, string radioButtonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, bool focused, valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="glyphLocation" Type="System.Drawing.Point" />
        <Parameter Name="textBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="radioButtonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the option button.</param>
        <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the option button glyph at.</param>
        <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw `radioButtonText` in.</param>
        <param name="radioButtonText">The &lt;xref:System.String&gt; to draw with the option button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `radioButtonText`.</param>
        <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Draws an option button control (also known as a radio button) in the specified state and location, with the specified text and text formatting, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the option button with the current visual style. Otherwise, this method will draw the option button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics g, System.Drawing.Point glyphLocation, System.Drawing.Rectangle textBounds, string radioButtonText, System.Drawing.Font font, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics g, valuetype System.Drawing.Point glyphLocation, valuetype System.Drawing.Rectangle textBounds, string radioButtonText, class System.Drawing.Font font, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="glyphLocation" Type="System.Drawing.Point" />
        <Parameter Name="textBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="radioButtonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the option button.</param>
        <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the option button glyph at.</param>
        <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw `radioButtonText` in.</param>
        <param name="radioButtonText">The &lt;xref:System.String&gt; to draw with the option button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `radioButtonText`.</param>
        <param name="image">The <see cref="T:System.Drawing.Image" /> to draw with the option button.</param>
        <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw `image` in.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Draws an option button control (also known as a radio button) in the specified state and location, with the specified text and image, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the option button with the current visual style. Otherwise, this method will draw the option button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics g, System.Drawing.Point glyphLocation, System.Drawing.Rectangle textBounds, string radioButtonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics g, valuetype System.Drawing.Point glyphLocation, valuetype System.Drawing.Rectangle textBounds, string radioButtonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="glyphLocation" Type="System.Drawing.Point" />
        <Parameter Name="textBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="radioButtonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the option button.</param>
        <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the option button glyph at.</param>
        <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw `radioButtonText` in.</param>
        <param name="radioButtonText">The &lt;xref:System.String&gt; to draw with the option button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `radioButtonText`.</param>
        <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
        <param name="image">The <see cref="T:System.Drawing.Image" /> to draw with the option button.</param>
        <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw `image` in.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Draws an option button control (also known as a radio button) in the specified state and location; with the specified text, text formatting, and image; and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the option button with the current visual style. Otherwise, this method will draw the option button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetGlyphSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size GetGlyphSize (System.Drawing.Graphics g, System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size GetGlyphSize(class System.Drawing.Graphics g, valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the option button.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Returns the size, in pixels, of the option button (also known as a radio button) glyph.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> that represents the size, in pixels, of the option button glyph.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This value is determined by the current visual style of the operating system.  
  
   
  
## Examples  
 The following code example uses the GetGlyphSize method to determine the bounds of the option button text. This code example is part of a larger example provided for the <xref:System.Windows.Forms.RadioButtonRenderer> class.  
  
 [!code-vb[System.Windows.Forms.RadioButtonRenderer#2](~/add/codesnippet/visualbasic/b6f9ef67-00aa-457d-aee8-_1.vb)]
 [!code-cpp[System.Windows.Forms.RadioButtonRenderer#2](~/add/codesnippet/cpp/b6f9ef67-00aa-457d-aee8-_1.cpp)]
 [!code-cs[System.Windows.Forms.RadioButtonRenderer#2](~/add/codesnippet/csharp/b6f9ef67-00aa-457d-aee8-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public static bool IsBackgroundPartiallyTransparent (System.Windows.Forms.VisualStyles.RadioButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBackgroundPartiallyTransparent(valuetype System.Windows.Forms.VisualStyles.RadioButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.RadioButtonState" />
      </Parameters>
      <Docs>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.RadioButtonState" /> values that specifies the visual state of the option button.</param>
        <summary>Indicates whether the background of the option button (also known as a radio button) has semitransparent or alpha-blended pieces.</summary>
        <returns>
          <see langword="true" /> if the background of the option button has semitransparent or alpha-blended pieces; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderMatchingApplicationState">
      <MemberSignature Language="C#" Value="public static bool RenderMatchingApplicationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RenderMatchingApplicationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the renderer uses the application state to determine rendering style.</summary>
        <value>
          <see langword="true" /> if the application state is used to determine rendering style; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the RenderMatchingApplicationState property is `true`, the <xref:System.Windows.Forms.RadioButtonRenderer> uses the setting from the <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A?displayProperty=fullName> property to determine the rendering style. If RenderMatchingApplicationState is `false`, the renderer will always render using visual styles.  
  
   
  
## Examples  
 The following code example uses the RenderMatchingApplicationState property to show the render style is changed depending on the application state. This code example is part of a larger example provided for the <xref:System.Windows.Forms.RadioButtonRenderer> class.  
  
 [!code-vb[System.Windows.Forms.RadioButtonRenderer#3](~/add/codesnippet/visualbasic/p-system.windows.forms.r_1_1.vb)]
 [!code-cs[System.Windows.Forms.RadioButtonRenderer#3](~/add/codesnippet/csharp/p-system.windows.forms.r_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>