<Type Name="ValidationConstraints" FullName="System.Windows.Forms.ValidationConstraints">
  <TypeSignature Language="C#" Value="public enum ValidationConstraints" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidationConstraints extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines constants that inform &lt;xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A&gt; about how it should validate a container's child controls.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> will validate all enabled controls in a container, such as a form. Use this enumeration to restrict the types of controls whose <xref:System.Windows.Forms.Control.Validating> event is raised.  
  
 You can combine these enumerated values together with a bitwise OR operation. Combining parameters with a bitwise OR operator will result in a logical AND operation. For example, calling `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` will only raise the <xref:System.Windows.Forms.Control.Validating> event on controls that are both immediate children of the container AND are enabled.  
  
 If you do not specify ImmediateChildren when you call <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, the method will require that you validate all child controls in the control hierarchy.  
  
   
  
## Examples  
 The following code example will only cause the <xref:System.Windows.Forms.Control.Validating> event to be raised for immediate children of the form whose <xref:System.Windows.Forms.Control.Enabled%2A> property is `true`.  
  
 [!code-vb[ValidateChildrenWithConstraints#1](~/add/codesnippet/visualbasic/t-system.windows.forms.v_5_1.vb)]
 [!code-cs[ValidateChildrenWithConstraints#1](~/add/codesnippet/csharp/t-system.windows.forms.v_5_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="Enabled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Enabled = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Validates child controls whose &lt;xref:System.Windows.Forms.Control.Enabled%2A&gt; property is set to <see langword="true" />.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImmediateChildren">
      <MemberSignature Language="C#" Value="ImmediateChildren" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints ImmediateChildren = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Validates child controls that are directly hosted within the container. Does not validate any of the children of these children. For example, if you have a <see cref="T:System.Windows.Forms.Form" /> that contains a custom <see cref="T:System.Windows.Forms.UserControl" />, and the <see cref="T:System.Windows.Forms.UserControl" /> contains a <see cref="T:System.Windows.Forms.Button" />, using ImmediateChildren will cause the <see cref="E:System.Windows.Forms.Control.Validating" /> event of the <see cref="T:System.Windows.Forms.UserControl" /> to occur, but not the <see cref="E:System.Windows.Forms.Control.Validating" /> event of the <see cref="T:System.Windows.Forms.Button" />.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Validates all child controls, and all children of these child controls, regardless of their property settings.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Selectable = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Validates child controls that can be selected.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="TabStop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints TabStop = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Validates child controls that have a &lt;xref:System.Windows.Forms.Control.TabStop%2A&gt; value set, which means that the user can navigate to the control using the TAB key.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="Visible" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Visible = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Validates child controls whose &lt;xref:System.Windows.Forms.Control.Visible%2A&gt; property is set to <see langword="true" />.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>