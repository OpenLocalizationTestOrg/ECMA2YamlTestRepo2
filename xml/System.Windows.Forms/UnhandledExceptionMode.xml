<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Defines where a Windows Forms application should send unhandled exceptions.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This enumeration is used by <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.  
  
> [!NOTE]
>  In the .NET Framework version 2.0, the common language runtime behavior changed to allow unhandled exceptions to propagate up the call stack. This behavior can be disabled via the application configuration file. For more information, see [Exceptions in Managed Threads](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example sets event handlers for both errors that occur on Windows Forms threads and errors that occur on other threads. It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all errors are handled by the application, regardless of the settings in the application's user configuration file. It uses the <xref:System.Windows.Forms.Application.ThreadException> event for the former, and the <xref:System.AppDomain.UnhandledException> event for the latter. Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the system Event Log prior to termination.  
  
 This sample assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/add/codesnippet/cpp/t-system.windows.forms.u_3_1.cpp)]
 [!code-cs[Classic Application.ThreadException Example#1](~/add/codesnippet/csharp/t-system.windows.forms.u_3_1.cs)]
 [!code-vb[Classic Application.ThreadException Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.u_3_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Route all exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler, unless the application's configuration file specifies otherwise.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler. Ignore the application configuration file.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Never route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler. Ignore the application configuration file.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>