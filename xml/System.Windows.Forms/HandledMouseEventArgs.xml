<Type Name="HandledMouseEventArgs" FullName="System.Windows.Forms.HandledMouseEventArgs">
  <TypeSignature Language="C#" Value="public class HandledMouseEventArgs : System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandledMouseEventArgs extends System.Windows.Forms.MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Allows a custom control to prevent the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event from being sent to its parent container.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You will want to use HandledMouseEventArgs primarily when developing a control that needs to handle mouse wheel events itself, and prevent them from being seen by the control's immediate parent container. HandledMouseEventArgs is not passed directly by <xref:System.Windows.Forms.MouseEventHandler> when it handles the <xref:System.Windows.Forms.Control.MouseWheel> event. Rather, <xref:System.Windows.Forms.MouseEventHandler> uses a <xref:System.Windows.Forms.MouseEventArgs>, which you must cast to a HandledMouseEventArgs in order to cancel an occurrence of <xref:System.Windows.Forms.Control.MouseWheel>.  
  
   
  
## Examples  
 The following code example demonstrates how to mark the mouse wheel event as handled in a custom control.  
  
 [!code-vb[System.Windows.Forms.HandledMouseEventArgs#1](~/add/codesnippet/visualbasic/TestMouseWheelVB/MouseWheelControl.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandledMouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values indicating which mouse button was pressed.</param>
        <param name="clicks">The number of times a mouse button was pressed.</param>
        <param name="x">The x-coordinate of a mouse click, in pixels.</param>
        <param name="y">The y-coordinate of a mouse click, in pixels.</param>
        <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.HandledMouseEventArgs" /> class with the specified mouse button, number of mouse button clicks, horizontal and vertical screen coordinates, and the change of mouse pointer position.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandledMouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta, bool defaultHandledValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta, bool defaultHandledValue) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
        <Parameter Name="defaultHandledValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values indicating which mouse button was pressed.</param>
        <param name="clicks">The number of times a mouse button was pressed.</param>
        <param name="x">The x-coordinate of a mouse click, in pixels.</param>
        <param name="y">The y-coordinate of a mouse click, in pixels.</param>
        <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
        <param name="defaultHandledValue">
          <see langword="true" /> if the event is handled; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.HandledMouseEventArgs" /> class with the specified mouse button, number of mouse button clicks, horizontal and vertical screen coordinates, the change of mouse pointer position, and the value indicating whether the event is handled.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether this event should be forwarded to the control's parent container.</summary>
        <value>
          <see langword="true" /> if the mouse event should go to the parent control; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to mark the mouse wheel event as handled in a custom control.  
  
 [!code-vb[System.Windows.Forms.HandledMouseEventArgs#1](~/add/codesnippet/visualbasic/TestMouseWheelVB/MouseWheelControl.vb#1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>