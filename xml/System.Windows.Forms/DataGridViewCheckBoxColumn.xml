<Type Name="DataGridViewCheckBoxColumn" FullName="System.Windows.Forms.DataGridViewCheckBoxColumn">
  <TypeSignature Language="C#" Value="public class DataGridViewCheckBoxColumn : System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCheckBoxColumn extends System.Windows.Forms.DataGridViewColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewCheckBoxColumn), "DataGridViewCheckBoxColumn.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hosts a collection of <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DataGridViewCheckBoxColumn class is a specialized type of the <xref:System.Windows.Forms.DataGridViewColumn> class used to logically host cells that indicate binary state. A DataGridViewCheckBoxColumn has an associated <xref:System.Windows.Forms.DataGridViewCheckBoxCell> in every <xref:System.Windows.Forms.DataGridViewRow> that intersects it. Each cell supplies a user interface (UI) that is similar to a <xref:System.Windows.Forms.CheckBox> control.  
  
 The default sort mode for this column type is <xref:System.Windows.Forms.DataGridViewColumnSortMode>.  
  
 Typically, check box cell values are intended either for storage, like any other data, or for performing bulk operations. If you want to respond immediately when users click a check box cell, you can handle the <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=fullName> event, but this event occurs before the cell value is updated. If you need the new value at the time of the click, one option is to calculate what the expected value will be based on the current value. Another approach is to commit the change immediately, and handle the <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName> event to respond to it. To commit the change when the cell is clicked, you must handle the <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName> event. In the handler, if the current cell is a check box cell, call the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName> method and pass in the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value.  
  
   
  
## Examples  
 The following code example demonstrates how to use a DataGridViewCheckBoxColumn to mark which employees are out of the office. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/cpp/t-system.windows.forms.d_75_1.cpp)]
 [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/csharp/t-system.windows.forms.d_75_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/visualbasic/t-system.windows.forms.d_75_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCheckBoxColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCheckBoxColumn" /> class to the default state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Using this default constructor is equivalent to supplying an argument of `false` to the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.%23ctor%28System.Boolean%29> constructor.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCheckBoxColumn (bool threeState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool threeState) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="threeState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="threeState">
          <see langword="true" /> to display check boxes with three states; <see langword="false" /> to display check boxes with two states.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCheckBoxColumn" /> and configures it to display check boxes with two or three states.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor initializes the column by setting the following properties.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A>|A new <xref:System.Windows.Forms.DataGridViewCheckBoxCell> with its <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> property initialized to the `threeState` parameter value.|  
|<xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A>|The value of the `threeState` parameter.|  
|<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=fullName>|<xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName>|  
|The <xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A> property of the <xref:System.Windows.Forms.DataGridViewCellStyle> object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.DefaultCellStyle%2A> property.|<xref:System.Windows.Forms.DataGridViewContentAlignment?displayProperty=fullName>|  
|The <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> property of the <xref:System.Windows.Forms.DataGridViewCellStyle> object returned by the <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A> property.|<xref:System.Windows.Forms.CheckState?displayProperty=fullName> if `threeState` is `true`; otherwise, `false`.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template used to create new cells.</summary>
        <value>A <see cref="T:System.Windows.Forms.DataGridViewCell" /> that all other cells in the column are modeled after. The default value is a new <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" /> instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The constructors for the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> class initialize this property to a newly created <xref:System.Windows.Forms.DataGridViewCheckBoxCell>.  
  
> [!CAUTION]
>  Changing the properties of the cell template will not immediately affect the user interface (UI) of the column's existing cells. These changes are only apparent after the column is regenerated (for example, by sorting the column or through a call to the <xref:System.Windows.Forms.DataGridView.InvalidateColumn%2A?displayProperty=fullName> method).  
  
   
  
## Examples  
 The following code example demonstrates how to use a <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> to mark which employees are out of the office. The cell template is used to apply the same color to all cells in the check box column. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/cpp/p-system.windows.forms.d_402_1.cpp)]
 [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/csharp/p-system.windows.forms.d_402_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_402_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The property is set to a value that is not of type <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the column's default cell style.</summary>
        <value>The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to be applied as the default style.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default <xref:System.Windows.Forms.DataGridViewCellStyle> returned by this property has the following initial property values:  
  
|`DataGridViewCellStyle` property|Default value|  
|--------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment?displayProperty=fullName>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>|<xref:System.Windows.Forms.CheckState?displayProperty=fullName> if the initial <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A> property value is `true`; otherwise, `false`.|  
  
 These values override the value specified in the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property of the <xref:System.Windows.Forms.DataGridView> control, but may be overridden by other cell style properties. For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 If the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> property of the object returned by the DefaultCellStyle property has a value of `false`, changing the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A> property value to `true` automatically sets <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> to <xref:System.Windows.Forms.CheckState>. If <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> has a value of <xref:System.Windows.Forms.CheckState>, changing the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A> property value to `false` automatically sets <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> to `false`.  
  
   
  
## Examples  
 The following code example demonstrates the use of this property.  
  
 [!code-cs[System.Windows.Forms.GridViewContentAlignment#1](~/add/codesnippet/csharp/p-system.windows.forms.d_155_1.cs)]
 [!code-vb[System.Windows.Forms.GridViewContentAlignment#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_155_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FalseValue">
      <MemberSignature Language="C#" Value="public object FalseValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FalseValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the underlying value corresponding to a cell value of <see langword="false" />, which appears as an unchecked box.</summary>
        <value>An &lt;xref:System.Object&gt; representing a value that the cells in this column will treat as a <see langword="false" /> value. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The FalseValue, <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A>, and <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A> properties determine the associated values of these states as they occur in the underlying data source.  
  
 Getting or setting this property gets or sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> property of the cell object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A> property. Setting this property also sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  
  
   
  
## Examples  
 The following code example uses a <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> to track the status of office lighting. The FalseValue property associates "turnedOff" with `false`, the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A> property associates "turnedOn" with `true`, and the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A> property associates "unknown" to indeterminate.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/cpp/p-system.windows.forms.d_273_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/visualbasic/p-system.windows.forms.d_273_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/csharp/p-system.windows.forms.d_273_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the &lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the flat style appearance of the check box cells.</summary>
        <value>A <see cref="T:System.Windows.Forms.FlatStyle" /> value indicating the appearance of cells in the column. The default is <see cref="T:System.Windows.Forms.FlatStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To display the check box cells using visual styles, set this property to <xref:System.Windows.Forms.FlatStyle> and call the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> method before <xref:System.Windows.Forms.Application.Run%2A?displayProperty=fullName>.  
  
 Getting or setting this property gets or sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FlatStyle%2A> property of the cell object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A> property. Setting this property also sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FlatStyle%2A> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  
  
   
  
## Examples  
 The following code example demonstrates how to use a <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> to mark which employees are out of the office. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/cpp/p-system.windows.forms.d_332_1.cpp)]
 [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/csharp/p-system.windows.forms.d_332_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_332_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the &lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndeterminateValue">
      <MemberSignature Language="C#" Value="public object IndeterminateValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndeterminateValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the underlying value corresponding to an indeterminate or <see langword="null" /> cell value, which appears as a disabled checkbox.</summary>
        <value>An &lt;xref:System.Object&gt; representing a value that the cells in this column will treat as an indeterminate value. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A>, <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A>, and IndeterminateValue properties determine the associated values of these states as they occur in the underlying data source.  
  
 Getting or setting this property gets or sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> property of the cell object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A> property. Setting this property also sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  
  
   
  
## Examples  
 The following code example uses a <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> to track the status of office lighting. The <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A> property associates "turnedOff" with `false`, the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A> property associates "turnedOn" with `true`, and the IndeterminateValue property associates "unknown" to indeterminate.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/cpp/p-system.windows.forms.d_336_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/visualbasic/p-system.windows.forms.d_336_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/csharp/p-system.windows.forms.d_336_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the &lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThreeState">
      <MemberSignature Language="C#" Value="public bool ThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the hosted check box cells will allow three check states rather than two.</summary>
        <value>
          <see langword="true" /> if the hosted <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" /> objects are able to have a third, indeterminate, state; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The indeterminate state can be useful, for example, when you do not want to set a default value in the check box.  
  
 Getting or setting this property gets or sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> property of the cell object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A> property. Setting this property also sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  
  
 If the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> property of the object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.DefaultCellStyle%2A> property has a value of `false`, changing the ThreeState property value to `true` automatically sets <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> to <xref:System.Windows.Forms.CheckState>. If <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> has a value of <xref:System.Windows.Forms.CheckState>, changing the ThreeState property value to `false` automatically sets <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> to `false`.  
  
   
  
## Examples  
 The following code example uses a <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> to track the status of office lighting. The <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A> property associates "turnedOff" with `false`, the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A> property associates "turnedOn" with `true`, and the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A> property associates "unknown" to indeterminate.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/cpp/p-system.windows.forms.d_147_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/visualbasic/p-system.windows.forms.d_147_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/csharp/p-system.windows.forms.d_147_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the &lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a string that describes the column.</summary>
        <returns>A &lt;xref:System.String&gt; that describes the column.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrueValue">
      <MemberSignature Language="C#" Value="public object TrueValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TrueValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the underlying value corresponding to a cell value of <see langword="true" />, which appears as a checked box.</summary>
        <value>An &lt;xref:System.Object&gt; representing a value that the cell will treat as a <see langword="true" /> value. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A>, TrueValue, and <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A> properties determine the associated values of these states as they occur in the underlying data source.  
  
 Getting or setting this property gets or sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> property of the cell object returned by the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A> property. Setting this property also sets the <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  
  
   
  
## Examples  
 The following code example uses a <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> to track the status of office lighting. The <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A> property associates "turnedOff" with `false`, the TrueValue property associates "turnedOn" with `true`, and the <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A> property associates "unknown" to indeterminate.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/cpp/p-system.windows.forms.d_115_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/visualbasic/p-system.windows.forms.d_115_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/add/codesnippet/csharp/p-system.windows.forms.d_115_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The value of the &lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>