<Type Name="RadioButton" FullName="System.Windows.Forms.RadioButton">
  <TypeSignature Language="C#" Value="public class RadioButton : System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RadioButton extends System.Windows.Forms.ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Checked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckedChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Checked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.RadioButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enables the user to select a single option from a group of choices when paired with other RadioButton controls.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RadioButton control can display text, an <xref:System.Drawing.Image>, or both.  
  
 When the user selects one option button (also known as a radio button) within a group, the others clear automatically. All RadioButton controls in a given container, such as a <xref:System.Windows.Forms.Form>, constitute a group. To create multiple groups on one form, place each group in its own container, such as a <xref:System.Windows.Forms.GroupBox> or <xref:System.Windows.Forms.Panel> control.  
  
 RadioButton and <xref:System.Windows.Forms.CheckBox> controls have a similar function: they offer choices a user can select or clear. The difference is that multiple <xref:System.Windows.Forms.CheckBox> controls can be selected at the same time, but option buttons are mutually exclusive.  
  
 Use the <xref:System.Windows.Forms.RadioButton.Checked%2A> property to get or set the state of a RadioButton. The option button's appearance can be altered to appear as a toggle-style button or as a standard option button by setting the <xref:System.Windows.Forms.RadioButton.Appearance%2A> property.  
  
   
  
## Examples  
 The following code example creates and initializes two RadioButton controls in a <xref:System.Windows.Forms.GroupBox>. The example uses the <xref:System.Windows.Forms.RadioButton.CheckedChanged> event to track which RadioButton is selected and reports the text of the selected RadioButton when the user clicks a <xref:System.Windows.Forms.Button>. To run this example, paste the code into a Windows Form. Call `InitializeRadioButtons` from the form's constructor or the <xref:System.Windows.Forms.Form.Load> event-handling method.  
  
 [!code-vb[System.Windows.Forms.MiscBugDriven#2](~/add/codesnippet/visualbasic/t-system.windows.forms.r_5_1.vb)]
 [!code-cs[System.Windows.Forms.MiscBugDriven#2](~/add/codesnippet/csharp/t-system.windows.forms.r_5_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RadioButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.RadioButton" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default view of the <xref:System.Windows.Forms.RadioButton> has its text aligned to the right of the button and the <xref:System.Windows.Forms.RadioButton.AutoCheck%2A> property is set to `true`.  
  
   
  
## Examples  
 The following code example creates and initializes a <xref:System.Windows.Forms.RadioButton>, gives it the appearance of a toggle button, sets its <xref:System.Windows.Forms.RadioButton.AutoCheck%2A> property to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  
  
 [!code-cs[Classic RadioButton Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_7_1.cs)]
 [!code-vb[Classic RadioButton Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_7_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Appearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Appearance Appearance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Appearance Appearance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Appearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value determining the appearance of the <see cref="T:System.Windows.Forms.RadioButton" />.</summary>
        <value>One of the <see cref="T:System.Windows.Forms.Appearance" /> values. The default value is <see cref="T:System.Windows.Forms.Appearance" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the Appearance value is set to <xref:System.Windows.Forms.Appearance>, then the <xref:System.Windows.Forms.RadioButton> control is drawn with a circular check box. If the value is set to <xref:System.Windows.Forms.Appearance>, then the <xref:System.Windows.Forms.RadioButton> is drawn as a control that can be toggled to an up or down state. Either type can display text, an image, or both.  
  
   
  
## Examples  
 The following code example creates and initializes a <xref:System.Windows.Forms.RadioButton>, gives it the appearance of a toggle control, sets its <xref:System.Windows.Forms.RadioButton.AutoCheck%2A> property to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  
  
 [!code-cs[Classic RadioButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_22_1.cs)]
 [!code-vb[Classic RadioButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_22_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.Appearance" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AppearanceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppearanceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the &lt;xref:System.Windows.Forms.RadioButton.Appearance%2A&gt; property value changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AppearanceChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RadioButton> named `RadioButton1`. Then ensure that the event handler is associated with the AppearanceChanged event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#535](~/add/codesnippet/csharp/e-system.windows.forms.r_6_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#535](~/add/codesnippet/visualbasic/e-system.windows.forms.r_6_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AutoCheck">
      <MemberSignature Language="C#" Value="public bool AutoCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the &lt;xref:System.Windows.Forms.RadioButton.Checked%2A&gt; value and the appearance of the control automatically change when the control is clicked.</summary>
        <value>
          <see langword="true" /> if the &lt;xref:System.Windows.Forms.RadioButton.Checked%2A&gt; value and the appearance of the control automatically change on the <see cref="E:System.Windows.Forms.Control.Click" /> event; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Windows.Forms.RadioButton.Checked%2A> value is set to `false`, the <xref:System.Windows.Forms.RadioButton> portion of the control must be checked in code in the <xref:System.Windows.Forms.Control.Click> event handler. In addition, if the <xref:System.Windows.Forms.RadioButton> is part of a <xref:System.Windows.Forms.RadioButton> control group, this property ensures that only one of the controls is checked at a given time.  
  
 If the AutoCheck property is set to `false`, a group of <xref:System.Windows.Forms.RadioButton> controls will not act as a mutually exclusive group and the <xref:System.Windows.Forms.RadioButton.Checked%2A> property must be updated in code.  
  
   
  
## Examples  
 The following code example creates and initializes a <xref:System.Windows.Forms.RadioButton>, gives it the appearance of a toggle control, sets its AutoCheck property to `false`, and adds it to a <xref:System.Windows.Forms.Form>.  
  
 [!code-cs[Classic RadioButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_19_1.cs)]
 [!code-vb[Classic RadioButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_19_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CheckAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment CheckAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment CheckAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the location of the check box portion of the <see cref="T:System.Windows.Forms.RadioButton" />.</summary>
        <value>One of the valid <see cref="T:System.Drawing.ContentAlignment" /> values. The default value is <see cref="T:System.Drawing.ContentAlignment" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how the CheckAlign property can be changed at run time. The check box portion of a <xref:System.Windows.Forms.RadioButton> is moved to the right or left of the text when the <xref:System.Windows.Forms.RadioButton.Checked%2A> value changes. This example requires that a <xref:System.Windows.Forms.RadioButton> control has been instantiated on a form and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace has been included.  
  
 [!code-cpp[Classic RadioButton.CheckAlign Example#1](~/add/codesnippet/cpp/p-system.windows.forms.r_9_1.cpp)]
 [!code-cs[Classic RadioButton.CheckAlign Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_9_1.cs)]
 [!code-vb[Classic RadioButton.CheckAlign Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_9_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the control is checked.</summary>
        <value>
          <see langword="true" /> if the check box is checked; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example evaluates a <xref:System.Windows.Forms.ListBox> selection and the Checked property of a <xref:System.Windows.Forms.RadioButton>. When a specified item is selected from the list box, the <xref:System.Windows.Forms.RadioButton.PerformClick%2A> method of another <xref:System.Windows.Forms.RadioButton> is called. This example requires that two <xref:System.Windows.Forms.RadioButton> controls and a <xref:System.Windows.Forms.ListBox> have been instantiated on a form.  
  
 [!code-cs[Classic RadioButton.Checked Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_20_1.cs)]
 [!code-cpp[Classic RadioButton.Checked Example#1](~/add/codesnippet/cpp/p-system.windows.forms.r_20_1.cpp)]
 [!code-vb[Classic RadioButton.Checked Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_20_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CheckedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckedChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the &lt;xref:System.Windows.Forms.RadioButton.Checked%2A&gt; property changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates how the <xref:System.Windows.Forms.RadioButton.CheckAlign%2A> property can be changed at run time. The check box portion of a <xref:System.Windows.Forms.RadioButton> is moved to the right or left of the text when the <xref:System.Windows.Forms.RadioButton.Checked%2A> value changes. This example requires that a <xref:System.Windows.Forms.RadioButton> control has been instantiated on a form and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace has been included.  
  
 [!code-cpp[Classic RadioButton.CheckAlign Example#1](~/add/codesnippet/cpp/e-system.windows.forms.r_0_1.cpp)]
 [!code-cs[Classic RadioButton.CheckAlign Example#1](~/add/codesnippet/csharp/e-system.windows.forms.r_0_1.cs)]
 [!code-vb[Classic RadioButton.CheckAlign Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.r_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new accessibility object for the <see cref="T:System.Windows.Forms.RadioButton" /> control.</summary>
        <returns>A new &lt;xref:System.Windows.Forms.RadioButton.RadioButtonAccessibleObject&gt; for the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.  
  
> [!NOTE]
>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the <xref:Accessibility> assembly installed with the .NET Framework.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the required creation parameters when the control handle is created.</summary>
        <value>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default size of the control.</summary>
        <value>Returns a <see cref="T:System.Drawing.Size" /> with a &lt;xref:System.Drawing.Size.Width%2A&gt; of 104 and a &lt;xref:System.Drawing.Size.Height%2A&gt; of 24.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.RadioButton" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the <xref:System.Windows.Forms.ControlStyles> style bit is set to `false` for the <xref:System.Windows.Forms.RadioButton> control, and the DoubleClick event is not raised.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.RadioButton" /> control with the mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the <xref:System.Windows.Forms.ControlStyles> style bit is set to `false` for the <xref:System.Windows.Forms.RadioButton> control, and the MouseDoubleClick event is not raised.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCheckedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckedChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnCheckedChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example demonstrates how the <xref:System.Windows.Forms.RadioButton.CheckAlign%2A> property can be changed at run time. The check box portion of a <xref:System.Windows.Forms.RadioButton> is moved to the right or left of the text when the <xref:System.Windows.Forms.RadioButton.Checked%2A> value changes. This example requires that a <xref:System.Windows.Forms.RadioButton> control has been instantiated on a form and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace has been included.  
  
 [!code-vb[Classic RadioButton.OnCheckedChanged Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_1_1.vb)]
 [!code-cpp[Classic RadioButton.OnCheckedChanged Example#1](~/add/codesnippet/cpp/m-system.windows.forms.r_1_1.cpp)]
 [!code-cs[Classic RadioButton.OnCheckedChanged Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Windows.Forms.RadioButton.AutoCheck%2A> property is set to `true`, the <xref:System.Windows.Forms.RadioButton.Checked%2A> property is set to `true` when the <xref:System.Windows.Forms.RadioButton> control is clicked.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the user enters the <xref:System.Windows.Forms.RadioButton> control by using the arrow keys, the <xref:System.Windows.Forms.RadioButton> will raise the <xref:System.Windows.Forms.Control.Click> event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Overrides the &lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt; method.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the control, simulating a click by a user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example evaluates a <xref:System.Windows.Forms.ListBox> selection and the <xref:System.Windows.Forms.RadioButton.Checked%2A> property of a <xref:System.Windows.Forms.RadioButton>. When a specified item is selected from the list box, the PerformClick method of another <xref:System.Windows.Forms.RadioButton> is called. This example requires that two <xref:System.Windows.Forms.RadioButton> controls and a <xref:System.Windows.Forms.ListBox> have been instantiated on a form.  
  
 [!code-cs[Classic RadioButton.Checked Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_8_1.cs)]
 [!code-cpp[Classic RadioButton.Checked Example#1](~/add/codesnippet/cpp/m-system.windows.forms.r_8_1.cpp)]
 [!code-vb[Classic RadioButton.Checked Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_8_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">The character to process.</param>
        <summary>Overrides the &lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt; method.</summary>
        <returns>
          <see langword="true" /> if the character was successfully processed; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</summary>
        <value>
          <see langword="true" /> if the user can give focus to this control using the TAB key; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public override System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the alignment of the text on the <see cref="T:System.Windows.Forms.RadioButton" /> control.</summary>
        <value>One of the <see cref="T:System.Drawing.ContentAlignment" /> values. The default is <see cref="T:System.Drawing.ContentAlignment" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overrides the &lt;xref:System.ComponentModel.Component.ToString%2A&gt; method.</summary>
        <returns>A string representation of the <see cref="T:System.Windows.Forms.RadioButton" /> that indicates whether it is checked.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>