<Type Name="ButtonRenderer" FullName="System.Windows.Forms.ButtonRenderer">
  <TypeSignature Language="C#" Value="public sealed class ButtonRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ButtonRenderer extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides methods used to render a button control with or without visual styles. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ButtonRenderer class provides a set of `static` methods that can be used to render a button control. Rendering a control refers to drawing the user interface of a control. To draw a button, use one of the <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> methods. These methods provide a variety of options, such as drawing text or an image on the button.  
  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> will draw the button with the current visual style. Otherwise, <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> will draw the button with the classic Windows style. This is useful if you are drawing a custom control that should automatically match the current visual style setting of the operating system.  
  
 This class wraps the functionality of a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer?displayProperty=fullName> that is set to one of the elements exposed by the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton?displayProperty=fullName> class. For more information, see [Rendering Controls with Visual Styles](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates how to create a custom control that uses the <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> method to draw a button. When the button is clicked, the control draws a smaller button inside the bounds of the original button, and the control uses the <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> method to paint over the rest of the original button.  
  
 [!code-vb[System.Windows.Forms.ButtonRenderer#0](~/add/codesnippet/visualbasic/t-system.windows.forms.b_11_1.vb)]
 [!code-cpp[System.Windows.Forms.ButtonRenderer#0](~/add/codesnippet/cpp/t-system.windows.forms.b_11_1.cpp)]
 [!code-cs[System.Windows.Forms.ButtonRenderer#0](~/add/codesnippet/csharp/t-system.windows.forms.b_11_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle on the button; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
        <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of `image`.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle on the button; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds, with the specified image, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="buttonText">The &lt;xref:System.String&gt; to draw on the button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `buttonText`.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle on the button; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds, with the specified text, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
   
  
## Examples  
 The following code example uses the DrawButton method in a custom control's <xref:System.Windows.Forms.Control.OnPaint%2A> method to draw a button in the state determined by the location of the mouse pointer. This code example is part of a larger example provided for the <xref:System.Windows.Forms.ButtonRenderer> class.  
  
 [!code-vb[System.Windows.Forms.ButtonRenderer#2](~/add/codesnippet/visualbasic/7d23e5be-4676-4584-9ef4-_1.vb)]
 [!code-cpp[System.Windows.Forms.ButtonRenderer#2](~/add/codesnippet/cpp/7d23e5be-4676-4584-9ef4-_1.cpp)]
 [!code-cs[System.Windows.Forms.ButtonRenderer#2](~/add/codesnippet/csharp/7d23e5be-4676-4584-9ef4-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="buttonText">The &lt;xref:System.String&gt; to draw on the button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `buttonText`.</param>
        <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values to apply to `buttonText`.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle on the button; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds, with the specified text and text formatting, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="buttonText">The &lt;xref:System.String&gt; to draw on the button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `buttonText`.</param>
        <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
        <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of `image`.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle on the button; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds, with the specified text and image, and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
        <param name="buttonText">The &lt;xref:System.String&gt; to draw on the button.</param>
        <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to `buttonText`.</param>
        <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values to apply to `buttonText`.</param>
        <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
        <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of `image`.</param>
        <param name="focused">
          <see langword="true" /> to draw a focus rectangle on the button; otherwise, <see langword="false" />.</param>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Draws a button control in the specified state and bounds; with the specified text, text formatting, and image; and with an optional focus rectangle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If visual styles are enabled in the operating system and visual styles are applied to the current application, this method will draw the button with the current visual style. Otherwise, it will draw the button with the classic Windows style.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public static void DrawParentBackground (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawParentBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the background of the parent of `childControl`.</param>
        <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the parent control's background. This rectangle should be inside the child control’s bounds.</param>
        <param name="childControl">The control whose parent's background will be drawn.</param>
        <summary>Draws the background of a control's parent in the specified area.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example uses the DrawParentBackground method to paint over an area of a custom control. This code example is part of a larger example provided for the <xref:System.Windows.Forms.ButtonRenderer> class.  
  
 [!code-vb[System.Windows.Forms.ButtonRenderer#4](~/add/codesnippet/visualbasic/307220e5-8c7e-4e39-991e-_1.vb)]
 [!code-cpp[System.Windows.Forms.ButtonRenderer#4](~/add/codesnippet/cpp/307220e5-8c7e-4e39-991e-_1.cpp)]
 [!code-cs[System.Windows.Forms.ButtonRenderer#4](~/add/codesnippet/csharp/307220e5-8c7e-4e39-991e-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public static bool IsBackgroundPartiallyTransparent (System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBackgroundPartiallyTransparent(valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
        <summary>Indicates whether the background of the button has semitransparent or alpha-blended pieces.</summary>
        <returns>
          <see langword="true" /> if the background of the button has semitransparent or alpha-blended pieces; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderMatchingApplicationState">
      <MemberSignature Language="C#" Value="public static bool RenderMatchingApplicationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RenderMatchingApplicationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the renderer uses the application state to determine rendering style.</summary>
        <value>
          <see langword="true" /> if the application state is used to determine rendering style; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the RenderMatchingApplicationState property is `true`, the <xref:System.Windows.Forms.ButtonRenderer> uses the setting from the <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A?displayProperty=fullName> property to determine the rendering style. If RenderMatchingApplicationState is `false`, the renderer will always render using visual styles.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>