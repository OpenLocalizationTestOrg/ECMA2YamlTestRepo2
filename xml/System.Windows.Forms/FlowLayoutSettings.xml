<Type Name="FlowLayoutSettings" FullName="System.Windows.Forms.FlowLayoutSettings">
  <TypeSignature Language="C#" Value="public class FlowLayoutSettings : System.Windows.Forms.LayoutSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FlowLayoutSettings extends System.Windows.Forms.LayoutSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.LayoutSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FlowDirection")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Collects the characteristics associated with flow layouts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The FlowLayoutSettings class collects and manages the characteristics associated with the flow layout scheme. This class is used internally by the <xref:System.Windows.Forms.FlowLayoutPanel> and <xref:System.Windows.Forms.ToolStrip> classes, as well as the flow layout engine. The FlowLayoutSettings class is used by the layout engine to determine how to layout the container's child controls.  
  
 The FlowLayoutSettings class manages the following information:  
  
-   The flow direction of consecutive controls.  
  
-   Whether the contents should be wrapped or clipped if the child controls cannot be contained within their parent.  
  
 FlowLayoutSettings does not have a public constructor.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlowDirection FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the flow direction of consecutive controls.</summary>
        <value>A <see cref="T:System.Windows.Forms.FlowDirection" /> indicating the flow direction of consecutive controls in the container. The default is <see cref="T:System.Windows.Forms.FlowDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 FlowDirection is the default property for the <xref:System.Windows.Forms.FlowLayoutSettings> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFlowBreak">
      <MemberSignature Language="C#" Value="public bool GetFlowBreak (object child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetFlowBreak(object child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child">The child control.</param>
        <summary>Returns a value that represents the flow break setting of the control.</summary>
        <returns>
          <see langword="true" /> if the flow break is set; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current flow layout engine.</summary>
        <value>The <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> currently being used.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.TableLayoutSettings.LayoutEngine%2A> property is typically used in two contexts:  
  
-   A container that uses a flow layout.  
  
-   A control contained within a flow layout container (for example, a button contained in a cell of a <xref:System.Windows.Forms.FlowLayoutPanel>).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetFlowBreak">
      <MemberSignature Language="C#" Value="public void SetFlowBreak (object child, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFlowBreak(object child, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">The child control.</param>
        <param name="value">The flow break value to set.</param>
        <summary>Sets the value that represents the flow break setting of the control.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WrapContents">
      <MemberSignature Language="C#" Value="public bool WrapContents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the contents should be wrapped or clipped when they exceed the original boundaries of their container.</summary>
        <value>
          <see langword="true" /> if the contents should be wrapped; otherwise, <see langword="false" /> if the contents should be clipped. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the area of the container is too small to display all the child controls, then at least one control will be clipped regardless of the WrapContents value.  
  
 Subsequent resizing of the container will reapply the layout to the contained controls.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>