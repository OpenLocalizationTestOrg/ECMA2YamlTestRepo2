<Type Name="HtmlElementErrorEventArgs" FullName="System.Windows.Forms.HtmlElementErrorEventArgs">
  <TypeSignature Language="C#" Value="public sealed class HtmlElementErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlElementErrorEventArgs extends System.EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Windows.Forms.HtmlWindow.Error" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to suppress a script error and display your own custom dialog box. This code example requires that your application host a <xref:System.Windows.Forms.WebBrowser> control named `webBrowser1`.  
  
 [!code-vb[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#16)]
 [!code-cs[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#16)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the descriptive string corresponding to the error.</summary>
        <value>The descriptive string corresponding to the error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#451](~/add/codesnippet/csharp/p-system.windows.forms.h_41_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#451](~/add/codesnippet/visualbasic/p-system.windows.forms.h_41_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether this error has been handled by the application hosting the document.</summary>
        <value>
          <see langword="true" /> if the event has been handled; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set this property to `true` if you wish to display your own custom error message to the user, or suppress the error entirely.  
  
   
  
## Examples  
 The following code example demonstrates how to suppress a script error and display your own custom dialog box. This code example requires that your application host a <xref:System.Windows.Forms.WebBrowser> control named `webBrowser1`.  
  
 [!code-vb[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/visualbasic/HtmlWindowProject/Form1.vb#16)]
 [!code-cs[System.Windows.Forms.HtmlWindow#16](~/add/codesnippet/csharp/HtmlWindowProjectCSharp/Form1.cs#16)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line of HTML script code on which the error occurred.</summary>
        <value>An &lt;xref:System.Int32&gt; designating the script line number.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#451](~/add/codesnippet/csharp/p-system.windows.forms.h_3_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#451](~/add/codesnippet/visualbasic/p-system.windows.forms.h_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the location of the document that generated the error.</summary>
        <value>A &lt;xref:System.Uri&gt; that represents the location of the document that generated the error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you are hosting an HTML document that contains frames, it might not be evident which frame is responsible for generating the error. Use this property to provide debugging information so that a developer can better narrow down the problem.  
  
   
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#451](~/add/codesnippet/csharp/p-system.windows.forms.h_23_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#451](~/add/codesnippet/visualbasic/p-system.windows.forms.h_23_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>