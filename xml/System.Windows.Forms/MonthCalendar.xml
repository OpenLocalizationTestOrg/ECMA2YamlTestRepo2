<Type Name="MonthCalendar" FullName="System.Windows.Forms.MonthCalendar">
  <TypeSignature Language="C#" Value="public class MonthCalendar : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MonthCalendar extends System.Windows.Forms.Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("SelectionRange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("DateChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectionRange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.MonthCalendarDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a Windows control that enables the user to select a date using a visual monthly calendar display.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MonthCalendar control allows the user to select a date using a visual display. You can limit the date and times that can be selected by setting the <xref:System.Windows.Forms.MonthCalendar.MinDate%2A> and <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A> properties.  
  
 You can change the look of the calendar portion of the control by setting the <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A>, and <xref:System.Windows.Forms.Control.BackColor%2A> properties.  
  
> [!NOTE]
>  The <xref:System.Windows.Forms.DateTimePicker> control only supports Gregorian calendars.  
  
> [!NOTE]
>  The <xref:System.Windows.Forms.DateTimePicker> control only supports Gregorian calendars.  
  
 The MonthCalendar control is drawn by the operating system, so the <xref:System.Windows.Forms.MonthCalendar.Paint> event is never raised. If you need to provide a customized look to the MonthCalendar control, you should override the <xref:System.Windows.Forms.Control.OnPrint%2A> method, call the base implementation of <xref:System.Windows.Forms.Control.OnPrint%2A>, and then perform custom painting.  
  
 If you need custom date formatting and a selection limited to just one date, you might consider using a <xref:System.Windows.Forms.DateTimePicker> control instead of a MonthCalendar. Using the <xref:System.Windows.Forms.DateTimePicker> eliminates much of the need for validating date/time values.  
  
 For more information on month calendar controls, see [Month Calendar Control Reference](http://go.microsoft.com/fwlink/?LinkId=178863).  
  
   
  
## Examples  
 The following code example displays a form containing a MonthCalendar control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_17_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/t-system.windows.forms.m_17_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/t-system.windows.forms.m_17_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonthCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.MonthCalendar" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MonthCalendar constructor creates a new <xref:System.Windows.Forms.MonthCalendar>.  
  
 The following table shows initial property values for an instance of the <xref:System.Windows.Forms.MonthCalendar> class.  
  
|Item|Description|  
|----------|-----------------|  
|<xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A>|Today's date.|  
|<xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A>|Today's date.|  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_18_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/m-system.windows.forms.m_18_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/m-system.windows.forms.m_18_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddAnnuallyBoldedDate">
      <MemberSignature Language="C#" Value="public void AddAnnuallyBoldedDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAnnuallyBoldedDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to be displayed in bold.</param>
        <summary>Adds a day that is displayed in bold on an annual basis in the month calendar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method afterward to update the display.  
  
 To add multiple dates in a single assignment, you can assign an array of <xref:System.DateTime> objects to the <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddBoldedDate">
      <MemberSignature Language="C#" Value="public void AddBoldedDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBoldedDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to be displayed in bold.</param>
        <summary>Adds a day to be displayed in bold in the month calendar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method afterward to update the display.  
  
 To add multiple dates in a single assignment, you can assign an array of <xref:System.DateTime> objects to the <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A> property.  
  
   
  
## Examples  
 The following code example uses the AddBoldedDate and <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> methods to mark and display in a bold font dates read from a file. This example requires that a <xref:System.Windows.Forms.MonthCalendar> control, named `monthCalendar1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  
  
 [!code-cpp[MonthCalendar#2](~/add/codesnippet/cpp/m-system.windows.forms.m_10_1.cpp)]
 [!code-cs[MonthCalendar#2](~/add/codesnippet/csharp/m-system.windows.forms.m_10_1.cs)]
 [!code-vb[MonthCalendar#2](~/add/codesnippet/visualbasic/m-system.windows.forms.m_10_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddMonthlyBoldedDate">
      <MemberSignature Language="C#" Value="public void AddMonthlyBoldedDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMonthlyBoldedDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to be displayed in bold.</param>
        <summary>Adds a day that is displayed in bold on a monthly basis in the month calendar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method afterward to update the display.  
  
 To add multiple dates in a single assignment, you can assign an array of <xref:System.DateTime> objects to the <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AnnuallyBoldedDates">
      <MemberSignature Language="C#" Value="public DateTime[] AnnuallyBoldedDates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime[] AnnuallyBoldedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the array of &lt;xref:System.DateTime&gt; objects that determines which annual days are displayed in bold.</summary>
        <value>An array of &lt;xref:System.DateTime&gt; objects.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Using this property, you can assign an array of annual bold dates. When you assign an array of dates, the existing dates are first cleared.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as AnnuallyBoldedDates, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_13_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_13_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_13_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the background color for the control.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the &lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt; property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`.  
  
 The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.  
  
 Starting with Windows Vista and depending on the theme, setting this property might not change the appearance of the calendar. For example, if Windows is set to use the Aero theme, setting this property has no effect. This is because an updated version of the calendar is rendered with an appearance that is derived at run time from the current operating system theme. If you want to use this property and enable the earlier version of the calendar, you can disable visual styles for your application. Disabling visual styles might affect the appearance and behavior of other controls in your application. To disable visual styles in Visual Basic, open the Project Designer and uncheck the **Enable XP visual styles** check box. To disable visual styles in C#, open Program.cs and comment out `Application.EnableVisualStyles();`.  
  
   
  
## Examples  
 The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  
  
 [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.m_29_1.cs)]
 [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.m_29_1.cpp)]
 [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_29_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the background image for the <see cref="T:System.Windows.Forms.MonthCalendar" /></summary>
        <value>The <see cref="T:System.Drawing.Image" /> that is the background image for the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is not relevant for this class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the &lt;xref:System.Windows.Forms.MonthCalendar.BackgroundImage%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the layout for the &lt;xref:System.Windows.Forms.MonthCalendar.BackgroundImage%2A&gt;.</summary>
        <value>One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is not relevant for this class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the &lt;xref:System.Windows.Forms.MonthCalendar.BackgroundImageLayout%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BoldedDates">
      <MemberSignature Language="C#" Value="public DateTime[] BoldedDates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime[] BoldedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the array of &lt;xref:System.DateTime&gt; objects that determines which nonrecurring dates are displayed in bold.</summary>
        <value>The array of bold dates.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Using this property, you can assign an array of bold dates. When you assign an array of dates, the existing dates are first cleared.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, BoldedDates, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_26_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_26_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_26_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CalendarDimensions">
      <MemberSignature Language="C#" Value="public System.Drawing.Size CalendarDimensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size CalendarDimensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of columns and rows of months displayed.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> with the number of columns and rows to use to display the calendar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Only one calendar year is displayed at a time, and the maximum number of months that can be displayed is 12. Valid combinations of columns and rows make a maximum product of 12; for values greater than 12, the display is modified on a best-fit basis.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, CalendarDimensions, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_37_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_37_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_37_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user clicks the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.MonthCalendar> control sets the <xref:System.Windows.Forms.ControlStyles> bit flag to `false`, so the <xref:System.Windows.Forms.MonthCalendar> will not raise the Click event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overrides the &lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt; method.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.Forms.CreateParams" /> for creating a <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</summary>
        <value>A <see cref="T:System.Windows.Forms.CreateParams" /> with the information for creating a <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateParams property is called when a window is created. Inheriting classes can override this property to add extra functionality, but you should first call `base.getCreateParams()` to make sure the control continues to work correctly.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DateRangeEventHandler DateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DateRangeEventHandler DateChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DateRangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the date selected in the <see cref="T:System.Windows.Forms.MonthCalendar" /> changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DateChanged event occurs during any date selection, whether by mouse, keyboard, or code. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> event is similar, but it occurs only at the end of a date selection made using the mouse.  
  
 For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example creates a <xref:System.Windows.Forms.SelectionRange>, sets its <xref:System.Windows.Forms.SelectionRange.Start%2A> and <xref:System.Windows.Forms.SelectionRange.End%2A> properties, and assigns the <xref:System.Windows.Forms.SelectionRange> to the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> property of the <xref:System.Windows.Forms.MonthCalendar> control. When the DateChanged event is raised, the <xref:System.Windows.Forms.SelectionRange.Start%2A> and <xref:System.Windows.Forms.SelectionRange.End%2A> property values are displayed in the text boxes. This example requires that you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.TextBox> controls, a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.MonthCalendar> control.  
  
 [!code-cs[System.Windows.Forms.SelectionRange Members#1](~/add/codesnippet/csharp/e-system.windows.forms.m_14_1.cs)]
 [!code-cpp[System.Windows.Forms.SelectionRange Members#1](~/add/codesnippet/cpp/e-system.windows.forms.m_14_1.cpp)]
 [!code-vb[System.Windows.Forms.SelectionRange Members#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_14_1.vb)]  
  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and DateChanged events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_14_2.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/e-system.windows.forms.m_14_2.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/e-system.windows.forms.m_14_2.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateSelected">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DateRangeEventHandler DateSelected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DateRangeEventHandler DateSelected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DateRangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user makes an explicit date selection using the mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This event is similar to the <xref:System.Windows.Forms.MonthCalendar.DateChanged> event, but it occurs at the end of a date selection made using the mouse. The <xref:System.Windows.Forms.MonthCalendar.DateChanged> event occurs during any date selection, whether by mouse, keyboard, or code.  
  
 For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The DateSelected and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_1_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/e-system.windows.forms.m_1_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/e-system.windows.forms.m_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the input method editor for the <see cref="T:System.Windows.Forms.MonthCalendar" />.</summary>
        <value>As implemented for this object, always <see cref="T:System.Windows.Forms.ImeMode" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default margin settings for the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</summary>
        <value>A <see cref="T:System.Windows.Forms.Padding" /> structure with a padding size of 9 pixels, for all of its edges.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default size of the calendar.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> specifying the height and width, in pixels, of the control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DefaultSize property includes the area necessary to display the "Today:" date at the bottom of the calendar.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        <summary>Overrides the &lt;xref:System.Windows.Forms.Control.DefWndProc%2A&gt; method.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for calling unmanaged code. Associated enumeration: F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.MonthCalendar" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  
  
 When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.MonthCalendar> references. This method invokes the `Dispose()` method of each referenced object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the control should redraw its surface using a secondary buffer.</summary>
        <value>
          <see langword="true" /> if the control should use a secondary buffer to redraw; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setting the DoubleBuffered property has no effect on the appearance of the <xref:System.Windows.Forms.MonthCalendar> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.MonthCalendar> control sets the <xref:System.Windows.Forms.ControlStyles> bit flag to `false`, so the <xref:System.Windows.Forms.MonthCalendar> will not raise the DoubleClick event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Day FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Day FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Day</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the first day of the week as displayed in the month calendar.</summary>
        <value>One of the <see cref="T:System.Windows.Forms.Day" /> values. The default is <see cref="T:System.Windows.Forms.Day" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the FirstDayOfWeek, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_19_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_19_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_19_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.Day" /> enumeration members.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the foreground color of the control.</summary>
        <value>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the &lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt; property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.  
  
 Starting with Windows Vista and depending on the theme, setting this property might not change the appearance of the calendar. For example, if Windows is set to use the Aero theme, setting this property has no effect. This is because an updated version of the calendar is rendered with an appearance that is derived at run time from the current operating system theme. If you want to use this property and enable the earlier version of the calendar, you can disable visual styles for your application. Disabling visual styles might affect the appearance and behavior of other controls in your application. To disable visual styles in Visual Basic, open the Project Designer and uncheck the **Enable XP visual styles** check box. To disable visual styles in C#, open Program.cs and comment out `Application.EnableVisualStyles();`.  
  
   
  
## Examples  
 The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  
  
 [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.m_6_1.cs)]
 [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.m_6_1.cpp)]
 [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_6_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayRange">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SelectionRange GetDisplayRange (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.SelectionRange GetDisplayRange(bool visible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <see langword="true" /> to retrieve only the dates that are fully contained in displayed months; otherwise, <see langword="false" />.</param>
        <summary>Retrieves date information that represents the low and high limits of the displayed dates of the control.</summary>
        <returns>The begin and end dates of the displayed calendar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetDisplayRange method returns a <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> that contains the begin and end dates displayed in the current view of the control. You can modify the returned range based on the value you specify for the `visible` parameter. By specifying `false`, you can retrieve all dates displayed on the control; specifying `true` retrieves only those dates that are part of fully displayed months.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MonthCalendar.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MonthCalendar/HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MonthCalendar+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">A <see cref="T:System.Drawing.Point" /> containing the &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; coordinates of the point to be hit tested.</param>
        <summary>Returns an object with information on which portion of a month calendar control is at a location specified by a <see cref="T:System.Drawing.Point" />.</summary>
        <returns>A &lt;xref:System.Windows.Forms.MonthCalendar.HitTestInfo&gt; that contains information about the specified point on the <see cref="T:System.Windows.Forms.MonthCalendar" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MonthCalendar.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MonthCalendar/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MonthCalendar+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The &lt;xref:System.Drawing.Point.X%2A&gt; coordinate of the point to be hit tested.</param>
        <param name="y">The &lt;xref:System.Drawing.Point.Y%2A&gt; coordinate of the point to be hit tested.</param>
        <summary>Returns a &lt;xref:System.Windows.Forms.MonthCalendar.HitTestInfo&gt; with information on which portion of a month calendar control is at a specified x- and y-coordinate.</summary>
        <returns>A &lt;xref:System.Windows.Forms.MonthCalendar.HitTestInfo&gt; that contains information about the specified point on the <see cref="T:System.Windows.Forms.MonthCalendar" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Input Method Editor (IME) mode supported by this control.</summary>
        <value>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is not relevant for this class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the &lt;xref:System.Windows.Forms.MonthCalendar.ImeMode%2A&gt; property has changed.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">One of the Keys values.</param>
        <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
        <returns>
          <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxDate">
      <MemberSignature Language="C#" Value="public DateTime MaxDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum allowable date.</summary>
        <value>A &lt;xref:System.DateTime&gt; representing the maximum allowable date. The default is 12/31/9998.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, MaxDate, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_12_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_12_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_12_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value is less than the &lt;xref:System.Windows.Forms.MonthCalendar.MinDate%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxSelectionCount">
      <MemberSignature Language="C#" Value="public int MaxSelectionCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSelectionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of days that can be selected in a month calendar control.</summary>
        <value>The maximum number of days that you can select. The default is 7.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setting this property does not effect the current selection range.  
  
 It is important to remember that the MaxSelectionCount property represents the number of days in the selection, not the difference between <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> and <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A>. For example, if MaxSelectionCount is 7 (the default), <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> and <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> can be no more than six days apart.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and MaxSelectionCount properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_42_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_42_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_42_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value is less than 1.  
  
 -or-  
  
 The MaxSelectionCount cannot be set.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinDate">
      <MemberSignature Language="C#" Value="public DateTime MinDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum allowable date.</summary>
        <value>A &lt;xref:System.DateTime&gt; representing the minimum allowable date. The default is 01/01/1753.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, MinDate, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_48_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_48_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_48_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The date set is greater than the &lt;xref:System.Windows.Forms.MonthCalendar.MaxDate%2A&gt;.  
  
 -or-  
  
 The date set is earlier than 01/01/1753.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MonthlyBoldedDates">
      <MemberSignature Language="C#" Value="public DateTime[] MonthlyBoldedDates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime[] MonthlyBoldedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the array of &lt;xref:System.DateTime&gt; objects that determine which monthly days to bold.</summary>
        <value>An array of &lt;xref:System.DateTime&gt; objects.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Using this property, you assign an array of monthly bold dates. When you assign an array of dates, any preexisting dates are cleared.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and MonthlyBoldedDates are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_3_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_3_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user clicks the <see cref="T:System.Windows.Forms.MonthCalendar" /> control with the mouse.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.MonthCalendar" /> control with the mouse.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDateChanged (System.Windows.Forms.DateRangeEventArgs drevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDateChanged(class System.Windows.Forms.DateRangeEventArgs drevent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drevent" Type="System.Windows.Forms.DateRangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="drevent">A <see cref="T:System.Windows.Forms.DateRangeEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.MonthCalendar.DateChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnDateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnDateSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnDateSelected (System.Windows.Forms.DateRangeEventArgs drevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDateSelected(class System.Windows.Forms.DateRangeEventArgs drevent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drevent" Type="System.Windows.Forms.DateRangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="drevent">A <see cref="T:System.Windows.Forms.DateRangeEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.MonthCalendar.DateSelected" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnDateSelected method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnFontChanged method resizes the control based on the new font size. This can cause the calendar to overlap other controls on the form if the potential sizing issues have not been taken into account.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnFontChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnHandleDestroyed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.MonthCalendar.RightToLeftLayoutChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnRightToLeftLayoutChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the space between the edges of a <see cref="T:System.Windows.Forms.MonthCalendar" /> control and its contents.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setting the Padding property will have no effect on the appearance of the <xref:System.Windows.Forms.MonthCalendar>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the &lt;xref:System.Windows.Forms.MonthCalendar.Padding%2A&gt; property changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This event is not relevant for this class.  
  
 Example  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the control is redrawn.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.MonthCalendar> control sets the <xref:System.Windows.Forms.ControlStyles> bit flag to `false`, so the <xref:System.Windows.Forms.MonthCalendar> will not raise the Paint event. To provide a custom look to the <xref:System.Windows.Forms.MonthCalendar> control, you should override the <xref:System.Windows.Forms.Control.OnPrint%2A> method, call the base implementation of <xref:System.Windows.Forms.Control.OnPrint%2A>, and then perform custom painting.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAnnuallyBoldedDates">
      <MemberSignature Language="C#" Value="public void RemoveAllAnnuallyBoldedDates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllAnnuallyBoldedDates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all the annually bold dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method clears all dates from the <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A> array. To remove a single date from the bold dates, use the <xref:System.Windows.Forms.MonthCalendar.RemoveAnnuallyBoldedDate%2A> method.  
  
 You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method to ensure that the display is updated to reflect the removal.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAllBoldedDates">
      <MemberSignature Language="C#" Value="public void RemoveAllBoldedDates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllBoldedDates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all the nonrecurring bold dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method clears the <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A> array. To remove a single date from the bold dates, use the <xref:System.Windows.Forms.MonthCalendar.RemoveBoldedDate%2A> method.  
  
 You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method to ensure that the display is updated to reflect the removal.  
  
   
  
## Examples  
 The following code example demonstrates how to use the RemoveAllBoldedDates method.  
  
 [!code-cpp[MonthCalendar#4](~/add/codesnippet/cpp/m-system.windows.forms.m_9_1.cpp)]
 [!code-cs[MonthCalendar#4](~/add/codesnippet/csharp/m-system.windows.forms.m_9_1.cs)]
 [!code-vb[MonthCalendar#4](~/add/codesnippet/visualbasic/m-system.windows.forms.m_9_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAllMonthlyBoldedDates">
      <MemberSignature Language="C#" Value="public void RemoveAllMonthlyBoldedDates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllMonthlyBoldedDates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all the monthly bold dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method clears the <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> array. To remove a single date from the bold dates, use the <xref:System.Windows.Forms.MonthCalendar.RemoveMonthlyBoldedDate%2A> method.  
  
 You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method to ensure that the display is updated to reflect the removal.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAnnuallyBoldedDate">
      <MemberSignature Language="C#" Value="public void RemoveAnnuallyBoldedDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAnnuallyBoldedDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to remove from the date list.</param>
        <summary>Removes the specified date from the list of annually bold dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the specified date occurs more than once in the date list, only the first date is removed. When comparing dates, only the day and month are used. You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method to ensure that the display is updated to reflect the removal.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveBoldedDate">
      <MemberSignature Language="C#" Value="public void RemoveBoldedDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveBoldedDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to remove from the date list.</param>
        <summary>Removes the specified date from the list of nonrecurring bold dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the specified date occurs more than once in the date list, only the first date is removed. You must call the <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> method to ensure that the display is updated to reflect the removal.  
  
   
  
## Examples  
 The following code example uses the RemoveBoldedDate method to remove a specified date from the list of bold dates. This example requires that a <xref:System.Windows.Forms.MonthCalendar> control, named `monthCalendar1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  
  
 [!code-cpp[MonthCalendar#3](~/add/codesnippet/cpp/m-system.windows.forms.m_7_1.cpp)]
 [!code-cs[MonthCalendar#3](~/add/codesnippet/csharp/m-system.windows.forms.m_7_1.cs)]
 [!code-vb[MonthCalendar#3](~/add/codesnippet/visualbasic/m-system.windows.forms.m_7_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveMonthlyBoldedDate">
      <MemberSignature Language="C#" Value="public void RemoveMonthlyBoldedDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveMonthlyBoldedDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to remove from the date list.</param>
        <summary>Removes the specified date from the list of monthly bolded dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the specified date occurs more than once in the date list, only the first date is removed. When comparing dates, only the day and month are used. You must call <xref:System.Windows.Forms.MonthCalendar.UpdateBoldedDates%2A> to ensure that the display is updated to reflect the removal.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the control is laid out from right to left.</summary>
        <value>
          <see langword="true" /> if the control is laid out from right to left; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RightToLeftLayout property is useful for international applications where the language is written from right to left. When the <xref:System.Windows.Forms.Control.RightToLeft%2A> and RightToLeftLayout properties are both `true`,  
  
 Mirroring will be turned on for the form, and control placement and text will be from right to left.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the &lt;xref:System.Windows.Forms.MonthCalendar.RightToLeftLayout%2A&gt; property changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RightToLeftLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MonthCalendar> named `MonthCalendar1`. Then ensure that the event handler is associated with the RightToLeftLayoutChanged event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#504](~/add/codesnippet/csharp/e-system.windows.forms.m_12_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#504](~/add/codesnippet/visualbasic/e-system.windows.forms.m_12_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ScrollChange">
      <MemberSignature Language="C#" Value="public int ScrollChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scroll rate for a month calendar control.</summary>
        <value>A positive number representing the current scroll rate in number of months moved. The default is the number of months currently displayed. The maximum is 20,000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The scroll rate is the number of months that the control moves its display when the user clicks a scroll arrow. If this value is 0, the number of months is reset to the default, which is the number of months displayed in the control. The maximum value is 20,000.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_4_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_4_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_4_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0.  
  
 -or-  
  
 The value is greater than 20,000.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public DateTime SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the end date of the selected range of dates.</summary>
        <value>A &lt;xref:System.DateTime&gt; indicating the last date in the selection range.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set the value of the SelectionEnd property to a date that is earlier than the current value of the <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> property, <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> is automatically set equal to SelectionEnd.  
  
 If you set a date in SelectionEnd that causes the selection to exceed the number of days specified by the <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> property, the value of <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> is adjusted; <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> is automatically set so that the number of days selected is equal to <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A>.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> represents the number of days in the selection, not the difference between <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> and SelectionEnd. For example, if <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> is 7 (the default), then <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> and SelectionEnd can be no more than six days apart.  
  
> [!NOTE]
>  Setting the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> for a <xref:System.Windows.Forms.MonthCalendar> control that has visual styles enabled will result in the selection range not painting correctly on the control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> and SelectionEnd properties. To run the example, paste the following code into a form containing a <xref:System.Windows.Forms.MonthCalendar> control named `MonthCalendar1`, and call the `ShowAWeeksVacationOneMonthFromToday` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  
  
 [!code-cpp[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/cpp/p-system.windows.forms.m_24_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/csharp/p-system.windows.forms.m_24_1.cs)]
 [!code-vb[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_24_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The date value is less than the &lt;xref:System.Windows.Forms.MonthCalendar.MinDate%2A&gt; value.  
  
 -or-  
  
 The date value is greater than the &lt;xref:System.Windows.Forms.MonthCalendar.MaxDate%2A&gt; value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionRange">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SelectionRange SelectionRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.SelectionRange SelectionRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the selected range of dates for a month calendar control.</summary>
        <value>A <see cref="T:System.Windows.Forms.SelectionRange" /> with the start and end dates of the selected range.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setting this property is functionally equivalent to using the <xref:System.Windows.Forms.MonthCalendar.SetSelectionRange%2A> method. You can set the start and end dates separately by setting either the <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> or <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> properties. You cannot change the start and end dates by setting the <xref:System.Windows.Forms.SelectionRange.Start%2A?displayProperty=fullName> or <xref:System.Windows.Forms.SelectionRange.End%2A?displayProperty=fullName> property values of the SelectionRange property. You should use <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A>, <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A>, or <xref:System.Windows.Forms.MonthCalendar.SetSelectionRange%2A>.  
  
 If the <xref:System.Windows.Forms.SelectionRange.Start%2A> property value of the <xref:System.Windows.Forms.SelectionRange> is greater than its <xref:System.Windows.Forms.SelectionRange.End%2A> property value, the dates are swapped; the <xref:System.Windows.Forms.SelectionRange.End%2A> property value becomes the starting date, and <xref:System.Windows.Forms.SelectionRange.Start%2A> property value becomes the end date.  
  
> [!NOTE]
>  Scrolling through the calendar display with the navigation buttons when a range is selected can cause unexpected results (for example, the date range is not preserved). If you have a single month displayed with a range of 04/01/2001 to 04/10/2001, scrolling the calendar to March changes the selected range as follows: 03/01/2001 to 03/10/2001. If you have multiple months displayed, such as March and April with a selected range of 04/01/2001 to 04/10/2001, scrolling the calendar back to January and February changes the selected range as follows: 01/01/2001 to 01/10/2001.  
  
> [!NOTE]
>  Setting the SelectionRange for a <xref:System.Windows.Forms.MonthCalendar> control that has visual styles enabled will result in the selection range not painting correctly on the control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The &lt;xref:System.Windows.Forms.SelectionRange.Start%2A&gt; value of the assigned <see cref="T:System.Windows.Forms.SelectionRange" /> is less than the minimum date allowable for a month calendar control.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.SelectionRange.Start%2A&gt; value of the assigned <see cref="T:System.Windows.Forms.SelectionRange" /> is greater than the maximum allowable date for a month calendar control.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.SelectionRange.End%2A&gt; value of the assigned <see cref="T:System.Windows.Forms.SelectionRange" /> is less than the minimum date allowable for a month calendar control.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.SelectionRange.End%2A&gt; value of the assigned <see cref="T:System.Windows.Forms.SelectionRange" /> is greater than the maximum allowable date for a month calendar control.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public DateTime SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the start date of the selected range of dates.</summary>
        <value>A &lt;xref:System.DateTime&gt; indicating the first date in the selection range.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set the value of the SelectionStart property to a date that is later than the current value of the <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> property, <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> is automatically set equal to SelectionStart.  
  
 If you set a date in SelectionStart that causes the selection to exceed the number of days specified by the <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> property, the value of <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> is adjusted; <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> is automatically set so that the number of days selected is equal to <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A>.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> represents the number of days in the selection, not the difference between SelectionStart and <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A>. For example, if <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> is 7 (the default), then SelectionStart and <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> can be no more than six days apart.  
  
> [!NOTE]
>  Setting the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> for a <xref:System.Windows.Forms.MonthCalendar> control that has visual styles enabled will result in the selection range not painting correctly on the control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the SelectionStart and <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> properties. To run the example, paste the following code into a form containing a <xref:System.Windows.Forms.MonthCalendar> control named `MonthCalendar1`, and call the `ShowAWeeksVacationOneMonthFromToday` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  
  
 [!code-cpp[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/cpp/p-system.windows.forms.m_11_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/csharp/p-system.windows.forms.m_11_1.cs)]
 [!code-vb[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_11_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The date value is less than &lt;xref:System.Windows.Forms.MonthCalendar.MinDate%2A&gt;.  
  
 -or-  
  
 The date value is greater than &lt;xref:System.Windows.Forms.MonthCalendar.MaxDate%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">The new &lt;xref:System.Windows.Forms.Control.Left%2A&gt; property value of the control.</param>
        <param name="y">The new &lt;xref:System.Windows.Forms.Control.Right%2A&gt; property value of the control.</param>
        <param name="width">The new &lt;xref:System.Windows.Forms.Control.Width%2A&gt; property value of the control.</param>
        <param name="height">The new &lt;xref:System.Windows.Forms.Control.Height%2A&gt; property value of the control.</param>
        <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</param>
        <summary>Overrides the &lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt; method.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetCalendarDimensions">
      <MemberSignature Language="C#" Value="public void SetCalendarDimensions (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCalendarDimensions(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The number of columns.</param>
        <param name="y">The number of rows.</param>
        <summary>Sets the number of columns and rows of months to display.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The maximum number of months that you can display is 12, restricted to one calendar year. The product of the `x` and `y` parameters should be 12 or less. For values of `x` and `y` that have a product of more than 12, the greater of the `x` and `y` values will be iteratively reduced until the product is 12 or less.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" /> or <paramref name="y" /> is less than 1.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetDate">
      <MemberSignature Language="C#" Value="public void SetDate (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDate(valuetype System.DateTime date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The date to be selected.</param>
        <summary>Sets a date as the currently selected date.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method sets the <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> and the <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> properties to the specified date. This method is the functional equivalent of setting the selection range to a single day through the <xref:System.Windows.Forms.MonthCalendar.SetSelectionRange%2A> method or the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is less than the minimum allowable date.  
  
 -or-  
  
 The value is greater than the maximum allowable date.  
  
 This exception will only be thrown if &lt;xref:System.Windows.Forms.MonthCalendar.MinDate%2A&gt; or &lt;xref:System.Windows.Forms.MonthCalendar.MaxDate%2A&gt; have been set explicitly.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetSelectionRange">
      <MemberSignature Language="C#" Value="public void SetSelectionRange (DateTime date1, DateTime date2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionRange(valuetype System.DateTime date1, valuetype System.DateTime date2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date1" Type="System.DateTime" />
        <Parameter Name="date2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date1">The beginning date of the selection range.</param>
        <param name="date2">The end date of the selection range.</param>
        <summary>Sets the selected dates in a month calendar control to the specified date range.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Using this method is functionally equivalent to setting the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> property. You can set the start and end dates separately by setting either the <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A> or <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> property.  
  
 If you set the `date1` parameter greater than the `date2` parameter, both dates are set to the `date1` value.  
  
> [!NOTE]
>  Scrolling through the calendar display with the navigation buttons when a range is selected can cause unexpected results (for example, the date range is not preserved). If you have a single month displayed with a range of 04/01/2001 to 04/10/2001, scrolling the calendar back changes the selected range as follows: 03/01/2001 to 03/10/2001. If you have multiple months displayed, such as March and April with a selected range of 04/01/2001 to 04/10/2001, scrolling the calendar back to January and February changes the selected range as follows: 01/01/2001 to 01/10/2001.  
  
> [!NOTE]
>  Setting the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> for a <xref:System.Windows.Forms.MonthCalendar> control that has visual styles enabled will result in the selection range not painting correctly on the control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="date1" /> is less than the minimum date allowable for a month calendar control.  
  
 -or-  
  
 <paramref name="date1" /> is greater than the maximum allowable date for a month calendar control.  
  
 -or-  
  
 <paramref name="date2" /> is less than the minimum date allowable for a month calendar control.  
  
 -or-  
  
 <paramref name="date2" /> is greater than the maximum allowable date for a month calendar control.  
  
 This exception will only be thrown if &lt;xref:System.Windows.Forms.MonthCalendar.MinDate%2A&gt; or &lt;xref:System.Windows.Forms.MonthCalendar.MaxDate%2A&gt; have been set explicitly.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowToday">
      <MemberSignature Language="C#" Value="public bool ShowToday { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToday" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the date represented by the &lt;xref:System.Windows.Forms.MonthCalendar.TodayDate%2A&gt; property is displayed at the bottom of the control.</summary>
        <value>
          <see langword="true" /> if today's date is displayed; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The date is displayed in the format specified by the system settings for the short date format.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_2_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_2_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowTodayCircle">
      <MemberSignature Language="C#" Value="public bool ShowTodayCircle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTodayCircle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether today's date is identified with a circle or a square.</summary>
        <value>
          <see langword="true" /> if today's date is identified with a circle or a square; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If ShowTodayCircle is `true`, and visual styles are enabled and supported on the computer running the application, today's date will be enclosed in a square, otherwise today's date will be circled.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_10_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_10_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_10_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowWeekNumbers">
      <MemberSignature Language="C#" Value="public bool ShowWeekNumbers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWeekNumbers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the month calendar control displays week numbers (1-52) to the left of each row of days.</summary>
        <value>
          <see langword="true" /> if the week numbers are displayed; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_46_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_46_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_46_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SingleMonthSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size SingleMonthSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size SingleMonthSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum size to display one month of the calendar.</summary>
        <value>The size, in pixels, necessary to fully display one month in the calendar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The size information is presented in the form of the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> members, representing the minimum width and height required to display one month in the control. The minimum required window size for a month calendar control depends on the currently selected font.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The dimensions cannot be retrieved.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size of the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</summary>
        <value>The <see cref="T:System.Drawing.Size" /> of the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text to display on the <see cref="T:System.Windows.Forms.MonthCalendar" />.</summary>
        <value>
          <see langword="Null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is not relevant for this class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the &lt;xref:System.Windows.Forms.MonthCalendar.Text%2A&gt; property changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the background color of the title area of the calendar.</summary>
        <value>A <see cref="T:System.Drawing.Color" />. The default is the system color for active captions.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The font color of the days-of-the-week text depends on the TitleBackColor property. Setting the TitleBackColor equal to the <xref:System.Windows.Forms.Control.BackColor%2A> for the main display area of the calendar causes the days-of-the-week text to become unreadable.  
  
 Starting with Windows Vista and depending on the theme, setting this property might not change the appearance of the calendar. For example, if Windows is set to use the Aero theme, setting this property has no effect. This is because an updated version of the calendar is rendered with an appearance that is derived at run time from the current operating system theme. If you want to use this property and enable the earlier version of the calendar, you can disable visual styles for your application. Disabling visual styles might affect the appearance and behavior of other controls in your application. To disable visual styles in Visual Basic, open the Project Designer and uncheck the **Enable XP visual styles** check box. To disable visual styles in C#, open Program.cs and comment out `Application.EnableVisualStyles();`.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, TitleBackColor, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_55_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_55_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_55_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value is not a valid <see cref="T:System.Drawing.Color" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the foreground color of the title area of the calendar.</summary>
        <value>A <see cref="T:System.Drawing.Color" />. The default is the system color for active caption text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Starting with Windows Vista and depending on the theme, setting this property might not change the appearance of the calendar. For example, if Windows is set to use the Aero theme, setting this property has no effect. This is because an updated version of the calendar is rendered with an appearance that is derived at run time from the current operating system theme. If you want to use this property and enable the earlier version of the calendar, you can disable visual styles for your application. Disabling visual styles might affect the appearance and behavior of other controls in your application. To disable visual styles in Visual Basic, open the Project Designer and uncheck the **Enable XP visual styles** check box. To disable visual styles in C#, open Program.cs and comment out `Application.EnableVisualStyles();`.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, TitleForeColor, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and <xref:System.Windows.Forms.MonthCalendar.TrailingForeColor%2A> properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_21_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_21_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_21_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value is not a valid <see cref="T:System.Drawing.Color" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TodayDate">
      <MemberSignature Language="C#" Value="public DateTime TodayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TodayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value that is used by <see cref="T:System.Windows.Forms.MonthCalendar" /> as today's date.</summary>
        <value>A &lt;xref:System.DateTime&gt; representing today's date. The default value is the current system date.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the TodayDate property returns the current system date, and the <xref:System.Windows.Forms.MonthCalendar.TodayDateSet%2A> property is `false`. Setting the TodayDate property sets the <xref:System.Windows.Forms.MonthCalendar.TodayDateSet%2A> property to `true` and, from that point, the value returned by the TodayDate property is the one the user sets.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Windows.Forms.MonthCalendar.SelectionStart%2A>, TodayDate and <xref:System.Windows.Forms.MonthCalendar.SelectionEnd%2A> properties. To run the example, paste the following code into a form containing a <xref:System.Windows.Forms.MonthCalendar> control named `MonthCalendar1`, and call the `ShowAWeeksVacationOneMonthFromToday` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  
  
 [!code-cpp[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/cpp/p-system.windows.forms.m_53_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/csharp/p-system.windows.forms.m_53_1.cs)]
 [!code-vb[System.Windows.Forms.MonthCalendarSelection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_53_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is less than the minimum allowable date.  
  
 -or-  
  
 The value is greater than the maximum allowable date.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TodayDateSet">
      <MemberSignature Language="C#" Value="public bool TodayDateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TodayDateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the &lt;xref:System.Windows.Forms.MonthCalendar.TodayDate%2A&gt; property has been explicitly set.</summary>
        <value>
          <see langword="true" /> if the value for the &lt;xref:System.Windows.Forms.MonthCalendar.TodayDate%2A&gt; property has been explicitly set; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the <see cref="T:System.Windows.Forms.MonthCalendar" /> control.</summary>
        <returns>A string that represents the current <see cref="T:System.Windows.Forms.MonthCalendar" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The string includes the type and the string returned by the <xref:System.Windows.Forms.SelectionRange.ToString%2A> method of the <xref:System.Windows.Forms.MonthCalendar.SelectionRange%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrailingForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TrailingForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TrailingForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the color of days in months that are not fully displayed in the control.</summary>
        <value>A <see cref="T:System.Drawing.Color" />. The default is &lt;xref:System.Drawing.Color.Gray%2A?displayProperty=fullName&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the calendar is displayed, some dates precede and some follow the months that are fully displayed. Using the TrailingForeColor property, you can modify the color of the text for those dates.  
  
 Starting with Windows Vista and depending on the theme, setting this property might not change the appearance of the calendar. For example, if Windows is set to use the Aero theme, setting this property has no effect. This is because an updated version of the calendar is rendered with an appearance that is derived at run time from the current operating system theme. If you want to use this property and enable the earlier version of the calendar, you can disable visual styles for your application. Disabling visual styles might affect the appearance and behavior of other controls in your application. To disable visual styles in Visual Basic, open the Project Designer and uncheck the **Enable XP visual styles** check box. To disable visual styles in C#, open Program.cs and comment out `Application.EnableVisualStyles();`.  
  
   
  
## Examples  
 The following code example displays a form containing a <xref:System.Windows.Forms.MonthCalendar> control that displays one calendar year. The example demonstrates setting the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleBackColor%2A>, <xref:System.Windows.Forms.MonthCalendar.TitleForeColor%2A>, <xref:System.Windows.Forms.MonthCalendar.CalendarDimensions%2A>, and TrailingForeColor properties to customize the look of the calendar control. Other properties such as <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A>, and <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A> are set to customize which dates are bold. The example also sets the <xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>, <xref:System.Windows.Forms.MonthCalendar.MaxDate%2A>, <xref:System.Windows.Forms.MonthCalendar.MinDate%2A>, and <xref:System.Windows.Forms.MonthCalendar.MaxSelectionCount%2A> properties to change the calendar format. The <xref:System.Windows.Forms.MonthCalendar.DateSelected> and <xref:System.Windows.Forms.MonthCalendar.DateChanged> events are also handled and their status is displayed on the form.  
  
 [!code-vb[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_54_1.vb)]
 [!code-cpp[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/cpp/p-system.windows.forms.m_54_1.cpp)]
 [!code-cs[System.Windows.Forms.MonthCalendar#1](~/add/codesnippet/csharp/p-system.windows.forms.m_54_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value is not a valid <see cref="T:System.Drawing.Color" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UpdateBoldedDates">
      <MemberSignature Language="C#" Value="public void UpdateBoldedDates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateBoldedDates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Repaints the bold dates to reflect the dates set in the lists of bold dates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the UpdateBoldedDates method to reflect changes made to <xref:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates%2A>, <xref:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates%2A>, or <xref:System.Windows.Forms.MonthCalendar.BoldedDates%2A> properties, either directly by modifying elements of the array or by using the add or remove methods provided to modify the date lists.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        <summary>Overrides the &lt;xref:System.Windows.Forms.Control.WndProc%2A&gt; method.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for calling unmanaged code. Associated enumeration: F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode</permission>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>