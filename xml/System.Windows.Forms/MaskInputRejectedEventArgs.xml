<Type Name="MaskInputRejectedEventArgs" FullName="System.Windows.Forms.MaskInputRejectedEventArgs">
  <TypeSignature Language="C#" Value="public class MaskInputRejectedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskInputRejectedEventArgs extends System.EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MaskInputRejectedEventArgs class provides information about the invalid input character, namely its zero-based position in the formatted string and a general description about why the character was rejected.  
  
   
  
## Examples  
 The following code example demonstrates the use of this type. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#486](~/add/codesnippet/csharp/t-system.windows.forms.m_6_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#486](~/add/codesnippet/visualbasic/t-system.windows.forms.m_6_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskInputRejectedEventArgs (int position, System.ComponentModel.MaskedTextResultHint rejectionHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 position, valuetype System.ComponentModel.MaskedTextResultHint rejectionHint) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="rejectionHint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="position">An &lt;xref:System.Int32&gt; value that contains the zero-based position of the character that failed the mask. The position includes literal characters.</param>
        <param name="rejectionHint">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that generally describes why the character was rejected.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.MaskInputRejectedEventArgs" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MaskInputRejectedEventArgs constructor sets the values of the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> and <xref:System.Windows.Forms.MaskInputRejectedEventArgs.RejectionHint%2A> properties.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the position in the mask corresponding to the invalid input character.</summary>
        <value>An &lt;xref:System.Int32&gt; value that contains the zero-based position of the character that failed the mask. The position includes literal characters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Position property is set in the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected?displayProperty=fullName> event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#486](~/add/codesnippet/csharp/p-system.windows.forms.m_35_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#486](~/add/codesnippet/visualbasic/p-system.windows.forms.m_35_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RejectionHint">
      <MemberSignature Language="C#" Value="public System.ComponentModel.MaskedTextResultHint RejectionHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.MaskedTextResultHint RejectionHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.MaskedTextResultHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumerated value that describes why the input character was rejected.</summary>
        <value>A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that generally describes why the character was rejected.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Forms.MaskInputRejectedEventArgs> property is set in the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected?displayProperty=fullName> event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#486](~/add/codesnippet/csharp/p-system.windows.forms.m_44_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#486](~/add/codesnippet/visualbasic/p-system.windows.forms.m_44_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>