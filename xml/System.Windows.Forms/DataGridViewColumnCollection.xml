<Type Name="DataGridViewColumnCollection" FullName="System.Windows.Forms.DataGridViewColumnCollection">
  <TypeSignature Language="C#" Value="public class DataGridViewColumnCollection : System.Windows.Forms.BaseCollection, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewColumnCollection extends System.Windows.Forms.BaseCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BaseCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Windows.Forms.DataGridViewColumn" /> objects in a <see cref="T:System.Windows.Forms.DataGridView" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can retrieve an instance of this class through the <xref:System.Windows.Forms.DataGridView.Columns%2A> property of the <xref:System.Windows.Forms.DataGridView> control. The collection maintains a reference to the control through the <xref:System.Windows.Forms.DataGridViewColumnCollection.DataGridView%2A> property.  
  
   
  
## Examples  
 The following code example illustrates the use of this type.  
  
 [!code-cs[System.Windows.Forms.DataGridViewMisc2#20](~/add/codesnippet/csharp/t-system.windows.forms.d_66_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/add/codesnippet/visualbasic/t-system.windows.forms.d_66_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewColumnCollection (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">The <see cref="T:System.Windows.Forms.DataGridView" /> that created this collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /> class for the given <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.DataGridViewColumn dataGridViewColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> to add.</param>
        <summary>Adds the given column to the collection.</summary>
        <returns>The index of the column.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates the use of this method.  
  
 [!code-cs[System.Windows.Forms.DataGridViewMisc2#20](~/add/codesnippet/csharp/e2dc7f6e-c283-4883-b88e-_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/add/codesnippet/visualbasic/e2dc7f6e-c283-4883-b88e-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumn" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.  
  
 -or-  
  
 The <paramref name="dataGridViewColumn" />&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> or <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />. Use the control &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A&gt; and &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23EndInit%2A&gt; methods to temporarily set conflicting property values.  
  
 -or-  
  
 The <paramref name="dataGridViewColumn" />&lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A?displayProperty=fullName&gt; property value is <see langword="false" />.  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> has an &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and a &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value of <see langword="true" />.  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; property value that would cause the combined &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; values of all columns in the control to exceed 65535.  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> has &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; and &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property values that would display it among a set of adjacent columns with the opposite &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value.  
  
 -or-  
  
 The <see cref="T:System.Windows.Forms.DataGridView" /> control contains at least one row and <paramref name="dataGridViewColumn" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.CellType%2A&gt; property value of <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (string columnName, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(string columnName, string headerText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">The name by which the column will be referred.</param>
        <param name="headerText">The text for the column's header.</param>
        <summary>Adds a <see cref="T:System.Windows.Forms.DataGridViewTextBoxColumn" /> with the given column name and column header text to the collection.</summary>
        <returns>The index of the column.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `columnName` and `headerText` parameters are related to the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A> and <xref:System.Windows.Forms.DataGridViewColumn.HeaderText%2A> properties, respectively.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> or <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />, which conflicts with the default column &lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" />.  
  
 -or-  
  
 The default column &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; property value of 100 would cause the combined &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; values of all columns in the control to exceed 65535.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.DataGridViewColumn[] dataGridViewColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.DataGridViewColumn[] dataGridViewColumns) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumns" Type="System.Windows.Forms.DataGridViewColumn[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridViewColumns">An array of <see cref="T:System.Windows.Forms.DataGridViewColumn" /> objects to add.</param>
        <summary>Adds a range of columns to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates the use of this method. This example is part of a larger example available in [How to: Set the Sizing Modes of the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-cs[System.Windows.Forms.DataGridViewSizingScenarios#40](~/add/codesnippet/csharp/268915a4-7009-448d-8ab0-_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewSizingScenarios#40](~/add/codesnippet/visualbasic/268915a4-7009-448d-8ab0-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumns" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 -or-  
  
 At least one of the values in <paramref name="dataGridViewColumns" /> is <see langword="null" />.  
  
 -or-  
  
 At least one of the columns in <paramref name="dataGridViewColumns" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.  
  
 -or-  
  
 At least one of the columns in <paramref name="dataGridViewColumns" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.CellType%2A&gt; property value of <see langword="null" /> and the <see cref="T:System.Windows.Forms.DataGridView" /> control contains at least one row.  
  
 -or-  
  
 At least one of the columns in <paramref name="dataGridViewColumns" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> or <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />. Use the control &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A&gt; and &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23EndInit%2A&gt; methods to temporarily set conflicting property values.  
  
 -or-  
  
 At least one of the columns in <paramref name="dataGridViewColumns" /> has an &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A?displayProperty=fullName&gt; property value is <see langword="false" />.  
  
 -or-  
  
 At least one of the columns in <paramref name="dataGridViewColumns" /> has an &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and a &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value of <see langword="true" />.  
  
 -or-  
  
 The columns in <paramref name="dataGridViewColumns" /> have &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; property values that would cause the combined &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; values of all columns in the control to exceed 65535.  
  
 -or-  
  
 At least two of the values in <paramref name="dataGridViewColumns" /> are references to the same <see cref="T:System.Windows.Forms.DataGridViewColumn" />.  
  
 -or-  
  
 At least one of the columns in <paramref name="dataGridViewColumns" /> has &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; and &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property values that would display it among a set of adjacent columns with the opposite &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates the use of this method. This example is part of a larger example available in [Column Fill Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-cs[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/add/codesnippet/csharp/m-system.windows.forms.d_83_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/add/codesnippet/visualbasic/m-system.windows.forms.d_83_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the collection changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Examples of collection changes include additions or removals of columns.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CollectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridViewColumnCollection> named `DataGridViewColumnCollection1`. Then ensure that the event handler is associated with the CollectionChanged event.  
  
 [!code-cs[System.Windows.Forms.EventExamples#372](~/add/codesnippet/csharp/e-system.windows.forms.d_84_1.cs)]
 [!code-vb[System.Windows.Forms.EventExamples#372](~/add/codesnippet/visualbasic/e-system.windows.forms.d_84_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string columnName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">The name of the column to look for.</param>
        <summary>Determines whether the collection contains the column referred to by the given name.</summary>
        <returns>
          <see langword="true" /> if the column is contained in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The name of a column is indicated by the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="columnName" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Windows.Forms.DataGridViewColumn dataGridViewColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> to look for.</param>
        <summary>Determines whether the collection contains the given column.</summary>
        <returns>
          <see langword="true" /> if the given column is in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Forms.DataGridViewColumn[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Forms.DataGridViewColumn[] array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Forms.DataGridViewColumn[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The destination <see cref="T:System.Windows.Forms.DataGridViewColumn" /> array.</param>
        <param name="index">The index of the destination array at which to start copying.</param>
        <summary>Copies the items from the collection to the given array.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataGridView">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.DataGridView DataGridView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView DataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridView" /> upon which the collection performs column-related operations.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridView" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetColumnCount">
      <MemberSignature Language="C#" Value="public int GetColumnCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumnCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter for inclusion.</param>
        <summary>Returns the number of columns that meet the given filter requirements.</summary>
        <returns>The number of columns that meet the filter requirements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates how to use this method to get the number of selected columns.  
  
 [!code-cs[System.Windows.Forms.DataGridViewSelectedCollections#30](~/add/codesnippet/csharp/8f0c7116-f6ae-4b18-ac27-_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#30](~/add/codesnippet/visualbasic/8f0c7116-f6ae-4b18-ac27-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsWidth">
      <MemberSignature Language="C#" Value="public int GetColumnsWidth (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColumnsWidth(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter for inclusion.</param>
        <summary>Returns the width, in pixels, required to display all of the columns that meet the given filter requirements.</summary>
        <returns>The width, in pixels, that is necessary to display all of the columns that meet the filter requirements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates the use of this method. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/visualbasic/a24443ff-1212-48b7-a123-_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/csharp/a24443ff-1212-48b7-a123-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFirstColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn GetFirstColumn (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewColumn GetFirstColumn(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represents the filter for inclusion.</param>
        <summary>Returns the first column in display order that meets the given inclusion-filter requirements.</summary>
        <returns>The first column in display order that meets the given filter requirements, or <see langword="null" /> if no column is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The first column in display order is the column with the lowest <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value, regardless of whether the column is actually visible on the screen.  
  
 This method lets you determine the first column that fits the given criteria without having to compare index values directly.  
  
   
  
## Examples  
 The following code example uses the GetFirstColumn method to swap the first displayed column and the last displayed column.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#170](~/add/codesnippet/cpp/0776ec1c-3bed-4058-b5dd-_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#170](~/add/codesnippet/visualbasic/0776ec1c-3bed-4058-b5dd-_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#170](~/add/codesnippet/csharp/0776ec1c-3bed-4058-b5dd-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFirstColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn GetFirstColumn (System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewColumn GetFirstColumn(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for inclusion.</param>
        <param name="excludeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for exclusion.</param>
        <summary>Returns the first column in display order that meets the given inclusion-filter and exclusion-filter requirements.</summary>
        <returns>The first column in display order that meets the given filter requirements, or <see langword="null" /> if no column is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The first column in display order is the column with the lowest <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value, regardless of whether the column is actually visible on the screen.  
  
 This method lets you determine the first column that fits the given criteria without having to compare index values directly.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">At least one of the filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetLastColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn GetLastColumn (System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewColumn GetLastColumn(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for inclusion.</param>
        <param name="excludeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for exclusion.</param>
        <summary>Returns the last column in display order that meets the given filter requirements.</summary>
        <returns>The last displayed column in display order that meets the given filter requirements, or <see langword="null" /> if no column is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The last column in display order is the column with the highest <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value, regardless of whether the column is actually visible on the screen.  
  
 This method lets you determine the last column that fits the given criteria without having to compare index values directly.  
  
   
  
## Examples  
 The following code example uses the GetLastColumn method to swap the last displayed column and the first displayed column.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#170](~/add/codesnippet/cpp/f191d848-e544-4a22-91f0-_1.cpp)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#170](~/add/codesnippet/visualbasic/f191d848-e544-4a22-91f0-_1.vb)]
 [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#170](~/add/codesnippet/csharp/f191d848-e544-4a22-91f0-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">At least one of the filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetNextColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn GetNextColumn (System.Windows.Forms.DataGridViewColumn dataGridViewColumnStart, System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewColumn GetNextColumn(class System.Windows.Forms.DataGridViewColumn dataGridViewColumnStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumnStart" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumnStart">The column from which to start searching for the next column.</param>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for inclusion.</param>
        <param name="excludeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for exclusion.</param>
        <summary>Gets the first column after the given column in display order that meets the given filter requirements.</summary>
        <returns>The next column that meets the given filter requirements, or <see langword="null" /> if no column is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The next column in display order is the column with the lowest <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value higher than the <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value of the specified column, regardless of whether the column is actually visible on the screen.  
  
 This method lets you determine the next column after the current column that fits the given criteria without having to compare index values directly.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumnStart" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">At least one of the filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn GetPreviousColumn (System.Windows.Forms.DataGridViewColumn dataGridViewColumnStart, System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewColumn GetPreviousColumn(class System.Windows.Forms.DataGridViewColumn dataGridViewColumnStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumnStart" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumnStart">The column from which to start searching for the previous column.</param>
        <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for inclusion.</param>
        <param name="excludeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that represent the filter to apply for exclusion.</param>
        <summary>Gets the last column prior to the given column in display order that meets the given filter requirements.</summary>
        <returns>The previous column that meets the given filter requirements, or <see langword="null" /> if no column is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The previous column in display order is the column with the highest <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value lower than the <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A> value of the specified column, regardless of whether the column is actually visible on the screen.  
  
 This method lets you determine the first column before the current column that fits the given criteria without having to compare index values directly.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumnStart" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">At least one of the filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.DataGridViewColumn dataGridViewColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> to return the index of.</param>
        <summary>Gets the index of the given <see cref="T:System.Windows.Forms.DataGridViewColumn" /> in the collection.</summary>
        <returns>The index of the given <see cref="T:System.Windows.Forms.DataGridViewColumn" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int columnIndex, System.Windows.Forms.DataGridViewColumn dataGridViewColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 columnIndex, class System.Windows.Forms.DataGridViewColumn dataGridViewColumn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
      </Parameters>
      <Docs>
        <param name="columnIndex">The zero-based index at which to insert the given column.</param>
        <param name="dataGridViewColumn">The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> to insert.</param>
        <summary>Inserts a column at the given index in the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates the use of this method. For more information, see [How to: Add an Unbound Column to a Data-Bound Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-cs[System.Windows.Forms.DataGridViewMisc#010](~/add/codesnippet/csharp/c3890776-5047-45ef-aea1-_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#010](~/add/codesnippet/visualbasic/c3890776-5047-45ef-aea1-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumn" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.  
  
 -or-  
  
 The <paramref name="dataGridViewColumn" />&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> or <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />. Use the control &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A&gt; and &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23EndInit%2A&gt; methods to temporarily set conflicting property values.  
  
 -or-  
  
 The <paramref name="dataGridViewColumn" />&lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A?displayProperty=fullName&gt; property value is <see langword="false" />.  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> has an &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and a &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value of <see langword="true" />.  
  
 -or-  
  
 <paramref name="dataGridViewColumn" /> has &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; and &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property values that would display it among a set of adjacent columns with the opposite &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value.  
  
 -or-  
  
 The <see cref="T:System.Windows.Forms.DataGridView" /> control contains at least one row and <paramref name="dataGridViewColumn" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.CellType%2A&gt; property value of <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the column to get or set.</param>
        <summary>Gets or sets the column at the given index in the collection.</summary>
        <value>The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> at the given index.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero or greater than the number of columns in the collection minus one.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn this[string columnName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn Item(string)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">The name of the column to get or set.</param>
        <summary>Gets or sets the column of the given name in the collection.</summary>
        <value>The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> identified by the <paramref name="columnName" /> parameter.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="columnName" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of elements contained in the <see cref="T:System.Windows.Forms.BaseCollection" /> instance.</summary>
        <value>An <see cref="T:System.Collections.ArrayList" /> containing the elements of the collection. This property returns <see langword="null" /> unless overridden in a derived class.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataGridViewColumnCollection.CollectionChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnCollectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string columnName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">The name of the column to delete.</param>
        <summary>Removes the column with the specified name from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The name of a column is indicated by the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> property.  
  
 To remove a column that is automatically generated when binding to a data source, call this method in a <xref:System.Windows.Forms.DataGridView.DataBindingComplete?displayProperty=fullName> event handler.  
  
   
  
## Examples  
 The following code example illustrates the use of this method. For more information, see [How to: Remove Autogenerated Columns from a Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-cs[System.Windows.Forms.DataGridViewMisc#110](~/add/codesnippet/csharp/m-system.windows.forms.d_4_1.cs)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#110](~/add/codesnippet/visualbasic/m-system.windows.forms.d_4_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="columnName" /> does not match the name of any column in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="columnName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.DataGridViewColumn dataGridViewColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">The column to delete.</param>
        <summary>Removes the specified column from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To remove a column that is automatically generated when binding to a data source, call this method in a <xref:System.Windows.Forms.DataGridView.DataBindingComplete?displayProperty=fullName> event handler.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewColumn" /> is not in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumn" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the column to delete.</param>
        <summary>Removes the column at the given index in the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To remove a column that is automatically generated when binding to a data source, call this method in a <xref:System.Windows.Forms.DataGridView.DataBindingComplete?displayProperty=fullName> event handler.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero or greater than the number of columns in the control minus one.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
        <param name="index">The zero-based index in `array` at which copying begins.</param>
        <summary>Copies the entire contents of the collection to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than 0.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> is multidimensional.  
  
 -or-  
  
 The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of elements in the collection.</summary>
        <value>The number of elements in the <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the collection is synchronized.</summary>
        <value>
          <see langword="false" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        <value>An &lt;xref:System.Object&gt; that can be used to synchronize access to the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The &lt;xref:System.Object&gt; to add to the end of the collection. The value can be <see langword="null" />.</param>
        <summary>Adds an object to the end of the collection.</summary>
        <returns>The index at which <paramref name="value" /> has been added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewColumn" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 -or-  
  
 The column indicated by <paramref name="value" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt; property value of the column indicated by <paramref name="value" /> is <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> or <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />. Use the control &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A&gt; and &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23EndInit%2A&gt; methods to temporarily set conflicting property values.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of the column indicated by <paramref name="value" /> is <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A?displayProperty=fullName&gt; property value is <see langword="false" />.  
  
 -or-  
  
 The column indicated by <paramref name="value" /> has an &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and a &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value of <see langword="true" />.  
  
 -or-  
  
 The column indicated by <paramref name="value" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; property value that would cause the combined &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; values of all columns in the control to exceed 65535.  
  
 -or-  
  
 The column indicated by <paramref name="value" /> has &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; and &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property values that would display it among a set of adjacent columns with the opposite &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value.  
  
 -or-  
  
 The <see cref="T:System.Windows.Forms.DataGridView" /> control contains at least one row and the column indicated by <paramref name="value" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.CellType%2A&gt; property value of <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all elements from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The &lt;xref:System.Object&gt; to locate in the collection. The value can be <see langword="null" />.</param>
        <summary>Determines whether an object is in the collection.</summary>
        <returns>
          <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The &lt;xref:System.Object&gt; to locate in the collection. The value can be <see langword="null" />.</param>
        <summary>Determines the index of a specific item in the collection.</summary>
        <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the collection, if found; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which `value` should be inserted.</param>
        <param name="value">The &lt;xref:System.Object&gt; to insert. The value can be <see langword="null" />.</param>
        <summary>Inserts an element into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewColumn" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 -or-  
  
 The column indicated by <paramref name="value" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt; property value of the column indicated by <paramref name="value" /> is <see cref="T:System.Windows.Forms.DataGridViewColumnSortMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt; property value is <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> or <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />. Use the control &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A&gt; and &lt;xref:System.Windows.Forms.DataGridView.System%23ComponentModel%23ISupportInitialize%23EndInit%2A&gt; methods to temporarily set conflicting property values.  
  
 -or-  
  
 The &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of the column indicated by <paramref name="value" /> is <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and the &lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A?displayProperty=fullName&gt; property value is <see langword="false" />.  
  
 -or-  
  
 The column indicated by <paramref name="value" /> has an &lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt; property value of <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> and a &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value of <see langword="true" />.  
  
 -or-  
  
 The column indicated by <paramref name="value" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; property value that would cause the combined &lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt; values of all columns in the control to exceed 65535.  
  
 -or-  
  
 The column indicated by <paramref name="value" /> has &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; and &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property values that would display it among a set of adjacent columns with the opposite &lt;xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A&gt; property value.  
  
 -or-  
  
 The <see cref="T:System.Windows.Forms.DataGridView" /> control contains at least one row and the column indicated by <paramref name="value" /> has a &lt;xref:System.Windows.Forms.DataGridViewColumn.CellType%2A&gt; property value of <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection has a fixed size.</summary>
        <value>
          <see langword="false" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection is read-only.</summary>
        <value>
          <see langword="false" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the column to get.</param>
        <summary>Gets or sets the element at the specified index.</summary>
        <value>The <see cref="T:System.Windows.Forms.DataGridViewColumn" /> at the specified index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 This implementation does not support setting this property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">This property is being set.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">When getting this property, <paramref name="index" /> is less than zero or greater than the number of columns in the collection minus one.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The &lt;xref:System.Object&gt; to remove from the collection. The value can be <see langword="null" />.</param>
        <summary>Removes the first occurrence of the specified object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewColumn" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The location of the element to delete.</param>
        <summary>Removes the element with the specified index from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewColumnCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero or greater than the number of columns in the control minus one.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new columns from being added:  
  
-   Selecting all cells in the control.  
  
-   Clearing the selection.  
  
-   Updating column &lt;xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex%2A&gt; property values.  
  
 -or-  
  
 This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>