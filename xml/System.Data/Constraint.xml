<Type Name="Constraint" FullName="System.Data.Constraint">
  <TypeSignature Language="C#" Value="public abstract class Constraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Constraint extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ConstraintName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ConstraintConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a constraint that can be enforced on one or more <see cref="T:System.Data.DataColumn" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A constraint is a rule used to maintain the integrity of the data in the <xref:System.Data.DataTable>. For example, when you delete a value that is used in one or more related tables, a <xref:System.Data.ForeignKeyConstraint> determines whether the values in the related tables are also deleted, set to null values, set to default values, or whether no action occurs. A <xref:System.Data.UniqueConstraint>, on the other hand, just makes sure that all values within a particular table are unique. For more information, see [DataTable Constraints](~/add/includes/ajax-current-ext-md.md).  
  
 A base Constraint constructor is not used. Primary or unique key constraints are created by using the <xref:System.Data.UniqueConstraint> constructor, and foreign key constraints are created by using the <xref:System.Data.ForeignKeyConstraint> constructor.  
  
   
  
## Examples  
 The following example examines the collection of constraints for a <xref:System.Data.DataTable> and determines whether each constraint is a <xref:System.Data.UniqueConstraint> or a <xref:System.Data.ForeignKeyConstraint>. The properties of the constraint are then displayed.  
  
 [!code-vb[Classic WebData Constraint Example#1](~/add/codesnippet/visualbasic/t-system.data.constraint_1.vb)]
 [!code-cs[Classic WebData Constraint Example#1](~/add/codesnippet/csharp/t-system.data.constraint_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe>This type is safe for multithreaded read operations. You must synchronize any write operations.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Constraint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Constraint" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is called by derived class constructors to initialize state in this type.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="_DataSet">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataSet _DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet _DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this constraint belongs.</summary>
        <value>The <see cref="T:System.Data.DataSet" /> to which the constraint belongs.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CheckStateForProperty">
      <MemberSignature Language="C#" Value="protected void CheckStateForProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckStateForProperty() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this constraint belongs.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConstraintName">
      <MemberSignature Language="C#" Value="public virtual string ConstraintName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConstraintName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of a constraint in the <see cref="T:System.Data.ConstraintCollection" />.</summary>
        <value>The name of the <see cref="T:System.Data.Constraint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.ConstraintCollection> is returned by the <xref:System.Data.DataTable.Constraints%2A> property of the <xref:System.Data.DataTable> class.  
  
   
  
## Examples  
 The following example iterates through the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable> and prints each ConstraintName.  
  
 [!code-vb[Classic WebData Constraint.ConstraintName Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_1_1.vb)]
 [!code-cs[Classic WebData Constraint.ConstraintName Example#1](~/add/codesnippet/csharp/p-system.data.constraint_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.Constraint" /> name is a null value or empty string.</exception>
        <exception cref="T:System.Data.DuplicateNameException">The <see cref="T:System.Data.ConstraintCollection" /> already contains a <see cref="T:System.Data.Constraint" /> with the same name (The comparison is not case-sensitive.).</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of user-defined constraint properties.</summary>
        <value>A <see cref="T:System.Data.PropertyCollection" /> of custom information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Extended properties must be of type <xref:System.String>. Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.Constraint> is written as XML.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetDataSet">
      <MemberSignature Language="C#" Value="protected void SetDataSet (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SetDataSet(class System.Data.DataSet dataSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to which this constraint will belong.</param>
        <summary>Sets the constraint's <see cref="T:System.Data.DataSet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the SetDataSet method to set the <xref:System.Data.DataSet> for a constraint.  
  
 [!code-cs[Classic WebData Constraint.SetDataSet Example#1](~/add/codesnippet/csharp/m-system.data.constraint_3_1.cs)]
 [!code-vb[Classic WebData Constraint.SetDataSet Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public abstract System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Data.DataTable" /> to which the constraint applies.</summary>
        <value>A <see cref="T:System.Data.DataTable" /> to which the constraint applies.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example returns the <xref:System.Data.DataTable> of a <xref:System.Data.Constraint>.  
  
 [!code-vb[Classic WebData Constraint.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_0_1.vb)]
 [!code-cs[Classic WebData Constraint.Table Example#1](~/add/codesnippet/csharp/p-system.data.constraint_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the &lt;xref:System.Data.Constraint.ConstraintName%2A&gt;, if there is one, as a string.</summary>
        <returns>The string value of the &lt;xref:System.Data.Constraint.ConstraintName%2A&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example returns the <xref:System.Data.Constraint.ConstraintName%2A> using the ToString method.  
  
 [!code-vb[Classic WebData Constraint.ToString Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_10_1.vb)]
 [!code-cs[Classic WebData Constraint.ToString Example#1](~/add/codesnippet/csharp/m-system.data.constraint_10_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>