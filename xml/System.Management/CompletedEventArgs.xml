<Type Name="CompletedEventArgs" FullName="System.Management.CompletedEventArgs">
  <TypeSignature Language="C#" Value="public class CompletedEventArgs : System.Management.ManagementEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompletedEventArgs extends System.Management.ManagementEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.Completed" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example calls a method asynchronously. The **Win32_Process.Create** method is called to create a new process for Calc.exe.  
  
 [!code-vb[wminet_CompletedEventArgs#1](~/add/codesnippet/visualbasic/t-system.management.comp_1_1.vb)]
 [!code-cs[wminet_CompletedEventArgs#1](~/add/codesnippet/csharp/t-system.management.comp_1_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Management.ManagementStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.ManagementStatus Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the completion status of the operation.</summary>
        <value>Returns a <see cref="T:System.Management.ManagementStatus" /> enumeration value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Property Value  
 A <xref:System.Management.ManagementStatus> value indicating the  status of the operation.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StatusObject">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject StatusObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementBaseObject StatusObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets additional status information within a WMI object. This may be null.</summary>
        <value>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains status information about the completion of an operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Property Value  
 `null` if an error did not occur. Otherwise, may be non-null if the provider supports extended error information.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>