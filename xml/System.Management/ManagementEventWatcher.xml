<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Subscribes to temporary event notifications based on a specified *event query*.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-vb[wminet_ManagementEventWatcher#1](~/add/codesnippet/visualbasic/t-system.management.mana_3_1.vb)]
 [!code-cs[wminet_ManagementEventWatcher#1](~/add/codesnippet/csharp/t-system.management.mana_3_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class. For further initialization, set the properties on the object. This is the default constructor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher()#1](~/add/codesnippet/csharp/m-system.management.mana_12_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher()#1](~/add/codesnippet/visualbasic/m-system.management.mana_12_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The namespace in which the watcher will be listening for events is the default namespace that is currently set.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-vb[wminet_ManagementEventWatcher(E)#1](~/add/codesnippet/visualbasic/c0e026ca-897f-4f5f-a9bd-_1.vb)]
 [!code-cs[wminet_ManagementEventWatcher(E)#1](~/add/codesnippet/csharp/c0e026ca-897f-4f5f-a9bd-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">A WMI event query, which defines the events for which the watcher will listen.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The namespace in which the watcher will be listening for events is the default namespace that is currently set.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher(S)#1](~/add/codesnippet/csharp/m-system.management.mana_6_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher(S)#1](~/add/codesnippet/visualbasic/m-system.management.mana_6_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</param>
        <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-vb[wminet_ManagementEventWatcher(M_E)#1](~/add/codesnippet/visualbasic/b5f1fa53-1f6d-471d-aeed-_1.vb)]
 [!code-cs[wminet_ManagementEventWatcher(M_E)#1](~/add/codesnippet/csharp/b5f1fa53-1f6d-471d-aeed-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">The management scope (namespace) in which the watcher will listen for events.</param>
        <param name="query">The query that defines the events for which the watcher will listen.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*. For this variant, the query and the scope are specified as strings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-vb[wminet_ManagementEventWatcher(S_S)#1](~/add/codesnippet/visualbasic/ecd7dbbd-83ad-4ab8-8132-_1.vb)]
 [!code-cs[wminet_ManagementEventWatcher(S_S)#1](~/add/codesnippet/csharp/ecd7dbbd-83ad-4ab8-8132-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</param>
        <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</param>
        <param name="options">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options. For this variant, the query and the scope are specified objects. The options object can specify options such as time-out and context information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-vb[wminet_ManagementEventWatcher(M_E_E)#1](~/add/codesnippet/visualbasic/883600df-4ae0-4065-84b0-_1.vb)]
 [!code-cs[wminet_ManagementEventWatcher(M_E_E)#1](~/add/codesnippet/csharp/883600df-4ae0-4065-84b0-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">The management scope (namespace) in which the watcher will listen for events.</param>
        <param name="query">The query that defines the events for which the watcher will listen.</param>
        <param name="options">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options. For this variant, the query and the scope are specified as strings. The options object can specify options such as a time-out and context information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher(S_S_E)#1](~/add/codesnippet/csharp/d5abf6b1-ec23-4c92-b0e0-_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher(S_S_E)#1](~/add/codesnippet/visualbasic/d5abf6b1-ec23-4c92-b0e0-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a new event arrives.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Event Data  
 The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event. The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)|Gets the operation context echoed back from the operation that triggered the event.|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|Gets the WMI event that was delivered.|  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ensures that outstanding calls are cleared. This is the destructor for the object. In C#, finalizers are expressed using destructor syntax.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the options used to watch for events.</summary>
        <value>Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Property Value  
 The options used to watch for events.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher_Options#1](~/add/codesnippet/csharp/p-system.management.mana_15_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/add/codesnippet/visualbasic/p-system.management.mana_15_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the criteria to apply to events.</summary>
        <value>Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Property Value  
 The criteria to apply to the events, which is equal to the *event query*.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher_Query#1](~/add/codesnippet/csharp/p-system.management.mana_3_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/add/codesnippet/visualbasic/p-system.management.mana_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scope in which to watch for events (namespace or scope).</summary>
        <value>Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Property Value  
 The scope in which to watch for events (namespace or scope).  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/add/codesnippet/visualbasic/p-system.management.mana_4_1.vb)]
 [!code-cs[wminet_ManagementEventWatcher_Scope#1](~/add/codesnippet/csharp/p-system.management.mana_4_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the subscription whether it is synchronous or asynchronous.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher_Stop#1](~/add/codesnippet/csharp/m-system.management.mana_8_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/add/codesnippet/visualbasic/m-system.management.mana_8_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a subscription is canceled.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## Event Data  
 The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event. The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)|Gets the operation context echoed back from the operation that triggered the event.|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|Gets the completion status of the operation.|  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Waits for the next event that matches the specified query to arrive, and then returns it.</summary>
        <returns>A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the WaitForNextEvent method. This example can be tested by starting a process, such as Notepad, while the example code is running.  
  
 [!code-cs[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/add/codesnippet/csharp/m-system.management.mana_11_1.cs)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/add/codesnippet/visualbasic/m-system.management.mana_11_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>