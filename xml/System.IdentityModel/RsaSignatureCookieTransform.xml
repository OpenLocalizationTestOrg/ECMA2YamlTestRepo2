<Type Name="RsaSignatureCookieTransform" FullName="System.IdentityModel.RsaSignatureCookieTransform">
  <TypeSignature Language="C#" Value="public class RsaSignatureCookieTransform : System.IdentityModel.CookieTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RsaSignatureCookieTransform extends System.IdentityModel.CookieTransform" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.CookieTransform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides cookie integrity using an <see cref="T:System.Security.Cryptography.RSA" /> signature.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RsaSignatureCookieTransform adds an RSA MAC to the cookie data. This provides integrity but not confidentiality. By default, the MAC uses SHA-256, but SHA-1 may be requested.  
  
 Cookies protected with this transform may be read by any computer that shares the same RSA private key (generally associated with an X509 certificate).  
  
> [!IMPORTANT]
>  When using the RsaSignatureCookieTransform with a service, if a key provided by a certificate changes the service must be restarted.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaSignatureCookieTransform (System.Security.Cryptography.RSA key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.RSA key) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" />
      </Parameters>
      <Docs>
        <param name="key">The RSA key to use as the default signing and verification key.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> class by using the specified RSA key.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> property is initialized to `key`. The <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> property is initialized to a collection that contains `key` as its only element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaSignatureCookieTransform (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate whose private key is to be used for signing and verifying.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> class by using the private key of the specified certificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> property is initialized to private key of the certificate. The <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> property is initialized to a collection that contains the private key of the certificate as its only element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificate" /> has no private key  
  
 -or-  
  
 The private key of the <paramref name="certificate" /> is not an RSA key.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public override byte[] Decode (byte[] encoded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decode(unsigned int8[] encoded) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoded" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoded">Data previously returned from the &lt;xref:System.IdentityModel.RsaSignatureCookieTransform.Encode%2A&gt; method.</param>
        <summary>Verifies the specified signature and returns the original, unsigned data.</summary>
        <returns>The original data (unsigned).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All of the keys in the collection specified in the <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> property are tried.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encoded" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="encoded" /> contains zero bytes.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The signature is not valid.</exception>
        <exception cref="T:System.FormatException">The data is in the wrong format.</exception>
        <exception cref="T:System.InvalidOperationException">There are no verification keys.</exception>
        <exception cref="T:System.NotSupportedException">The platform does not support the specified algorithm.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public override byte[] Encode (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encode(unsigned int8[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">The data to be signed.</param>
        <summary>Signs the specified data.</summary>
        <returns>The signed data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The key specified by the <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> property must include the private key in order to sign the data.  
  
 The signed data may be verified by calling the <xref:System.IdentityModel.RsaSignatureCookieTransform.Decode%2A> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> contains zero bytes.</exception>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A&gt; property is <see langword="null" />.  
  
 -or-  
  
 The key specified by the &lt;xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A&gt; property is not assignable as <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.  
  
 -or-  
  
 The key specified by the &lt;xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A&gt; property does not contain a private key.</exception>
        <exception cref="T:System.NotSupportedException">The operating system does not support the specified algorithm.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the hash algorithm to use.</summary>
        <value>The name of the hash algorithm. The default is “SHA256”.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SHA256 is the default algorithm. This may require a minimum operating system of [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)] and .NET 3.5 SP1.  
  
 If SHA256 is not supported, set the HashName property to "SHA1".  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.RSA SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RSA SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSA</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the RSA key that is used for signing.</summary>
        <value>The RSA key that is used for signing.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerificationKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt; VerificationKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.RSA&gt; VerificationKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of keys used for signature verification.  
  
 By default, this property returns a list that contains only the signing key.</summary>
        <value>The collection of keys used for signature verification.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>