<Type Name="ImpersonationLevelOption" FullName="System.EnterpriseServices.ImpersonationLevelOption">
  <TypeSignature Language="C#" Value="public enum ImpersonationLevelOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ImpersonationLevelOption extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the level of impersonation allowed when calling targets of a server application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If impersonation succeeds, the client lets the server impersonate the client to some degree. The varying degrees of impersonation are called impersonation levels, and they indicate how much authority is given to the server when it is impersonating the client.  
  
 For library (inproc) applications, the only valid settings are `Default` or none specified.  
  
   
  
## Examples  
 The following code example demonstrates the use of this enumeration in conjunction with the <xref:System.EnterpriseServices.ApplicationAccessControlAttribute> attribute.  
  
 [!code-cpp[EnterpriseServices_Security#2](~/add/codesnippet/cpp/t-system.enterpriseservi_29_1.cpp)]
 [!code-cs[EnterpriseServices_Security#2](~/add/codesnippet/csharp/t-system.enterpriseservi_29_1.cs)]
 [!code-vb[EnterpriseServices_Security#2](~/add/codesnippet/visualbasic/t-system.enterpriseservi_29_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Anonymous = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The client is anonymous to the server. The server process can impersonate the client, but the impersonation token does not contain any information about the client.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Default = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uses the default impersonation level for the specified authentication service. In COM+, this setting is provided by the <see langword="DefaultImpersonationLevel" /> property in the <see langword="LocalComputer" /> collection.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="Delegate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Delegate = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The most powerful impersonation level. When this level is selected, the server (whether local or remote) can impersonate the client's security context while acting on behalf of the client</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Identify">
      <MemberSignature Language="C#" Value="Identify" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Identify = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system default level. The server can obtain the client's identity, and the server can impersonate the client to do ACL checks.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="Impersonate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.ImpersonationLevelOption Impersonate = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.ImpersonationLevelOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The server can impersonate the client's security context while acting on behalf of the client. The server can access local resources as the client.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>