<Type Name="ApplicationQueuingAttribute" FullName="System.EnterpriseServices.ApplicationQueuingAttribute">
  <TypeSignature Language="C#" Value="public sealed class ApplicationQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationQueuingAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enables queuing support for the marked assembly and enables the application to read method calls from Message Queuing queues. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For a list of initial property values for an instance of ApplicationQueuingAttribute, see the <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A> constructor.  
  
 For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates the use of the ApplicationQueuingAttribute type.  
  
 [!code-cs[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/csharp/t-system.enterpriseservi_4_1.cs)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/visualbasic/t-system.enterpriseservi_4_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" /> class, enabling queuing support for the assembly and initializing &lt;xref:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled%2A&gt;, &lt;xref:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled%2A&gt;, and &lt;xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows initial property values for an instance of <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  
  
|Property|Value|  
|--------------|-----------|  
|`Enabled`|`true`|  
|`QueueListenerEnabled`|`false`|  
|`MaxListenerThreads`|zero (0)|  
  
   
  
## Examples  
 The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  
  
 [!code-cs[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_25_1.cs)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_25_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether queuing support is enabled.</summary>
        <value>
          <see langword="true" /> if queuing support is enabled; otherwise, <see langword="false" />. The default value set by the constructor is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Applications are not able to use queued components by default. Instantiating <xref:System.EnterpriseServices.ApplicationQueuingAttribute> enables an application to use queued components; however, it does not enable the application to listen for queued messages from clients.  
  
   
  
## Examples  
 The following code example gets and sets the value of an `ApplicationQueuing` attribute's Enabled property.  
  
 [!code-cs[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/csharp/p-system.enterpriseservi_8_1.cs)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_8_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaxListenerThreads">
      <MemberSignature Language="C#" Value="public int MaxListenerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxListenerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of threads used to extract messages from the queue and activate the corresponding component.</summary>
        <value>The maximum number of threads to use for processing messages arriving in the queue. The default is zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The valid range for this property is 0 to 1000. The default is zero. For a newly created application, the setting is derived from the algorithm currently used for determining the default number of listener threads: 16 times the number of CPUs in the server.  
  
 For more information, see `QcListenerMaxThreads` in [Applications (COM+)](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp).  
  
   
  
## Examples  
 The following code example gets and sets the value of an `ApplicationQueuing` attribute's MaxListenerThreads property.  
  
 [!code-cs[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/csharp/p-system.enterpriseservi_2_1.cs)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/visualbasic/p-system.enterpriseservi_2_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="QueueListenerEnabled">
      <MemberSignature Language="C#" Value="public bool QueueListenerEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueueListenerEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the application will accept queued component calls from clients.</summary>
        <value>
          <see langword="true" /> if the application accepts queued component calls; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example gets and sets the value of an `ApplicationQueuing` attribute's QueueListenerEnabled property.  
  
 [!code-cs[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/csharp/p-system.enterpriseservi_0_1.cs)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>