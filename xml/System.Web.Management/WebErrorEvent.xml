<Type Name="WebErrorEvent" FullName="System.Web.Management.WebErrorEvent">
  <TypeSignature Language="C#" Value="public class WebErrorEvent : System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebErrorEvent extends System.Web.Management.WebBaseErrorEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebBaseErrorEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides information about systemic errors.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  
  
 The WebErrorEvent provides information about errors caused by problems with configuration or application code. An example is the error issued by ASP.NET when an error is found in a page.  
  
> [!NOTE]
>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the WebErrorEvent class, see the example provided in this topic.  
  
   
  
## Examples  
 The following code example shows how to derive from the WebErrorEvent class to create a custom event.  
  
 Also shown is an excerpt of the configuration file that enables ASP.NET to use this custom event.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <eventMappings>  
  
    <add  name="SampleWebErrorEvent" type="SamplesAspNet.SampleWebErrorEvent,weberrorevent,Version=1.0.1573.21549, Culture=neutral, PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  
  </eventMappings>  
  
  <profiles>  
    <add name="Custom"  
      minInstances="1"  
      maxLimit="Infinite"  
      minInterval="00:00:00" />  
  </profiles>  
  
  <rules>  
    <clear />  
  
    <add name="Custom Web Error Event"   
      eventName="SampleWebErrorEvent"  
      provider="EventLogProvider"   
      profile="Custom" />  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-cs[System.Web.Management.WebErrorEvent#1](~/add/codesnippet/csharp/t-system.web.management._16_1.cs)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._16_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebErrorEvent (string message, object eventSource, int eventCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception exception) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The event description.</param>
        <param name="eventSource">The object that is the source of the event.</param>
        <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="exception">The &lt;xref:System.Exception&gt; associated with the error.</param>
        <summary>Initializes the <see cref="T:System.Web.Management.WebErrorEvent" /> class using the supplied parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The WebErrorEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebErrorEvent constructor when deriving from the <xref:System.Web.Management.WebErrorEvent> class.  
  
   
  
## Examples  
 The following code example shows how to customize this constructor.  
  
 [!code-cs[System.Web.Management.WebErrorEvent#2](~/add/codesnippet/csharp/971ae41f-8e1a-4be9-93da-_1.cs)]
 [!code-vb[System.Web.Management.WebErrorEvent#2](~/add/codesnippet/visualbasic/971ae41f-8e1a-4be9-93da-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception exception) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The event description.</param>
        <param name="eventSource">The object that is the source of the event.</param>
        <param name="eventCode">The code associated with the event. When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</param>
        <param name="exception">The &lt;xref:System.Exception&gt; associated with the error.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebErrorEvent" /> class using the supplied parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The WebErrorEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebErrorEvent constructor when deriving from the <xref:System.Web.Management.WebErrorEvent> class.  
  
   
  
## Examples  
 The following code example shows how to derive from the <xref:System.Web.Management.WebErrorEvent> class to create a custom event.  
  
 [!code-cs[System.Web.Management.WebErrorEvent#3](~/add/codesnippet/csharp/4a8fb5c1-6d8c-4a46-92a2-_1.cs)]
 [!code-vb[System.Web.Management.WebErrorEvent#3](~/add/codesnippet/visualbasic/4a8fb5c1-6d8c-4a46-92a2-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Used internally to increment performance counters.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RequestInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebRequestInformation RequestInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebRequestInformation RequestInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebRequestInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the application request information.</summary>
        <value>A <see cref="T:System.Web.Management.WebRequestInformation" /> object that contains information about the current request.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to obtain the RequestInformation value.  
  
 [!code-cs[System.Web.Management.WebErrorEvent#5](~/add/codesnippet/csharp/p-system.web.management._45_1.cs)]
 [!code-vb[System.Web.Management.WebErrorEvent#5](~/add/codesnippet/visualbasic/p-system.web.management._45_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThreadInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebThreadInformation ThreadInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebThreadInformation ThreadInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebThreadInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the application-thread information.</summary>
        <value>A <see cref="T:System.Web.Management.WebThreadInformation" /> object that contains information about the current thread.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to obtain the application ThreadInformation value.  
  
 [!code-cs[System.Web.Management.WebErrorEvent#6](~/add/codesnippet/csharp/p-system.web.management._49_1.cs)]
 [!code-vb[System.Web.Management.WebErrorEvent#6](~/add/codesnippet/visualbasic/p-system.web.management._49_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>