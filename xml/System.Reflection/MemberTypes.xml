<Type Name="MemberTypes" FullName="System.Reflection.MemberTypes">
  <TypeSignature Language="C#" Value="public enum MemberTypes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MemberTypes extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Marks each type of member that is defined as a derived class of &lt;xref:System.Reflection.MemberInfo&gt;.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 These enumeration values are returned by the following properties:  
  
-   <xref:System.Type.MemberType%2A?displayProperty=fullName>.  
  
-   <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>.  
  
-   <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>.  
  
-   <xref:System.Reflection.EventInfo?displayProperty=fullName>.  
  
-   <xref:System.Reflection.FieldInfo?displayProperty=fullName>.  
  
-   <xref:System.Reflection.MethodInfo?displayProperty=fullName>.  
  
-   <xref:System.Reflection.PropertyInfo?displayProperty=fullName>.  
  
 To obtain the MemberTypes value for a type:  
  
1.  Get a <xref:System.Type> object that represents that type.  
  
2.  Retrieve the value of the <xref:System.Type.MemberType%2A?displayProperty=fullName> property.  
  
 To get the MemberTypes values for the members of a type.:  
  
1.  Get a <xref:System.Type> object that represents that type.  
  
2.  Retrieve the <xref:System.Reflection.MemberInfo> array that represents the members of that type by calling the <xref:System.Type.GetMembers%2A?displayProperty=fullName> method.  
  
3.  Retrieve the value of the From the <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName> property for each member in the array.  A `switch` statement in C# or `Select Case` statement in Visual Basic is typically used to process member types.  
  
 MemberTypes matches CorTypeAttr as defined in the corhdr.h file.  
  
   
  
## Examples  
 The following example displays the names of the members of the <xref:System.Reflection.ReflectionTypeLoadException> class and their associated member types.  
  
 [!code-vb[System.Reflection.MemberTypes#1](~/add/codesnippet/visualbasic/t-system.reflection.memb_1.vb)]
 [!code-cs[System.Reflection.MemberTypes#1](~/add/codesnippet/csharp/t-system.reflection.memb_1.cs)]
 [!code-cpp[System.Reflection.MemberTypes#1](~/add/codesnippet/cpp/t-system.reflection.memb_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes All = int32(191)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies all member types.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="Constructor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes Constructor = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a constructor</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes Custom = int32(64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a custom member type.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="Event" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes Event = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is an event.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="Field" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes Field = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a field.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="Method" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes Method = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a method.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NestedType">
      <MemberSignature Language="C#" Value="NestedType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes NestedType = int32(128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a nested type.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="Property" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes Property = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a property.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TypeInfo">
      <MemberSignature Language="C#" Value="TypeInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.MemberTypes TypeInfo = int32(32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the member is a type.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>