<Type Name="ICertificatePolicy" FullName="System.Net.ICertificatePolicy">
  <TypeSignature Language="C#" Value="public interface ICertificatePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICertificatePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Validates a server certificate.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ICertificatePolicy interface is used to provide custom security certificate validation for an application. The default policy is to allow valid certificates, as well as valid certificates that have expired. To change this policy, implement the ICertificatePolicy interface with a different policy, and then assign that policy to <xref:System.Net.ServicePointManager.CertificatePolicy%2A?displayProperty=fullName>.  
  
 ICertificatePolicy uses the Security Support Provider Interface (SSPI). For more information, see the SSPI documentation on MSDN.  
  
   
  
## Examples  
 The following example creates a certificate policy that returns `false` for any certificate problem and prints a message that indicates the problem on the console. The CertificateProblem enum defines SSPI constants for certificate problems, and the private GetProblemMessage method creates a printable message about the problem.  
  
 [!code-cpp[Classic ICertificatePolicy Example#1](~/add/codesnippet/cpp/t-system.net.icertificat_1.cpp)]
 [!code-cs[Classic ICertificatePolicy Example#1](~/add/codesnippet/csharp/t-system.net.icertificat_1.cs)]
 [!code-vb[Classic ICertificatePolicy Example#1](~/add/codesnippet/visualbasic/t-system.net.icertificat_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CheckValidationResult">
      <MemberSignature Language="C#" Value="public bool CheckValidationResult (System.Net.ServicePoint srvPoint, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Net.WebRequest request, int certificateProblem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckValidationResult(class System.Net.ServicePoint srvPoint, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Net.WebRequest request, int32 certificateProblem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srvPoint" Type="System.Net.ServicePoint" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="certificateProblem" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srvPoint">The <see cref="T:System.Net.ServicePoint" /> that will use the certificate.</param>
        <param name="certificate">The certificate to validate.</param>
        <param name="request">The request that received the certificate.</param>
        <param name="certificateProblem">The problem that was encountered when using the certificate.</param>
        <summary>Validates a server certificate.</summary>
        <returns>
          <see langword="true" /> if the certificate should be honored; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CheckValidationResult method implements the application certificate validation policy. The method can examine the `srvPoint`, `certificate`, `request`, and `certificateProblem` parameters to determine whether the certificate should be honored.  
  
 The `certificateProblem` parameter is a Security Support Provider Interface (SSPI) status code. For more information, see the SSPI documentation on MSDN.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>