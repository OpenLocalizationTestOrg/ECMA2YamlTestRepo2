<Type Name="IPHostEntry" FullName="System.Net.IPHostEntry">
  <TypeSignature Language="C#" Value="public class IPHostEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPHostEntry extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a container class for Internet host address information.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IPHostEntry class associates a Domain Name System (DNS) host name with an array of aliases and an array of matching IP addresses.  
  
 The IPHostEntry class is used as a helper class with the <xref:System.Net.Dns> class.  
  
   
  
## Examples  
 The following example queries the DNS database for information on the host www.contoso.com and returns the information in an IPHostEntry instance.  
  
 [!code-cpp[Classic Dns Example#1](~/add/codesnippet/cpp/t-system.net.iphostentry_1.cpp)]
 [!code-vb[Classic Dns Example#1](~/add/codesnippet/visualbasic/t-system.net.iphostentry_1.vb)]
 [!code-cs[Classic Dns Example#1](~/add/codesnippet/csharp/t-system.net.iphostentry_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPHostEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.IPHostEntry" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddressList">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress[] AddressList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress[] AddressList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of IP addresses that are associated with a host.</summary>
        <value>An array of type &lt;xref:System.Net.IPAddress&gt; that contains IP addresses that resolve to the host names that are contained in the &lt;xref:System.Net.IPHostEntry.Aliases%2A&gt; property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the AddressList property to access the IP addresses that are associated with the <xref:System.Net.IPHostEntry>.  
  
 [!code-cpp[IPHostEntry_AddressList#1](~/add/codesnippet/cpp/p-system.net.iphostentry_1_1.cpp)]
 [!code-cs[IPHostEntry_AddressList#1](~/add/codesnippet/csharp/p-system.net.iphostentry_1_1.cs)]
 [!code-vb[IPHostEntry_AddressList#1](~/add/codesnippet/visualbasic/p-system.net.iphostentry_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Aliases">
      <MemberSignature Language="C#" Value="public string[] Aliases { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Aliases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of aliases that are associated with a host.</summary>
        <value>An array of strings that contain DNS names that resolve to the IP addresses in the &lt;xref:System.Net.IPHostEntry.AddressList%2A&gt; property.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public string HostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the DNS name of the host.</summary>
        <value>A string that contains the primary host name for the server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HostName property contains the primary host name for a server. If the DNS entry for the server defines additional aliases, they will be available in the <xref:System.Net.IPHostEntry.Aliases%2A> property.  
  
   
  
## Examples  
 The following example uses the HostName property to retrieve the primary host name.  
  
 [!code-cpp[IPHostEntry_AddressList#1](~/add/codesnippet/cpp/p-system.net.iphostentry_0_1.cpp)]
 [!code-cs[IPHostEntry_AddressList#1](~/add/codesnippet/csharp/p-system.net.iphostentry_0_1.cs)]
 [!code-vb[IPHostEntry_AddressList#1](~/add/codesnippet/visualbasic/p-system.net.iphostentry_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>