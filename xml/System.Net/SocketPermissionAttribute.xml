<Type Name="SocketPermissionAttribute" FullName="System.Net.SocketPermissionAttribute">
  <TypeSignature Language="C#" Value="public sealed class SocketPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SocketPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies security actions to control &lt;xref:System.Net.Sockets.Socket&gt; connections. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To use this attribute, your <xref:System.Net.Sockets.Socket> connection must conform to the properties that are specified in your SocketPermissionAttribute. For example, to apply the permission to a <xref:System.Net.Sockets.Socket> connection on port 80, set the <xref:System.Net.SocketPermissionAttribute.Port%2A> property of the SocketPermissionAttribute to "80". The security information that is specified in SocketPermissionAttribute is stored in the metadata of the attribute target, which is the class to which the SocketPermissionAttribute is applied. The system then accesses the information at run time. The <xref:System.Security.Permissions.SecurityAction> that is passed to the constructor determines the allowable SocketPermissionAttribute targets.  
  
> [!NOTE]
>  The properties of a SocketPermissionAttribute must have values that are not `null`. Also, once set, the values of the properties cannot be changed.  
  
> [!NOTE]
>  For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" /> value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Security.Permissions.SecurityAction> value that is passed to this constructor specifies the allowable <xref:System.Net.SocketPermissionAttribute> targets.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Access">
      <MemberSignature Language="C#" Value="public string Access { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Access" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the network access method that is allowed by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
        <value>A string that contains the network access method that is allowed by this instance of <see cref="T:System.Net.SocketPermissionAttribute" />. Valid values are "Accept" and "Connect."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is write-once. Valid values for this property correspond to <xref:System.Net.NetworkAccess> enumeration values.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The Access property is not <see langword="null" /> when you attempt to set the value. To specify more than one Access method, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a new instance of the <see cref="T:System.Net.SocketPermission" /> class.</summary>
        <returns>An instance of the <see cref="T:System.Net.SocketPermission" /> class that corresponds to the security declaration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreatePermission method is called by the security system, not by the application code. The security information described by <xref:System.Net.SocketPermissionAttribute> is stored in the metadata of the attribute target, which is the class to which the <xref:System.Net.SocketPermissionAttribute> is applied. The system then accesses the information at run-time and calls CreatePermission. The system uses the returned <xref:System.Security.IPermission> to enforce the specified security requirements.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">One or more of the current instance's &lt;xref:System.Net.SocketPermissionAttribute.Access%2A&gt;, &lt;xref:System.Net.SocketPermissionAttribute.Host%2A&gt;, &lt;xref:System.Net.SocketPermissionAttribute.Transport%2A&gt;, or &lt;xref:System.Net.SocketPermissionAttribute.Port%2A&gt; properties is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the DNS host name or IP address that is specified by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
        <value>A string that contains the DNS host name or IP address that is associated with this instance of <see cref="T:System.Net.SocketPermissionAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is write-once and specifies the Domain Name Services (DNS) host name to which this permission applies.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Host is not <see langword="null" /> when you attempt to set the value. To specify more than one host, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public string Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the port number that is associated with this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
        <value>A string that contains the port number that is associated with this instance of <see cref="T:System.Net.SocketPermissionAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is write-once and specifies the port number to which this permission applies. The valid values are a string-encoded integer or the string "All".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The Port property is <see langword="null" /> when you attempt to set the value. To specify more than one port, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Transport">
      <MemberSignature Language="C#" Value="public string Transport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Net.TransportType" /> that is specified by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
        <value>A string that contains the <see cref="T:System.Net.TransportType" /> that is associated with this <see cref="T:System.Net.SocketPermissionAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Possible string values of this property are <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, and <xref:System.Net.TransportType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Transport is not <see langword="null" /> when you attempt to set the value. To specify more than one transport type, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>