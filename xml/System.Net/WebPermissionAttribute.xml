<Type Name="WebPermissionAttribute" FullName="System.Net.WebPermissionAttribute">
  <TypeSignature Language="C#" Value="public sealed class WebPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies permission to access Internet resources. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WebPermissionAttribute allows you to declaratively specify which URI strings and regular expression strings your class can use.  
  
 The security information specified in the WebPermissionAttribute is stored in the metadata of the attribute target, which is the class to which WebPermissionAttribute is applied. The system accesses this information at run time. The <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> passed to the constructor determines the allowable WebPermissionAttribute targets. The system uses the <xref:System.Net.WebPermission> returned by the <xref:System.Net.WebPermissionAttribute.CreatePermission%2A> method to convert the security information of the attribute target to a serializable form stored in metadata.  
  
> [!NOTE]
>  WebPermissionAttribute is used only for [Declarative Security](http://msdn.microsoft.com/en-us/97e21efd-6e89-4115-90d5-ad239513dad8). For [Imperative Security](http://msdn.microsoft.com/en-us/15aab1e1-6b7d-41ad-b102-c1ed7bedea27), use the corresponding <xref:System.Net.WebPermission>.  
  
   
  
## Examples  
 The following example demonstrates how to apply WebPermissionAttribute to a method.  
  
 [!code-cs[WebPermissionAttribute_AcceptConnect#1](~/add/codesnippet/csharp/t-system.net.webpermissi_1.cs)]
 [!code-cpp[WebPermissionAttribute_AcceptConnect#1](~/add/codesnippet/cpp/t-system.net.webpermissi_1.cpp)]
 [!code-vb[WebPermissionAttribute_AcceptConnect#1](~/add/codesnippet/visualbasic/t-system.net.webpermissi_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermissionAttribute" /> class with a value that specifies the security actions that can be performed on this class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Security.Permissions.SecurityAction> value passed to this constructor specifies the allowable security actions that can be performed on this class.  
  
   
  
## Examples  
 The following example demonstrates how to apply <xref:System.Net.WebPermissionAttribute> to a method.  
  
 [!code-cs[WebPermissionAttribute_Constructor#1](~/add/codesnippet/csharp/0d5811ce-ed17-41f8-8a54-_1.cs)]
 [!code-vb[WebPermissionAttribute_Constructor#1](~/add/codesnippet/visualbasic/0d5811ce-ed17-41f8-8a54-_1.vb)]
 [!code-cpp[WebPermissionAttribute_Constructor#1](~/add/codesnippet/cpp/0d5811ce-ed17-41f8-8a54-_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI string accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
        <value>A string containing the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what URI string will be accepted for use within your class. This permission is applied when the security system calls <xref:System.Net.WebPermissionAttribute.CreatePermission%2A>. This property is write-once.  
  
   
  
## Examples  
 The following example demonstrates how to use <xref:System.Net.WebPermissionAttribute> to specify an allowable Accept string.  
  
 [!code-vb[WebPermissionAttribute_Accept#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_3_1.vb)]
 [!code-cs[WebPermissionAttribute_Accept#1](~/add/codesnippet/csharp/p-system.net.webpermissi_3_1.cs)]
 [!code-cpp[WebPermissionAttribute_Accept#1](~/add/codesnippet/cpp/p-system.net.webpermissi_3_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Accept is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AcceptPattern">
      <MemberSignature Language="C#" Value="public string AcceptPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceptPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a regular expression pattern that describes the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
        <value>A string containing a regular expression pattern that describes the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />. This string must be escaped according to the rules for encoding a &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt; constructor string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what regular expression string will be accepted for use within your class. This property is write-once.  
  
   
  
## Examples  
 The following example demonstrates how to use <xref:System.Net.WebPermissionAttribute> to specify an allowable AcceptPattern.  
  
 [!code-vb[WebPermissionAttribute_AcceptPattern#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_0_1.vb)]
 [!code-cs[WebPermissionAttribute_AcceptPattern#1](~/add/codesnippet/csharp/p-system.net.webpermissi_0_1.cs)]
 [!code-cpp[WebPermissionAttribute_AcceptPattern#1](~/add/codesnippet/cpp/p-system.net.webpermissi_0_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">AcceptPattern is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public string Connect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Connect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI connection string controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
        <value>A string containing the URI connection controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what URI connection is accepted for use within your class. This property is write-once.  
  
   
  
## Examples  
 The following example demonstrates how to use WebPermissionAttribute to specify an allowable Connect string.  
  
 [!code-cpp[WebPermissionAttribute_Connect#1](~/add/codesnippet/cpp/p-system.net.webpermissi_1_1.cpp)]
 [!code-vb[WebPermissionAttribute_Connect#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_1_1.vb)]
 [!code-cs[WebPermissionAttribute_Connect#1](~/add/codesnippet/csharp/p-system.net.webpermissi_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Connect is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one Connect URI, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConnectPattern">
      <MemberSignature Language="C#" Value="public string ConnectPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a regular expression pattern that describes the URI connection controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
        <value>A string containing a regular expression pattern that describes the URI connection controlled by this <see cref="T:System.Net.WebPermissionAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what regular expression connect string is accepted for use within your class. This property is write-once.  
  
   
  
## Examples  
 The following example demonstrates how to use <xref:System.Net.WebPermissionAttribute> to specify an allowable ConnectPattern.  
  
 [!code-cs[WebPermissionAttribute_ConnectPattern#1](~/add/codesnippet/csharp/p-system.net.webpermissi_4_1.cs)]
 [!code-vb[WebPermissionAttribute_ConnectPattern#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_4_1.vb)]
 [!code-cpp[WebPermissionAttribute_ConnectPattern#1](~/add/codesnippet/cpp/p-system.net.webpermissi_4_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ConnectPattern is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one connect URI, use an additional attribute declaration statement.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a new instance of the <see cref="T:System.Net.WebPermission" /> class.</summary>
        <returns>A <see cref="T:System.Net.WebPermission" /> corresponding to the security declaration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Net.SocketPermissionAttribute.CreatePermission%2A> method is called by the security system, not by application code.  
  
 The security information described by <xref:System.Net.WebPermissionAttribute> is stored in the metadata of the attribute target, which is the class to which <xref:System.Net.WebPermissionAttribute> is applied. The system accesses the information at run time. The system uses the <xref:System.Net.WebPermission> returned by <xref:System.Net.SocketPermissionAttribute.CreatePermission%2A> to convert the security information of the attribute target to a serializable form stored in metadata.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>