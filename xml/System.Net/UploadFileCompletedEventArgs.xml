<Type Name="UploadFileCompletedEventArgs" FullName="System.Net.UploadFileCompletedEventArgs">
  <TypeSignature Language="C#" Value="public class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UploadFileCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the &lt;xref:System.Net.WebClient.UploadFileCompleted&gt; event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instances of this class are passed to the <xref:System.Net.UploadFileCompletedEventHandler>.  
  
   
  
## Examples  
 The following code example demonstrates asynchronously uploading a file.  
  
 [!code-cpp[NCLWebClientAsync#4](~/add/codesnippet/cpp/t-system.net.uploadfilec_1_1.cpp)]
 [!code-cs[NCLWebClientAsync#4](~/add/codesnippet/csharp/t-system.net.uploadfilec_1_1.cs)]
 [!code-vb[NCLWebClientAsync#4](~/add/codesnippet/visualbasic/t-system.net.uploadfilec_1_1.vb)]  
  
 The following method is called when the upload completes.  
  
 [!code-cpp[NCLWebClientAsync#5](~/add/codesnippet/cpp/t-system.net.uploadfilec_1_2.cpp)]
 [!code-cs[NCLWebClientAsync#5](~/add/codesnippet/csharp/t-system.net.uploadfilec_1_2.cs)]
 [!code-vb[NCLWebClientAsync#5](~/add/codesnippet/visualbasic/t-system.net.uploadfilec_1_2.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public byte[] Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the server reply to a data upload operation that is started by calling an &lt;xref:System.Net.WebClient.UploadFileAsync%2A&gt; method.</summary>
        <value>A &lt;xref:System.Byte&gt; array that contains the server reply.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> properties to determine whether the upload completed. If the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property's value is an <xref:System.Exception> object or the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property's value is `true`, the asynchronous operation did not complete correctly and the Result property's value will not be valid.  
  
   
  
## Examples  
 The following code example displays the value of this property.  
  
 [!code-cpp[NCLWebClientAsync#5](~/add/codesnippet/cpp/p-system.net.uploadfilec_1.cpp)]
 [!code-cs[NCLWebClientAsync#5](~/add/codesnippet/csharp/p-system.net.uploadfilec_1.cs)]
 [!code-vb[NCLWebClientAsync#5](~/add/codesnippet/visualbasic/p-system.net.uploadfilec_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>