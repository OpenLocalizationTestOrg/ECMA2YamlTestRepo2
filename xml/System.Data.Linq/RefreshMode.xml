<Type Name="RefreshMode" FullName="System.Data.Linq.RefreshMode">
  <TypeSignature Language="C#" Value="public enum RefreshMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RefreshMode extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Defines how the &lt;xref:System.Data.Linq.DataContext.Refresh%2A&gt; method handles optimistic concurrency conflicts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This enumeration applies to all <xref:System.Data.Linq.DataContext.Refresh%2A> overloads.  
  
   
  
## Examples  
 The following example overwrites current values with values from the database.  
  
 [!code-cs[System.Data.Linq.RefreshMode#1](~/add/codesnippet/csharp/refreshmode/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/add/codesnippet/visualbasic/refreshmode/module1.vb#1)]  
  
 The following example shows how to swap the original value with the values retrieved from the database. No current value is modified.  
  
 [!code-cs[System.Data.Linq.RefreshMode#2](~/add/codesnippet/csharp/refreshmode/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/add/codesnippet/visualbasic/refreshmode/module1.vb#2)]  
  
 The following example keeps the current values that have been changed, but updates the other values with database values.  
  
 [!code-cs[System.Data.Linq.RefreshMode#3](~/add/codesnippet/csharp/refreshmode/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/add/codesnippet/visualbasic/refreshmode/module1.vb#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="KeepChanges">
      <MemberSignature Language="C#" Value="KeepChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Linq.RefreshMode KeepChanges = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.RefreshMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Forces the &lt;xref:System.Data.Linq.DataContext.Refresh%2A&gt; method to keep the current value that has been changed, but updates the other values with the database values.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeepCurrentValues">
      <MemberSignature Language="C#" Value="KeepCurrentValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Linq.RefreshMode KeepCurrentValues = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.RefreshMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Forces the &lt;xref:System.Data.Linq.DataContext.Refresh%2A&gt; method to swap the original value with the values retrieved from the database. No current value is modified.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OverwriteCurrentValues">
      <MemberSignature Language="C#" Value="OverwriteCurrentValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Linq.RefreshMode OverwriteCurrentValues = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.RefreshMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Forces the &lt;xref:System.Data.Linq.DataContext.Refresh%2A&gt; method to override all the current values with the values from the database.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>