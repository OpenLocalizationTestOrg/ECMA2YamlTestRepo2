<Type Name="AspNetCompiler" FullName="Microsoft.Build.Tasks.AspNetCompiler">
  <TypeSignature Language="C#" Value="public class AspNetCompiler : Microsoft.Build.Tasks.ToolTaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AspNetCompiler extends Microsoft.Build.Tasks.ToolTaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.ToolTaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements the `AspNetCompiler` task. Use the `AspNetCompiler` element in your project file to create and execute this task. For usage and parameter information, see [AspNetCompiler Task](~/add/includes/ajax-current-ext-md.md).</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspNetCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AspNetCompiler" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddCommandLineCommands">
      <MemberSignature Language="C#" Value="protected override void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddCommandLineCommands(class Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="Microsoft.Build.Tasks.CommandLineBuilderExtension" />
      </Parameters>
      <Docs>
        <param name="commandLine">Command line builder to add arguments to.</param>
        <summary>Generates command line arguments for the AspNetCompiler tool.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AllowPartiallyTrustedCallers">
      <MemberSignature Language="C#" Value="public bool AllowPartiallyTrustedCallers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPartiallyTrustedCallers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;, which allows partially trusted callers access to an assembly, should be applied to the strongly named assembly that Aspnet_compiler.exe generates.</summary>
        <value>
          <see langword="true" /> if the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; should be applied to the strongly named assembly that Aspnet_compiler.exe generates; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property must be combined with the <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyFile%2A> or <xref:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer%2A> properties.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clean">
      <MemberSignature Language="C#" Value="public bool Clean { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Clean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the precompiled application will be built clean.</summary>
        <value>
          <see langword="true" /> if the precompiled application will be built clean; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this property is `true`, any previously compiled components will be recompiled. The default value is `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Debug">
      <MemberSignature Language="C#" Value="public bool Debug { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Debug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether debug information (.PDB file) is emitted during compilation.</summary>
        <value>
          <see langword="true" /> if the debug information (.PDB file) is emitted during compilation; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DelaySign">
      <MemberSignature Language="C#" Value="public bool DelaySign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DelaySign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the &lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;, which indicates that an assembly should be signed only with the public key token rather than with the public/private key pair, should be applied to the generated assembly.</summary>
        <value>
          <see langword="true" /> if the &lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt; should be applied to the generated assembly; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executes the `AspNetCompiler` task.</summary>
        <returns>
          <see langword="true" /> if task execution succeeded; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FixedNames">
      <MemberSignature Language="C#" Value="public bool FixedNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether one assembly should be generated for each page in the application.</summary>
        <value>
          <see langword="true" /> if one assembly should be generated for each page in the application; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each assembly is named with the virtual path of the original page unless the name would exceed the operating system limit for file names, in which case a hash is generated and used for the assembly name.  
  
 You cannot use this property for in-place compilation; in-place compilation honors configuration settings for compilation batch mode.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Force">
      <MemberSignature Language="C#" Value="public bool Force { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Force" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that specifies whether existing files in the <paramref name="targetDir" /> directory and its subdirectories should be overwritten.</summary>
        <value>
          <see langword="true" /> if existing files in the <paramref name="targetDir" /> directory and its subdirectories should be overwritten; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected override string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the full file path of the AspNetCompiler tool.</summary>
        <returns>The full file path of the AspNetCompiler tool.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyContainer">
      <MemberSignature Language="C#" Value="public string KeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the &lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt;, which indicates the name of the container for the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.</summary>
        <value>
          <see langword="true" /> if the &lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt; should be applied to the compiled assembly; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyFile">
      <MemberSignature Language="C#" Value="public string KeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the &lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;, which indicates the name of the file containing the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.</summary>
        <value>
          <see langword="true" /> if the &lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt; should be applied to the compiled assembly; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property must be combined with <xref:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MetabasePath">
      <MemberSignature Language="C#" Value="public string MetabasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetabasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the full IIS metabase path of the application.</summary>
        <value>The full IIS metabase path of the application.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the physical path of the application to be compiled.</summary>
        <value>The physical path of the application to be compiled.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this property is missing, the IIS metabase is used to locate the application.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkMoniker">
      <MemberSignature Language="C#" Value="public string TargetFrameworkMoniker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkMoniker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the TargetFrameworkMoniker indicating which .NET Framework version of aspnet_compiler.exe should be used.</summary>
        <value>Returns the TargetFrameworkMoniker.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Only accepts .NET Framework monikers.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TargetPath">
      <MemberSignature Language="C#" Value="public string TargetPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the physical path to which the application is compiled.</summary>
        <value>The physical path to which the application is compiled.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If not specified, the application is precompiled in-place.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected override string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the AspNetCompiler tool (aspnet_compiler.exe).</summary>
        <value>The name of the AspNetCompiler tool.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Updateable">
      <MemberSignature Language="C#" Value="public bool Updateable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Updateable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the precompiled application will be updateable.</summary>
        <value>
          <see langword="true" /> if the precompiled application will be updateable; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected override bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ValidateParameters() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
        <returns>
          <see langword="true" /> if task execution should proceed; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the virtual path of the application to be compiled.</summary>
        <value>The virtual path of the application to be compiled.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `PhysicalPath` specified, the physical path is used to locate the application. Otherwise, the IIS metabase is used, and the application is assumed to be in the default site.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>