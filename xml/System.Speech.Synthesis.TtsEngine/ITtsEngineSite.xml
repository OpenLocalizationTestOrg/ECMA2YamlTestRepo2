<Type Name="ITtsEngineSite" FullName="System.Speech.Synthesis.TtsEngine.ITtsEngineSite">
  <TypeSignature Language="C#" Value="public interface ITtsEngineSite" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITtsEngineSite" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Provides methods for writing audio data and events.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public int Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines the action or actions the engine should perform.</summary>
        <value>An <see langword="int" /> containing the sum of one or more members of the <see langword="TtsEngineAction" /> enumeration.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddEvents">
      <MemberSignature Language="C#" Value="public void AddEvents (System.Speech.Synthesis.TtsEngine.SpeechEventInfo[] events, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEvents(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo[] events, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="events">An array of <see langword="SpeechEventInfo" /> objects.</param>
        <param name="count">The size of the array.</param>
        <summary>Adds one or more events to the <see langword="EventInterest" /> property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompleteSkip">
      <MemberSignature Language="C#" Value="public void CompleteSkip (int skipped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CompleteSkip(int32 skipped) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipped" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipped">The number of items skipped.</param>
        <summary>Returns the number of items skipped.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EventInterest">
      <MemberSignature Language="C#" Value="public int EventInterest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventInterest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines the events the engine should raise.</summary>
        <value>An <see langword="int" /> containing the sum of one or more members of the <see langword="TtsEventId" /> enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each bit in the `EventInterest` flag field represents a type of event that the engine should raise.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetSkipInfo">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.SkipInfo GetSkipInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Speech.Synthesis.TtsEngine.SkipInfo GetSkipInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.SkipInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number and type of items to be skipped.</summary>
        <returns>Returns the number and type of items to be skipped.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream LoadResource (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream LoadResource(class System.Uri uri, string mediaType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI of the resource.</param>
        <param name="mediaType">The media type of the resource.</param>
        <summary>Loads the resource at the specified URI.</summary>
        <returns>Loads the resource at the specified URI.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the speaking rate of the engine.</summary>
        <value>An <see langword="int" /> containing the speaking rate.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the speaking volume of the engine.</summary>
        <value>An <see langword="int" /> containing the speaking volume.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public int Write (IntPtr data, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(native int data, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">The location of the output audio data.</param>
        <param name="count">The number of items in the output audio stream.</param>
        <summary>Outputs audio data.</summary>
        <returns>Outputs audio data.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>