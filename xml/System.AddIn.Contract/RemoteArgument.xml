<Type Name="RemoteArgument" FullName="System.AddIn.Contract.RemoteArgument">
  <TypeSignature Language="C#" Value="public struct RemoteArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit RemoteArgument extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an instance of a type that can be passed across process and application domain boundaries.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the RemoteArgument structure to pass arguments of types that are not determined until run time across process and application domain boundaries. The purpose of RemoteArgument is similar to that of the `VARIANT` type in COM.  
  
 You can use RemoteArgument to pass the following types and values as remote arguments:  
  
-   <xref:System.Type.Missing?displayProperty=fullName>.  
  
-   <xref:System.AddIn.Contract.IContract>.  
  
-   Intrinsic data types.  
  
-   Arrays that contain elements of intrinsic data types.  
  
 An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>.  
  
 RemoteArgument provides constructors for each of the types that it supports. You can also use the <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> methods to create RemoteArgument objects. The <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> methods automatically call the appropriate <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor for your argument type.  
  
 If you create a RemoteArgument using the default parameterless constructor, the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property is set to the value <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName> and the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property is set to the value <xref:System.TypeCode?displayProperty=fullName>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.IContract value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.AddIn.Contract.IContract" /> argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an <see cref="T:System.AddIn.Contract.IContract" /> argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Array array) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">An &lt;xref:System.Array&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Array&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to the type code of the array element type, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The array element type is not a base type (that is, the &lt;xref:System.Type.GetTypeCode%2A&gt; method for the array element type returns &lt;xref:System.TypeCode?displayProperty=fullName&gt;).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Boolean&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Boolean&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Byte&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Byte&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Char&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Char&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.DateTime&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.DateTime&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DBNull value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DBNull value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DBNull" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.DBNull" /> argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a <see cref="T:System.DBNull" /> argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Decimal&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Decimal&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Double&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Double&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.Int16&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Int16&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.Int32&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Int32&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.Int64&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Int64&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.SByte&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.SByte&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Single&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Single&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.String&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.String&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.UInt16&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.UInt16&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.UInt32&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.UInt32&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.UInt64&gt; argument that can be passed across process or application domain boundaries.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.UInt64&gt; argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.IContract value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">An <see cref="T:System.AddIn.Contract.IContract" /> argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an <see cref="T:System.AddIn.Contract.IContract" /> argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Contract.RemoteArgumentKind remoteArgKind, valuetype System.TypeCode typeCode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remoteArgKind" Type="System.AddIn.Contract.RemoteArgumentKind" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="remoteArgKind">One of the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> values that indicates whether the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents an intrinsic type, an array of intrinsic types, an <see cref="T:System.AddIn.Contract.IContract" />, or the &lt;xref:System.Type.Missing?displayProperty=fullName&gt; value.</param>
        <param name="typeCode">A &lt;xref:System.TypeCode&gt; that specifies the base type of the remote argument.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class using the specified <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> and &lt;xref:System.TypeCode&gt; for an argument that is not passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor assigns the default value of the data type specified by the `typeCode` parameter to the <xref:System.AddIn.Contract.RemoteArgument>.  
  
 An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="remoteArgKind" /> is <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> or <see cref="T:System.AddIn.Contract.RemoteArgumentKind" />, and <paramref name="typeCode" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; or &lt;xref:System.TypeCode?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="remoteArgKind" /> is <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> and <paramref name="typeCode" /> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="remoteArgKind" /> is <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> and <paramref name="typeCode" /> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (Array array, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Array array, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array">An &lt;xref:System.Array&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `array` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Array&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to the type code of the array element type, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The array element type is not a base type (that is, the &lt;xref:System.Type.GetTypeCode%2A&gt; method returns &lt;xref:System.TypeCode?displayProperty=fullName&gt; for the array element type).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (bool value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Boolean&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Boolean&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (byte value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Byte&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Byte&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (char value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Char&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Char&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DateTime value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.DateTime&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.DateTime&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DBNull value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DBNull value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DBNull" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.DBNull" /> argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a <see cref="T:System.DBNull" /> argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (decimal value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Decimal&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Decimal&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (double value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Double&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Double&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (short value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.Int16&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Int16&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (int value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.Int32&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Int32&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (long value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.Int64&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.Int64&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (sbyte value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">An &lt;xref:System.SByte&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents an &lt;xref:System.SByte&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (float value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.Single&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.Single&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (string value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.String&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.String&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ushort value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.UInt16&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.UInt16&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (uint value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.UInt32&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.UInt32&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ulong value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;xref:System.UInt64&gt; argument that can be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> if `value` is an argument that is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class that represents a &lt;xref:System.UInt64&gt; argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Contract.RemoteArgumentKind remoteArgKind, valuetype System.TypeCode typeCode, bool isByRef) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remoteArgKind" Type="System.AddIn.Contract.RemoteArgumentKind" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="remoteArgKind">One of the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> values that indicates whether the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents an intrinsic type, an array of intrinsic types, an <see cref="T:System.AddIn.Contract.IContract" />, or the &lt;xref:System.Type.Missing?displayProperty=fullName&gt; value.</param>
        <param name="typeCode">A &lt;xref:System.TypeCode&gt; that specifies the base type of the remote argument.</param>
        <param name="isByRef">
          <see langword="true" /> if the remote argument is passed by reference; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> class using the specified <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> and &lt;xref:System.TypeCode&gt; for an argument that can be passed by reference.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor assigns the default value of the data type specified by the `typeCode` parameter to the <xref:System.AddIn.Contract.RemoteArgument>.  
  
 An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="remoteArgKind" /> is <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> or <see cref="T:System.AddIn.Contract.RemoteArgumentKind" />, and <paramref name="typeCode" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; or &lt;xref:System.TypeCode?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="remoteArgKind" /> is <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> and <paramref name="typeCode" /> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="remoteArgKind" /> is <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> and <paramref name="typeCode" /> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="remoteArgKind" /> is not a valid <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ArrayValue">
      <MemberSignature Language="C#" Value="public Array ArrayValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Array ArrayValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Array&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Array&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; <see langword="null" /> if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BooleanValue">
      <MemberSignature Language="C#" Value="public bool BooleanValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BooleanValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Boolean&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Boolean&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; <see langword="false" /> if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ByteValue">
      <MemberSignature Language="C#" Value="public byte ByteValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ByteValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Byte&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Byte&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharValue">
      <MemberSignature Language="C#" Value="public char CharValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char CharValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Char&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Char&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; &lt;xref:System.Char.MinValue&gt; if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContractValue">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract ContractValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract ContractValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.AddIn.Contract.IContract" /> that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The <see cref="T:System.AddIn.Contract.IContract" /> that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; <see langword="null" /> if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteArgument">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.AddIn.Contract.RemoteArgument CreateRemoteArgument(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The argument that will be passed across process or application domain boundaries.</param>
        <summary>Creates a <see cref="T:System.AddIn.Contract.RemoteArgument" /> for an argument that is not passed by reference.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the specified argument.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method calls the <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor that applies to the type of the `value` parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <paramref name="value" /> is not an <see cref="T:System.AddIn.Contract.IContract" />.  
  
 -or-  
  
 The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <paramref name="value" /> is not set to &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="value" /> does not implement the &lt;xref:System.IConvertible&gt; interface and <paramref name="value" /> is not an &lt;xref:System.Array&gt;.  
  
 -or-  
  
 <paramref name="value" /> is an &lt;xref:System.Array&gt; that contains elements with a &lt;xref:System.TypeCode&gt; value of &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteArgument">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.AddIn.Contract.RemoteArgument CreateRemoteArgument(object value, bool isByRef) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The argument that will be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> to pass the `value` argument by reference; otherwise, <see langword="false" />.</param>
        <summary>Creates a <see cref="T:System.AddIn.Contract.RemoteArgument" /> for an argument that can be passed by reference.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the specified argument.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method calls the <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor that applies to the type of the `value` parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <paramref name="value" /> is not an <see cref="T:System.AddIn.Contract.IContract" />.  
  
 -or-  
  
 The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <paramref name="value" /> is not set to &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="value" /> does not implement the &lt;xref:System.IConvertible&gt; interface and <paramref name="value" /> is not an &lt;xref:System.Array&gt;.  
  
 -or-  
  
 <paramref name="value" /> is an &lt;xref:System.Array&gt; that contains elements with a &lt;xref:System.TypeCode&gt; value of &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteArgument">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef, TypeCode typeCodeToUse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.AddIn.Contract.RemoteArgument CreateRemoteArgument(object value, bool isByRef, valuetype System.TypeCode typeCodeToUse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isByRef" Type="System.Boolean" />
        <Parameter Name="typeCodeToUse" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="value">The argument that will be passed across process or application domain boundaries.</param>
        <param name="isByRef">
          <see langword="true" /> to pass the argument by reference; otherwise, <see langword="false" />.</param>
        <param name="typeCodeToUse">A &lt;xref:System.TypeCode&gt; that indicates the type code of `value`, if `value` is not an &lt;xref:System.Array&gt;. Otherwise, a &lt;xref:System.TypeCode&gt; that indicates the type code of the elements in `value`.</param>
        <summary>Creates a <see cref="T:System.AddIn.Contract.RemoteArgument" /> for an argument that has the specified type code and that can be passed by reference.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the specified argument.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method calls the <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor that applies to the type of the `value` parameter.  
  
 You cannot use this method to create a <xref:System.AddIn.Contract.RemoteArgument> that represents a `null` array that contains elements of intrinsic data types. An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt;, <paramref name="value" /> is not an <see cref="T:System.AddIn.Contract.IContract" />, and <paramref name="value" /> is not <see langword="null" />.  
  
 -or-  
  
 The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <paramref name="value" /> is not &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.  
  
 -or-  
  
 <paramref name="value" /> does not implement the &lt;xref:System.IConvertible&gt; interface, <paramref name="value" /> is not <see langword="null" />, and <paramref name="value" /> is not an &lt;xref:System.Array&gt;.  
  
 -or-  
  
 <paramref name="value" /> is an &lt;xref:System.Array&gt; that contains elements with a &lt;xref:System.TypeCode&gt; value of &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</exception>
        <exception cref="T:System.NotSupportedException">The &lt;xref:System.TypeCode&gt; of <paramref name="value" /> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <paramref name="typeCodeToUse" /> is &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="typeCodeToUse" /> does not specify a valid &lt;xref:System.TypeCode&gt; value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateTimeValue">
      <MemberSignature Language="C#" Value="public DateTime DateTimeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTimeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.DateTime&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.DateTime&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; &lt;xref:System.DateTime.MinValue&gt; if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DBNullValue">
      <MemberSignature Language="C#" Value="public DBNull DBNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DBNull DBNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DBNull</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.DBNull" /> that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The <see cref="T:System.DBNull" /> that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; <see langword="null" /> if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DecimalValue">
      <MemberSignature Language="C#" Value="public decimal DecimalValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal DecimalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Decimal&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Decimal&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="C#" Value="public double DoubleValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DoubleValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Double&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Double&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0.0 if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Int16Value">
      <MemberSignature Language="C#" Value="public short Int16Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Int16Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Int16&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Int16&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Int32Value">
      <MemberSignature Language="C#" Value="public int Int32Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Int32Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Int32&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Int32&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Int64Value">
      <MemberSignature Language="C#" Value="public long Int64Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Int64Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Int64&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Int64&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsByRef">
      <MemberSignature Language="C#" Value="public bool IsByRef { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents an argument that is passed by reference.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents an argument that is passed by reference; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MissingValue">
      <MemberSignature Language="C#" Value="public System.Reflection.Missing MissingValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Missing MissingValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Missing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;xref:System.Type.Missing&gt; value.</summary>
        <value>The &lt;xref:System.Type.Missing&gt; value.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 This property value is retrieved while the &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoteArgumentKind">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgumentKind RemoteArgumentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Contract.RemoteArgumentKind RemoteArgumentKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgumentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> that indicates the kind of argument that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>One of the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> values that indicates whether the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents an intrinsic type, an array of intrinsic types, an <see cref="T:System.AddIn.Contract.IContract" />, or the &lt;xref:System.Type.Missing?displayProperty=fullName&gt; value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SByteValue">
      <MemberSignature Language="C#" Value="public sbyte SByteValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int8 SByteValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.SByte&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.SByte&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SingleValue">
      <MemberSignature Language="C#" Value="public float SingleValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SingleValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.Single&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.Single&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0.0 if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public string StringValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.String&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.String&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; <see langword="null" /> if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a &lt;xref:System.TypeCode&gt; that indicates the base type of the argument that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>A &lt;xref:System.TypeCode&gt; that indicates the base type of the argument that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UInt16Value">
      <MemberSignature Language="C#" Value="public ushort UInt16Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 UInt16Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.UInt16&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.UInt16&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UInt32Value">
      <MemberSignature Language="C#" Value="public uint UInt32Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 UInt32Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.UInt32&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.UInt32&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UInt64Value">
      <MemberSignature Language="C#" Value="public ulong UInt64Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 UInt64Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;xref:System.UInt64&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents.</summary>
        <value>The &lt;xref:System.UInt64&gt; that the <see cref="T:System.AddIn.Contract.RemoteArgument" /> represents; 0 (zero) if the value of the <see cref="T:System.AddIn.Contract.RemoteArgument" /> has not yet been specified.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is not set to the <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> value.  
  
 -or-  
  
 The &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.  
  
 -or-  
  
 This property is set while the &lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt; property is <see langword="false" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>