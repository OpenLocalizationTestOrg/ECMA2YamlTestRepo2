<Type Name="XsdSchemaFileEditor" FullName="System.Web.UI.Design.XsdSchemaFileEditor">
  <TypeSignature Language="C#" Value="public class XsdSchemaFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdSchemaFileEditor extends System.Web.UI.Design.UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a design-time user interface for selecting an XML schema definition file.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An XsdSchemaFileEditor object is used at design time to select and edit a URL for an XML schema definition file (.xsd), and to assign the URL to a control property.  
  
 Use the <xref:System.ComponentModel.EditorAttribute> attribute to associate the XsdSchemaFileEditor with a property. When the associated property is edited on the design surface, the designer host calls the <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> method. The <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> method uses the <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> method, which in turn displays a user interface for selecting the URL, and then returns the URL that is selected by the user. The <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> method indicates the display style of the user interface.  
  
 Derive a class from the XsdSchemaFileEditor to define a custom editor for an XML schema URL property. For example, a derived class can override the <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> method, and then call the <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> method with a custom <xref:System.Web.UI.Design.XsdSchemaFileEditor.Filter%2A> or <xref:System.Web.UI.Design.XsdSchemaFileEditor.Caption%2A> value.  
  
   
  
## Examples  
 The following code example demonstrates how to associate an instance of the XsdSchemaFileEditor class with a property that is contained within a custom control. When the control property is edited on the design surface, the XsdSchemaFileEditor class provides the user interface to select and edit an XML schema definition file name for the property value.  
  
 [!code-cs[WebDesigner.XsdSchemaFileEditor#1](~/add/codesnippet/csharp/t-system.web.ui.design.x_6_1.cs)]
 [!code-vb[WebDesigner.XsdSchemaFileEditor#1](~/add/codesnippet/visualbasic/t-system.web.ui.design.x_6_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdSchemaFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the caption to display on the selection dialog box.</summary>
        <value>The caption text to display on the selection dialog box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Caption property is used by the <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> method when calling the <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> method, which displays the URL selection dialog box to the user at design time.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URL filter options for the editor, which are used to filter the items that appear in the URL selection dialog box.</summary>
        <value>A string that represents one or more URL filter options for the dialog box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Filter property is used by the <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> method when calling the <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> method, which displays the URL selection dialog box to the user at design time.  
  
 The Filter property default value indicates two URL filters for the dialog box: one for XML schema definition files (*.xsd) and another for all files (\*.\*).  
  
 To specify a custom filter string, derive a class from the <xref:System.Web.UI.Design.XsdSchemaFileEditor> class, and then override the Filter property to return the custom filter string.  
  
 A filter string contains one or more filter options. Each filter option contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.  
  
 The following is an example of a filter string that contains two filter options:  
  
 "`XML Schema Files (*.xsd)|*.xsd|All Files (*.*)|*.*`".  
  
 You can specify several filter patterns in a filter option by separating the filter patterns with semicolons. The following is an example of a filter string in which the first filter option specifies two filter patterns:  
  
 "`Custom Schema Files (*.xs1; *.xs2)|*.xs1;*.xs2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>