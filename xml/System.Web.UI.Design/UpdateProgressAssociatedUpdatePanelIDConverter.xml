<Type Name="UpdateProgressAssociatedUpdatePanelIDConverter" FullName="System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter">
  <TypeSignature Language="C#" Value="public class UpdateProgressAssociatedUpdatePanelIDConverter : System.ComponentModel.StringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateProgressAssociatedUpdatePanelIDConverter extends System.ComponentModel.StringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a type converter that retrieves a list of control IDs in the current container.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The UpdateProgressAssociatedUpdatePanelIDConverter class derives from the <xref:System.ComponentModel.StringConverter> class. It provides a list of control IDs to be displayed in a property-editing control in design-time environments.  
  
 For more information about type converters, see [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md) and [Generalized Type Conversion](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateProgressAssociatedUpdatePanelIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">A context that can be used for more information about the environment that this converter is invoked from. This parameter and its properties can be <see langword="null" />.</param>
        <summary>Returns a collection of control IDs from the container inside the <see cref="T:System.ComponentModel.Design.IDesignerHost" /> object for the specified format context.</summary>
        <returns>A collection of strings that represent the control IDs of the controls in the current container. If no controls are currently in the container, the method returns an empty collection. If the context is <see langword="null" /> or if there is no current container, the method returns <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">The format context.</param>
        <summary>Returns a value that indicates whether the collection of standard values that is returned from &lt;xref:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues%2A&gt; is an exclusive list of possible values for the specified context.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; returned from &lt;xref:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues%2A&gt; is an exclusive list of possible values; <see langword="false" /> if other values are possible. The default is <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">The format context.</param>
        <summary>Returns a value that indicates whether this converter supports a set of control ID values that can be selected from a list.</summary>
        <returns>
          <see langword="true" /> if &lt;xref:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues%2A&gt; should be called to find a common set of control ID values the object supports; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>