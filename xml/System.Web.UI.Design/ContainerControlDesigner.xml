<Type Name="ContainerControlDesigner" FullName="System.Web.UI.Design.ContainerControlDesigner">
  <TypeSignature Language="C#" Value="public class ContainerControlDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerControlDesigner extends System.Web.UI.Design.ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides designer functionality for controls that contain child controls or properties that can be modified at design time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContainerControlDesigner class provides a base designer class for controls that can be modified on the design surface. This includes controls that contain child controls or editable inner properties. The ContainerControlDesigner provides a single framed region to represent the control, and automatically handles rendering the control at design time.  
  
 Apply the <xref:System.Web.UI.ParseChildrenAttribute> attribute on the associated control to determine the design-time behavior of the ContainerControlDesigner. Apply the <xref:System.Web.UI.ParseChildrenAttribute> settings on the associated control as follows:  
  
-   `false` to indicate that the ContainerControlDesigner represents the contents of the editable design region as child controls.  
  
-   `true` to indicate that the ContainerControlDesigner represents the contents of the editable design region as editable inner properties of the control.  
  
 Control developers can derive and extend a custom designer from one of several base designers depending on the kind of control that is being developed, as defined in the following list:  
  
-   Controls that allow child controls to be added to it at design time can derive from the ContainerControlDesigner class. For example, the <xref:System.Web.UI.Design.WebControls.PanelContainerDesigner> class is derived from the ContainerControlDesigner class and represents a <xref:System.Web.UI.WebControls.Panel> control on the design surface.  
  
-   Controls that have one or more child controls, and might also have an editable designer region where controls can be added at design time, can derive from the <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner> class.  
  
-   Controls that require custom design-time processing can derive from the base <xref:System.Web.UI.Design.ControlDesigner> class.  
  
> [!NOTE]
>  The ContainerControlDesigner class replaces the obsolete <xref:System.Web.UI.Design.ReadWriteControlDesigner> class.  
  
 Use the <xref:System.ComponentModel.DesignerAttribute> attribute to associate a custom designer class together with a custom control implementation. For detailed information about how to use control designers with custom controls, see [Walkthrough: Creating a Basic Control Designer for a Web Server Control](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates how to derive a designer class from the ContainerControlDesigner class. The example defines a simple control that is derived from the <xref:System.Web.UI.WebControls.CompositeControl> class, and then defines an associated designer, which is derived from the ContainerControlDesigner class. The derived designer class overrides the <xref:System.Web.UI.Design.ContainerControlDesigner.FrameCaption%2A> and <xref:System.Web.UI.Design.ContainerControlDesigner.FrameStyle%2A> properties to customize the frame that is around the editable region of the control on the design surface.  
  
 [!code-vb[SimpleContainerControlDesigner#1](~/add/codesnippet/visualbasic/t-system.web.ui.design.c_2_1.vb)]
 [!code-cs[SimpleContainerControlDesigner#1](~/add/codesnippet/csharp/t-system.web.ui.design.c_2_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddDesignTimeCssAttributes">
      <MemberSignature Language="C#" Value="protected virtual void AddDesignTimeCssAttributes (System.Collections.IDictionary styleAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddDesignTimeCssAttributes(class System.Collections.IDictionary styleAttributes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleAttributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="styleAttributes">A keyed collection of style attributes.</param>
        <summary>Adds the style attributes for the control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AddDesignTimeCssAttributes method adds a set of style attributes for the design-time representation of the control. The style attribute values are added to the `styleAttributes` collection, keyed by the style attribute name. For example, you can access the height value in the collection as `styleAttributes["height"]` for C# or `styleAttributes("height")` for Microsoft Visual Basic.  
  
 If the associated control is not derived from the <xref:System.Web.UI.WebControls.WebControl> class, the AddDesignTimeCssAttributes method does not add attribute values to the `styleAttributes` collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public override bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating if the control can be resized at design time.</summary>
        <value>
          <see langword="true" />, if the control can be resized; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The base implementation for the AllowResize property returns `true`. This indicates that the designer supports resizing of the control on the design surface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FrameCaption">
      <MemberSignature Language="C#" Value="public virtual string FrameCaption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameCaption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the caption that is displayed for a control at design time.</summary>
        <value>The string used for the control frame caption at design time, if the control has a design-time caption; otherwise, an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The FrameCaption string is the caption that is displayed in the frame around the editable region of the control on the design surface.  
  
 The default caption for a <xref:System.Web.UI.Design.ContainerControlDesigner> frame is the <xref:System.Web.UI.Design.ControlDesigner.ID%2A> property of the designer instance. This is typically the same as the run-time <xref:System.Web.UI.Control.ID%2A> property of the control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FrameStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Style FrameStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FrameStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the style that is applied to the control frame at design time.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> for the control frame at design time.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The FrameStyle property indicates the style properties of the frame around the editable region of the control on the design surface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeCssAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetDesignTimeCssAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetDesignTimeCssAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the collection of style attributes for the control at design time.</summary>
        <returns>A collection of style attributes applied to the control on the design surface. The style attribute names are keys used to access the style attribute values in the &lt;xref:System.Collections.IDictionary&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetDesignTimeCssAttributes method returns a collection of style attributes for the design-time representation of the control.  
  
 To examine a style attribute value at design time for a control, use the style attribute name as a key to the returned collection. Style attribute values are stored as strings in the collection. For example, you can access the height value in the collection as `styleAttributes["height"]` for C# or `styleAttributes("height")` for Microsoft Visual Basic.  
  
 If the associated control is not derived from the <xref:System.Web.UI.WebControls.WebControl> class, the GetDesignTimeCssAttributes method returns an empty collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">A collection of designer regions.</param>
        <summary>Returns the HTML markup that is used to represent the control at design time.</summary>
        <returns>An HTML markup string that represents the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the GetDesignTimeHtml method to get the HTML for the control. Child controls that are contained in the editable design region are rendered using their associated control designers.  
  
 The GetDesignTimeHtml method initializes a new <xref:System.Web.UI.Design.EditableDesignerRegion> object for the editable region of associated control, and then returns the region through the `regions` collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the control.</param>
        <summary>Returns the content for the editable region of the control at design time.</summary>
        <returns>The persisted content of the region contained within the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.ContainerControlDesigner> class implements a single designer region instead of a collection of designer regions. Therefore, the `region` parameter is ignored, and the GetEditableDesignerRegionContent method returns the content for the single designer region that is contained in the control designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public override string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPersistenceContent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the persistable content of the control at design time.</summary>
        <returns>
          <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetPersistenceContent method returns `null` to indicate that the <xref:System.Web.UI.Design.ContainerControlDesigner> class does not have persisted inner content.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="protected virtual bool NoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether to use the HTML <see langword="nowrap" /> attribute on tables.</summary>
        <value>
          <see langword="true" /> to use the HTML <see langword="nowrap" /> attribute on tables; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the control.</param>
        <param name="content">Content to assign for the editable design region.</param>
        <summary>Sets the content for the editable region of the control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.ContainerControlDesigner> class implements a single designer region instead of a collection of designer regions. Therefore, the `region` parameter is ignored, and the SetEditableDesignerRegionContent method sets the content for the single designer region that is contained in the control designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>