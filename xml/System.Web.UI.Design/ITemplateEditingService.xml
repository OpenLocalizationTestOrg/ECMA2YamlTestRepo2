<Type Name="ITemplateEditingService" FullName="System.Web.UI.Design.ITemplateEditingService">
  <TypeSignature Language="C#" Value="public interface ITemplateEditingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITemplateEditingService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use of this type is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides services for editing control templates at design time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The ITemplateEditingService interface is obsolete. Expose templates through the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property of a control designer. The design host creates a <xref:System.Web.UI.Design.TemplatedEditableDesignerRegion> for each <xref:System.Web.UI.Design.TemplateGroup> defined for a control designer.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CreateFrame">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ITemplateEditingFrame CreateFrame (System.Web.UI.Design.TemplatedControlDesigner designer, string frameName, string[] templateNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ITemplateEditingFrame CreateFrame(class System.Web.UI.Design.TemplatedControlDesigner designer, string frameName, string[] templateNames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ITemplateEditingFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.TemplatedControlDesigner" />
        <Parameter Name="frameName" Type="System.String" />
        <Parameter Name="templateNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
        <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the &lt;xref:System.ComponentModel.Design.DesignerVerb.Text%2A&gt; property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
        <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
        <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
        <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.ITemplateEditingService> interface is obsolete. Expose templates through the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property of a control designer. The design host creates a <xref:System.Web.UI.Design.TemplatedEditableDesignerRegion> for each <xref:System.Web.UI.Design.TemplateGroup> defined for a control designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateFrame">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ITemplateEditingFrame CreateFrame (System.Web.UI.Design.TemplatedControlDesigner designer, string frameName, string[] templateNames, System.Web.UI.WebControls.Style controlStyle, System.Web.UI.WebControls.Style[] templateStyles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ITemplateEditingFrame CreateFrame(class System.Web.UI.Design.TemplatedControlDesigner designer, string frameName, string[] templateNames, class System.Web.UI.WebControls.Style controlStyle, class System.Web.UI.WebControls.Style[] templateStyles) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ITemplateEditingFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.TemplatedControlDesigner" />
        <Parameter Name="frameName" Type="System.String" />
        <Parameter Name="templateNames" Type="System.String[]" />
        <Parameter Name="controlStyle" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="templateStyles" Type="System.Web.UI.WebControls.Style[]" />
      </Parameters>
      <Docs>
        <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
        <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the &lt;xref:System.ComponentModel.Design.DesignerVerb.Text%2A&gt; property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
        <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
        <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame.</param>
        <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame.</param>
        <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />, using the specified name, template names, control style, and template styles.</summary>
        <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.ITemplateEditingService> interface is obsolete. Expose templates through the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property of a control designer. The design host creates a <xref:System.Web.UI.Design.TemplatedEditableDesignerRegion> for each <xref:System.Web.UI.Design.TemplateGroup> defined for a control designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetContainingTemplateName">
      <MemberSignature Language="C#" Value="public string GetContainingTemplateName (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetContainingTemplateName(class System.Web.UI.Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template.</param>
        <summary>Gets the name of the parent template.</summary>
        <returns>The name of the parent template.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.ITemplateEditingService> interface is obsolete. Use the <xref:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition%2A> property of the <xref:System.Web.UI.Design.TemplatedEditableDesignerRegion> class for equivalent design time functionality.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportsNestedTemplateEditing">
      <MemberSignature Language="C#" Value="public bool SupportsNestedTemplateEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsNestedTemplateEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
        <value>
          <see langword="true" /> if the service supports nested template editing; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property indicates whether a template editor can be invoked from a component of a parent template editor's templated control. This is called nested template editing, because a template editor is invoked for a component of a control for which a template editor is already operating.  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.ITemplateEditingService> interface is obsolete. Expose templates through the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property of a control designer. The design host creates a <xref:System.Web.UI.Design.TemplatedEditableDesignerRegion> for each <xref:System.Web.UI.Design.TemplateGroup> defined for a control designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>