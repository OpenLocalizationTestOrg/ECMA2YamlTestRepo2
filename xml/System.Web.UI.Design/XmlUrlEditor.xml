<Type Name="XmlUrlEditor" FullName="System.Web.UI.Design.XmlUrlEditor">
  <TypeSignature Language="C#" Value="public class XmlUrlEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlUrlEditor extends System.Web.UI.Design.UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a user interface for selecting a URL that indicates the location of an XML file.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XmlUrlEditor is a <xref:System.Drawing.Design.UITypeEditor> that provides a dialog for selecting a URL that indicates the location of an XML file.  
  
   
  
## Examples  
 [!code-cpp[WebUITypeEditorsExample#3](~/add/codesnippet/cpp/t-system.web.ui.design.x_4_1.cpp)]
 [!code-cs[WebUITypeEditorsExample#3](~/add/codesnippet/csharp/t-system.web.ui.design.x_4_1.cs)]
 [!code-vb[WebUITypeEditorsExample#3](~/add/codesnippet/visualbasic/t-system.web.ui.design.x_4_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlUrlEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XmlUrlEditor" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the caption to display on the selection dialog window.</summary>
        <value>The caption to display on the selection dialog window.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
        <value>A string that contains information about the file filtering options available in the dialog box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Filter property specifies a filter string with two filter options: one for XML files (*.xml), and one for all files (\*.\*).  
  
 A filter string contains one or more filter options. Each filter option contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.  
  
 The following is an example of a filter string that contains two filter options: "`XML Files (*.xml)|*.xml|All Files (*.*)|*.*`".  
  
 You can specify several filter patterns in a filter option by separating the filter patterns with semicolons. The following is an example of a filter string in which the first filter option specifies two filter patterns: "`Custom XML Files (*.xml;*.xlst)|*.xml;*.xlst|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.Design.UrlBuilderOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.Design.UrlBuilderOptions Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.UrlBuilderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the options for the URL builder to use.</summary>
        <value>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>