<Type Name="RouteUrlExpressionEditor" FullName="System.Web.UI.Design.RouteUrlExpressionEditor">
  <TypeSignature Language="C#" Value="public class RouteUrlExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides properties and methods for composing a <see langword="RouteURL" /> expression at design time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A visual designer host, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the RouteUrlExpressionEditor class to compose a `RouteUrl` markup expression.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">A <see langword="RouteUrl" /> expression to evaluate. The expression does not include the <see langword="RouteUrl" /> expression prefix.</param>
        <param name="parseTimeData">An object that contains additional parsing information for evaluating the expression.</param>
        <param name="propertyType">The type of the control property.</param>
        <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
        <summary>Evaluates a <see langword="RouteUrl" /> expression and provides the design-time value.</summary>
        <returns>The URL for the specified route and route parameter values if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The visual designer uses the EvaluateExpression method to evaluate a `RouteUrl` expression and provide the design-time value for an associated control property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the <see langword="RouteUrl" /> expression prefix.</param>
        <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
        <summary>Returns an expression editor sheet for a <see langword="RouteUrl" /> expression.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> instance that defines the <see langword="RouteUrl" /> expression properties.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetExpressionEditorSheet method returns an editor-sheet implementation for `RouteUrl` expressions. The editor sheet for `RouteUrl` expressions enables users to select parameters and a route name. After users have selected the parameters and route name, the editor-sheet implementation generates a `RouteUrl` expression, which is returned to the visual designer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>