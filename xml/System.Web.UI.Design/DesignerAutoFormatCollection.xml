<Type Name="DesignerAutoFormatCollection" FullName="System.Web.UI.Design.DesignerAutoFormatCollection">
  <TypeSignature Language="C#" Value="public sealed class DesignerAutoFormatCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerAutoFormatCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects within a control designer. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.ControlDesigner> class and any derived class defines the <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> property as a DesignerAutoFormatCollection object. Control developers can override the <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> property in a derived control designer, add custom automatic formatting styles, and return the collection of supported formats to the visual designer.  
  
 The collection dynamically increases as objects are added. Indexes in this collection are zero-based. Use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Count%2A> property to determine how many automatic style formats are in the collection.  
  
 Additionally, use the DesignerAutoFormatCollection methods and properties to provide the following functionality:  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Add%2A> method to add a single format to the collection.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Insert%2A> method to add a format at a particular index within the collection.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Remove%2A> method to remove a format.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt%2A> method to remove the format at a particular index.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Contains%2A> method to determine whether a particular format is already in the collection.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf%2A> method to retrieve the index of a format within the collection.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Item%2A> property to get or set the format at a particular index, using array notation.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Clear%2A> method to remove all formats from the collection.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Count%2A> property to determine the number of formats in the collection.  
  
-   The <xref:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf%2A> method to get the position of a format within the collection.  
  
   
  
## Examples  
 The following code example demonstrates how to implement the <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> property in a custom control designer. The derived control designer implements the <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> property by adding three instances of a custom automatic format that are derived from the <xref:System.Web.UI.Design.DesignerAutoFormat> class.  
  
 [!code-vb[DesignerAutoFormat#1](~/add/codesnippet/visualbasic/t-system.web.ui.design.d_1_1.vb)]
 [!code-cs[DesignerAutoFormat#1](~/add/codesnippet/csharp/t-system.web.ui.design.d_1_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAutoFormatCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> constructor to create an empty collection. You can add elements to the collection by using the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Add%2A> or <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Insert%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.Design.DesignerAutoFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.Design.DesignerAutoFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
        <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to the end of the collection.</summary>
        <returns>The index at which the format was added to the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Add method adds the specified <xref:System.Web.UI.Design.DesignerAutoFormat> object to the end of the collection. To add a <xref:System.Web.UI.Design.DesignerAutoFormat> object to the collection at a specific index location, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Insert%2A> method.  
  
   
  
## Examples  
 The following code example illustrates how to create and add <xref:System.Web.UI.Design.DesignerAutoFormat> objects to the `AutoFormats` property of a custom designer.  
  
 [!code-vb[DesignerAutoFormat#2](~/add/codesnippet/visualbasic/636af152-ec6f-44bb-ab2c-_1.vb)]
 [!code-cs[DesignerAutoFormat#2](~/add/codesnippet/csharp/636af152-ec6f-44bb-ab2c-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all formats from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Clear method to remove all formats from the collection. To remove a specific format from the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Remove%2A> method. To remove a format at a particular index, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.Design.DesignerAutoFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.Design.DesignerAutoFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
        <summary>Determines whether the specified format is contained within the collection.</summary>
        <returns>
          <see langword="true" />, if the specified format is in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Contains method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.DesignerAutoFormat> objects that are being compared.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</summary>
        <value>The number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Count property typically is used to determine the upper boundary index when iterating through objects in the collection. Because the collection indexes are zero-based, the first element is at index `0` and the last element is at index `Count-1`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.Design.DesignerAutoFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.Design.DesignerAutoFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to locate within the collection.</param>
        <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object within the collection.</summary>
        <returns>The zero-based index of the first occurrence of <paramref name="format" /> within the collection; otherwise, -1, if the format is not in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IndexOf method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.DesignerAutoFormat> objects that are being compared.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.Design.DesignerAutoFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.Design.DesignerAutoFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="format" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index within the collection at which to insert `format`.</param>
        <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert into the collection.</param>
        <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Insert method adds a <xref:System.Web.UI.Design.DesignerAutoFormat> object to the collection at a specific index location. To add a single <xref:System.Web.UI.Design.DesignerAutoFormat> to the end of the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Add%2A> method.  
  
> [!NOTE]
>  When you insert an item into a collection, the index values change for subsequent items in the collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  
  
 \- or -  
  
 <paramref name="index" /> is greater than the &lt;xref:System.Web.UI.Design.DesignerAutoFormatCollection.Count%2A&gt; property.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.DesignerAutoFormat this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormat Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to get or set in the collection.</param>
        <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index in the collection.</summary>
        <value>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> at the specified index in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Item indexer to retrieve the <xref:System.Web.UI.Design.DesignerAutoFormat> object at the specified index within the collection or to set the format at the specified index within the collection. You can index elements in the collection by using array notation. For example, you can index an element at index `i` with the notation `AutoFormats(i)` for Microsoft VisualBasic or `AutoFormats[i]` for C#.  
  
 When you have a reference to the <xref:System.Web.UI.Design.DesignerAutoFormat> object and need the index of the object in the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf%2A> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  
  
 \- or -  
  
 <paramref name="index" /> is greater than the &lt;xref:System.Web.UI.Design.DesignerAutoFormatCollection.Count%2A&gt; property.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PreviewSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreviewSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreviewSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum outer dimensions of the control as it will appear at run time.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> structure that contains the height and width of the control on the design surface.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The PreviewSize property examines each format in the collection and returns the largest height and the largest width in a <xref:System.Drawing.Size> structure. A visual designer, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the PreviewSize to determine the initial size of the **AutoFormat** dialog box. The minimum size is 200-by-200 pixels.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.Design.DesignerAutoFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.Design.DesignerAutoFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Remove method removes the first occurrence of `format` from the collection. If the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object does not contain `format`, the collection remains unchanged. No exception is thrown.  
  
 The Remove method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.DesignerAutoFormat> objects that are being compared.  
  
 The Remove method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Count%2A> value.  
  
 To remove a format at a particular index from the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt%2A> method. To remove all formats from the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Clear%2A> method.  
  
> [!NOTE]
>  When you remove an item from a collection, the index values change for subsequent items in the collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
        <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index within the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the RemoveAt method to remove a format at a particular index from the collection. To remove a specified format from the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Remove%2A> method. To remove all formats from the collection, use the <xref:System.Web.UI.Design.DesignerAutoFormatCollection.Clear%2A> method.  
  
> [!NOTE]
>  When you remove an item from a collection, the index values change for subsequent items in the collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  
  
 \- or -  
  
 <paramref name="index" /> is greater than the &lt;xref:System.Web.UI.Design.DesignerAutoFormatCollection.Count%2A&gt; property.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</summary>
        <value>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enumerating through a collection is not a thread-safe procedure intrinsically. Even when a collection is synchronized, other threads can still modify the collection. This causes exceptions during enumeration.  
  
 Lock the collection by using the SyncRoot method during the entire enumeration to guarantee thread safety. For detailed information about locking collections for thread-safe access, see <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The &lt;xref:System.Array&gt; to receive the designated items.</param>
        <param name="index">The starting index for the items to copy.</param>
        <summary>Copies the elements of the collection to an &lt;xref:System.Array&gt; object, starting at a particular &lt;xref:System.Array&gt; index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.ICollection&gt; interface.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of elements that are contained in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.ICollection&gt; interface.</summary>
        <value>The number of items in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe) when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.ICollection&gt; interface.</summary>
        <value>
          <see langword="true" />, if the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> is synchronized; otherwise <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an &lt;xref:System.Collections.IEnumerator&gt; interface that iterates through the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</summary>
        <returns>An &lt;xref:System.Collections.IEnumerator&gt; for the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object is cast to an <xref:System.Collections.IEnumerable> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to add to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</param>
        <summary>Adds an item to the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <returns>The index of the added item.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
        <summary>Determines whether the collection contains a specific value when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <returns>
          <see langword="true" />, if the object is in the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>Determines the index of a specific item in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <returns>The index of a item in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The index at which to insert `value`.</param>
        <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert.</param>
        <summary>Inserts an item into the collection at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the collection has a fixed size when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <value>Always <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this method, see &lt;xref:System.Collections.IList.IsReadOnly%2A&gt;.</summary>
        <value>Always <see langword="true" />, which indicates that the collection cannot be replaced or deleted.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>Gets the element at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <value>The element at the specified index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> object is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove.</param>
        <summary>Removes the first occurrence of a specific object from the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the item to remove.</param>
        <summary>Removes the item at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an &lt;xref:System.Collections.IList&gt; interface.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerAutoFormatCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>