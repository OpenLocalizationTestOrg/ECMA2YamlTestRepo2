<Type Name="IInternalConfigHost" FullName="System.Configuration.Internal.IInternalConfigHost">
  <TypeSignature Language="C#" Value="public interface IInternalConfigHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInternalConfigHost" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines interfaces used by internal .NET structures to initialize application configuration properties.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CreateConfigurationContext">
      <MemberSignature Language="C#" Value="public object CreateConfigurationContext (string configPath, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateConfigurationContext(string configPath, string locationSubPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <param name="locationSubPath">A string representing a subpath location of the configuration element.</param>
        <summary>Creates and returns a context object for a <see cref="T:System.Configuration.ConfigurationElement" /> of an application configuration.</summary>
        <returns>A context object for a <see cref="T:System.Configuration.ConfigurationElement" /> object of an application configuration.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateDeprecatedConfigContext">
      <MemberSignature Language="C#" Value="public object CreateDeprecatedConfigContext (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateDeprecatedConfigContext(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing a path to an application configuration file.</param>
        <summary>Creates and returns a deprecated context object of the application configuration.</summary>
        <returns>A deprecated context object of the application configuration.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DecryptSection">
      <MemberSignature Language="C#" Value="public string DecryptSection (string encryptedXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DecryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedXml" Type="System.String" />
        <Parameter Name="protectionProvider" Type="System.Configuration.ProtectedConfigurationProvider" />
        <Parameter Name="protectedConfigSection" Type="System.Configuration.ProtectedConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="encryptedXml">An encrypted XML string representing a configuration section.</param>
        <param name="protectionProvider">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
        <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
        <summary>Decrypts an encrypted configuration section and returns it as a string.</summary>
        <returns>A decrypted configuration section as a string.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DeleteStream">
      <MemberSignature Language="C#" Value="public void DeleteStream (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteStream(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Deletes the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the application configuration file.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EncryptSection">
      <MemberSignature Language="C#" Value="public string EncryptSection (string clearTextXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EncryptSection(string clearTextXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearTextXml" Type="System.String" />
        <Parameter Name="protectionProvider" Type="System.Configuration.ProtectedConfigurationProvider" />
        <Parameter Name="protectedConfigSection" Type="System.Configuration.ProtectedConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="clearTextXml">An XML string representing a configuration section to encrypt.</param>
        <param name="protectionProvider">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
        <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
        <summary>Encrypts a configuration section and returns it as a string.</summary>
        <returns>An encrypted configuration section represented as a string.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetConfigPathFromLocationSubPath">
      <MemberSignature Language="C#" Value="public string GetConfigPathFromLocationSubPath (string configPath, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigPathFromLocationSubPath(string configPath, string locationSubPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <param name="locationSubPath">The subpath location of the configuration file.</param>
        <summary>Returns the complete path to an application configuration file based on the location subpath.</summary>
        <returns>A string representing the complete path to an application configuration file.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetConfigType">
      <MemberSignature Language="C#" Value="public Type GetConfigType (string typeName, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetConfigType(string typeName, bool throwOnError) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">The type name</param>
        <param name="throwOnError">
          <see langword="true" /> to throw an exception if an error occurs; otherwise, <see langword="false" /></param>
        <summary>Returns a &lt;xref:System.Type&gt; object representing the type of the configuration object.</summary>
        <returns>A &lt;xref:System.Type&gt; object representing the type of the configuration object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetConfigTypeName">
      <MemberSignature Language="C#" Value="public string GetConfigTypeName (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigTypeName(class System.Type t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">A &lt;xref:System.Type&gt; object.</param>
        <summary>Returns a string representing a type name from the &lt;xref:System.Type&gt; object representing the type of the configuration.</summary>
        <returns>A string representing the type name from a &lt;xref:System.Type&gt; object representing the type of the configuration.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetRestrictedPermissions">
      <MemberSignature Language="C#" Value="public void GetRestrictedPermissions (System.Configuration.Internal.IInternalConfigRecord configRecord, out System.Security.PermissionSet permissionSet, out bool isHostReady);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRestrictedPermissions(class System.Configuration.Internal.IInternalConfigRecord configRecord, class System.Security.PermissionSet permissionSet, bool isHostReady) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet&amp;" RefType="out" />
        <Parameter Name="isHostReady" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
        <param name="permissionSet">The <see cref="T:System.Security.PermissionSet" /> object to associate with the configuration.</param>
        <param name="isHostReady">
          <see langword="true" /> to indicate the configuration host is has completed building associated permissions; otherwise, <see langword="false" />.</param>
        <summary>Associates the configuration with a <see cref="T:System.Security.PermissionSet" /> object.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStreamName">
      <MemberSignature Language="C#" Value="public string GetStreamName (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetStreamName(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <summary>Returns a string representing the configuration file name associated with the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</summary>
        <returns>A string representing the configuration file name associated with the &lt;xref:System.IO.Stream&gt; I/O tasks on the configuration file.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStreamNameForConfigSource">
      <MemberSignature Language="C#" Value="public string GetStreamNameForConfigSource (string streamName, string configSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetStreamNameForConfigSource(string streamName, string configSource) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="configSource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the configuration file name associated with the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="configSource">A string representing a path to a remote configuration file.</param>
        <summary>Returns a string representing the configuration file name associated with the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on a remote configuration file.</summary>
        <returns>A string representing the configuration file name associated with the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetStreamVersion">
      <MemberSignature Language="C#" Value="public object GetStreamVersion (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetStreamVersion(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Returns the version of the &lt;xref:System.IO.Stream&gt; object associated with configuration file.</summary>
        <returns>The version of the &lt;xref:System.IO.Stream&gt; object associated with configuration file.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Impersonate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Instructs the host to impersonate and returns an &lt;xref:System.IDisposable&gt; object required by the internal .NET structure.</summary>
        <returns>An &lt;xref:System.IDisposable&gt; value.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRoot" Type="System.Configuration.Internal.IInternalConfigRoot" />
        <Parameter Name="hostInitParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="configRoot">The configuration root object.</param>
        <param name="hostInitParams">The parameter object containing the values used for initializing the configuration host.</param>
        <summary>Initializes a configuration host.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InitForConfiguration">
      <MemberSignature Language="C#" Value="public void InitForConfiguration (ref string locationSubPath, out string configPath, out string locationConfigPath, System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitForConfiguration(string locationSubPath, string configPath, string locationConfigPath, class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="configPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="locationConfigPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="configRoot" Type="System.Configuration.Internal.IInternalConfigRoot" />
        <Parameter Name="hostInitConfigurationParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="locationSubPath">The subpath location of the configuration file.</param>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <param name="locationConfigPath">A string representing the location of a configuration path.</param>
        <param name="configRoot">The <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</param>
        <param name="hostInitConfigurationParams">The parameter object containing the values used for initializing the configuration host.</param>
        <summary>Initializes a configuration object.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsAboveApplication">
      <MemberSignature Language="C#" Value="public bool IsAboveApplication (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAboveApplication(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <summary>Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration.</summary>
        <returns>
          <see langword="true" /> the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsConfigRecordRequired">
      <MemberSignature Language="C#" Value="public bool IsConfigRecordRequired (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsConfigRecordRequired(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <summary>Returns a value indicating whether a child record is required for a child configuration path.</summary>
        <returns>
          <see langword="true" /> if child record is required for a child configuration path; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsDefinitionAllowed">
      <MemberSignature Language="C#" Value="public bool IsDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="allowDefinition" Type="System.Configuration.ConfigurationAllowDefinition" />
        <Parameter Name="allowExeDefinition" Type="System.Configuration.ConfigurationAllowExeDefinition" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <param name="allowDefinition">A <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> object.</param>
        <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object.</param>
        <summary>Determines if a different &lt;xref:System.Type&gt; definition is allowable for an application configuration object.</summary>
        <returns>
          <see langword="true" /> if a different &lt;xref:System.Type&gt; definition is allowable for an application configuration object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public bool IsFile (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFile(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Returns a value indicating whether the file path used by a &lt;xref:System.IO.Stream&gt; object to read a configuration file is a valid path.</summary>
        <returns>
          <see langword="true" /> if the path used by a &lt;xref:System.IO.Stream&gt; object to read a configuration file is a valid path; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsFullTrustSectionWithoutAptcaAllowed">
      <MemberSignature Language="C#" Value="public bool IsFullTrustSectionWithoutAptcaAllowed (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFullTrustSectionWithoutAptcaAllowed(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
        <summary>Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; attribute to disable implicit link demands.</summary>
        <returns>
          <see langword="true" /> if the configuration section requires a fully trusted code access security level and does not allow the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; attribute to disable implicit link demands; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsInitDelayed">
      <MemberSignature Language="C#" Value="public bool IsInitDelayed (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInitDelayed(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
        <summary>Returns a value indicating whether the initialization of a configuration object is considered delayed.</summary>
        <returns>
          <see langword="true" /> if the initialization of a configuration object is considered delayed; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsLocationApplicable">
      <MemberSignature Language="C#" Value="public bool IsLocationApplicable (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLocationApplicable(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <summary>Returns a value indicating whether the configuration object supports a location tag.</summary>
        <returns>
          <see langword="true" /> if the configuration object supports a location tag; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRemote">
      <MemberSignature Language="C#" Value="public bool IsRemote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether the configuration is remote.</summary>
        <value>
          <see langword="true" /> if the configuration is remote; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsSecondaryRoot">
      <MemberSignature Language="C#" Value="public bool IsSecondaryRoot (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecondaryRoot(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <summary>Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</summary>
        <returns>
          <see langword="true" /> if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTrustedConfigPath">
      <MemberSignature Language="C#" Value="public bool IsTrustedConfigPath (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTrustedConfigPath(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <summary>Returns a value indicating whether the configuration path is trusted.</summary>
        <returns>
          <see langword="true" /> if the configuration path is trusted; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenStreamForRead (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForRead(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Opens a &lt;xref:System.IO.Stream&gt; to read a configuration file.</summary>
        <returns>A &lt;xref:System.IO.Stream&gt; object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenStreamForRead (string streamName, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForRead(string streamName, bool assertPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="assertPermissions">
          <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
        <summary>Opens a &lt;xref:System.IO.Stream&gt; object to read a configuration file.</summary>
        <returns>Returns the &lt;xref:System.IO.Stream&gt; object specified by <paramref name="streamName" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForWrite(string streamName, string templateStreamName, object writeContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="templateStreamName" Type="System.String" />
        <Parameter Name="writeContext" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="templateStreamName">The name of a &lt;xref:System.IO.Stream&gt; object from which file attributes are to be copied as a template.</param>
        <param name="writeContext">The write context of the &lt;xref:System.IO.Stream&gt; object.</param>
        <summary>Opens a &lt;xref:System.IO.Stream&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;xref:System.IO.Stream&gt; object to be designated as a template for copying file attributes.</summary>
        <returns>A &lt;xref:System.IO.Stream&gt; object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForWrite(string streamName, string templateStreamName, object writeContext, bool assertPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="templateStreamName" Type="System.String" />
        <Parameter Name="writeContext" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="templateStreamName">The name of a &lt;xref:System.IO.Stream&gt; from which file attributes are to be copied as a template.</param>
        <param name="writeContext">The write context of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="assertPermissions">
          <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
        <summary>Opens a &lt;xref:System.IO.Stream&gt; object for writing to a configuration file. Allows a &lt;xref:System.IO.Stream&gt; object to be designated as a template for copying file attributes.</summary>
        <returns>Returns the &lt;xref:System.IO.Stream&gt; object specified by <paramref name="streamName" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrefetchAll">
      <MemberSignature Language="C#" Value="public bool PrefetchAll (string configPath, string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrefetchAll(string configPath, string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Returns a value indicating whether the entire configuration file could be read by a designated &lt;xref:System.IO.Stream&gt; object.</summary>
        <returns>
          <see langword="true" /> if the entire configuration file could be read by the &lt;xref:System.IO.Stream&gt; object designated by <paramref name="streamName" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrefetchSection">
      <MemberSignature Language="C#" Value="public bool PrefetchSection (string sectionGroupName, string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrefetchSection(string sectionGroupName, string sectionName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionGroupName" Type="System.String" />
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionGroupName">A string representing the identifying name of a configuration file section group.</param>
        <param name="sectionName">A string representing the identifying name of a configuration file section.</param>
        <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to read a designated section of its associated configuration file.</summary>
        <returns>
          <see langword="true" /> if a section of the configuration file designated by <paramref name="sectionGroupName" /> and <paramref name="sectionName" /> could be read by a &lt;xref:System.IO.Stream&gt; object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RequireCompleteInit">
      <MemberSignature Language="C#" Value="public void RequireCompleteInit (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequireCompleteInit(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
        <summary>Indicates a new configuration record requires a complete initialization.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartMonitoringStreamForChanges">
      <MemberSignature Language="C#" Value="public object StartMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object StartMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="callback" Type="System.Configuration.Internal.StreamChangeCallback" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object to receive the returned data representing the changes in the configuration file.</param>
        <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to monitor an associated &lt;xref:System.IO.Stream&gt; object for changes in a configuration file.</summary>
        <returns>An &lt;xref:System.Object&gt; containing changed configuration settings.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopMonitoringStreamForChanges">
      <MemberSignature Language="C#" Value="public void StopMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="callback" Type="System.Configuration.Internal.StreamChangeCallback" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
        <summary>Instructs the  <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to stop monitoring an associated &lt;xref:System.IO.Stream&gt; object for changes in a configuration file.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotifications">
      <MemberSignature Language="C#" Value="public bool SupportsChangeNotifications { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotifications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether the host configuration supports change notification.</summary>
        <value>
          <see langword="true" /> if the configuration supports change notification; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportsLocation">
      <MemberSignature Language="C#" Value="public bool SupportsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether the host configuration supports location tags.</summary>
        <value>
          <see langword="true" /> if the configuration supports location tags; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportsPath">
      <MemberSignature Language="C#" Value="public bool SupportsPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether the host configuration supports path tags.</summary>
        <value>
          <see langword="true" /> if the configuration supports path tags; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SupportsRefresh">
      <MemberSignature Language="C#" Value="public bool SupportsRefresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRefresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether the host configuration supports configuration refresh.</summary>
        <value>
          <see langword="true" /> if the configuration supports configuration refresh; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerifyDefinitionAllowed">
      <MemberSignature Language="C#" Value="public void VerifyDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, System.Configuration.Internal.IConfigErrorInfo errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, class System.Configuration.Internal.IConfigErrorInfo errorInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="allowDefinition" Type="System.Configuration.ConfigurationAllowDefinition" />
        <Parameter Name="allowExeDefinition" Type="System.Configuration.ConfigurationAllowExeDefinition" />
        <Parameter Name="errorInfo" Type="System.Configuration.Internal.IConfigErrorInfo" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path of the application configuration file.</param>
        <param name="allowDefinition">A &lt;xref:System.Configuration.SectionInformation.AllowDefinition%2A&gt; object.</param>
        <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
        <param name="errorInfo">An <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> object.</param>
        <summary>Verifies that a configuration definition is allowed for a configuration record.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WriteCompleted">
      <MemberSignature Language="C#" Value="public void WriteCompleted (string streamName, bool success, object writeContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCompleted(string streamName, bool success, object writeContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" />
        <Parameter Name="writeContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="success">
          <see langword="true" /> if the write to the configuration file was completed successfully; otherwise, <see langword="false" />.</param>
        <param name="writeContext">The write context of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Indicates that all writing to the configuration file has completed.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WriteCompleted">
      <MemberSignature Language="C#" Value="public void WriteCompleted (string streamName, bool success, object writeContext, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCompleted(string streamName, bool success, object writeContext, bool assertPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" />
        <Parameter Name="writeContext" Type="System.Object" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName">A string representing the name of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="success">
          <see langword="true" /> to indicate the write was completed successfully; otherwise, <see langword="false" />.</param>
        <param name="writeContext">The write context of the &lt;xref:System.IO.Stream&gt; object performing I/O tasks on the configuration file.</param>
        <param name="assertPermissions">
          <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
        <summary>Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>