<Type Name="TypedMessageConverter" FullName="System.ServiceModel.Description.TypedMessageConverter">
  <TypeSignature Language="C#" Value="public abstract class TypedMessageConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypedMessageConverter extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converts a typed message to an untyped message, or an untyped message to a typed message.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class provides functionalities to convert a typed message to an untyped message, or an untyped message to a typed message. A typed message is an instance of a type that has the <xref:System.ServiceModel.MessageContractAttribute> attribute annotated. An untyped message is one that is an instance of the <xref:System.ServiceModel.Channels.Message> class.  You can annotate a type with the <xref:System.ServiceModel.MessageContractAttribute> to create a custom message type, and then use the methods provided by this class to convert it to an untyped <xref:System.ServiceModel.Channels.Message> instance.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypedMessageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageContract">A message contract type that is a &lt;xref:System.Type&gt; annotated with a &lt;xref:System.ServiceModel.MessageContractAttribute&gt;.</param>
        <param name="action">An action string.</param>
        <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.DataContractFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, class System.ServiceModel.DataContractFormatAttribute formatterAttribute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.DataContractFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">A message contract type that is a &lt;xref:System.Type&gt; annotated with a &lt;xref:System.ServiceModel.MessageContractAttribute&gt;.</param>
        <param name="action">An action string.</param>
        <param name="formatterAttribute">A &lt;xref:System.ServiceModel.DataContractFormatAttribute&gt; that specifies the formatter to be used.</param>
        <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, class System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.XmlSerializerFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">A message contract type that is a &lt;xref:System.Type&gt; annotated with a &lt;xref:System.ServiceModel.MessageContractAttribute&gt;.</param>
        <param name="action">An action string.</param>
        <param name="formatterAttribute">A &lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt; that specifies the formatter to be used.</param>
        <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageContract">A message contract type that is a &lt;xref:System.Type&gt; annotated with a &lt;xref:System.ServiceModel.MessageContractAttribute&gt;.</param>
        <param name="action">An action string.</param>
        <param name="defaultNamespace">A namespace.</param>
        <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.DataContractFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace, class System.ServiceModel.DataContractFormatAttribute formatterAttribute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.DataContractFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">A message contract type that is a &lt;xref:System.Type&gt; annotated with a &lt;xref:System.ServiceModel.MessageContractAttribute&gt;.</param>
        <param name="action">An action string.</param>
        <param name="defaultNamespace">A namespace.</param>
        <param name="formatterAttribute">A &lt;xref:System.ServiceModel.DataContractFormatAttribute&gt; that specifies the formatter to be used.</param>
        <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace, class System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.XmlSerializerFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">A message contract type that is a &lt;xref:System.Type&gt; annotated with a &lt;xref:System.ServiceModel.MessageContractAttribute&gt;.</param>
        <param name="action">An action string.</param>
        <param name="defaultNamespace">A namespace.</param>
        <param name="formatterAttribute">A &lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt; that specifies the formatter to be used.</param>
        <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FromMessage">
      <MemberSignature Language="C#" Value="public abstract object FromMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FromMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">An untyped message.</param>
        <summary>Creates a typed message from the specified &lt;xref:System.ServiceModel.Channels.Message&gt; instance.</summary>
        <returns>An object that is a typed message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method takes an untyped [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] message, that is, an instance of <xref:System.ServiceModel.Channels.Message>, and converts it into a typed message, that is, an instance of a type that is annotated by the <xref:System.ServiceModel.MessageContractAttribute>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ToMessage(object typedMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typedMessage">A typed message.</param>
        <summary>Creates a &lt;xref:System.ServiceModel.Channels.Message&gt; instance from the specified typed message.</summary>
        <returns>A &lt;xref:System.ServiceModel.Channels.Message&gt; instance.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage, System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ToMessage(object typedMessage, class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedMessage" Type="System.Object" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="typedMessage">A typed message.</param>
        <param name="version">A &lt;xref:System.ServiceModel.Channels.MessageVersion&gt; that specifies the versions of SOAP and WS-Addressing associated with a message.</param>
        <summary>Creates a &lt;xref:System.ServiceModel.Channels.Message&gt; instance from the specified typed message using the specified version.</summary>
        <returns>A &lt;xref:System.ServiceModel.Channels.Message&gt; instance.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>