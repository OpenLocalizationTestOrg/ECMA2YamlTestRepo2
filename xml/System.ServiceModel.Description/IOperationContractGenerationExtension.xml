<Type Name="IOperationContractGenerationExtension" FullName="System.ServiceModel.Description.IOperationContractGenerationExtension">
  <TypeSignature Language="C#" Value="public interface IOperationContractGenerationExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationContractGenerationExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Defines the methods called during contract generation that can be used to modify the generated code for an operation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implement the IOperationContractGenerationExtension interface on an operation behavior (a <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName> type) to enable you to modify the code generated when a contract or endpoint is compiled into code. Typically, a custom <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> inserts a custom operation behavior into the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> collection during the call to <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=fullName>.  
  
   
  
## Examples  
 The following code example shows the implementation of the <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> method that adds a string to the comments section of the operation using the <xref:System.CodeDom?displayProperty=fullName> namespace.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 The following code example shows how the operation behavior that implements IOperationContractGenerationExtension is inserted into the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> collection during the call to <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName>.  
  
 [!code-cs[C_CustomWSDLExtensions#4](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationimporter.cs#4)]  
  
 Finally, the following code example shows the operation generated in both Visual Basic and C#.  
  
 [!code-vb[C_CustomWSDLExtensions#3](~/add/codesnippet/visualbasic/c_customwsdlextensions.client/newgeneratedcontract.vb#3)]
 [!code-cs[C_CustomWSDLExtensions#3](~/add/codesnippet/csharp/c_customwsdlextensions.client/newgeneratedcontract.cs#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="GenerateOperation">
      <MemberSignature Language="C#" Value="public void GenerateOperation (System.ServiceModel.Description.OperationContractGenerationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateOperation(class System.ServiceModel.Description.OperationContractGenerationContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.OperationContractGenerationContext" />
      </Parameters>
      <Docs>
        <param name="context">The working context that contains the <see cref="N:System.CodeDom" /> types necessary to modify the generated operation.</param>
        <summary>Implement to modify the code document object model prior to the contract generation process.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically, a custom <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> inserts a custom operation behavior into the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> collection during the call to <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=fullName>.  
  
 The GenerateOperation method is called once for each contract.  
  
   
  
## Examples  
 The following code example shows the implementation of the GenerateOperation method that adds a string to the comments section of the operation using the <xref:System.CodeDom?displayProperty=fullName> namespace.  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 The following code example shows how the operation behavior that implements <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> is inserted into the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> collection during the call to <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName>.  
  
 [!code-cs[C_CustomWSDLExtensions#4](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationimporter.cs#4)]  
  
 Finally, the following code example shows the operation generated in both Visual Basic and C#.  
  
 [!code-vb[C_CustomWSDLExtensions#3](~/add/codesnippet/visualbasic/c_customwsdlextensions.client/newgeneratedcontract.vb#3)]
 [!code-cs[C_CustomWSDLExtensions#3](~/add/codesnippet/csharp/c_customwsdlextensions.client/newgeneratedcontract.cs#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>