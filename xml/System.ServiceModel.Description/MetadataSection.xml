<Type Name="MetadataSection" FullName="System.ServiceModel.Description.MetadataSection">
  <TypeSignature Language="C#" Value="public class MetadataSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetadataSection extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlRoot(ElementName="MetadataSection", Namespace="http://schemas.xmlsoap.org/ws/2004/09/mex")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents XML metadata or references to XML metadata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MetadataSection class conforms to the definition of the `wsx:Metadata/wsx:MetadataSection` element in the WS-Metadata Exchange specification and contains XML metadata or references to XML metadata.  
  
 A MetadataSection object contains one dialect of metadata in XML form (such as a Web Services Description Language or WSDL file). You can add a MetadataSection to a collection of XML metadata represented by a <xref:System.ServiceModel.Description.MetadataSet> object. Much of the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] metadata system, such as the <xref:System.ServiceModel.Description.MetadataExchangeClient> class, use the <xref:System.ServiceModel.Description.MetadataSet> class to import or export service metadata in XML form.  
  
 For example, to export [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] contract or endpoint objects to a <xref:System.ServiceModel.Description.MetadataSet> object that contains the equivalent metadata in XML form, call the appropriate Export methods on the <xref:System.ServiceModel.Description.WsdlExporter> class, passing either <xref:System.ServiceModel.Description.ContractDescription> or <xref:System.ServiceModel.Description.ServiceEndpoint> objects, and then call the <xref:System.ServiceModel.Description.WsdlExporter.GetGeneratedMetadata%2A> method.  
  
 To import XML-based metadata from a <xref:System.ServiceModel.Description.MetadataSet> object into [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Description.ContractDescription>, <xref:System.ServiceModel.Description.ServiceEndpoint>, and <xref:System.ServiceModel.Channels.Binding> objects, pass a <xref:System.ServiceModel.Description.MetadataSet> object to the constructor of the <xref:System.ServiceModel.Description.WsdlImporter> class and call one of the import methods.  
  
   
  
## Examples  
 The following code example shows how to retrieve the MetadataSection objects from a <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> and iterate through them to write the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> and <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> properties to the console.  
  
 [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataSection" /> class with no dialect, identifier, or XML metadata.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataSection (string dialect, string identifier, object metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dialect, string identifier, object metadata) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialect" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="metadata" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dialect">The dialect of the metadata.</param>
        <param name="identifier">An identifier for the metadata.</param>
        <param name="metadata">The XML metadata.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataSection" /> class using the specified dialect, identifier, and XML metadata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the MetadataSection constructor to specify the metadata to be included in this <xref:System.ServiceModel.Description.MetadataSection>, its dialect and its identifier. The metadata object must be serializable using the <xref:System.Xml.Serialization.XmlSerializer> class so that the <xref:System.ServiceModel.Description.MetadataSection> object can be serialized. If it is not serializable, an exception is thrown when the object is serialized. Use a <xref:System.ServiceModel.Description.MetadataLocation> or <xref:System.ServiceModel.Description.MetadataReference> object for the `metadata` parameter if you want to include a reference to the metadata instead of the metadata itself.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Xml.XmlAttribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Xml.XmlAttribute&gt; Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAnyAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Xml.XmlAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of XML attributes that you can use to add or remove attributes extensions to the metadata.</summary>
        <value>The collection of XML attributes for the <see cref="T:System.ServiceModel.Description.MetadataSection" />. The default collection is empty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Attributes property to add or remove attribute extensions.  
  
> [!NOTE]
>  The dialect and identifier attributes are not included in this collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPolicy">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.MetadataSection CreateFromPolicy (System.Xml.XmlElement policy, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.MetadataSection CreateFromPolicy(class System.Xml.XmlElement policy, string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Xml.XmlElement" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="policy">An XML representation of a policy as defined in WS-Policy.</param>
        <param name="identifier">An identifier for the policy.</param>
        <summary>Creates a <see cref="T:System.ServiceModel.Description.MetadataSection" /> from the specified policy information.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.MetadataSection" /> that contains the specified policy expression with the specified identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use CreateFromPolicy method to create a <xref:System.ServiceModel.Description.MetadataSection> for a WS-Policy policy expression. The <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> property is set to <xref:System.ServiceModel.Description.MetadataSection.PolicyDialect%2A> and the `identifier` is assigned to the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> property. The recommend identifier is the `wsp:Name` attribute for the policy expression.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The XML element is not a policy element.</exception>
        <exception cref="T:System.ArgumentNullException">The policy is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateFromSchema">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.MetadataSection CreateFromSchema (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.MetadataSection CreateFromSchema(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">An XML Schema document.</param>
        <summary>Creates a <see cref="T:System.ServiceModel.Description.MetadataSection" /> from the specified &lt;xref:System.Xml.Schema.XmlSchema?displayProperty=fullName&gt; object.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.MetadataSection" /> containing the specified XML schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this static factory method to quickly create a <xref:System.ServiceModel.Description.MetadataSection> for a XML Schema document. The <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> property is assigned the value of <xref:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect%2A> and the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> property is assigned the value of the target namespace of the XML Schema document.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The schema is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateFromServiceDescription">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.MetadataSection CreateFromServiceDescription (System.Web.Services.Description.ServiceDescription serviceDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.MetadataSection CreateFromServiceDescription(class System.Web.Services.Description.ServiceDescription serviceDescription) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.Web.Services.Description.ServiceDescription" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> used to create a <see cref="T:System.ServiceModel.Description.MetadataSection" /> object.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.MetadataSection" /> that contains the specified <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.MetadataSection" /> that contains the specified <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this static factory method to quickly create a <xref:System.ServiceModel.Description.MetadataSection> for a WSDL document. The <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> property is assigned the value of <xref:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect%2A> and the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> property is assigned the value of the target namespace of the WSDL document.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="serviceDescription" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Dialect">
      <MemberSignature Language="C#" Value="public string Dialect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Dialect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates the type of metadata.</summary>
        <value>The dialect for the metadata. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The dialect indicates the type of metadata in this <xref:System.ServiceModel.Description.MetadataSection>. The dialect strings with supported object models are:  
  
-   <xref:System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect%2A>  
  
-   <xref:System.ServiceModel.Description.MetadataSection.PolicyDialect%2A>  
  
-   <xref:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect%2A>  
  
-   <xref:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect%2A>  
  
   
  
## Examples  
 The following code example shows how to retrieve the <xref:System.ServiceModel.Description.MetadataSection> objects from a <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> and iterate through them to write the <xref:System.ServiceModel.Description.MetadataSection.Identifier%2A> and Dialect properties to the console.  
  
 [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an identifier for the metadata.</summary>
        <value>The identifier for the metadata. The default is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The identifier for the metadata in this <xref:System.ServiceModel.Description.MetadataSection>. The value depends on the type of metadata.  
  
   
  
## Examples  
 The following code example shows how to retrieve the <xref:System.ServiceModel.Description.MetadataSection> objects from a <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> and iterate through them to write the Identifier and <xref:System.ServiceModel.Description.MetadataSection.Dialect%2A> properties to the console.  
  
 [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public object Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAnyElement</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("schema", typeof(System.Xml.Schema.XmlSchema), Namespace="http://www.w3.org/2001/XMLSchema")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("definitions", typeof(System.Web.Services.Description.ServiceDescription), Namespace="http://schemas.xmlsoap.org/wsdl/")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("MetadataReference", typeof(System.ServiceModel.Description.MetadataReference), Namespace="http://schemas.xmlsoap.org/ws/2004/09/mex")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Location", typeof(System.ServiceModel.Description.MetadataLocation), Namespace="http://schemas.xmlsoap.org/ws/2004/09/mex")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Metadata", typeof(System.ServiceModel.Description.MetadataSet), Namespace="http://schemas.xmlsoap.org/ws/2004/09/mex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contained metadata object.</summary>
        <value>The metadata contents for this <see cref="T:System.ServiceModel.Description.MetadataSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Metadata property to access or modify the metadata content contained in the <xref:System.ServiceModel.Description.MetadataSection>. The metadata object can be <xref:System.ServiceModel.Description.MetadataReference> or a <xref:System.ServiceModel.Description.MetadataLocation> as a reference to the metadata content. When a <xref:System.ServiceModel.Description.MetadataSection> is deserialized, the type of the metadata object is determined from the XML content. The following table describes the possible return values.  
  
|Type of XML metadata|Returned type|  
|--------------------------|-------------------|  
|WSDL document|<xref:System.Web.Services.Description.ServiceDescription?displayProperty=fullName>|  
|XML Schema|<xref:System.Xml.Schema.XmlSchema?displayProperty=fullName>|  
|Metadata reference|<xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName>|  
|Metadata location|<xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>|  
|Policy, and all other XML content|<xref:System.Xml.XmlElement?displayProperty=fullName>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MetadataExchangeDialect">
      <MemberSignature Language="C#" Value="public static string MetadataExchangeDialect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MetadataExchangeDialect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value of the metadata exchange dialect.</summary>
        <value>The dialect for a WS-Metadata Exchange document.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The dialect for a WS-Metadata Exchange document.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PolicyDialect">
      <MemberSignature Language="C#" Value="public static string PolicyDialect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PolicyDialect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value of the WS-Policy dialect.</summary>
        <value>The dialect for a WS-Policy policy expression.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The dialect for a WS-Policy policy expression.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ServiceDescriptionDialect">
      <MemberSignature Language="C#" Value="public static string ServiceDescriptionDialect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ServiceDescriptionDialect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value of the Web Services Description Language (WSDL) dialect.</summary>
        <value>The dialect for a WSDL document.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The dialect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaDialect">
      <MemberSignature Language="C#" Value="public static string XmlSchemaDialect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlSchemaDialect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value of the XML Schema dialect.</summary>
        <value>The dialect for an XML Schema document.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The dialect for an XML Schema document.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>