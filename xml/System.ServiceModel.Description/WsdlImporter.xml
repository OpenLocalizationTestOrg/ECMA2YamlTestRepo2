<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Imports Web Services Description Language (WSDL) 1.1 metadata with WS-Policy attachments.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the WsdlImporter class to import metadata as well as convert that information into various classes that represent contract and endpoint information.  
  
 The base class for WsdlImporter, the <xref:System.ServiceModel.Description.MetadataImporter> class, defines methods that selectively import contract and endpoint information and properties that expose any import errors and accept type information relevant to the import and conversion process. The WsdlImporter type uses the custom policy importers (<xref:System.ServiceModel.Description.IPolicyImportExtension> implementations) from its parent type to handle custom policy statements and its own custom WSDL importers (<xref:System.ServiceModel.Description.IWsdlImportExtension> implementations) to handle custom WSDL elements. For details, see [Extending the Metadata System](~/add/includes/ajax-current-ext-md.md).  
  
 When importing policy from WSDL documents, the WsdlImporter type will try up to 32 combinations of policy alternatives attached to the different WSDL policy subjects.  If no combination imports cleanly, the first combination is used to construct a partial custom binding.  
  
 In addition to these methods and properties, WsdlImporter also implements methods that support importing binding information and properties that provide access to any policy documents, WSDL documents, WSDL extensions, and XML schema documents. For information about extending WsdlImporter to support custom WSDL elements, see <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 Typically the WsdlImporter class is used in a three-step process.  
  
1.  Create a WsdlImporter object and pass a <xref:System.ServiceModel.Description.MetadataSet> object to the constructor.  
  
2.  Call the appropriate `Import` method to retrieve the results.  
  
3.  Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors.  
  
> [!NOTE]
>  When importing WSDL port types, if the QName of the port type matches an entry in the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> dictionary then the port type is not imported and the known contract is used instead.  
  
 No values are returned from the WsdlImporter properties until one of the import methods is called. Custom <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> objects can either be loaded into the WsdlImporter programmatically or using the client configuration [\&lt;wsdlImporters\&gt;](../Topic/%3CwsdlImporters%3E.md) element.  
  
 Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 The following code example shows how to use the WsdlImporter to add a custom <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=fullName>, import all contracts, and compile those contracts and save them to a file.  
  
 [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">A collection of metadata documents from which to extract contract, endpoint, and binding information.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WsdlImporter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the WsdlImporter constructor to create a <xref:System.ServiceModel.Description.WsdlImporter> object from a set of metadata documents.  
  
   
  
## Examples  
 The following code example shows the most common use of <xref:System.ServiceModel.Description.WsdlImporter> class with the <xref:System.ServiceModel.Description.MetadataResolver> class.  
  
 [!code-cs[C_CustomWSDLExtensions#10](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#10)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">The downloaded metadata.</param>
        <param name="policyImportExtensions">The custom policy importers used to import custom policy statements.</param>
        <param name="wsdlImportExtensions">The custom WSDL importers used to import custom WSDL elements.</param>
        <summary>Creates a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object from the specified metadata, custom policy importers, and custom WSDL importers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to control the metadata to be imported and the policy and WSDL importers to be used.  
  
> [!NOTE]
>  If custom policy importers or custom WSDL importers are passed to this constructor any custom importers specified in application configuration files are not loaded. If you want to add a custom importer, you must reconstruct the importers collections prior to using this constructor. See the Example section.  
  
   
  
## Examples  
 The following code example shows how to add a new custom WSDL importer (the `WSDLDocumentationImporter`) to the default set of importers prior to using the <xref:System.ServiceModel.Description.WsdlImporter> object.  
  
 [!code-cs[C_CustomWSDLExtensions#11](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="metadata" /> argument is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">The downloaded metadata.</param>
        <param name="policyImportExtensions">The custom policy importers used to import custom policy statements.</param>
        <param name="wsdlImportExtensions">The custom WSDL importers used to import custom WSDL elements.</param>
        <param name="quotas">The amount of metadata to retrieve at a time</param>
        <summary>Creates a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object from the specified metadata, custom policy importers, and custom WSDL importers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to control the metadata to be imported and the policy and WSDL importers to be used.  
  
> [!NOTE]
>  If custom policy importers or custom WSDL importers are passed to this constructor any custom importers specified in application configuration files are not loaded. If you want to add a custom importer, you must reconstruct the importers collections prior to using this constructor. See the Example section.  
  
   
  
## Examples  
 The following code example shows how to add a new custom WSDL importer (the `WSDLDocumentationImporter`) to the default set of importers prior to using the <xref:System.ServiceModel.Description.WsdlImporter> object.  
  
 [!code-cs[C_CustomWSDLExtensions#11](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="metadata" /> argument is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of &lt;xref:System.ServiceModel.Channels.Binding&gt; objects imported from the metadata documents.</summary>
        <returns>A set of &lt;xref:System.ServiceModel.Channels.Binding&gt; objects imported from the metadata documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImportAllBindings method to import all binding information from the metadata documents and return them as <xref:System.ServiceModel.Channels.Binding> objects. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned objects.  
  
 To import a specific WSDL binding, see the <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of &lt;xref:System.ServiceModel.Description.ContractDescription&gt; objects that represent port type information in the metadata documents.</summary>
        <returns>A set of &lt;xref:System.ServiceModel.Description.ContractDescription&gt; objects that represent port type information in the metadata documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImportAllContracts method to import all WSDL port type information from the metadata documents and return them as <xref:System.ServiceModel.Description.ContractDescription> objects. It is recommended to check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned objects.  
  
 To import only one port type, see the <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> method.  
  
   
  
## Examples  
 The following code example shows how to use the <xref:System.ServiceModel.Description.WsdlImporter> to add a custom <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=fullName>, import all contracts, and compile those contracts and save them to a file.  
  
 [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents the endpoints in WSDL documents.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents the endpoints in WSDL documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImportAllEndpoints method to import all endpoint information from the metadata documents and return them as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned objects.  
  
 To import only a specific WSDL port, see the <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> object that represents binding information in a metadata file.</param>
        <summary>Returns a &lt;xref:System.ServiceModel.Channels.Binding&gt; object that represents binding information from a set of metadata documents.</summary>
        <returns>A &lt;xref:System.ServiceModel.Channels.Binding?displayProperty=fullName&gt; object that represents binding information from a set of metadata documents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImportBinding method to use a <xref:System.Web.Services.Description.Binding?displayProperty=fullName> object to locate binding information in the metadata and return that binding information as a <xref:System.ServiceModel.Channels.Binding?displayProperty=fullName> object. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> parameter is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">A <see cref="T:System.Web.Services.Description.PortType" /> object that represents the desired port type.</param>
        <summary>Returns a &lt;xref:System.ServiceModel.Description.ContractDescription&gt; object that represents metadata located by the specified port type information.</summary>
        <returns>A &lt;xref:System.ServiceModel.Description.ContractDescription&gt; object that represents metadata located by the specified port type information.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImportContract method to use a <xref:System.Web.Services.Description.PortType?displayProperty=fullName> object to locate port type information in the metadata and return that information as a <xref:System.ServiceModel.Description.ContractDescription> object. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The port type is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">A <see cref="T:System.Web.Services.Description.Port" /> object that represents the desired WSDL port information.</param>
        <summary>Returns a &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; from a set of metadata documents that uses information from the specified <see cref="T:System.Web.Services.Description.Port" /> object.</summary>
        <returns>A &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; object that represents specific WSDL port information in the metadata document.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImportEndpoint method to use a <xref:System.Web.Services.Description.Port?displayProperty=fullName> object to locate port type information in the metadata and return that information as a <xref:System.ServiceModel.Description.ServiceEndpoint> object. Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlPort" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> object used in a WSDL port.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types using the specified <see cref="T:System.Web.Services.Description.Binding" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types using the specified <see cref="T:System.Web.Services.Description.Binding" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">The <see cref="T:System.Web.Services.Description.PortType" /> object that is used to find associated WSDL port information.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types associated with the specified <see cref="T:System.Web.Services.Description.PortType" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types associated with the specified <see cref="T:System.Web.Services.Description.PortType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlPortType" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">The <see cref="T:System.Web.Services.Description.Service" /> object within which to search for WSDL port information.</param>
        <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types within the specified <see cref="T:System.Web.Services.Description.Service" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types within the specified <see cref="T:System.Web.Services.Description.Service" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property to determine whether there are any import errors before using the returned object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlService" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that describe the contract information in the metadata documents.</summary>
        <value>A collection of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that describe the contract information in the metadata documents.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The WsdlDocuments property is not populated until an import method is called.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</summary>
        <value>A set of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the WsdlImportExtensions property to add or remove custom WSDL importers.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of &lt;xref:System.Xml.Schema.XmlSchema&gt; objects that describe types in the metadata.</summary>
        <value>A set of &lt;xref:System.Xml.Schema.XmlSchema&gt; objects that describe types in the metadata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is not populated until one of the import methods is called.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>