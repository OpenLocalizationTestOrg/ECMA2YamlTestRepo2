<Type Name="DesignerVerbCollection" FullName="System.ComponentModel.Design.DesignerVerbCollection">
  <TypeSignature Language="C#" Value="public class DesignerVerbCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerVerbCollection extends System.Collections.CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class provides a collection that can contain <xref:System.ComponentModel.Design.DesignerVerb> objects.  
  
   
  
## Examples  
 The following code example demonstrates how to use the DesignerVerbCollection class. The example creates a new instance of the class and uses several methods to add statements to the collection, return their index, and add or remove attributes at a specific index point.  
  
 [!code-cpp[DesignerVerbCollectionExample#1](~/add/codesnippet/cpp/t-system.componentmodel._27_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#1](~/add/codesnippet/csharp/t-system.componentmodel._27_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._27_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerVerbCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is a default empty collection constructor.  
  
   
  
## Examples  
 The following code example demonstrates how to create a new <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 [!code-cpp[DesignerVerbCollectionExample#2](~/add/codesnippet/cpp/m-system.componentmodel._5_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#2](~/add/codesnippet/csharp/m-system.componentmodel._5_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#2](~/add/codesnippet/visualbasic/m-system.componentmodel._5_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerVerbCollection (System.ComponentModel.Design.DesignerVerb[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerVerb[] value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb[]" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.ComponentModel.Design.DesignerVerb" /> array that indicates the verbs to contain within the collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> class using the specified array of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.ComponentModel.Design.DesignerVerb value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.ComponentModel.Design.DesignerVerb value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add to the collection.</param>
        <summary>Adds the specified <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to the collection.</summary>
        <returns>The index in the collection at which the verb was added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to add a <xref:System.ComponentModel.Design.DesignerVerb> to a <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 [!code-cpp[DesignerVerbCollectionExample#3](~/add/codesnippet/cpp/76052d14-2641-493f-ad68-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#3](~/add/codesnippet/csharp/76052d14-2641-493f-ad68-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#3](~/add/codesnippet/visualbasic/76052d14-2641-493f-ad68-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.ComponentModel.Design.DesignerVerb[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.ComponentModel.Design.DesignerVerb[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb[]" />
      </Parameters>
      <Docs>
        <param name="value">An array of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects to add to the collection.</param>
        <summary>Adds the specified set of designer verbs to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to add an array of <xref:System.ComponentModel.Design.DesignerVerb> objects to a <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 [!code-cpp[DesignerVerbCollectionExample#4](~/add/codesnippet/cpp/092dca4a-3aa8-4b4f-bc21-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#4](~/add/codesnippet/csharp/092dca4a-3aa8-4b4f-bc21-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#4](~/add/codesnippet/visualbasic/092dca4a-3aa8-4b4f-bc21-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.ComponentModel.Design.DesignerVerbCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.ComponentModel.Design.DesignerVerbCollection value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerbCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> to add to the collection.</param>
        <summary>Adds the specified collection of designer verbs to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to add a collection of <xref:System.ComponentModel.Design.DesignerVerb> objects to a <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 [!code-cpp[DesignerVerbCollectionExample#4](~/add/codesnippet/cpp/e35cbb7e-6163-4b08-807d-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#4](~/add/codesnippet/csharp/e35cbb7e-6163-4b08-807d-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#4](~/add/codesnippet/visualbasic/e35cbb7e-6163-4b08-807d-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.ComponentModel.Design.DesignerVerb value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.ComponentModel.Design.DesignerVerb value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to search for in the collection.</param>
        <summary>Gets a value indicating whether the specified <see cref="T:System.ComponentModel.Design.DesignerVerb" /> exists in the collection.</summary>
        <returns>
          <see langword="true" /> if the specified object exists in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the Contains method to search for the presence of a specific <xref:System.ComponentModel.Design.DesignerVerb> object and subsequently retrieves the index value at which it was found.  
  
 [!code-cpp[DesignerVerbCollectionExample#5](~/add/codesnippet/cpp/1cb9bde0-a497-48ad-9922-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#5](~/add/codesnippet/csharp/1cb9bde0-a497-48ad-9922-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#5](~/add/codesnippet/visualbasic/1cb9bde0-a497-48ad-9922-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.ComponentModel.Design.DesignerVerb[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.ComponentModel.Design.DesignerVerb[] array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.ComponentModel.Design.DesignerVerb[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array to copy collection members to.</param>
        <param name="index">The destination index to begin copying to.</param>
        <summary>Copies the collection members to the specified <see cref="T:System.ComponentModel.Design.DesignerVerb" /> array beginning at the specified destination index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to copy a collection of <xref:System.ComponentModel.Design.DesignerVerb> objects to an array.  
  
 [!code-cpp[DesignerVerbCollectionExample#6](~/add/codesnippet/cpp/394f80fc-c8a5-4327-948b-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#6](~/add/codesnippet/csharp/394f80fc-c8a5-4327-948b-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#6](~/add/codesnippet/visualbasic/394f80fc-c8a5-4327-948b-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.ComponentModel.Design.DesignerVerb value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.ComponentModel.Design.DesignerVerb value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> whose index to get in the collection.</param>
        <summary>Gets the index of the specified <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</summary>
        <returns>The index of the specified object if it is found in the list; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to test for the presence of a <xref:System.ComponentModel.Design.DesignerVerb> in a <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 [!code-cpp[DesignerVerbCollectionExample#5](~/add/codesnippet/cpp/5a3deea7-a793-4fea-9f60-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#5](~/add/codesnippet/csharp/5a3deea7-a793-4fea-9f60-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#5](~/add/codesnippet/visualbasic/5a3deea7-a793-4fea-9f60-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.ComponentModel.Design.DesignerVerb value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.ComponentModel.Design.DesignerVerb value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="index">The index in the collection at which to insert the verb.</param>
        <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to insert in the collection.</param>
        <summary>Inserts the specified <see cref="T:System.ComponentModel.Design.DesignerVerb" /> at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to insert a <xref:System.ComponentModel.Design.DesignerVerb> into a <xref:System.ComponentModel.Design.DesignerVerbCollection> at index 0.  
  
 [!code-cpp[DesignerVerbCollectionExample#8](~/add/codesnippet/cpp/5b1cea51-b0de-4cc4-a6a2-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#8](~/add/codesnippet/csharp/5b1cea51-b0de-4cc4-a6a2-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#8](~/add/codesnippet/visualbasic/5b1cea51-b0de-4cc4-a6a2-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerb this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerb Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerb</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index at which to get or set the <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
        <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.DesignerVerb" /> at the specified index.</summary>
        <value>A <see cref="T:System.ComponentModel.Design.DesignerVerb" /> at each valid index in the collection.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected override void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see langword="Clear" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inheritors can override this method to add behavior for the `Clear` event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The index at which to insert an item.</param>
        <param name="value">The object to insert.</param>
        <summary>Raises the <see langword="Insert" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inheritors can override this method to add behavior for the `Insert` event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected override void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The index at which to remove the item.</param>
        <param name="value">The object to remove.</param>
        <summary>Raises the <see langword="Remove" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inheritors can override this method to add behavior for the `Remove` event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected override void OnSet (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSet(int32 index, object oldValue, object newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The index at which to set the item.</param>
        <param name="oldValue">The old object.</param>
        <param name="newValue">The new object.</param>
        <summary>Raises the <see langword="Set" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inheritors can override this method to add behavior for the `Set` event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to validate.</param>
        <summary>Raises the <see langword="Validate" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inheritors can override this method to add behavior for the `Validate` event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.Design.DesignerVerb value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.Design.DesignerVerb value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.ComponentModel.Design.DesignerVerb" /> from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to remove a <xref:System.ComponentModel.Design.DesignerVerb> from a <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 [!code-cpp[DesignerVerbCollectionExample#9](~/add/codesnippet/cpp/dcd8dc21-c76b-4169-9a9b-_1.cpp)]
 [!code-cs[DesignerVerbCollectionExample#9](~/add/codesnippet/csharp/dcd8dc21-c76b-4169-9a9b-_1.cs)]
 [!code-vb[DesignerVerbCollectionExample#9](~/add/codesnippet/visualbasic/dcd8dc21-c76b-4169-9a9b-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>