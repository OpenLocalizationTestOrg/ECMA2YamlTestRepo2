<Type Name="ITreeDesigner" FullName="System.ComponentModel.Design.ITreeDesigner">
  <TypeSignature Language="C#" Value="public interface ITreeDesigner : IDisposable, System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITreeDesigner implements class System.ComponentModel.Design.IDesigner, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides support for building a set of related custom designers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ITreeDesigner interface derives from the <xref:System.ComponentModel.Design.IDesigner> interface and provides support for flexibly navigating a hierarchy of related designers. With this interface, a programmer can supply a number of designers for the component, with the appropriate one being determined dynamically.  
  
 This interface is a simple extension of its base class, adding just two properties for navigating a tree hierarchy: <xref:System.ComponentModel.Design.ITreeDesigner.Children%2A> and <xref:System.ComponentModel.Design.ITreeDesigner.Parent%2A>.  
  
 For an overview of creating design components, see [Extending Design-Time Support](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of child designers.</summary>
        <value>An &lt;xref:System.Collections.ICollection&gt;, containing the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> child objects of the current designer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Children property will return an empty collection if the <xref:System.ComponentModel.Design.ITreeDesigner> has no child objects.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent designer.</summary>
        <value>An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>