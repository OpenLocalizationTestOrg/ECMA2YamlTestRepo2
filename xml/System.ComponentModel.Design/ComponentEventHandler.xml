<Type Name="ComponentEventHandler" FullName="System.ComponentModel.Design.ComponentEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ComponentEventHandler(object sender, ComponentEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ComponentEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />, and <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> events raised for component-level events.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a ComponentEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
   
  
## Examples  
 The following example demonstrates registering a ComponentEventHandler and handling the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved> and <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving> events.  
  
 [!code-cpp[ComponentEventHandlerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._137_1.cpp)]
 [!code-cs[ComponentEventHandlerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._137_1.cs)]
 [!code-vb[ComponentEventHandlerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._137_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>