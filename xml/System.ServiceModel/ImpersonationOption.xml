<Type Name="ImpersonationOption" FullName="System.ServiceModel.ImpersonationOption">
  <TypeSignature Language="C#" Value="public enum ImpersonationOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ImpersonationOption extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the impersonation behavior for a service operation on a service instance.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ImpersonationOption enumeration to control impersonation in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] applications.  
  
 This setting interacts with a configuration property on <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A> in the following table.  
  
   
  
## Examples  
 The following code example on the service shows how to have a method impersonate the caller by using the <xref:System.ServiceModel.OperationBehaviorAttribute> to set the impersonation level.  
  
 [!code-vb[S_Basic_Service_Behaviors_Security_Impersonation#2](~/add/codesnippet/visualbasic/t-system.servicemodel.im_1.vb)]
 [!code-cs[S_Basic_Service_Behaviors_Security_Impersonation#2](~/add/codesnippet/csharp/t-system.servicemodel.im_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Allowed">
      <MemberSignature Language="C#" Value="Allowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ImpersonationOption Allowed = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Impersonation is performed if credentials are available and &lt;xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A&gt; is equal to <see langword="true" />.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NotAllowed">
      <MemberSignature Language="C#" Value="NotAllowed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ImpersonationOption NotAllowed = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Impersonation is not performed. If &lt;xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A&gt; is equal to <see langword="true" />, a validation exception occurs at service startup time.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="Required" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ImpersonationOption Required = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Impersonation is required.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>