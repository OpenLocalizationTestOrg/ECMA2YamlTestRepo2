<Type Name="IDuplexContextChannel" FullName="System.ServiceModel.IDuplexContextChannel">
  <TypeSignature Language="C#" Value="public interface IDuplexContextChannel : System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexContextChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject, class System.ServiceModel.IContextChannel, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.IContextChannel&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IContextChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Defines the interface a client channel must implement to exchange messages in a duplex session.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A duplex contract requires a session, because a context must be established to correlate the set of messages being sent between the client and the service.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="AutomaticInputSessionShutdown">
      <MemberSignature Language="C#" Value="public bool AutomaticInputSessionShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticInputSessionShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the input session is shutdown automatically.</summary>
        <value>
          <see langword="true" /> if the input session is shutdown automatically; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the remote side initiates shutdown, the channel is automatically closed for the user if AutomaticInputSessionShutdown is set to `true`. Setting it to `false` instead allow the user to send some final messages to the remote side on its output session before closing the channel.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">The &lt;xref:System.TimeSpan&gt; that specifies how long the close operation has to complete before timing out.</param>
        <param name="callback">The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous operation close completion.</param>
        <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
        <summary>Begins an asynchronous operation to close an output session on the client that has a specified time out and state object associated with it.</summary>
        <returns>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous close operation.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CallbackInstance">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext CallbackInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext CallbackInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the instance context associated with the duplex message exchange.</summary>
        <value>The &lt;xref:System.ServiceModel.InstanceContext&gt; associated with the duplex message exchange.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">The &lt;xref:System.TimeSpan&gt; that specifies how long the close operation has to complete before timing out.</param>
        <summary>Closes the output session on the client associated with the duplex channel.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">The &lt;xref:System.IAsyncResult&gt; returned by a call to the &lt;xref:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.</param>
        <summary>Completes an asynchronous operation to close an output session on the client.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>