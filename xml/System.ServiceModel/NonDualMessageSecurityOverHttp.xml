<Type Name="NonDualMessageSecurityOverHttp" FullName="System.ServiceModel.NonDualMessageSecurityOverHttp">
  <TypeSignature Language="C#" Value="public sealed class NonDualMessageSecurityOverHttp : System.ServiceModel.MessageSecurityOverHttp" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NonDualMessageSecurityOverHttp extends System.ServiceModel.MessageSecurityOverHttp" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageSecurityOverHttp</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the security settings of the wsHttpBinding binding.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NonDualMessageSecurityOverHttp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EstablishSecurityContext">
      <MemberSignature Language="C#" Value="public bool EstablishSecurityContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EstablishSecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether a security context token is established.</summary>
        <value>
          <see langword="true" /> if a security context token is established; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property controls whether a security context token is established through a WS-SecureConversation exchange between the client and the service. Setting it to `true` requires that the remote party supports WS-SecureConversation.  
  
   
  
## Examples  
 The following code shows how to set this property.  
  
 [!code-cs[S_UEMessageSecurityOverTCP#8](~/add/codesnippet/csharp/p-system.servicemodel.no_1.cs)]
 [!code-vb[S_UEMessageSecurityOverTCP#8](~/add/codesnippet/visualbasic/p-system.servicemodel.no_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConversationEnabled">
      <MemberSignature Language="C#" Value="protected override bool IsSecureConversationEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsSecureConversationEnabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>