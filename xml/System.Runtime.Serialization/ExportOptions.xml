<Type Name="ExportOptions" FullName="System.Runtime.Serialization.ExportOptions">
  <TypeSignature Language="C#" Value="public class ExportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportOptions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the options that can be set for an <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Runtime.Serialization.XsdDataContractExporter> is used to generate XSD schemas from a type or assembly. You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to generate [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] code from a schema document.  
  
 [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] importing and exporting schemas, see [Schema Import and Export](~/add/includes/ajax-current-ext-md.md) and [Exporting Schemas from Classes](~/add/includes/ajax-current-ext-md.md).  
  
 The <xref:System.Runtime.Serialization.ExportOptions.KnownTypes%2A> property is used by the <xref:System.Runtime.Serialization.DataContractSerializer> to include types that can be read in an object graph. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] the data contract and known types, see [Data Contract Known Types](~/add/includes/ajax-current-ext-md.md).  
  
 [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] data contracts, see [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example creates an instance of the ExportOptions class and adds a type (`Possessions`) to the collection returned by the <xref:System.Runtime.Serialization.ExportOptions.KnownTypes%2A> property.  
  
 The <xref:System.Runtime.Serialization.XsdDataContractExporter> then exports the schemas of the types, including the `Possessions` type added to the collection.  
  
 [!code-vb[XsdDataContractExporter#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_5_1.vb)]
 [!code-cs[XsdDataContractExporter#0](~/add/codesnippet/csharp/t-system.runtime.seriali_5_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ExportOptions" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a serialization surrogate.</summary>
        <value>An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that can be used to customize how an XML schema representation is exported for a specific type.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KnownTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; KnownTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; KnownTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of types that may be encountered during serialization or deserialization.</summary>
        <value>A <see langword="KnownTypes" /> collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The KnownTypes property is used by the <xref:System.Runtime.Serialization.DataContractSerializer> to include types that can be read in an object graph (set using the <xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A?displayProperty=fullName> property).  
  
 [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] the data contract and known types, see [Data Contract Known Types](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example creates an instance of the <xref:System.Runtime.Serialization.ExportOptions> class and adds a type to the collection returned by the KnownTypes property.  
  
 [!code-vb[XsdDataContractExporter#1](~/add/codesnippet/visualbasic/p-system.runtime.seriali_2_1.vb)]
 [!code-cs[XsdDataContractExporter#1](~/add/codesnippet/csharp/p-system.runtime.seriali_2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>