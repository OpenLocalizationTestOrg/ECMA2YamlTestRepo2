<Type Name="XPathQueryGenerator" FullName="System.Runtime.Serialization.XPathQueryGenerator">
  <TypeSignature Language="C#" Value="public static class XPathQueryGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XPathQueryGenerator extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about data contracts, see [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).  
  
 To use the class, there are four steps:  
  
1.  Create the data contract type by applying the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> as appropriate to the type and its fields or properties.  
  
2.  Use the <xref:System.Type.GetMember%2A> method of the <xref:System.Type> class to generate the MemberInfo array.  
  
3.  Pass the type and the array to the method.  
  
4.  If needed, use the <xref:System.Xml.XmlNamespaceManager> returned by the `namespaces` parameter to examine the XML namespaces referenced by the namespaces prefixes in the XPath query.  
  
> [!NOTE]
>  The namespace prefix "xg" (for "XPath Generator") is used as the default in the XPath. This cannot be changed. Instead, refer to the NameTable collection to see what namespace the prefix is associated with.  
  
   
  
## Examples  
 The following example creates XPath queries from two classes to which the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> attributes have been applied.  
  
 [!code-vb[XPathQueryGenerator#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_16_1.vb)]
 [!code-cs[XPathQueryGenerator#0](~/add/codesnippet/csharp/t-system.runtime.seriali_16_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CreateFromDataContractSerializer">
      <MemberSignature Language="C#" Value="public static string CreateFromDataContractSerializer (Type type, System.Reflection.MemberInfo[] pathToMember, out System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateFromDataContractSerializer(class System.Type type, class System.Reflection.MemberInfo[] pathToMember, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="pathToMember" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">The type that represents a data contract.</param>
        <param name="pathToMember">The metadata, generated using the &lt;xref:System.Type.GetMember%2A&gt; method of the &lt;xref:System.Type&gt; class, that points to the specific data member used to generate the query.</param>
        <param name="namespaces">The XML namespaces and their prefixes found in the data contract.</param>
        <summary>Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces..</summary>
        <returns>&lt;xref:System.String&gt;  
  
 The XPath generated from the type and member data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about data contracts, see [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example creates XPath queries from two classes to which the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> attributes have been applied.  
  
 [!code-vb[XPathQueryGenerator#0](~/add/codesnippet/visualbasic/66185725-48d6-4910-a4cc-_1.vb)]
 [!code-cs[XPathQueryGenerator#0](~/add/codesnippet/csharp/66185725-48d6-4910-a4cc-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateFromDataContractSerializer">
      <MemberSignature Language="C#" Value="public static string CreateFromDataContractSerializer (Type type, System.Reflection.MemberInfo[] pathToMember, System.Text.StringBuilder rootElementXpath, out System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateFromDataContractSerializer(class System.Type type, class System.Reflection.MemberInfo[] pathToMember, class System.Text.StringBuilder rootElementXpath, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="pathToMember" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="rootElementXpath" Type="System.Text.StringBuilder" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">The type that represents a data contract.</param>
        <param name="pathToMember">The metadata, generated using the &lt;xref:System.Type.GetMember%2A&gt; method of the &lt;xref:System.Type&gt; class, that points to the specific data member used to generate the query.</param>
        <param name="rootElementXpath">The top level element in the xpath.</param>
        <param name="namespaces">The XML namespaces and their prefixes found in the data contract.</param>
        <summary>Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.</summary>
        <returns>&lt;xref:System.String&gt;  
  
 The XPath generated from the type and member data.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>