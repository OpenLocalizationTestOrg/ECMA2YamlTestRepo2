<Type Name="ResourceType" FullName="System.Data.Services.Providers.ResourceType">
  <TypeSignature Language="C#" Value="public class ResourceType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceType extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}: {InstanceType}, {ResourceTypeKind}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a data service primitive, complex, or entity type.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nested types are not supported as resource types.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceType (Type instanceType, System.Data.Services.Providers.ResourceTypeKind resourceTypeKind, System.Data.Services.Providers.ResourceType baseType, string namespaceName, string name, bool isAbstract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type instanceType, valuetype System.Data.Services.Providers.ResourceTypeKind resourceTypeKind, class System.Data.Services.Providers.ResourceType baseType, string namespaceName, string name, bool isAbstract) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Type" />
        <Parameter Name="resourceTypeKind" Type="System.Data.Services.Providers.ResourceTypeKind" />
        <Parameter Name="baseType" Type="System.Data.Services.Providers.ResourceType" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isAbstract" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instanceType">CLR type that represents the format inside the [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] runtime.</param>
        <param name="resourceTypeKind">
          <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> of the resource type.</param>
        <param name="baseType">Base type of the resource type as string.</param>
        <param name="namespaceName">Namespace name of the resource type as string.</param>
        <param name="name">Name of the given resource type as string.</param>
        <param name="isAbstract">Boolean value that indicates whether the resource type is an abstract type.</param>
        <summary>Creates an instance of a data service <see cref="T:System.Data.Services.Providers.ResourceType" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddEntityPropertyMappingAttribute">
      <MemberSignature Language="C#" Value="public void AddEntityPropertyMappingAttribute (System.Data.Services.Common.EntityPropertyMappingAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEntityPropertyMappingAttribute(class System.Data.Services.Common.EntityPropertyMappingAttribute attribute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Data.Services.Common.EntityPropertyMappingAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">The <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to add.</param>
        <summary>Adds an <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> for the resource type.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Data.Services.Providers.ResourceProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Data.Services.Providers.ResourceProperty property) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Data.Services.Providers.ResourceProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <see cref="T:System.Data.Services.Providers.ResourceProperty" /> property to be added.</param>
        <summary>Adds the property supplied by the <paramref name="resourceProperty" /> parameter to the type.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Providers.ResourceType BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to base resource type, if any.</summary>
        <value>
          <see cref="T:System.Data.Services.Providers.ResourceType" /> of the base type.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CanReflectOnInstanceType">
      <MemberSignature Language="C#" Value="public bool CanReflectOnInstanceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReflectOnInstanceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get whether the corresponding instance type represents the CLR type of this entity.</summary>
        <value>
          <see langword="true" /> if the instance type represents a CLR type; otherwise <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CustomState">
      <MemberSignature Language="C#" Value="public object CustomState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a placeholder to hold custom state information about a resource type that is defined by the developer.</summary>
        <value>Custom state information defined by the developer.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ETagProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt; ETagProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Providers.ResourceProperty&gt; ETagProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of properties for this type.</summary>
        <value>&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <see cref="T:System.Data.Services.Providers.ResourceType" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the full name of the resource.</summary>
        <value>The full name of the resource type as string.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveResourceType">
      <MemberSignature Language="C#" Value="public static System.Data.Services.Providers.ResourceType GetPrimitiveResourceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Services.Providers.ResourceType GetPrimitiveResourceType(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">&lt;xref:System.Type&gt; type from which to get the primitive type.</param>
        <summary>Gets a resource type that represent a primitive type when given a &lt;xref:System.Type&gt; object.</summary>
        <returns>The resource type.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InstanceType">
      <MemberSignature Language="C#" Value="public Type InstanceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InstanceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reference to the CLR type that this resource represents.</summary>
        <value>The instance type as a <see cref="T:System.Data.Services.Providers.ResourceType" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that indicates whether this is an abstract type.</summary>
        <value>True if <see cref="T:System.Data.Services.Providers.ResourceType" /> is abstract.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMediaLinkEntry">
      <MemberSignature Language="C#" Value="public bool IsMediaLinkEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMediaLinkEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that is true if the resource type includes a default stream.</summary>
        <value>A Boolean value that is true if the resource type includes a default stream.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsOpenType">
      <MemberSignature Language="C#" Value="public bool IsOpenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the resource type has open properties.</summary>
        <value>
          <see langword="true" /> if the resource type has open properties defined; otherwise <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that is true if this resource type has been set to read-only.</summary>
        <value>True if this resource type has been set to read-only; otherwise false.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt; KeyProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Providers.ResourceProperty&gt; KeyProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of key properties for this type</summary>
        <value>&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadPropertiesDeclaredOnThisType">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceProperty&gt; LoadPropertiesDeclaredOnThisType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceProperty&gt; LoadPropertiesDeclaredOnThisType() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a list of properties declared by this resource type.</summary>
        <returns>The list of properties declared on this type.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoadPropertiesDeclaredOnThisType method enables you to defer loading of the properties of a resource type. This LoadPropertiesDeclaredOnThisType method is called only one time when either <xref:System.Data.Services.Providers.ResourceType.Properties%2A> or <xref:System.Data.Services.Providers.ResourceType.PropertiesDeclaredOnThisType%2A> properties are accessed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the resource type.</summary>
        <value>Name of the resource type as string.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the namespace of the resource type.</summary>
        <value>Namespace of the resource type as string.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Providers.ResourceProperty&gt; Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of properties declared of this type that includes only properties defined on the type, not in the base type.</summary>
        <value>&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PropertiesDeclaredOnThisType">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt; PropertiesDeclaredOnThisType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Providers.ResourceProperty&gt; PropertiesDeclaredOnThisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Providers.ResourceProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List of properties declared on this type.</summary>
        <value>&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResourceTypeKind">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceTypeKind ResourceTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Providers.ResourceTypeKind ResourceTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> for the type.</summary>
        <value>
          <see cref="T:System.Data.Services.Providers.ResourceTypeKind" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="public void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetReadOnly() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the resource type to read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>