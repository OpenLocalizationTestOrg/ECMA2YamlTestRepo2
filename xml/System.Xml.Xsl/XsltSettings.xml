<Type Name="XsltSettings" FullName="System.Xml.Xsl.XsltSettings">
  <TypeSignature Language="C#" Value="public sealed class XsltSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XsltSettings extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifies the XSLT features to support during execution of the XSLT style sheet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embedded script blocks and the XSLT `document()` function are optional features on the <xref:System.Xml.Xsl.XslCompiledTransform> class. These features are disabled by default. The XsltSettings class specifies which of these optional features to support. Features are enabled or disabled using the class properties. The XsltSettings object is then passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=fullName> method.  
  
> [!IMPORTANT]
>  XSLT style sheets can include references to other files and embedded script blocks. A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources. Do not enable scripting or the `document()` function unless the style sheet comes from a trusted source. If you cannot verify the source of the style sheet, or if the style sheet does not come from a trusted source, use the default XSLT settings.  
  
   
  
## Examples  
 The following example loads a style sheet and enables XSLT script support.  
  
 [!code-vb[XslCompiledTransform.Load#6](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltset_1.vb)]
 [!code-cs[XslCompiledTransform.Load#6](~/add/codesnippet/csharp/t-system.xml.xsl.xsltset_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltSettings" /> class with default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The new <xref:System.Xml.Xsl.XsltSettings> object does not support the XSLT `document()` function or embedded script blocks.  
  
> [!IMPORTANT]
>  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltSettings (bool enableDocumentFunction, bool enableScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDocumentFunction, bool enableScript) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableDocumentFunction" Type="System.Boolean" />
        <Parameter Name="enableScript" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDocumentFunction">
          <see langword="true" /> to enable support for the XSLT `document()` function; otherwise, <see langword="false" />.</param>
        <param name="enableScript">
          <see langword="true" /> to enable support for embedded scripts blocks; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltSettings" /> class with the specified settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.  
  
   
  
## Examples  
 The following example loads a style sheet and enables XSLT script support.  
  
 [!code-vb[XslCompiledTransform.Load#6](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltset_1.vb)]
 [!code-cs[XslCompiledTransform.Load#6](~/add/codesnippet/csharp/m-system.xml.xsl.xsltset_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Xml.Xsl.XsltSettings Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xml.Xsl.XsltSettings Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Xml.Xsl.XsltSettings" /> object with default settings. Support for the XSLT `document()` function and embedded script blocks is disabled.</summary>
        <value>An <see cref="T:System.Xml.Xsl.XsltSettings" /> object with the &lt;xref:System.Xml.Xsl.XsltSettings.EnableDocumentFunction%2A&gt; and &lt;xref:System.Xml.Xsl.XsltSettings.EnableScript%2A&gt; properties set to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example loads a style sheet with default XSLT settings.  
  
 [!code-vb[XslCompiledTransform.Load#7](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltset_1_1.vb)]
 [!code-cs[XslCompiledTransform.Load#7](~/add/codesnippet/csharp/p-system.xml.xsl.xsltset_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EnableDocumentFunction">
      <MemberSignature Language="C#" Value="public bool EnableDocumentFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDocumentFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to enable support for the XSLT `document()` function.</summary>
        <value>
          <see langword="true" /> to support the XSLT `document()` function; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EnableScript">
      <MemberSignature Language="C#" Value="public bool EnableScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to enable support for embedded script blocks.</summary>
        <value>
          <see langword="true" /> to support script blocks in XSLT style sheets; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrustedXslt">
      <MemberSignature Language="C#" Value="public static System.Xml.Xsl.XsltSettings TrustedXslt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xml.Xsl.XsltSettings TrustedXslt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Xml.Xsl.XsltSettings" /> object that enables support for the XSLT `document()` function and embedded script blocks.</summary>
        <value>An <see cref="T:System.Xml.Xsl.XsltSettings" /> object with the &lt;xref:System.Xml.Xsl.XsltSettings.EnableDocumentFunction%2A&gt; and &lt;xref:System.Xml.Xsl.XsltSettings.EnableScript%2A&gt; properties set to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.  
  
   
  
## Examples  
 The following example loads a style sheet with support for the XSLT `document()` function and embedded script blocks features enabled.  
  
 [!code-vb[XslCompiledTransform.Load#8](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltset_0_1.vb)]
 [!code-cs[XslCompiledTransform.Load#8](~/add/codesnippet/csharp/p-system.xml.xsl.xsltset_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>