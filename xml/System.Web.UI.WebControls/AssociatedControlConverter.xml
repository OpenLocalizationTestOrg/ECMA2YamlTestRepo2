<Type Name="AssociatedControlConverter" FullName="System.Web.UI.WebControls.AssociatedControlConverter">
  <TypeSignature Language="C#" Value="public class AssociatedControlConverter : System.Web.UI.WebControls.ControlIDConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssociatedControlConverter extends System.Web.UI.WebControls.ControlIDConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ControlIDConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a type converter that retrieves a list of <see cref="T:System.Web.UI.WebControls.WebControl" /> controls in the current container.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AssociatedControlConverter class derives from the <xref:System.Web.UI.WebControls.ControlIDConverter> class and provides a type converter specifically for controls that derive from the <xref:System.Web.UI.WebControls.WebControl> class. It is used by the <xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A> property of the <xref:System.Web.UI.WebControls.Label> control.  
  
 For more information about type converters, see [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md) or [Generalized Type Conversion](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssociatedControlConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AssociatedControlConverter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Note** You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FilterControl">
      <MemberSignature Language="C#" Value="protected override bool FilterControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FilterControl(class System.Web.UI.Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">The control instance to test whether it is a <see cref="T:System.Web.UI.WebControls.WebControl" />.</param>
        <summary>Indicates whether the provided control inherits from <see cref="T:System.Web.UI.WebControls.WebControl" />.</summary>
        <returns>
          <see langword="true" /> if the <paramref name="control" /> inherits from the <see cref="T:System.Web.UI.WebControls.WebControl" /> class; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>