<Type Name="LoginStatus" FullName="System.Web.UI.WebControls.LoginStatus">
  <TypeSignature Language="C#" Value="public class LoginStatus : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginStatus extends System.Web.UI.WebControls.CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("LoggingOut")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginStatusDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Detects the user's authentication state and toggles the state of a link to log in to or log out of a Web site.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In this topic:  
  
-   [Introduction](#introduction)  
  
-   [Declarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## Introduction  
 The LoginStatus control has two states, logged in to the Web site and logged out of the Web site, determined by the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property of the <xref:System.Web.UI.Page> object's <xref:System.Web.UI.Page.Request%2A> property.  
  
 The LoginStatus control displays either a text or an image link, depending on the setting of the <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> and <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> properties. You can display either text or images for one or both states.  
  
> [!NOTE]
>  If you are not familiar with the set of login controls available in ASP.NET, see [ASP.NET Login Controls Overview](~/add/includes/ajax-current-ext-md.md) before continuing. For a list of other topics related to login controls and membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  
  
 When a user is not logged in to the site, the LoginStatus control provides a link to the login page defined in the application configuration settings. When the user is logged in to the Web site, the LoginStatus control provides a link to log out of the Web site. Logging out of the Web site clears the user's authentication status and when using cookies will clear the cookie from the user's client computer. On any subsequent visit to the Web site, the LoginStatus control will display the prompt to log in.  
  
 The logout behavior is controlled by the <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> property, which specifies whether to refresh the current page, redirect the user to the login page defined in the application configuration settings, or redirect the user to a page specified by the <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> property. The default is to refresh the current page.  
  
> [!NOTE]
>  When a user uses the LoginStatus control to log out of a Web site, all data present in view state and all post data is lost.  
  
<a name="declarative_syntax"></a>   
## Declarative Syntax  
  
```  
<asp:LoginStatus  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
                 Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
               Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    LoginImageUrl="uri"  
    LoginText="string"  
    LogoutAction="Refresh|Redirect|RedirectToLoginPage"  
    LogoutImageUrl="uri"  
    LogoutPageUrl="uri"  
    LogoutText="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnLoggedOut="LoggedOut event handler"  
    OnLoggingOut="LoggingOut event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the child controls that make up the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is used primarily by control developers when deriving a custom control from the <xref:System.Web.UI.WebControls.LoginStatus> class.  
  
 This method is called by the ASP.NET infrastructure to notify any controls that use composition-based implementation, including controls that derive from <xref:System.Web.UI.WebControls.CompositeDataBoundControl> and <xref:System.Web.UI.WebControls.CompositeControl>, to create any child controls they contain in preparation for postback or rendering.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoggedOut">
      <MemberSignature Language="C#" Value="public event EventHandler LoggedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoggedOut" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised after the user clicks the logout link and the logout process is complete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoggedOut event is raised on the server after the user clicks the logout link and the logout process is complete.  
  
 When the user clicks the logout link, the <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> event is raised, then the logout process is run, and finally the LoggedOut event is raised.  
  
 Use the LoggedOut event to provide additional processing such as cleaning up database connections or removing per-user cached data after the user logs out of a Web site. The user's identity is still available while the LoggedOut event is executing. If your handler for the LoggedOut event redirects the client browser to another page, the authentication cookie will be cleared from the client.  
  
   
  
## Examples  
 The following code example attaches an event handler to the LoggedOut event. The event handler in this example is empty.  
  
 [!code-cs[LoginStatusAfterLogout#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_144_1.aspx)]
 [!code-vb[LoginStatusAfterLogout#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_144_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoggingOut">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler LoggingOut" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised when the user clicks the logout button.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoggingOut event is raised on the server when the user clicks the logout link. The logout process does not occur until after this event, and user information is still available.  
  
 The LoggingOut event allows you to cancel the logout process if the user must complete an activity before leaving the Web site, such as purchasing items in a shopping cart or submitting changes to a database. You can cancel the LoggingOut event by setting the <xref:System.Web.UI.WebControls.LoginCancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.LoginCancelEventArgs> parameter to `true`.  
  
 Use the LoggingOut event to provide additional processing, such as clearing per-user data, before a user logs out of a site.  
  
   
  
## Examples  
 The following code example attaches an event handler to the LoggingOut event. The event handler updates a field on the form, and then cancels the logout attempt.  
  
 [!code-vb[LoginStatusBeforeLogout#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_28_1.aspx)]
 [!code-cs[LoginStatusBeforeLogout#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_28_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoginImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LoginImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the image used for the login link.</summary>
        <value>A string containing the URL of the image used for the login link. The default is &lt;xref:System.String&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoginImageUrl property contains the location of the image used for the login link. The <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> property is used as the alternative text for the image.  
  
 If LoginImageUrl is empty, the <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> property is rendered as the link.  
  
   
  
## Examples  
 The following code example shows how to set the LoginImageUrl property to a specific image.  
  
 [!code-cs[LoginStatusLoginImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_675_1.aspx)]
 [!code-vb[LoginStatusLoginImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_675_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoginText">
      <MemberSignature Language="C#" Value="public virtual string LoginText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text used for the login link.</summary>
        <value>A string displayed as the login link. The default is "Login".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoginText property is displayed as the link text when the <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> property is empty.  
  
 When the <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> property contains a link, the LoginText property is used as the alternative text for the image.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how to set the LoginText property.  
  
 [!code-vb[LoginStatusLoginText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_825_1.aspx)]
 [!code-cs[LoginStatusLoginText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_825_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LogoutAction">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LogoutAction LogoutAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LogoutAction LogoutAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LogoutAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines the action taken when a user logs out of a Web site with the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> control.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.LogoutAction" /> values. The default is <see cref="T:System.Web.UI.WebControls.LogoutAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LogoutAction property determines which page is presented to the user when he or she logs out using the <xref:System.Web.UI.WebControls.LoginStatus> control.  
  
 The following table describes the actions taken for each <xref:System.Web.UI.WebControls.LogoutAction> value.  
  
|LogoutAction value|Action taken|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------|  
|<xref:System.Web.UI.WebControls.LogoutAction>|Redirects the user to the URL contained in the <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> property. If <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> is empty, the user is redirected to the login page defined in the application configuration settings.|  
|<xref:System.Web.UI.WebControls.LogoutAction>|Redirects the user to the login page defined in the application configuration settings.|  
|<xref:System.Web.UI.WebControls.LogoutAction>|Refreshes the current page.|  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example sets the LogoutAction property to the <xref:System.Web.UI.WebControls.LogoutAction> value to send the user to the login page.  
  
 [!code-vb[LoginStatusLogoutAction#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_916_1.aspx)]
 [!code-cs[LoginStatusLogoutAction#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_916_1.aspx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to an invalid <see cref="T:System.Web.UI.WebControls.LogoutAction" /> value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LogoutImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LogoutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the image used for the logout button.</summary>
        <value>A string containing the URL of the image used for the logout link. The default is &lt;xref:System.String&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LogoutImageUrl property contains the location of the image used for the logout link. The <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> property is used as the alternative text for the image in browsers.  
  
 If LogoutImageUrl is empty, the <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> property is rendered as the link.  
  
   
  
## Examples  
 The following code example sets the LogoutImageUrl property to a specific image.  
  
 [!code-vb[LoginStatusLogoutImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1114_1.aspx)]
 [!code-cs[LoginStatusLogoutImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1114_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LogoutPageUrl">
      <MemberSignature Language="C#" Value="public virtual string LogoutPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoutPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the logout page.</summary>
        <value>A string containing the URL of the logout page. The default is &lt;xref:System.String&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> property is set to <xref:System.Web.UI.WebControls.LogoutAction>, the user is redirected to the URL contained in LogoutPageUrl.  
  
 If <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> is set to any other value, the contents of the LogoutPageUrl property are ignored.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example sets the LogoutPageUrl property to a logout page and the <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> property to <xref:System.Web.UI.WebControls.LogoutAction> so that the user is redirected when logging out.  
  
 [!code-vb[LoginStatusLogoutPageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_353_1.aspx)]
 [!code-cs[LoginStatusLogoutPageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_353_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LogoutText">
      <MemberSignature Language="C#" Value="public virtual string LogoutText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoutText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text used for the logout link.</summary>
        <value>A string displayed as the logout link. The default is "Logout".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LogoutText property is displayed when the <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> property is empty.  
  
 When the <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> property contains a link, the LogoutText property is used as the alternative text for the image in browsers that do not support images.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example shows how to set the LogoutText property.  
  
 [!code-vb[LoginStatusLogoutText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1177_1.aspx)]
 [!code-cs[LoginStatusLogoutText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1177_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnLoggedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggedOut (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggedOut(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.LoginStatus.LoggedOut" /> event after the user clicks the logout link and logout processing is complete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> event to provide additional processing, such as closing database connections or cleaning up per-user cached data, after the user has logged out of a Web site.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67). Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnLoggedOut method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example attaches an event handler to the OnLoggedOut event. The event handler in this example is empty.  
  
 [!code-cs[LoginStatusAfterLogout#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_221_1.aspx)]
 [!code-vb[LoginStatusAfterLogout#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_221_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnLoggingOut">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggingOut (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggingOut(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" /> that contains event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.LoginStatus.LoggingOut" /> event when a user clicks the logout link on the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> event to provide additional processing, such as cleaning up per-user data, before a user logs out of a site. The OnLoggingOut event can be canceled, so you can give the user the option of saving data such as a shopping cart or database changes before leaving the Web site.  
  
 For more information about handling events, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
 The OnLoggingOut method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example attaches an event handler to the OnLoggingOut event. The event handler updates a field on the form, and then cancels the logout attempt.  
  
 [!code-vb[LoginStatusBeforeLogout#1](~/add/codesnippet/visualbasic/a06e160f-892f-43aa-ad10-_1.aspx)]
 [!code-cs[LoginStatusBeforeLogout#1](~/add/codesnippet/csharp/a06e160f-892f-43aa-ad10-_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; containing the event data.</param>
        <summary>Determines whether a user is logged in, and gets the URL of the login page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnPreRender method determines whether the user is logged in by examining the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property of the <xref:System.Web.UI.Page> object's <xref:System.Web.UI.Page.Request%2A> property. If the user is logged in, the <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> or <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> property is used to render the control. If the user is not logged in, the <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> or <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> property is used to render the control.  
  
 For more information about handling events, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
 The OnPreRender method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream that renders HTML content to the client.</param>
        <summary>Renders the <see cref="T:System.Web.UI.WebControls.LoginName" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> control.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream that renders HTML content to the client.</param>
        <summary>Renders the contents of the control to the specified writer. This method is used primarily by control developers.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">An &lt;xref:System.Collections.IDictionary&gt; containing the state of the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> control.</param>
        <summary>Overrides the base &lt;xref:System.Web.UI.Control.SetDesignModeState%2A?displayProperty=fullName&gt; method.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> control.</summary>
        <value>Always returns <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TagKey property allows the output stream to write the appropriate HTML markup for the <xref:System.Web.UI.WebControls.LoginStatus> control. The TagKey property is used primarily by control developers.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>