<Type Name="HotSpot" FullName="System.Web.UI.WebControls.HotSpot">
  <TypeSignature Language="C#" Value="public abstract class HotSpot : System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HotSpot extends System.Object implements class System.Web.UI.IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality common to all hot spot shapes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot directly create instances of the abstract HotSpot class. Instead, this class is inherited by the <xref:System.Web.UI.WebControls.CircleHotSpot>, <xref:System.Web.UI.WebControls.RectangleHotSpot>, and <xref:System.Web.UI.WebControls.PolygonHotSpot> classes to provide the common basic functionality for a hot spot. You must derive from the HotSpot class to create a custom hot spot class that represents a unique shape that you define. However, you can define most shapes using the <xref:System.Web.UI.WebControls.CircleHotSpot>, <xref:System.Web.UI.WebControls.RectangleHotSpot>, and <xref:System.Web.UI.WebControls.PolygonHotSpot> classes.  
  
 When a HotSpot in an <xref:System.Web.UI.WebControls.ImageMap> control is clicked, the page either navigates to a URL, generates a postback to the server, or does nothing. The <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property specifies this behavior. To navigate to a URL, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.Navigate`. Use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to. To post back to the server, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.PostBack`. Use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify a name for the HotSpot object. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when the HotSpot object is clicked. If you want the HotSpot object to have no behavior set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.Inactive`.  
  
 Alternately, you can use the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the containing <xref:System.Web.UI.WebControls.ImageMap> control to specify a HotSpot object's behavior. For more information, see <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HotSpot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is called by derived class constructors to initialize state in this type. The <xref:System.Web.UI.WebControls.HotSpot> class is abstract and therefore cannot be instantiated directly.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the access key that allows you to quickly navigate to the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region.</summary>
        <value>The access key for quick navigation to the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region. The default value is &lt;xref:System.String.Empty&gt;, which indicates that this property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the AccessKey property to specify the keyboard shortcut for a <xref:System.Web.UI.WebControls.HotSpot> region. This allows you to navigate quickly to the region by pressing the ALT key and the key for the specified character on the keyboard. For example, setting the access key of a <xref:System.Web.UI.WebControls.HotSpot> region to the string "D" indicates that the user can navigate to the control by pressing ALT+D.  
  
 Only a single character string is allowed for the AccessKey property. If you attempt to set this property to a value that is neither `null`, <xref:System.String.Empty>, nor a single character string, an exception is thrown.  
  
> [!NOTE]
>  This property is supported only in Internet Explorer 4.0 and later.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified access key is neither <see langword="null" />, an empty string (""), nor a single character string.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AlternateText">
      <MemberSignature Language="C#" Value="public virtual string AlternateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternateText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the alternate text to display for a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object in an <see cref="T:System.Web.UI.WebControls.ImageMap" /> control when the image is unavailable or renders to a browser that does not support images.</summary>
        <value>The text displayed in place of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> when the <see cref="T:System.Web.UI.WebControls.ImageMap" /> control's image is unavailable. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the AlternateText property to specify the text to display for a <xref:System.Web.UI.WebControls.HotSpot> object in an <xref:System.Web.UI.WebControls.ImageMap> control when the image specified by the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property is unavailable.  
  
 When an <xref:System.Web.UI.WebControls.ImageMap> control is rendered to a browser that does not support images, instead of displaying an image, it renders a hyperlink for each <xref:System.Web.UI.WebControls.HotSpot> in the <xref:System.Web.UI.WebControls.ImageMap> control. The control retrieves the text to display for each hyperlink from the AlternateText property for each <xref:System.Web.UI.WebControls.HotSpot>. When a user clicks one of the hyperlinks, it behaves like a <xref:System.Web.UI.WebControls.HotSpot> by either navigating to a specified URL, generating a postback to the server, or doing nothing.  
  
 When the <xref:System.Web.UI.WebControls.ImageMap> control renders to a browser that supports the ToolTips feature, the value of the AlternateText property is displayed as a ToolTip for the <xref:System.Web.UI.WebControls.HotSpot>.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCoordinates">
      <MemberSignature Language="C#" Value="public abstract string GetCoordinates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCoordinates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, returns a string that represents the coordinates of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region.</summary>
        <returns>A string that represents the coordinates of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When overridden in a derived class, the GetCoordinates method returns the string representation of the coordinates of the <xref:System.Web.UI.WebControls.HotSpot> region.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HotSpotMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HotSpotMode HotSpotMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HotSpotMode HotSpotMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HotSpotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the behavior of a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object in an <see cref="T:System.Web.UI.WebControls.ImageMap" /> control when the <see cref="T:System.Web.UI.WebControls.HotSpot" /> is clicked.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.HotSpotMode" /> enumeration values. The default is <see langword="Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the HotSpotMode property to specify the behavior of a <xref:System.Web.UI.WebControls.HotSpot> object in an <xref:System.Web.UI.WebControls.ImageMap> control when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. This property is set using one of the <xref:System.Web.UI.WebControls.HotSpotMode> enumeration values. The following table lists the possible values.  
  
|Value|Description|  
|-----------|-----------------|  
|`NotSet`|The <xref:System.Web.UI.WebControls.HotSpot> uses the behavior set by the <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property. If the <xref:System.Web.UI.WebControls.ImageMap> control does not define the behavior, the <xref:System.Web.UI.WebControls.HotSpot> objects navigate to a URL.|  
|`Inactive`|The <xref:System.Web.UI.WebControls.HotSpot> does not have any behavior.|  
|`Navigate`|The <xref:System.Web.UI.WebControls.HotSpot> navigates to a URL.|  
|`PostBack`|The <xref:System.Web.UI.WebControls.HotSpot> generates a postback to the server.|  
  
 You can specify <xref:System.Web.UI.WebControls.HotSpot> behavior on either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property of the control or on the HotSpotMode property of each individual <xref:System.Web.UI.WebControls.HotSpot> object. If both properties are set, the HotSpotMode property specified on each individual <xref:System.Web.UI.WebControls.HotSpot> object takes precedence over the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the <xref:System.Web.UI.WebControls.ImageMap> control.  
  
 If you specify `HotSpotMode.NotSet` for the HotSpotMode property of an individual <xref:System.Web.UI.WebControls.HotSpot> object, the <xref:System.Web.UI.WebControls.HotSpot> gets its behavior from the containing <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property. In this scenario, if the <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property is either not set to a value or is set to `HotSpotMode.NotSet`, the default behavior is to navigate to a URL.  
  
 If you specify `HotSpotMode.Navigate` for the HotSpotMode property of a <xref:System.Web.UI.WebControls.HotSpot> object, the <xref:System.Web.UI.WebControls.HotSpot> object navigates to a URL when the hot spot region is clicked. Use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to.  
  
 If you specify `HotSpotMode.PostBack` for the HotSpotMode property of a <xref:System.Web.UI.WebControls.HotSpot> object, the <xref:System.Web.UI.WebControls.HotSpot> object generates a post back to the server when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. Use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify a name for the <xref:System.Web.UI.WebControls.HotSpot>. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data on when a postback event occurs. When a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, the <xref:System.Web.UI.WebControls.ImageMap.Click> event is raised. To programmatically control the actions performed when a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, provide an event handler for the <xref:System.Web.UI.WebControls.ImageMap.Click> event.  
  
 To cause all <xref:System.Web.UI.WebControls.HotSpot> objects in an <xref:System.Web.UI.WebControls.ImageMap> control to have the same behavior, set the HotSpotMode property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to `HotSpotMode.NotSet` or do not specify a value for the HotSpotMode property.  
  
 To specify different behaviors for <xref:System.Web.UI.WebControls.HotSpot> objects in an <xref:System.Web.UI.WebControls.ImageMap> control, set the HotSpotMode property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to either `HotSpotMode.Navigate`, `HotSpotMode.PostBack`, or `HotSpotMode.Inactive`.  
  
> [!NOTE]
>  If an <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property or the HotSpotMode property on the <xref:System.Web.UI.WebControls.HotSpot> objects it contains is either not set to a value or set to `HotSpotMode.NotSet`, by default the behavior is `HotSpotMode.Navigate`.  
  
 If you specify `HotSpotMode.Inactive` for the HotSpotMode property, the <xref:System.Web.UI.WebControls.HotSpot> object does not have any behavior when it is clicked. You can use this value to create an inactive hot spot within a larger active hot spot. This option is provided to allow you to create more complex hot-spot zones within an <xref:System.Web.UI.WebControls.ImageMap> control.  
  
 To create an inactive area within an active hot spot, you must specify the inactive hot spot before the active hot spot in the <xref:System.Web.UI.WebControls.ImageMap> control. For example, the following <xref:System.Web.UI.WebControls.ImageMap> defines an active ring by specifying an inactive circular hot spot within a larger active circular hot spot:  
  
```  
<asp:ImageMap ID="SaturnImage"   
  ImageUrl="~/saturn.PNG"   
  runat="server" OnClick="SaturnImage_Click">  
  <asp:CircleHotSpot AlternateText="planet" HotSpotMode=PostBack  
    PostBackValue="planet" Radius=40 X=100 Y=100 />  
  <asp:CircleHotSpot HotSpotMode=Inactive   
    Radius=60 X=100 Y=100 />  
  <asp:CircleHotSpot AlternateText="rings" HotSpotMode=PostBack  
    PostBackValue="rings" Radius=80 X=100 Y=100 />  
</asp:ImageMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified type is not one of the <see cref="T:System.Web.UI.WebControls.HotSpotMode" /> enumeration values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected virtual bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object is tracking its view-state changes.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object is tracking its view-state changes; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IsTrackingViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An &lt;xref:System.Object&gt; that represents the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object to restore.</param>
        <summary>Restores the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's previously saved view state to the object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).  
  
 The LoadViewState method is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.  
  
 This method restores view-state information for the <xref:System.Web.UI.WebControls.HotSpot> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.HotSpot.SaveViewState%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkupName">
      <MemberSignature Language="C#" Value="protected abstract string MarkupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the string representation for the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's shape.</summary>
        <value>A string that represents the name of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's shape.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MarkupName member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.  
  
 When overridden in a derived class, the MarkupName property gets a string that represents the name of the <xref:System.Web.UI.WebControls.HotSpot> object's shape.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL to navigate to when a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object is clicked.</summary>
        <value>The URL to navigate to when a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object is clicked. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the NavigateUrl property to specify the URL to navigate to when a <xref:System.Web.UI.WebControls.HotSpot> object is clicked. This property has an effect only when the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.Navigate`, to navigate to a URL.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PostBackValue">
      <MemberSignature Language="C#" Value="public string PostBackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object to pass in the event data when the <see cref="T:System.Web.UI.WebControls.HotSpot" /> is clicked.</summary>
        <value>The name of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object to pass in the event data when the <see cref="T:System.Web.UI.WebControls.HotSpot" /> is clicked. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the PostBackValue property to specify a name for a <xref:System.Web.UI.WebControls.HotSpot> object. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. This property has an effect only when the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.PostBack`, to generate a postback to the server.  
  
 To programmatically control the actions performed when a <xref:System.Web.UI.WebControls.HotSpot> object is clicked, provide an event handler for the <xref:System.Web.UI.WebControls.ImageMap.Click> event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes to the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's view state since the time the page was posted back to the server.</summary>
        <returns>The &lt;xref:System.Object&gt; that contains the changes to the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's view state. If no view state is associated with the object, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SaveViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.  
  
 View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control's life cycle. For more information, see [ASP.NET Application Life Cycle Overview for IIS 5.0 and 6.0](~/add/includes/ajax-current-ext-md.md).  
  
 When view state is saved, this string object is returned to the client as a variable that is stored in a hidden HTML input element. When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's `ViewState` property. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object is tracking its view-state changes.</summary>
        <value>
          <see langword="true" /> if a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object is tracking its view-state changes; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.IsTrackingViewState%2A?displayProperty=fullName> member to determine whether a <xref:System.Web.UI.WebControls.HotSpot> object is tracking view-state changes.  
  
 The IStateManager.IsTrackingViewState member is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An &lt;xref:System.Object&gt; that contains the saved view state values for the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object to restore.</param>
        <summary>Restores the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's previously saved view state to the object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.LoadViewState%2A?displayProperty=fullName> member to restore the view state for a <xref:System.Web.UI.WebControls.HotSpot> object.  
  
 The IStateManager.LoadViewState member is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes to the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's view state since the last time the page was posted back to the server.</summary>
        <returns>The &lt;xref:System.Object&gt; that contains the changes to the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object's view state.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.SaveViewState%2A?displayProperty=fullName> method to save the view state for the <xref:System.Web.UI.WebControls.HotSpot> region.  
  
 The IStateManager.SaveViewState method is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Instructs the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region to track changes to its view state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.TrackViewState%2A?displayProperty=fullName> method to start tracking view-state changes for the <xref:System.Web.UI.WebControls.HotSpot> region.  
  
 The IStateManager.TrackViewState method is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the tab index of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region.</summary>
        <value>The tab index of the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region. The default is 0, which indicates that this property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the TabIndex property to specify or determine the tab index of a <xref:System.Web.UI.WebControls.HotSpot> region on the Web Forms page.  
  
 When you press the TAB key, the order in which the Web server controls receive focus is determined by the TabIndex property of each control. When a page is initially loaded, the first item that receives focus when the TAB key is pressed is the address bar. Next, the controls on the Web Forms page are tabbed to in ascending order, based on the value of the TabIndex property of each control, starting with the smallest positive, nonzero value. If multiple controls share the same tab index, the controls will receive focus in the order they are declared on the Web Forms page. Finally, controls that have a tab index of zero are tabbed to in the order they are declared.  
  
> [!NOTE]
>  Only controls with a nonzero tab index will render the `tabindex` attribute.  
  
 You can remove a <xref:System.Web.UI.WebControls.HotSpot> region from the tab order by setting the TabIndex property to a negative value.  
  
> [!NOTE]
>  This property is supported only in Internet Explorer 4.0 and later.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified tab index is not between -32768 and 32767.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TargetConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the target window or frame in which to display the Web page content linked to when a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object that navigates to a URL is clicked.</summary>
        <value>The target window or frame in which to load the Web page linked to when a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object that navigates to a URL is clicked. The default value is an empty string (""), which refreshes the window or frame with focus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Target property to specify the frame or window that displays the Web page linked to when a <xref:System.Web.UI.WebControls.HotSpot> object that navigates to a URL is clicked. This property has an effect only when the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.Navigate`, to navigate to a URL. If this property is not set, the browser or window with focus refreshes when the <xref:System.Web.UI.WebControls.HotSpot> object is clicked.  
  
> [!NOTE]
>  The Target property renders as a `target` attribute. The `target` attribute on ANCHOR elements is not allowed in the XHTML 1.1 document type definition. Do not set the Target property if the rendered output for the <xref:System.Web.UI.WebControls.HotSpot> must be XHTML 1.1 compliant. For more information, refer to the topic [XHTML Standards in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md).  
  
> [!CAUTION]
>  We strongly recommend that, when creating accessible Web pages, you avoid using the Target property to target another window. For more information, see [NIB: ASP.NET Accessibility](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).  
  
 The Target value must begin with a letter in the range of A to Z (case-insensitive), except for the following special values, which begin with an underscore.  
  
|Target value|Description|  
|------------------|-----------------|  
|`_blank`|Renders the content in a new window without frames.|  
|`_parent`|Renders the content in the immediate frameset parent.|  
|`_search`|Renders the content in the search pane.|  
|`_self`|Renders the content in the frame with focus.|  
|`_top`|Renders the content in the full window without frames.|  
  
> [!NOTE]
>  Check your browser documentation to determine whether the `_search` value is supported.  For example, Internet Explorer 5.0 or later supports the `_search` target value.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the &lt;xref:System.String&gt; representation of this instance of a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object.</summary>
        <returns>A string that represents this <see cref="T:System.Web.UI.WebControls.HotSpot" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ToString method returns a string that represents the current <xref:System.Web.UI.WebControls.HotSpot> object. For example, if the current <xref:System.Web.UI.WebControls.HotSpot> is an instance of the <xref:System.Web.UI.WebControls.CircleHotSpot> class, calling this method returns the string "CircleHotSpot".  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the <see cref="T:System.Web.UI.WebControls.HotSpot" /> object to track changes to its view state so they can be stored in the object's <see cref="T:System.Web.UI.StateBag" /> object. This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TrackViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.  
  
 This method is called automatically by ASP.NET when the <xref:System.Web.UI.WebControls.HotSpot> object is initialized.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a dictionary of state information that allows you to save and restore the view state of a <see cref="T:System.Web.UI.WebControls.HotSpot" /> object across multiple requests for the same page.</summary>
        <value>An instance of the <see cref="T:System.Web.UI.StateBag" /> class that contains the <see cref="T:System.Web.UI.WebControls.HotSpot" /> region's view-state information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.  
  
 A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use the ViewState property, which is an instance of the <xref:System.Web.UI.StateBag> class, to store the property values. The values are then passed as a variable to a hidden HTML element when subsequent requests are processed. For more information about saving server control view state, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).  
  
 View state is enabled for all server controls by default, but there are circumstances in which you will want to disable it. For more information, see [ASP.NET Performance Overview](~/add/includes/ajax-current-ext-md.md).  
  
 For information about dictionaries and how to use them, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>