<Type Name="DataControlField" FullName="System.Web.UI.WebControls.DataControlField">
  <TypeSignature Language="C#" Value="public abstract class DataControlField : System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataControlField extends System.Object implements class System.Web.UI.IDataSourceViewSchemaAccessor, class System.Web.UI.IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSourceViewSchemaAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("HeaderText")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serves as the base class for all data control field types, which represent a column of data in tabular data-bound controls such as <see cref="T:System.Web.UI.WebControls.DetailsView" /> and <see cref="T:System.Web.UI.WebControls.GridView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DataControlField class serves as the base class for all data control field types. Data control fields are used by data-bound controls to represent a field of data, similar to how a <xref:System.Web.UI.WebControls.DataGridColumn> object represents a type of column in the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
 Use the classes that are derived from DataControlField to control how a field of data is displayed in a data-bound control such as <xref:System.Web.UI.WebControls.DetailsView> or <xref:System.Web.UI.WebControls.GridView>. The following table lists the different data control field types provided by ASP.NET.  
  
|Column field type|Description|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source as text.|  
|<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button in a data-bound control. Depending on the control, this allows you to display either a row or a column with a custom button control, such as an Add or a Remove button.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box in a data-bound control. This data control field type is commonly used to display fields with a Boolean value.|  
|<xref:System.Web.UI.WebControls.CommandField>|Displays built-in command buttons to perform edit, insert, or delete operations in a data-bound control.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This data control field type allows you to bind a second field to the hyperlink's URL.|  
|<xref:System.Web.UI.WebControls.ImageField>|Displays an image in a data-bound control.|  
|<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content in a data-bound control according to a specified template.|  
  
 You can also extend the DataControlField and <xref:System.Web.UI.WebControls.BoundField> classes to create your own data control field types.  
  
 The DataControlField class provides many properties that determine how user interface (UI) elements are presented in the data-bound control. Not every control uses every available data control field property when rendering a UI. For example, the <xref:System.Web.UI.WebControls.DetailsView> control, which displays the data control fields as rows, includes a header item for each data control field, but no footer item. Therefore, the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> and <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> properties are ignored by the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> control, however, uses the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> and <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> properties if the <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> property is set to `true`. Similarly, the data control field properties affect the presentation of UI elements depending on what the element is. The <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> property is always applied to the field. If the type derived from DataControlField contains a control, as in the <xref:System.Web.UI.WebControls.ButtonField> or <xref:System.Web.UI.WebControls.CheckBoxField> classes, the <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> property is applied to the field.  
  
   
  
## Examples  
 The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from DataControlField, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to `false`, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  
  
 [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_1.aspx)]  
  
 The following code example demonstrates how to extend the <xref:System.Web.UI.WebControls.BoundField> class to create a custom bound field that can be used in a <xref:System.Web.UI.WebControls.GridView> control. Similar to the <xref:System.Web.UI.WebControls.CheckBoxField> class, the `RadioButtonField` class represents a column of `true` or `false` data. However, although the data that the <xref:System.Web.UI.WebControls.CheckBoxField> class is bound to can be any set of `true` or `false` values, the set of data that the `RadioButtonField` class is bound to can have only one `true` value at any given time. This example demonstrates how to implement the <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> and <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> methods, two important methods of all classes derived from DataControlField.  
  
 [!code-vb[Samples.AspNet.RadioButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_2.vb)]
 [!code-cs[Samples.AspNet.RadioButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_2.cs)]  
  
 The following code example demonstrates how to use the `RadioButtonField` class, which is provided in the previous example, in a <xref:System.Web.UI.WebControls.GridView> control. In this example, the <xref:System.Web.UI.WebControls.GridView> control displays data for a sports team. The player data is maintained in a data table that includes an ID column, columns for the player names, and a true or false column that identifies the captain of the team. The `RadioButtonField` class is used to display which team member is the current team captain. The <xref:System.Web.UI.WebControls.GridView> control can be edited to choose a new team captain or to change other player information.  
  
 [!code-cs[System.Web.UI.WebControls.DataControlField_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_3.aspx)]
 [!code-vb[System.Web.UI.WebControls.DataControlField_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_3.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataControlField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataControlField" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because the <xref:System.Web.UI.WebControls.DataControlField> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.DataControlField> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.DataControlField> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AccessibleHeaderText">
      <MemberSignature Language="C#" Value="public virtual string AccessibleHeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleHeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets text that is rendered as the <see langword="AbbreviatedText" /> property value in some controls.</summary>
        <value>A string that represents abbreviated text read by screen readers. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the AccessibleHeaderText property is set.  
  
 The value of the AccessibleHeaderText property is stored in view state.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CloneField">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.DataControlField CloneField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Web.UI.WebControls.DataControlField CloneField() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a duplicate copy of the current <see cref="T:System.Web.UI.WebControls.DataControlField" />-derived object.</summary>
        <returns>A duplicate copy of the current <see cref="T:System.Web.UI.WebControls.DataControlField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CloneField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlFieldCollection.CloneFields%2A> method to create a copy of the current <xref:System.Web.UI.WebControls.DataControlField>-derived object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object is associated with.</summary>
        <value>The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Control reference is set when the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method is called.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the style of any Web server controls contained by the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> that governs the appearance of Web server controls contained by the field.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ControlStyle property governs the appearance of any Web server controls contained by types derived from <xref:System.Web.UI.WebControls.DataControlField>.  
  
 This property does not affect all derived types. The <xref:System.Web.UI.WebControls.BoundField> control, which typically displays text data and contains only <xref:System.Web.UI.WebControls.TextBox> controls, is only affected by the ControlStyle property when in <xref:System.Web.UI.WebControls.DataControlRowState> state. Web server controls such as <xref:System.Web.UI.WebControls.ButtonField> and <xref:System.Web.UI.WebControls.CheckBoxField> might be affected by the ControlStyle property, depending on the specific configuration of the control object instances contained by the field. For example, the <xref:System.Web.UI.WebControls.ButtonField> control can be rendered as a <xref:System.Web.UI.WebControls.LinkButton>, <xref:System.Web.UI.WebControls.ImageButton>, or <xref:System.Web.UI.WebControls.Button> object. Although a <xref:System.Web.UI.WebControls.LinkButton> control is affected by `font` attributes of the specified <xref:System.Web.UI.WebControls.Style> object, a <xref:System.Web.UI.WebControls.Button> control is not.  
  
   
  
## Examples  
 The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The ControlStyle property of the <xref:System.Web.UI.WebControls.ButtonField> object is set and governs how the <xref:System.Web.UI.WebControls.LinkButton> control contained by the field is displayed.  
  
 [!code-vb[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_323_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_323_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected virtual void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to which to copy the properties of the current <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
        <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.DataControlField" />-derived object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.UI.WebControls.DataControlField>-derived object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, creates an empty <see cref="T:System.Web.UI.WebControls.DataControlField" />-derived object.</summary>
        <returns>An empty <see cref="T:System.Web.UI.WebControls.DataControlField" />-derived object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.UI.WebControls.DataControlField>-derived object to copy the properties of the current <xref:System.Web.UI.WebControls.DataControlField>-derived object into.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether a data control field is currently viewed in a design-time environment.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.DataControlField" /> is currently viewed in a design-time environment; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DesignMode property exposes the <xref:System.Web.UI.Control.DesignMode%2A?displayProperty=fullName> property. The <xref:System.Web.UI.Control> instance that is passed to the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method is used.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public virtual void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</param>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> that contains the text or controls of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <param name="includeReadOnly">
          <see langword="true" /> to indicate that the values of read-only fields are included in the `dictionary` collection; otherwise, <see langword="false" />.</param>
        <summary>Extracts the value of the data control field from the current table cell and adds the value to the specified &lt;xref:System.Collections.IDictionary&gt; collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ExtractValuesFromCell method is implemented by types derived from <xref:System.Web.UI.WebControls.DataControlField> to associate the current field with a value, if applicable. The field/value pair is stored in the `dictionary` collection that is passed to the method. The ExtractValuesFromCell method is called by the `ExtractRowValues` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.  
  
 Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to assemble a set of cells and their associated values. Implement this method when you are writing a class derived from <xref:System.Web.UI.WebControls.DataControlField> that displays user data or data-bound data. Not all derived types implement the ExtractValuesFromCell method, because not all fields display user data. For example, the <xref:System.Web.UI.WebControls.ButtonField> control displays a button and has no user data.  
  
   
  
## Examples  
 The following code example demonstrates how to implement the ExtractValuesFromCell method for a control that derives from the <xref:System.Web.UI.WebControls.DataControlField> class. The `RadioButtonField` class renders a data-bound radio button for every row in a <xref:System.Web.UI.WebControls.GridView> control. When the ExtractValuesFromCell method is called, the method attempts to determine whether the current value of the <xref:System.Web.UI.WebControls.RadioButton> object contained in the cell is selected or cleared, and adds the value to the <xref:System.Collections.IDictionary> collection. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.DataControlField> class.  
  
 [!code-vb[Samples.AspNet.RadioButtonField#2](~/add/codesnippet/visualbasic/2be9d6dc-be8d-4f63-afd4-_1.vb)]
 [!code-cs[Samples.AspNet.RadioButtonField#2](~/add/codesnippet/csharp/2be9d6dc-be8d-4f63-afd4-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style of the footer of the data control field.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that governs the appearance of the footer item of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The FooterStyle property governs the appearance of any text displayed in the footer item of a type derived from <xref:System.Web.UI.WebControls.DataControlField>.  
  
> [!NOTE]
>  Some data-bound controls do not render a footer item for a data control field. For example, the <xref:System.Web.UI.WebControls.DetailsView> control displays its data control fields as rows. A footer item is not rendered for these data control fields. The FooterStyle property is ignored in these controls.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed in the footer item of a data control field.</summary>
        <value>A string that is displayed in the footer item of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the FooterText property to add notes or comments to a data control field, or for other data related to the field.  
  
> [!NOTE]
>  Some data-bound controls do not render a footer item for a data control field. For example, the <xref:System.Web.UI.WebControls.DetailsView> control displays its data control fields as rows. A footer item is not rendered for these data control fields. The <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> property is ignored in these controls.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderImageUrl">
      <MemberSignature Language="C#" Value="public virtual string HeaderImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image that is displayed in the header item of a data control field.</summary>
        <value>A string that represents a fully qualified or relative URL to an image that is displayed in the header item of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set the HeaderImageUrl property when you want an image displayed in the header item of a data control instead of header text.  
  
> [!NOTE]
>  If both the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> and HeaderImageUrl properties are set, the HeaderImageUrl property has precedence.  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively set the HeaderImageUrl property of a <xref:System.Web.UI.WebControls.ButtonField> column, which displays an image in the <xref:System.Web.UI.WebControls.GridView> control's column header instead of header text.  
  
 [!code-cs[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_179_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_179_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style of the header of the data control field.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that governs the appearance of the <see cref="T:System.Web.UI.WebControls.DataControlField" /> header item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HeaderStyle property governs the appearance of any text displayed in the header item of a type derived from <xref:System.Web.UI.WebControls.DataControlField>. The most common application of the HeaderStyle property is to alter the style of the column headers in a <xref:System.Web.UI.WebControls.GridView> control.  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively set the HeaderStyle property of a <xref:System.Web.UI.WebControls.HyperLinkField> column, which displays a yellow background color for the column header in the <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-cs[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1182_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1182_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed in the header item of a data control field.</summary>
        <value>A string that is displayed in the header item of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the HeaderText property to identify a field in a data control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names for data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.  
  
> [!NOTE]
>  If both the HeaderText and <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> properties are set, the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property has precedence.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively set the HeaderText properties of <xref:System.Web.UI.WebControls.BoundField> columns to display text in the column headers of a <xref:System.Web.UI.WebControls.GridView> control. This code example demonstrates a master-details scenario in which a <xref:System.Web.UI.WebControls.GridView> control is used to display a subset of data while the <xref:System.Web.UI.WebControls.DetailsView> control is used to display a larger set of data and insert new records. The example uses two <xref:System.Web.UI.WebControls.SqlDataSource> controls: one to populate the <xref:System.Web.UI.WebControls.GridView> control and one to populate the <xref:System.Web.UI.WebControls.DetailsView> control and insert data.  
  
 [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_194_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_194_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
        <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
        <summary>Performs basic instance initialization for a data control field.</summary>
        <returns>Always returns <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The control that the <xref:System.Web.UI.WebControls.DataControlField> object is associated with calls the Initialize method to initialize the field before it is added to a rows collection. Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the Initialize method in their `CreateChildControls` methods before calling other methods such as `CreateRow` to create specific rows with data.  
  
 Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to perform basic initialization for any <xref:System.Web.UI.WebControls.DataControlField> objects. Implement this method if your derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.DataControlFieldCell> objects with data or controls in the <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public virtual void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> that contains the text or controls of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
        <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> values.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values, specifying the state of the row that contains the <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />.</param>
        <param name="rowIndex">The index of the row that the <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> is contained in.</param>
        <summary>Adds text or controls to a cell's controls collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Types derived from <xref:System.Web.UI.WebControls.DataControlField> implement the InitializeCell method to add text and controls to a <xref:System.Web.UI.WebControls.DataControlFieldCell> object that belongs to a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row by row when their respective `CreateChildControls` methods are called. The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.  
  
 Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing a class derived from <xref:System.Web.UI.WebControls.DataControlField>.  
  
   
  
## Examples  
 The following code example demonstrates how to implement the InitializeCell method for a control that derives from the <xref:System.Web.UI.WebControls.DataControlField> class. The `RadioButtonField` class renders a data-bound radio button for every row in a <xref:System.Web.UI.WebControls.GridView> control. When the row is displaying data to a user and is not in edit mode, the <xref:System.Web.UI.WebControls.RadioButton> control is disabled. When the row is in edit mode, for example when the user chooses to update a row in the <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.RadioButton> control is rendered as enabled so that it can be clicked. This example uses bitwise AND operators, because the row state might be a combination of one or more <xref:System.Web.UI.WebControls.DataControlRowState> values.  
  
 [!code-vb[Samples.AspNet.RadioButtonField#3](~/add/codesnippet/visualbasic/cb634f4d-ad7d-4bb0-a118-_1.vb)]
 [!code-cs[Samples.AspNet.RadioButtonField#3](~/add/codesnippet/csharp/cb634f4d-ad7d-4bb0-a118-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InsertVisible">
      <MemberSignature Language="C#" Value="public virtual bool InsertVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InsertVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object is visible when its parent data-bound control is in insert mode.</summary>
        <value>
          <see langword="true" /> if the field is visible when its parent data-bound control is rendered in insert mode; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A data-bound control is in insert mode when the state of the current display row is <xref:System.Web.UI.WebControls.DataControlRowState?displayProperty=fullName>.  
  
 The <xref:System.Web.UI.WebControls.DetailsView> control checks the value of this property before it renders a set of fields. If the InsertVisible property is `false`, the <xref:System.Web.UI.Control.Visible%2A> property of the <xref:System.Web.UI.WebControls.DetailsViewRow> object is set to `false`.  
  
 The value of the InsertVisible property is stored in view state.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object is saving changes to its view state.</summary>
        <value>
          <see langword="true" /> if the data source view is marked to save its state; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the style of any text-based content displayed by a data control field.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that governs the appearance of text displayed in a <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ItemStyle property governs the appearance of any text data displayed by a type derived from <xref:System.Web.UI.WebControls.DataControlField>. For example, when you bind a <xref:System.Web.UI.WebControls.BoundField> control to text data, you can use the ItemStyle property to alter the appearance of the text that is displayed.  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively set the ItemStyle property on the <xref:System.Web.UI.WebControls.BoundField> objects used to display `FirstName` and `LastName` data in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to `false`, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  
  
 [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_820_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_820_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.DataControlField" /> state to restore.</param>
        <summary>Restores the data source view's previously saved view state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).  
  
 This method restores view-state information for the <xref:System.Web.UI.WebControls.DataControlField> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.DataControlField.SaveViewState%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnFieldChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFieldChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFieldChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see langword="FieldChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnFieldChanged method raises an event signaling that the <xref:System.Web.UI.WebControls.DataControlField> object's state has changed. Changes to the following properties cause this event to be raised: <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>, <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>, <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>, <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>, <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>, and <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>. Derived type properties also raise this event when state changes occur. Web server controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> typically call the `DataBind` method in response to a field change event.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnFieldChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes made to the <see cref="T:System.Web.UI.WebControls.DataControlField" /> view state since the time the page was posted back to the server.</summary>
        <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.DataControlField" /> view state. If there is no view state associated with the object, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used primarily by control developers.  
  
 View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle.  
  
 When view state is saved, a string is returned to the client as a variable that is stored in an HTML `hidden` element. When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [ASP.NET View State Overview](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the header item of a data control field is rendered.</summary>
        <value>
          <see langword="true" /> if the header item of the <see cref="T:System.Web.UI.WebControls.DataControlField" /> is rendered; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ShowHeader property to specify whether the header item is displayed in a <xref:System.Web.UI.WebControls.DataControlField> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a sort expression that is used by a data source control to sort data.</summary>
        <value>A sort expression that is used by a data source control to sort data. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the SortExpression property is set.  
  
 The value of the SortExpression property is stored in view state.  
  
   
  
## Examples  
 The following code example demonstrates how to use the SortExpression property to assign a sort expression to a data control field.  
  
 [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_407_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_407_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema">
      <MemberSignature Language="C#" Value="object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the schema associated with this <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
        <value>The schema associated with this <see cref="T:System.Web.UI.WebControls.DataControlField" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object is saving changes to its view state.</summary>
        <value>
          <see langword="true" /> to indicate that the <see cref="T:System.Web.UI.WebControls.DataControlField" /> is saving changes to its view state; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">An &lt;xref:System.Object&gt; that contains the saved view state values for the control.</param>
        <summary>Restores the data control field's previously saved view state.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes made to the <see cref="T:System.Web.UI.WebControls.DataControlField" /> view state since the time the page was posted back to the server.</summary>
        <returns>An &lt;xref:System.Object&gt; that contains the saved view state values for the control.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object to track changes to its view state so they can be stored in the control's &lt;xref:System.Web.UI.WebControls.DataControlField.ViewState%2A&gt; property and persisted across requests for the same page.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents this <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
        <returns>A string that represents this <see cref="T:System.Web.UI.WebControls.DataControlField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is implemented to return the value of the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> property, if the property is set. Otherwise, this method simply returns a string that represents the type of the data control field (for example, "BoundField").  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object to track changes to its view state so they can be stored in the control's &lt;xref:System.Web.UI.WebControls.DataControlField.ViewState%2A&gt; property and persisted across requests for the same page.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the control validates client input.</summary>
        <value>
          <see langword="true" /> if the control validates client input; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public virtual void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, signals that the controls contained by a field support callbacks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.DataControlField> object support callbacks. The base implementation of this method has been implemented to throw a <xref:System.NotSupportedException> exception to indicate that callbacks are not supported.  
  
> [!NOTE]
>  This method is used primarily by control developers.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The method is called on a default instance of the <see cref="T:System.Web.UI.WebControls.DataControlField" /> class.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a dictionary of state information that allows you to save and restore the view state of a <see cref="T:System.Web.UI.WebControls.DataControlField" /> object across multiple requests for the same page.</summary>
        <value>An instance of <see cref="T:System.Web.UI.StateBag" /> that contains the <see cref="T:System.Web.UI.WebControls.DataControlField" /> view-state information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A data control field's view state is the accumulation of all its property values. To preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the <xref:System.Web.UI.StateBag> class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see [ASP.NET View State Overview](~/add/includes/ajax-current-ext-md.md).  
  
 View state is enabled for all server controls by default, but there are circumstances when you will want to disable it. For more information, see [ASP.NET Performance Overview](~/add/includes/ajax-current-ext-md.md).  
  
 For more information about dictionaries and how to use them, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether a data control field is rendered.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.DataControlField" /> is rendered; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Visible property to show or hide <xref:System.Web.UI.WebControls.DataControlField> objects in a data-bound control.  
  
 If the the Visible property is `false`, the data values are not displayed and do not make a round-trip to the client. If you want to round-trip the data for a field that is not visible, add the field name to the `DataKeyNames` property of the data-bound control.  
  
   
  
## Examples  
 The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The Visible property of the <xref:System.Web.UI.WebControls.BoundField> object that displays the `EmployeeID` column is set to `false`, and the column is not rendered by the <xref:System.Web.UI.WebControls.DetailsView> control.  
  
 [!code-vb[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_987_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_987_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>