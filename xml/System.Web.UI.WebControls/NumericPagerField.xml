<Type Name="NumericPagerField" FullName="System.Web.UI.WebControls.NumericPagerField">
  <TypeSignature Language="C#" Value="public class NumericPagerField : System.Web.UI.WebControls.DataPagerField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumericPagerField extends System.Web.UI.WebControls.DataPagerField" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataPagerField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a <see cref="T:System.Web.UI.WebControls.DataPager" /> field that enables users to select a page by page number.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The NumericPagerField class displays navigation controls in a <xref:System.Web.UI.WebControls.DataPager> control. The controls can be used to page through data that is displayed by a control that implements the <xref:System.Web.UI.WebControls.IPageableItemContainer> interface, such as the <xref:System.Web.UI.WebControls.ListView> control. The NumericPagerField object displays page numbers as buttons that users can click to move to specific a page. The control also displays next-page and previous-page buttons that enable users to access more pages of data than the ones that are displayed by the control.  
  
 You can customize the appearance of the NumericPagerField object by using the properties that are listed in the following table.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass%2A>|The CSS class for the current page number.|  
|<xref:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass%2A>|The CSS class for the next-page and previous-page buttons.|  
|<xref:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass%2A>|The CSS class for the buttons that represent the page numbers.|  
  
 You can use the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property to select the type of button that will be displayed. The following table lists the available button types.  
  
|Button type|Description|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>|A <xref:System.Web.UI.WebControls.Button> control.|  
|<xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>|An <xref:System.Web.UI.WebControls.ImageButton> control.|  
|<xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>|A <xref:System.Web.UI.WebControls.LinkButton> control.|  
  
 The controls inside the <xref:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass%2A> object are rendered with non-breaking spaces between them. If you want to customize this behavior, you can use the <xref:System.Web.UI.WebControls.NumericPagerField.RenderNonBreakingSpacesBetweenControls%2A> property.  
  
 You can hide a NumericPagerField object in a <xref:System.Web.UI.WebControls.DataPager> control by setting the <xref:System.Web.UI.WebControls.DataPagerField.Visible%2A> property to `false`. You cannot control the visibility of the next-page and previous-page buttons. They are displayed by the control if the associated data control has additional pages available to display. You can use the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonCount%2A> property to specify how many buttons are displayed in a NumericPagerField object. Each button corresponds to a page number.  
  
 You can set the text of the next-page button by setting the <xref:System.Web.UI.WebControls.NumericPagerField.NextPageText%2A> property. You can set the text of the previous-page button by using the <xref:System.Web.UI.WebControls.NumericPagerField.PreviousPageText%2A> property.  
  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, you must provide the URL of an image that will be displayed for the next-page and previous page buttons. You do this by setting the <xref:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl%2A> and <xref:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl%2A> properties. In that case, the corresponding text property is used as the alternate text for the image. For example, the text that is specified by the <xref:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl%2A> property is displayed as the alternate text for the next-page image button. On browsers that support tooltips, this text is also displayed as a tooltip for the corresponding button.  
  
   
  
## Examples  
 The following example shows how to use a NumericPagerField object to page through data that is displayed in a <xref:System.Web.UI.WebControls.ListView> control.  
  
 [!code-vb[System.Web.UI.WebControls.NumericPagerField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_185_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.NumericPagerField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_185_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericPagerField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is typically used when you add fields to a dynamically created <xref:System.Web.UI.WebControls.DataPager> control.  
  
 To add a <xref:System.Web.UI.WebControls.NumericPagerField> object dynamically to a <xref:System.Web.UI.WebControls.DataPager> control, create a new <xref:System.Web.UI.WebControls.NumericPagerField> object, set its properties, and then add it to the field collection for the <xref:System.Web.UI.WebControls.DataPager> control.  
  
   
  
## Examples  
 The following example shows how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.NumericPagerField> object to a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-vb[System.Web.UI.WebControls.NumericPagerField.Ctor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_181_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.NumericPagerField.Ctor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_181_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ButtonCount">
      <MemberSignature Language="C#" Value="public int ButtonCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ButtonCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of buttons to display in a <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
        <value>The number of buttons to display in a <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is 5.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ButtonCount property to specify the number of buttons to display in a <xref:System.Web.UI.WebControls.NumericPagerField> object. Each button corresponds to a page number. If the <xref:System.Web.UI.WebControls.NumericPagerField> object has more pages than the number specified for ButtonCount, the control displays a next-page button that lets users access the next set of pages.  
  
 The <xref:System.Web.UI.WebControls.NumericPagerField> object displays buttons only for existing page numbers. If the <xref:System.Web.UI.WebControls.NumericPagerField> object has fewer pages to show than the number specified for ButtonCount, the control shows fewer buttons than the number specified by this property.  
  
   
  
## Examples  
 The following example shows how to use the ButtonCount property to change the default number of page buttons that are displayed in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_563_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_563_1.aspx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The ButtonCount property is set to a value less than 1.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ButtonType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the button type to display in the pager field.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="T:System.Web.UI.WebControls.ButtonType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table lists the available button types.  
  
|Button type value|Description|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>|A <xref:System.Web.UI.WebControls.Button> control.|  
|<xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>|An <xref:System.Web.UI.WebControls.ImageButton> control.|  
|<xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>|A <xref:System.Web.UI.WebControls.LinkButton> control.|  
  
 When the ButtonType property is set to <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, you must provide the URL of an image for the next-page and previous page buttons. To do this, you can use the <xref:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl%2A> and <xref:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl%2A> properties. The corresponding text property is used as the alternate text for the image. For example, the text that is specified by the <xref:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl%2A> property is displayed as the alternate text for the next-page image button. On browsers that support tooltips, this text is also displayed as a tooltip for the corresponding button.  
  
 The value of the ButtonType property is stored in view state.  
  
 If the <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A?displayProperty=fullName> property is not an empty string or `null`, the <xref:System.Web.UI.WebControls.NumericPagerField> object ignores the value of the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonCount%2A> property. In that case, the <xref:System.Web.UI.WebControls.HyperLink> control is used to create the buttons.  
  
   
  
## Examples  
 The following example shows how to use the ButtonType property to specify that image buttons are displayed in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_705_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_705_1.aspx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value for the ButtonType property is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataPagerField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataPagerField newField) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataPagerField" />
      </Parameters>
      <Docs>
        <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to copy the properties of the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object to.</param>
        <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CopyProperties method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataPagerField.CloneField%2A> method to copy the properties of the current <xref:System.Web.UI.WebControls.NumericPagerField> object to the <xref:System.Web.UI.WebControls.DataPagerField> object that is passed in the `newField` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateDataPagers">
      <MemberSignature Language="C#" Value="public override void CreateDataPagers (System.Web.UI.WebControls.DataPagerFieldItem container, int startRowIndex, int maximumRows, int totalRowCount, int fieldIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateDataPagers(class System.Web.UI.WebControls.DataPagerFieldItem container, int32 startRowIndex, int32 maximumRows, int32 totalRowCount, int32 fieldIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.WebControls.DataPagerFieldItem" />
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
        <Parameter Name="fieldIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">The container that is used to store the controls.</param>
        <param name="startRowIndex">The index of the first record on the page.</param>
        <param name="maximumRows">The maximum number of items on a single page.</param>
        <param name="totalRowCount">The total number of items.</param>
        <param name="fieldIndex">The index of the data pager field in the &lt;xref:System.Web.UI.WebControls.DataPager.Fields%2A?displayProperty=fullName&gt; collection.</param>
        <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateDataPagers method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataPager.CreatePagerFields%2A?displayProperty=fullName> method to create the UI controls for the pager field, such as the numeric buttons.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataPagerField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataPagerField CreateField() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataPagerField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
        <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateField method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataPagerField.CloneField%2A> method of the base class to create an empty <xref:System.Web.UI.WebControls.NumericPagerField> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageLabelCssClass">
      <MemberSignature Language="C#" Value="public string CurrentPageLabelCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentPageLabelCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the current page number.</summary>
        <value>The CSS class that is used to style the current page number in the browser. The default is an empty string (""), which indicates that the CurrentPageLabelCssClass property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the CurrentPageLabelCssClass property to specify the CSS class that is used to style the <xref:System.Web.UI.WebControls.Label> object that represents the number of the page that is currently selected. The CurrentPageLabelCssClass property is always rendered as a `class` attribute, regardless of the browser.  
  
> [!NOTE]
>  On browsers that do not support CSS, setting the CurrentPageLabelCssClass property has no effect.  
  
 The value of this property is stored in view state.  
  
   
  
## Examples  
 The following example shows how to specify a CSS class to style the current page number in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_887_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_887_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The object to compare with the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> instance.</param>
        <summary>Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Equals returns `true` if the two objects contain exactly the same values for all public properties of the <xref:System.Web.UI.WebControls.NumericPagerField> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
        <returns>A hash code for the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. For more information, see the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; class.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HandleEvent">
      <MemberSignature Language="C#" Value="public override void HandleEvent (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void HandleEvent(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object and performs the appropriate action.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HandleEvent method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataPager.OnBubbleEvent%2A?displayProperty=fullName> method to handle events that occur in the <xref:System.Web.UI.WebControls.NumericPagerField> object when one of the buttons inside the control is clicked.  
  
 The HandleEvent method examines the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> object that is contained in the `e` parameter, and then performs the appropriate action.  
  
 The following table lists the buttons provided by the <xref:System.Web.UI.WebControls.NumericPagerField> object and the action that is performed when the button is clicked.  
  
|Button|CommandName value|Action|  
|------------|-----------------------|------------|  
|Number|Page number|Navigates to the corresponding page of data.|  
|Previous page|<xref:System.Web.UI.WebControls.DataControlCommands.PreviousPageCommandArgument?displayProperty=fullName>|Displays the previous set of page numbers and navigates to the last page of data in that set.|  
|Next page|<xref:System.Web.UI.WebControls.DataControlCommands.NextPageCommandArgument?displayProperty=fullName>|Displays the previous set of page numbers and navigates to the first page of data in that set.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NextPageImageUrl">
      <MemberSignature Language="C#" Value="public string NextPageImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NextPageImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Web.UI.Design.ImageUrlEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
        <value>The URL of an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is an empty string (""), which indicates that the NextPageImageUrl property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, use the NextPageImageUrl property to specify the URL of an image that is displayed for the next-page button. The image can be in any file format that is supported in browser, such as .jpg, .gif, .bmp, and .png.  
  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to a value other than <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, setting the NextPageImageUrl property has no effect.  
  
 The value of this property is stored in view state.  
  
   
  
## Examples  
 The following example shows how to display an image for the next-page button in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_418_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_418_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NextPageText">
      <MemberSignature Language="C#" Value="public string NextPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NextPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed for the next-page button.</summary>
        <value>The text that is displayed for the next-page button. The default is "…".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, the text specified in the NextPageText property is used as the alternate text for the image. On browsers that support tooltips, this text is also displayed as a tooltip for the corresponding button.  
  
 The value of this property is stored in view state. It can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how to customize the text that is displayed for the next-page button of the pager field in a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_585_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_585_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NextPreviousButtonCssClass">
      <MemberSignature Language="C#" Value="public string NextPreviousButtonCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NextPreviousButtonCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the next-page and previous-page buttons of the pager field.</summary>
        <value>The CSS class that is used to style the next-page and previous-page buttons of the pager field. The default is an empty string (""), which indicates that the NextPreviousButtonCssClass property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The next-page and previous-page buttons are displayed by the <xref:System.Web.UI.WebControls.NumericPagerField> class to let users access other pages of data when the total number of pages is greater than the value specified in the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonCount%2A> property. The NextPreviousButtonCssClass property is always rendered as a `class` attribute, regardless of the browser.  
  
> [!NOTE]
>  On browsers that do not support CSS, setting the NextPreviousButtonCssClass property has no effect.  
  
 The value of this property is stored in view state.  
  
   
  
## Examples  
 The following example shows how to specify a CSS class to style the next-page and previous-page buttons in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_38_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_38_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NumericButtonCssClass">
      <MemberSignature Language="C#" Value="public string NumericButtonCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumericButtonCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the page-number buttons of the pager field.</summary>
        <value>The CSS class that is used to style the page-number buttons of the pager field. The default is an empty string (""), which indicates that the NumericButtonCssClass property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Page-number buttons are displayed by the <xref:System.Web.UI.WebControls.NumericPagerField> class to enable users to navigate directly to individual pages. The CSS class specified by the NumericButtonCssClass property is applied to all page numbers that are displayed by the <xref:System.Web.UI.WebControls.NumericPagerField> object, except for the page that is currently selected. The page currently selected page uses the CSS class that is specified by the <xref:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass%2A> property.  
  
 The NumericButtonCssClass property is always rendered as a `class` attribute, regardless of the browser.  
  
> [!NOTE]
>  On browsers that do not support CSS, setting the NumericButtonCssClass property has no effect.  
  
 The value of this property is stored in view state.  
  
   
  
## Examples  
 The following example shows how to specify a CSS class to style the page number buttons in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1031_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldCss#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1031_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PreviousPageImageUrl">
      <MemberSignature Language="C#" Value="public string PreviousPageImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreviousPageImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Web.UI.Design.ImageUrlEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
        <value>The URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is an empty string (""), which indicates that the PreviousPageImageUrl property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, use the PreviousPageImageUrl property to specify the URL of an image that is displayed for the previous-page button. The image can be in any file format that is supported in browsers, such as .jpg, .gif, .bmp, and .png.  
  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to a value other than <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, setting the PreviousPageImageUrl property has no effect.  
  
 The value of this property is stored in view state.  
  
   
  
## Examples  
 The following example shows how to display an image for the previous-page button in the <xref:System.Web.UI.WebControls.NumericPagerField> object of a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_945_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_945_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PreviousPageText">
      <MemberSignature Language="C#" Value="public string PreviousPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreviousPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed for the previous-page button.</summary>
        <value>The text that is displayed for the previous-page button. The default is "…".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.NumericPagerField.ButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType?displayProperty=fullName>, the text in the PreviousPageText property is used as the alternate text for the image. On browsers that support tooltips, this text is also displayed as a tooltip for the corresponding button.  
  
 The value of this property is stored in view state. It can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows how to customize the text that is displayed for the previous-page button of the pager field in a <xref:System.Web.UI.WebControls.DataPager> control.  
  
 [!code-cs[System.Web.UI.WebControls.NumericPagerFieldText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_582_1.aspx)]
 [!code-vb[System.Web.UI.WebControls.NumericPagerFieldText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_582_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderNonBreakingSpacesBetweenControls">
      <MemberSignature Language="C#" Value="public bool RenderNonBreakingSpacesBetweenControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderNonBreakingSpacesBetweenControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether non-breaking spaces will be rendered between controls.</summary>
        <value>
          <see langword="true" /> if non-breaking spaces will be rendered between controls; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the RenderNonBreakingSpacesBetweenControls property to specify whether non-breaking spaces (the HTML ` ` character reference) will be rendered between the controls of the <xref:System.Web.UI.WebControls.NumericPagerField> object, such as the page buttons. If you need more control over the layout that you are creating with cascading style sheet (CSS) classes, you can set RenderNonBreakingSpacesBetweenControls to `false`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>