<Type Name="TableItemStyle" FullName="System.Web.UI.WebControls.TableItemStyle">
  <TypeSignature Language="C#" Value="public class TableItemStyle : System.Web.UI.WebControls.Style" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableItemStyle extends System.Web.UI.WebControls.Style" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Style</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the style properties for an element of a control that renders as a <see cref="T:System.Web.UI.WebControls.TableRow" /> or <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TableItemStyle class represents the style properties for an element of a control that renders as a <xref:System.Web.UI.WebControls.TableRow> or <xref:System.Web.UI.WebControls.TableCell>. You can control the vertical and horizontal alignment of the contents in an item of the table by setting the <xref:System.Web.UI.WebControls.TableItemStyle.HorizontalAlign%2A> and <xref:System.Web.UI.WebControls.TableItemStyle.VerticalAlign%2A> properties, respectively. You can also specify whether the contents of the cell automatically continue on the next line when the end of the cell is reached by setting the <xref:System.Web.UI.WebControls.TableItemStyle.Wrap%2A> property.  
  
 This class provides methods that are useful for creating a style for an item in the <xref:System.Web.UI.WebControls.Table> control. You can use the <xref:System.Web.UI.WebControls.TableItemStyle.CopyFrom%2A> and <xref:System.Web.UI.WebControls.TableItemStyle.MergeWith%2A> methods to copy or merge the style properties of another TableItemStyle with the instance of the TableItemStyle that the method is called from.  
  
   
  
## Examples  
 The following code example creates several rows in a <xref:System.Web.UI.WebControls.Table> control and applies a TableItemStyle object to each row.  
  
 [!code-cs[TableCell#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_43_1.aspx)]
 [!code-vb[TableCell#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_43_1.aspx)]  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableItemStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class using default values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class.  
  
   
  
## Examples  
 [!code-cs[TableCell#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_226_1.aspx)]
 [!code-vb[TableCell#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_226_1.aspx)]  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableItemStyle (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> that represents the state bag in which to store style information.</param>
        <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class with the specified state bag.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class using the specified <xref:System.Web.UI.StateBag?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebControl owner) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="owner" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="writer">The output stream that renders HTML content to the client.</param>
        <param name="owner">The control that the style refers to.</param>
        <summary>Adds information about horizontal alignment, vertical alignment, and wrap to the list of attributes to render.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.TableItemStyle.AddAttributesToRender%2A> method is used primarily by control developers to insert additional attributes and styles in the <xref:System.Web.UI.HtmlTextWriter> output stream for the <xref:System.Web.UI.WebControls.TableItemStyle>. The <xref:System.Web.UI.WebControls.TableItemStyle.AddAttributesToRender%2A> method overrides the <xref:System.Web.UI.WebControls.Style.AddAttributesToRender%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to copy.</param>
        <summary>Duplicates the non-empty style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> into the instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class that this method is called from.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the CopyFrom method to duplicate the non-empty style properties of the specified <xref:System.Web.UI.WebControls.Style> into the instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class that this method is called from.  
  
> [!CAUTION]
>  All properties in the current instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class are replaced by the associated property in the `s` parameter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the horizontal alignment of the contents in a cell.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. The default is <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the HorizontalAlign property to specify the horizontal alignment of the data list control within its container. This property is set with one of the <xref:System.Web.UI.WebControls.HorizontalAlign> enumeration values. The following table lists the possible values.  
  
|Value|Description|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.HorizontalAlign>|The horizontal alignment is not set.|  
|<xref:System.Web.UI.WebControls.HorizontalAlign>|The contents of a cell are left justified within the cell.|  
|<xref:System.Web.UI.MobileControls.Alignment>|The contents of a cell are centered within the cell.|  
|<xref:System.Web.UI.WebControls.HorizontalAlign>|The contents of a cell are right justified within the cell.|  
  
 The value of this property is stored in view state.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified horizontal alignment is not one of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MergeWith">
      <MemberSignature Language="C#" Value="public override void MergeWith (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MergeWith(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to combine.</param>
        <summary>Combines the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> into the instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class that this method is called from.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the MergeWith method to combine the style properties of the specified <xref:System.Web.UI.WebControls.Style> into the instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class that this method is called from.  
  
 This method joins the properties of the <xref:System.Web.UI.WebControls.Style> object and the current instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class. This is accomplished by setting each property that is not set in the current instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class with the value in the corresponding property of the `s` parameter. Only properties that have not been set are replaced. If a property in the `s` parameter is not set, it does not replace the corresponding property in the current instance of the <xref:System.Web.UI.WebControls.TableItemStyle> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes any defined style elements from the style.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to remove any defined style elements from the style, leaving the style in its default configuration.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.VerticalAlign VerticalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.VerticalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vertical alignment of the contents in a cell.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> enumeration values. The default is <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the VerticalAlign property to specify the vertical alignment of the contents of the cell. The following table lists the possible values.  
  
|Vertical Alignment|Description|  
|------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.VerticalAlign>|The vertical alignment is not set.|  
|<xref:System.Web.UI.WebControls.VerticalAlign>|The contents of the cell are aligned with the upper edge of the cell.|  
|<xref:System.Web.UI.WebControls.VerticalAlign>|The contents of the cell are aligned with the center of the cell.|  
|<xref:System.Web.UI.WebControls.VerticalAlign>|The contents of the cell are aligned with the lower edge of the cell.|  
  
 The value of this property is stored in view state.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified vertical alignment was not one of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> enumeration values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the contents of a cell wrap in the cell.</summary>
        <value>
          <see langword="true" /> if the contents of the cell wrap in the cell; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Wrap property to specify or determine whether the contents of the cell wrap.  
  
 The value of this property is stored in view state.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>