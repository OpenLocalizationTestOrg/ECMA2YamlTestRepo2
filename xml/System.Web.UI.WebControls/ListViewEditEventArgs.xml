<Type Name="ListViewEditEventArgs" FullName="System.Web.UI.WebControls.ListViewEditEventArgs">
  <TypeSignature Language="C#" Value="public class ListViewEditEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewEditEventArgs extends System.ComponentModel.CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.ListView> control raises the <xref:System.Web.UI.WebControls.ListView.ItemEditing> event when an Edit button is clicked, but before the <xref:System.Web.UI.WebControls.ListView> item enters edit mode. (An Edit button is a button whose `CommandName` property set to "Edit".) This enables you to provide an event-handling method that performs a custom routine whenever this event occurs, such as canceling the edit operation.  
  
 A ListViewEditEventArgs object is passed to the event-handling method. This object enables you to determine the index of the item that is being edited, and to indicate that the edit operation should be canceled. To cancel the edit operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the ListViewEditEventArgs object to `true`.  
  
 For a list of initial property values for an instance of ListViewEditEventArgs, see the <xref:System.Web.UI.WebControls.ListViewEditEventArgs.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following example shows how to use the ListViewEditEventArgs object to cancel the edit operation when the user tries to update a discontinued item.  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_361_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.ListView.ItemEditing#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_361_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewEditEventArgs (int newEditIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 newEditIndex) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="newEditIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newEditIndex">The index of the item to edit.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ListViewEditEventArgs> class.  
  
> [!NOTE]
>  This constructor is primarily used by control developers when they raise events.  
  
 The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.ListViewEditEventArgs>.  
  
|Property|Initial value|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewEditEventArgs.NewEditIndex%2A>|The value of the `newEditIndex` parameter.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NewEditIndex">
      <MemberSignature Language="C#" Value="public int NewEditIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NewEditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the index of the item that is being edited.</summary>
        <value>The index of the item that is being edited.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the NewEditIndex property to determine the index of the item that is being edited. The item index is often used to retrieve this item from the <xref:System.Web.UI.WebControls.ListView.Items%2A> collection of the <xref:System.Web.UI.WebControls.ListView> control, which enables you to access the item's properties.  
  
   
  
## Examples  
 The following example shows how to use the NewEditIndex property to retrieve the <xref:System.Web.UI.WebControls.ListViewItem> object that is being edited. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewEditEventArgs> class.  
  
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_340_1.aspx)]
 [!code-cs[System.Web.UI.WebControls.ListView.ItemEditing#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_340_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>