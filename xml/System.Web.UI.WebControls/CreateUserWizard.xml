<Type Name="CreateUserWizard" FullName="System.Web.UI.WebControls.CreateUserWizard">
  <TypeSignature Language="C#" Value="public class CreateUserWizard : System.Web.UI.WebControls.Wizard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CreateUserWizard extends System.Web.UI.WebControls.Wizard" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Wizard</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CreatedUser")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.CreateUserWizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CreateUserWizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:CreateUserWizardStep runat="server"/&gt; &lt;asp:CompleteWizardStep runat="server"/&gt; &lt;/WizardSteps&gt; &lt;/{0}:CreateUserWizard&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a user interface for creating new Web site user accounts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In this topic:  
  
-   [Introduction](#Introduction)  
  
-   [Creating a User](#creating_a_user)  
  
-   [Styles and Templates](#styles_and_templates)  
  
-   [Validation Grouping](#validation_grouping)  
  
-   [Formatting Using Layout Templates](#formatting_using_layout_templates)  
  
-   [Accessibility](#Accessibility)  
  
-   [Declarative Syntax](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## Introduction  
 The CreateUserWizard control provides the user interface for the <xref:System.Web.Security.MembershipProvider> object that communicates with your Web site's user data store to create new user accounts in the data store. The CreateUserWizard relies on the <xref:System.Web.Security.MembershipProvider> to create the user and disable them if necessary.  
  
> [!NOTE]
>  If you are not familiar with ASP.NET login controls, you might find it helpful to read [ASP.NET Login Controls Overview](~/add/includes/ajax-current-ext-md.md) before continuing. For a list of other topics related to login controls and membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  
  
 By default, the CreateUserWizard control will accept a user name and password from the Web site visitor. Based on the requirements of the site's <xref:System.Web.Security.MembershipProvider> object, the CreateUserWizard control will optionally accept an e-mail address, represented by the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> property, and a password recovery confirmation question and answer, represented by <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A>. For a table showing all required and optional controls for CreateUserWizard, see <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A>.  
  
> [!IMPORTANT]
>  If <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> is set to `true` and the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application's Web.config file, you could potentially generate a password that does not pass the regular expression strength test. In this case, creating a user raises an error that indicates an invalid password.  
  
<a name="creating_a_user"></a>   
## Creating a User  
 When a user is created with the CreateUserWizard, the control interacts with the current <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> to accomplish the following tasks in order.  
  
1.  Create a password if <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> is set to `true`.  
  
2.  Create the user in the data store that the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> represents.  
  
3.  Disable the user in the store if the <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> property is set to `true.`  
  
 You can extend the CreateUserWizard control to accept additional information by adding additional fields, or by adding additional steps before or after the provided templates in the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> properties.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.CreateUserWizardStep> step is the first step within the CreateUserWizard control, and is a required step. By default, the <xref:System.Web.UI.WebControls.CreateUserWizardStep.AllowReturn%2A> property is set to `false` to keep the user from returning to the <xref:System.Web.UI.WebControls.CreateUserWizardStep> step and accidentally attempting to create another user account with the same credentials. If <xref:System.Web.UI.Control.EnableViewState%2A> is set to `false`, the <xref:System.Web.UI.WebControls.CreateUserWizardStep.AllowReturn%2A> property is not maintained in view state and you must include logic in your application to maintain the <xref:System.Web.UI.WebControls.CreateUserWizardStep.AllowReturn%2A> value.  
  
 CreateUserWizard control properties represented by text boxes, such as <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A>, are accessible during all phases of the page life cycle. The control will pick up any changes made by the end user by means of the <xref:System.Web.UI.WebControls.TextBox.TextChanged> event raised by the text boxes.  
  
 The CreateUserWizard control can optionally send e-mail messages to new users if you have configured an SMTP mail server to send e-mail. For more information, see the <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> property.  
  
> [!NOTE]
>  The CreateUserWizard control uses Internet e-mail services to send login information to users. There are inherent security risks with sending passwords in e-mail. You should determine whether these security risks are acceptable to your site.  
  
<a name="styles_and_templates"></a>   
## Styles and Templates  
 When the CreateUserWizard control is not customized with templates, the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property of the CreateUserWizard control applies to the first text box in the control and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property, which is applied to all text boxes of the control. If the CreateUserWizard control is customized with templates, then the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property are ignored. In this case, directly set the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property of each template child control.  
  
 CreateUserWizard control properties represented by text boxes, such as <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A>, are accessible during all phases of the page life cycle. The control will pick up any changes made by the end user by means of the <xref:System.Web.UI.WebControls.TextBox.TextChanged> event raised by the text boxes.  
  
> [!NOTE]
>  Setting the <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A>, <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A>, or <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> property recreates the child controls of the CreateUserWizard control, and their control state is lost in the process. To avoid this situation, explicitly maintain the control state of the CreateUserWizard control's child controls, or avoid putting controls inside of templates.  
  
 The following table lists the CreateUserWizard control style properties and explains which UI element each style property affects. For a list of which properties each style applies to, see the documentation for the individual style properties.  
  
|Style property|UI element affected|  
|--------------------|-------------------------|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A>|**Continue** button.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A>|**Create User** button.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A>|Links to other pages.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A>|Instructional text on the page that tells users how to use the control.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A>|Labels for all input fields, such as text boxes.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A>|Text entry input fields.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A>|Title text for each view.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A>|Text displayed to the user when the password recovery or reset attempt is successful.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A>|Error messages when the membership provider fails to create a new user account.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A>|The text that describes password requirements.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A>|Error messages associated with validation.|  
  
<a name="validation_grouping"></a>   
## Validation Grouping  
 The CreateUserWizard control uses a validation group so that other fields on the same page as the CreateUserWizard control can be validated separately. By default, the <xref:System.Web.UI.Control.ID%2A> property of the CreateUserWizard control is used as the name of the validation group. For example, a CreateUserWizard control with the ID "CreateUserWizard1" will use a validation group name of "CreateUserWizard1". If you want to set the validation group that the CreateUserWizard control is part of, you must template the control and change the validation group name.  
  
 Note that the CreateUserWizard class inherits from the <xref:System.Web.UI.WebControls.Wizard> class, which does not support special Microsoft Internet Explorer rendering for non-standard or quirks mode. The CreateUserWizard does not attempt to optimize rendering for non-standard Internet Explorer mode. To get the best Internet Explorer rendering using the CreateUserWizard control, use the XHTML doc type, which is added by default in Visual Web Developer and Visual Studio.  
  
<a name="formatting_using_layout_templates"></a>   
## Formatting Using Layout Templates  
 The CreateUserWizard control lets you specify the layout of the control without requiring you to use an HTML `table` element. Instead, you can use a `LayoutTemplate` element to specify the layout. In the layout template, you create placeholder controls to indicate where items should be dynamically inserted into the control. (This is similar to how the template model for the <xref:System.Web.UI.WebControls.ListView> control works.) For more information, see the <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A?displayProperty=fullName> property.  
  
<a name="Accessibility"></a>   
## Accessibility  
 For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).  
  
<a name="DeclarativeSyntax"></a>   
## Declarative Syntax  
  
```  
<asp:CreateUserWizard  
    AccessKey="string"  
    ActiveStepIndex="integer"  
    Answer="string"  
    AnswerLabelText="string"  
    AnswerRequiredErrorMessage="string"  
    AutoGeneratePassword="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CompleteSuccessText="string"  
    ConfirmPasswordCompareErrorMessage="string"  
    ConfirmPasswordLabelText="string"  
    ConfirmPasswordRequiredErrorMessage="string"  
    ContinueButtonImageUrl="uri"  
    ContinueButtonText="string"  
    ContinueButtonType="Button|Image|Link"  
    ContinueDestinationPageUrl="uri"  
    CreateUserButtonImageUrl="uri"  
    CreateUserButtonText="string"  
    CreateUserButtonType="Button|Image|Link"  
    CssClass="string"  
    DisableCreatedUser="True|False"  
    DisplayCancelButton="True|False"  
    DisplaySideBar="True|False"  
    DuplicateEmailErrorMessage="string"  
    DuplicateUserNameErrorMessage="string"  
    EditProfileIconUrl="uri"  
    EditProfileText="string"  
    EditProfileUrl="uri"  
    Email="string"  
    EmailLabelText="string"  
    EmailRegularExpression="string"  
    EmailRegularExpressionErrorMessage="string"  
    EmailRequiredErrorMessage="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FinishCompleteButtonImageUrl="uri"  
    FinishCompleteButtonText="string"  
    FinishCompleteButtonType="Button|Image|Link"  
    FinishDestinationPageUrl="uri"  
    FinishPreviousButtonImageUrl="uri"  
    FinishPreviousButtonText="string"  
    FinishPreviousButtonType="Button|Image|Link"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    HeaderText="string"  
    Height="size"  
    HelpPageIconUrl="uri"  
    HelpPageText="string"  
    HelpPageUrl="uri"  
    ID="string"  
    InstructionText="string"  
    InvalidAnswerErrorMessage="string"  
    InvalidEmailErrorMessage="string"  
    InvalidPasswordErrorMessage="string"  
    InvalidQuestionErrorMessage="string"  
    LoginCreatedUser="True|False"  
    MailDefinition-BodyFileName="uri"  
    MailDefinition-CC="string"  
    MailDefinition-From="string"  
    MailDefinition-IsBodyHtml="True|False"  
    MailDefinition-Priority="Normal|Low|High"  
    MailDefinition-Subject="string"  
    MembershipProvider="string"  
    OnActiveStepChanged="ActiveStepChanged event handler"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnContinueButtonClick="ContinueButtonClick event handler"  
    OnCreatedUser="CreatedUser event handler"  
    OnCreateUserError="CreateUserError event handler"  
    OnCreatingUser="CreatingUser event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnFinishButtonClick="FinishButtonClick event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnNextButtonClick="NextButtonClick event handler"  
    OnPreRender="PreRender event handler"  
    OnPreviousButtonClick="PreviousButtonClick event handler"  
    OnSendingMail="SendingMail event handler"  
    OnSendMailError="SendMailError event handler"  
    OnSideBarButtonClick="SideBarButtonClick event handler"  
    OnUnload="Unload event handler"  
    PasswordHintText="string"  
    PasswordLabelText="string"  
    PasswordRegularExpression="string"  
    PasswordRegularExpressionErrorMessage="string"  
    PasswordRequiredErrorMessage="string"  
    Question="string"  
    QuestionLabelText="string"  
    QuestionRequiredErrorMessage="string"  
    RequireEmail="True|False"  
    runat="server"  
    SkinID="string"  
    SkipLinkText="string"  
    StartNextButtonImageUrl="uri"  
    StartNextButtonText="string"  
    StartNextButtonType="Button|Image|Link"  
    StepNextButtonImageUrl="uri"  
    StepNextButtonText="string"  
    StepNextButtonType="Button|Image|Link"  
    StepPreviousButtonImageUrl="uri"  
    StepPreviousButtonText="string"  
    StepPreviousButtonType="Button|Image|Link"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UnknownErrorMessage="string"  
    UserName="string"  
    UserNameLabelText="string"  
    UserNameRequiredErrorMessage="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle/>  
        <CompleteSuccessTextStyle/>  
        <ContinueButtonStyle/>  
        <CreateUserButtonStyle/>  
        <ErrorMessageStyle/>  
        <FinishCompleteButtonStyle/>  
        <FinishNavigationTemplate>  
            <!-- child controls -->  
        </FinishNavigationTemplate>  
        <FinishPreviousButtonStyle/>  
        <HeaderStyle/>  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <HyperLinkStyle/>  
        <InstructionTextStyle/>  
        <LabelStyle/>  
        <MailDefinition  
            BodyFileName="uri"  
            CC="string"  
            From="string"  
            IsBodyHtml="True|False"  
            Priority="Normal|Low|High"  
            Subject="string"  
>  
                <EmbeddedObjects>  
                        <asp:EmbeddedMailObject  
                            Name="string"  
                            Path="uri"  
                        />  
                </EmbeddedObjects>  
        </MailDefinition>  
        <NavigationButtonStyle/>  
        <NavigationStyle/>  
        <PasswordHintStyle/>  
        <SideBarButtonStyle/>  
        <SideBarStyle/>  
        <SideBarTemplate>  
            <!-- child controls -->  
        </SideBarTemplate>  
        <StartNavigationTemplate>  
            <!-- child controls -->  
        </StartNavigationTemplate>  
        <StartNextButtonStyle/>  
        <StepNavigationTemplate>  
            <!-- child controls -->  
        </StepNavigationTemplate>  
        <StepNextButtonStyle/>  
        <StepPreviousButtonStyle/>  
        <StepStyle/>  
        <TextBoxStyle/>  
        <TitleTextStyle/>  
        <ValidatorTextStyle/>  
        <WizardSteps>  
                <asp:TemplatedWizardStep  
                    AllowReturn="True|False"  
                    ContentTemplateContainer="string"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
                </asp:TemplatedWizardStep>  
                <asp:WizardStep  
                    AllowReturn="True|False"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
                />  
        </WizardSteps>  
</asp:CreateUserWizard>  
```  
  
   
  
## Examples  
 The first code example shows how to use the CreateUserWizard control in its basic form. This page will create a new Web site user account with the site's default <xref:System.Web.Security.MembershipProvider> object.  
  
 [!code-vb[CreateUserWizardBasic#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_93_1.aspx)]
 [!code-cs[CreateUserWizardBasic#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_93_1.aspx)]  
  
 The second code example shows how to use the CreateUserWizard control with the default templates.  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-vb[CreateUserWizardFullTemplate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_93_2.aspx)]
 [!code-cs[CreateUserWizardFullTemplate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_93_2.aspx)]  
  
 The third code example adds an additional step to the CreateUserWizard control and uses the <xref:System.Web.UI.WebControls.CreateUserWizard.CreatedUser> event to store the user's first and last name in personalization properties. The code example requires the following entries in the Web.config file.  
  
 `<configuration>`  
  
 `<system.web>`  
  
 `<profile>`  
  
 `<properties>`  
  
 `<add name="userName" />`  
  
 `</properties>`  
  
 `</profile>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  
  
 [!code-cs[CreateUserWizardCreatedUser#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_93_3.aspx)]
 [!code-vb[CreateUserWizardCreatedUser#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_93_3.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CreateUserWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ActiveStepIndex">
      <MemberSignature Language="C#" Value="public override int ActiveStepIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveStepIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the step that is currently displayed to the user.</summary>
        <value>The index of the step that is currently displayed to the user.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ActiveStepIndex property provides the zero-based index of the step that is currently displayed in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. You can programmatically set the ActiveStepIndex property to dynamically display a step to the user.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Answer">
      <MemberSignature Language="C#" Value="public virtual string Answer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Answer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the end user's answer to the password recovery confirmation question.</summary>
        <value>The end user's answer to the password recovery confirmation question. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property will determine whether the question and answer text boxes are displayed at run time.  
  
 If an answer is required by the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property, then the answer text box will appear on the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Each text box displayed on the <xref:System.Web.UI.WebControls.CreateUserWizard> control has a <xref:System.Web.UI.WebControls.RequiredFieldValidator> object associated with it.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example modifies the e-mail message in the <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> event to include the user's password recovery confirmation answer in the message that is sent to new users.  
  
 [!code-cs[CreateUserWizardOnSendingMail#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1113_1.cs)]
 [!code-vb[CreateUserWizardOnSendingMail#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1113_1.vb)]  
  
 The following code example demonstrates a Web page that uses the `CustomCreateUserWizard`.  
  
 [!code-cs[CreateUserWizardOnSendingMail#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1113_2.aspx)]
 [!code-vb[CreateUserWizardOnSendingMail#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1113_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AnswerLabelText">
      <MemberSignature Language="C#" Value="public virtual string AnswerLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnswerLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the label that identifies the password confirmation answer text box.</summary>
        <value>The label text that identifies the password confirmation answer text box. The default value is "Security Answer:". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AnswerRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string AnswerRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnswerRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message shown when the user does not enter an answer to the password confirmation question.</summary>
        <value>The error message shown when the user does not enter an answer to the password confirmation question. The default value is "Security answer is required." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AutoGeneratePassword">
      <MemberSignature Language="C#" Value="public virtual bool AutoGeneratePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGeneratePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether or not to automatically generate a password for the new user account.</summary>
        <value>
          <see langword="true" /> to automatically generate a password for the new user account; otherwise, <see langword="false" />. The default value is <see langword="false" />.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <see cref="T:System.Web.UI.ThemeableAttribute" /> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AutoGeneratePassword property makes it possible to create user accounts without entering a password for them. For example, this functionality is useful when an administrator creates a new user's account and then gives a password to the user.  
  
> [!IMPORTANT]
>  You cannot create users using the <xref:System.Web.UI.WebControls.CreateUserWizard> if AutoGeneratePassword is set to `true` and the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application's Web.config. An error message indicating an invalid password will result.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompleteStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.CompleteWizardStep CompleteStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.CompleteWizardStep CompleteStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CompleteWizardStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the final user account creation step.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.CompleteWizardStep" /> object that represents the final user account creation step.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CompleteStep property defines the final step for creating a user account. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.CompleteWizardStep> object that CompleteStep returns.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompleteSuccessText">
      <MemberSignature Language="C#" Value="public virtual string CompleteSuccessText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompleteSuccessText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text displayed when a Web site user account is created successfully.</summary>
        <value>The text displayed when a Web site user account is created successfully. The default is "Your account has been successfully created." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the CompleteSuccessText property to change the message that is displayed when a user account is successfully created.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example uses the <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser%2A> method to change the CompleteSuccessText property to include the user name in the displayed text.  
  
 [!code-cs[CreateUserWizardCompleteSuccessText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1056_1.aspx)]
 [!code-vb[CreateUserWizardCompleteSuccessText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1056_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompleteSuccessTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CompleteSuccessTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CompleteSuccessTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of the text displayed when a Web site user account is created successfully.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that contains properties that define the appearance of the text displayed when a Web site user account is created successfully.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CompleteSuccessTextStyle defines the appearance of the text displayed when a Web site user account is created successfully in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object that it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `CompleteSuccessTextStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `CompleteSuccessTextStyle.ForeColor`).  
  
 The CompleteSuccessTextStyle property defines the appearance of the text displayed when a Web site user account is created successfully, after the user has clicked the **Continue** button on the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> step.  
  
 The style settings for the CompleteSuccessTextStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the CompleteSuccessTextStyle property override the corresponding settings in properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by CompleteSuccessTextStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the CompleteSuccessTextStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPassword">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the second password entered by the user.</summary>
        <value>The second password entered by the user. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ConfirmPassword property contains the second password (the confirmation password) entered by the user. By default, a <xref:System.Web.UI.WebControls.CompareValidator> object is provided for the <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A> and ConfirmPassword text box values. Each text box displayed on the <xref:System.Web.UI.WebControls.CreateUserWizard> control also has a <xref:System.Web.UI.WebControls.RequiredFieldValidator> associated with it.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordCompareErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordCompareErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordCompareErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message shown when the user enters two different passwords in the password and confirm password text boxes.</summary>
        <value>The error message shown when the user enters two different passwords in the password and confirm password text boxes. The default value is "The Password and Confirmation Password must match." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets text of the label for the second password text box.</summary>
        <value>The label text that identifies the confirm password text box. The default value is "Confirm Password:". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message displayed when the user leaves the confirm password text box empty.</summary>
        <value>The error message displayed when the user leaves the confirm password text box empty. The default value is "Confirm Password is required." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler ContinueButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContinueButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user clicks the **Continue** button in the final user account creation step.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContinueButtonClick event is raised when the **Continue** button on the <xref:System.Web.UI.WebControls.CreateUserWizard> control is clicked. Use the ContinueButtonClick event to provide additional processing when the **Continue** button is clicked.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string ContinueButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ContinueButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the &lt;xref:System.Web.UI.WebControls.Button.CommandName%2A&gt; value of the **Continue** button on the final step for creating a user account. The ContinueButtonCommandName field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContinueButtonCommandName field represents the <xref:System.Web.UI.WebControls.Button.CommandName%2A> value of the **Continue** button on the final step for creating a user account.  
  
 To assign continue functionality to any <xref:System.Web.UI.WebControls.Button> control contained in the <xref:System.Web.UI.WebControls.CreateUserWizard> control, set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property of the button to the string that is contained in the ContinueButtonCommandName field.  
  
 The **Continue** button appears on the template for the final step for creating a user account, which is represented by the <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> property. Clicking the **Continue** button redirects the user to the URL that is stored in the <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl%2A> property. To add custom functionality to the **Continue** button, create an event handler for the <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick> event.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image used for the **Continue** button on the final user account creation step.</summary>
        <value>The URL of an image used for the **Continue** button on the final user account creation step. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType>, use the ContinueButtonImageUrl property to specify the image to display for the **Continue** button.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ContinueButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ContinueButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of the **Continue** button.</summary>
        <value>A reference to a <see cref="T:System.Web.UI.WebControls.Style" /> that contains the properties that define the appearance of the **Continue** button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A?displayProperty=fullName> property determines the appearance of the **Continue** button in the <xref:System.Web.UI.WebControls.CreateUserWizard> control, but you can override these settings using the  ContinueButtonStyle property. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.Style> object it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.Style> class (for example, `ContinueButtonStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `ContinueButtonStyle.ForeColor`).  
  
 Common settings include custom background color, text color, and font properties.  
  
 The style settings for the ContinueButtonStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the ContinueButtonStyle property override the corresponding settings in the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by ContinueButtonStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the ContinueButtonStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonText">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text caption displayed on the **Continue** button.</summary>
        <value>The text caption displayed on the **Continue** button. The default value is "Continue". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContinueButtonText property contains the text displayed for the <xref:System.Web.UI.WebControls.CreateUserWizard> control's **Continue** button. Depending on the value of the <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType%2A> property, the ContinueButtonText property can appear as text on a button, as text displayed as an alternative to an image, or as the text of a link. The following table lists <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType%2A> property values and their respective effects on the **Continue** button's text caption.  
  
 <xref:System.Web.UI.WebControls.ButtonType>  
 Text appears on the button.  
  
 <xref:System.Web.UI.WebControls.ButtonType>  
 Text appears as alternative text for the image.  
  
 <xref:System.Web.UI.WebControls.ButtonType>  
 Text appears as a link.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ContinueButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ContinueButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of button rendered as the **Continue** button.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> enumeration values. The default value is <see cref="T:System.Web.UI.WebControls.ButtonType" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified button type is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContinueDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the page that the user will see after clicking the **Continue** button on the success page.</summary>
        <value>The URL of the destination page. The default is &lt;xref:System.String&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContinueDestinationPageUrl property contains the URL of the Web page that the user will see after successfully completing registration on your site. By setting the ContinueDestinationPageUrl property, you can control the first page that newly registered users see.  
  
 When the ContinueDestinationPageUrl property is <xref:System.String> and the user clicks the **Continue** button, the page is refreshed and any values on the form are cleared.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example uses the ContinueDestinationPageUrl property to return the user to the page that the user was viewing before reaching the registration page.  
  
 [!code-vb[CreateUserWizardContinueDestinationPageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1187_1.aspx)]
 [!code-cs[CreateUserWizardContinueDestinationPageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1187_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the ASP.NET page framework to notify this control to create any child controls that it contains in preparation for posting back or rendering.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreatedUser">
      <MemberSignature Language="C#" Value="public event EventHandler CreatedUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CreatedUser" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after the membership provider has created the new Web site user account.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreatedUser event is raised after the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property creates the new Web site user account. If the <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> property is `true`, the user is logged on to the Web site after the CreatedUser event.  
  
 Use the CreatedUser event to set Web site values, such as personalization values, before the user is logged on to the site for the first time.  
  
 For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example uses the CreatedUser event to store the user's first and last name in personalization properties. The code example requires the following entries in the Web.config file.  
  
 `<configuration>`  
  
 `<system.web>`  
  
 `<profile>`  
  
 `<properties>`  
  
 `<add name="lastName" />`  
  
 `<add name="firstName" />`  
  
 `<add name="userName" />`  
  
 `</properties>`  
  
 `</profile>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 [!code-cs[CreateUserWizardCreatedUser#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_4_1.aspx)]
 [!code-vb[CreateUserWizardCreatedUser#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_4_1.aspx)]  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image displayed for the **Create User** button.</summary>
        <value>The URL of the image displayed for the **Create User** button. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType%2A> property is set to <xref:System.Web.UI.WebControls.ButtonType>, use the CreateUserButtonImageUrl property to specify the image to display for the **Create User** button.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CreateUserButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CreateUserButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of the **Create User** button.</summary>
        <value>A reference to a <see cref="T:System.Web.UI.WebControls.Style" /> that contains the properties that define the appearance of the **Create User** button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateUserButtonStyle property defines the appearance of the **Create User** button in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.Style> object it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.Style> class (for example, `CreateUserButtonStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `CreateUserButtonStyle.ForeColor`).  
  
 Common settings include custom background color, text color, and font properties.  
  
 The style settings for the CreateUserButtonStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the CreateUserButtonStyle property override the corresponding settings in the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by CreateUserButtonStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the CreateUserButtonStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text caption displayed on the **Create User** button.</summary>
        <value>The text caption displayed on the **Create User** button for the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control. The default value is "Submit". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateUserButtonText property contains the text displayed for the <xref:System.Web.UI.WebControls.CreateUserWizard> control's **Create User** button. Depending on the value of the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType%2A> property, the CreateUserButtonText property can appear as text on a button, as text displayed as an alternative to an image, or as the text of a link. The following table lists <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType%2A> property values and their respective effects on the **Create User** button's text caption.  
  
 <xref:System.Web.UI.WebControls.ButtonType>  
 Text appears on the button.  
  
 <xref:System.Web.UI.WebControls.ButtonType>  
 Text appears as alternative text for the image.  
  
 <xref:System.Web.UI.WebControls.ButtonType>  
 Text appears as a link.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified button type is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CreateUserButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CreateUserButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of button rendered as the **Create User** button.</summary>
        <value>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> enumeration values. The default value is <see cref="T:System.Web.UI.WebControls.ButtonType" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified button type is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateUserError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CreateUserErrorEventHandler CreateUserError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CreateUserErrorEventHandler CreateUserError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreateUserErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the membership provider cannot create the specified user account.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateUserError event is raised on the server when the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property fails to create the specified user account.  
  
 The error handler is passed a <xref:System.Web.Security.MembershipCreateStatus> object that contains the details of the failure from the membership provider. For a list of the possible error conditions, see <xref:System.Web.Security.MembershipCreateStatus>.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateUserStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.CreateUserWizardStep CreateUserStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.CreateUserWizardStep CreateUserStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreateUserWizardStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the template for the user account creation step.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> value that represents the user account creation step.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateUserStep property defines the account creation step of a <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.CreateUserWizardStep> object that CreateUserStep returns.  
  
 The following table lists the required and optional controls that are supported when using templated content for the CreateUserStep.  
  
|ID or command name|Control type|Required/optional|  
|------------------------|------------------|------------------------|  
|`UserName`|Any control that implements <xref:System.Web.UI.IEditableTextControl>, including <xref:System.Web.UI.WebControls.TextBox>, or a custom or third-party control.|Required|  
|`Password`|Any control that implements <xref:System.Web.UI.IEditableTextControl>, including <xref:System.Web.UI.WebControls.TextBox>, or a custom or third-party control.|Required if <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> is set to `false`.|  
|`Email`|Any control that implements <xref:System.Web.UI.IEditableTextControl>, including <xref:System.Web.UI.WebControls.TextBox>, or a custom or third-party control.|Required if <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> is `true.`|  
|`ConfirmPassword`|Any control that implements <xref:System.Web.UI.IEditableTextControl>, including <xref:System.Web.UI.WebControls.TextBox>, or a custom or third-party control.|No requirements|  
|`Question`|Any control that implements <xref:System.Web.UI.IEditableTextControl>, including <xref:System.Web.UI.WebControls.TextBox>, or a custom or third-party control.|Optional unless required by membership.|  
|`Answer`|Any control that implements <xref:System.Web.UI.IEditableTextControl>, including <xref:System.Web.UI.WebControls.TextBox>, or a custom or third-party control.|Optional unless required by membership.|  
|`ErrorMessage`|Any control that implements <xref:System.Web.UI.ITextControl>.|Optional|  
|`CreateUser`|Any control that causes event bubbling|Optional|  
|`Cancel`|Any|Optional|  
  
 If the <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> property is set to `true` and you are using templated content, the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> control is required; the <xref:System.Web.UI.WebControls.CreateUserWizard> control throws an exception if the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> control is not found or is of the wrong type. If <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> is set to `false`, no exception is thrown if the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> control is not found. If the control is of the wrong type, it is ignored.  
  
 Similarly, if a membership provider requires a question and answer (determined by the <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionAndAnswerRequired%2A> property), the <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> controls are required and the <xref:System.Web.UI.WebControls.CreateUserWizard> throws an exception if they are not found or are of the wrong type. If they are not required by the membership provider, no exception is thrown if they are not found, and if they are of the wrong type they are ignored.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreatingUser">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler CreatingUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler CreatingUser" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before the membership provider is called to create the new Web site user account.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreatingUser event is raised prior to calling the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method on the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property.  
  
 Use the CreatingUser event to establish defaults or modify the information entered by the user before passing the information to the membership provider.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 The following code example uses the CreatingUser event to make the <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> property all lowercase before submitting it to the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property.  
  
 [!code-vb[CreateUserWizardCreatingUser#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_46_1.aspx)]
 [!code-cs[CreateUserWizardCreatingUser#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_46_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisableCreatedUser">
      <MemberSignature Language="C#" Value="public virtual bool DisableCreatedUser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCreatedUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the new user should be allowed to log on to the Web site.</summary>
        <value>
          <see langword="true" /> if the new user is allowed to log on to the Web site; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DisableCreatedUser property determines if the newly created user account will be marked as disabled in the membership data store. When user accounts are marked as disabled, the accounts are not allowed to log on to the Web site. For example, if your Web site allows new users to request an account, but requires administrative approval before allowing access, set the DisableCreatedUser property to `true` to disable newly created accounts until an administrator approves the account.  
  
 When DisableCreatedUser is `true`, you should set the <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> property to `false` so that the <xref:System.Web.UI.WebControls.CreateUserWizard> does not attempt to log on the new user.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DisplaySideBar">
      <MemberSignature Language="C#" Value="public override bool DisplaySideBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaySideBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to display the sidebar area of the control.</summary>
        <value>
          <see langword="true" /> if the sidebar area should be displayed for the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DuplicateEmailErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string DuplicateEmailErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DuplicateEmailErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message displayed when the user enters an e-mail address that is already in use in the membership provider.</summary>
        <value>The error message displayed when the user enters an e-mail address that is already in use in the membership provider. The default value is "The e-mail address that you entered is already in use. Please enter a different e-mail address." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DuplicateUserNameErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string DuplicateUserNameErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DuplicateUserNameErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message displayed when the user enters a user name that is already in use in the membership provider.</summary>
        <value>The error message displayed when the user enters a user name that is already in the membership provider. The default value is "Please enter a different user name." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EditProfileIconUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image to display next to the link to the user profile editing page.</summary>
        <value>The URL of an image to display next to the link to the user profile editing page. The default value is an empty string ("").</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EditProfileText">
      <MemberSignature Language="C#" Value="public virtual string EditProfileText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text caption for the link to the user profile editing page.</summary>
        <value>The text caption for the link to the user profile editing page. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EditProfileUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the user profile editing page.</summary>
        <value>The URL of the user profile editing page. The default value is an empty string ("").</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public virtual string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the e-mail address entered by the user.</summary>
        <value>The e-mail address entered by the user. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If an e-mail address is required by the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property, then the e-mail address text box appears on the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Each text box displayed on the <xref:System.Web.UI.WebControls.CreateUserWizard> control has a <xref:System.Web.UI.WebControls.RequiredFieldValidator> object associated with it.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EmailLabelText">
      <MemberSignature Language="C#" Value="public virtual string EmailLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the label for the e-mail text box.</summary>
        <value>The label text that identifies the e-mail text box. The default value is "E-mail:". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EmailRegularExpression">
      <MemberSignature Language="C#" Value="public virtual string EmailRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a regular expression used to validate the provided e-mail address.</summary>
        <value>A string containing the regular expression used to validate an e-mail address. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the EmailRegularExpression property to specify a regular expression that validates the e-mail address entered by the user to confirm that it matches a specific pattern. A common use is to make sure that the user has entered a complete e-mail address, such as **user@contoso.com**. The regular expression is used in addition to any restrictions placed on the e-mail address by the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property. If the membership provider rejects the e-mail address for any reason, the text contained in the <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidEmailErrorMessage%2A> property is displayed.  
  
 The address is only compared to the regular expression if the <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> property is set to `true`.  
  
 If the e-mail address does not pass the regular expression, the text contained in the <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage%2A> property is displayed to the user.  
  
   
  
## Examples  
 The following code example assigns a regular expression to the EmailRegularExpression property to make sure that the user entered their e-mail address in a valid format, such as **username@contoso.com**.  
  
 [!code-vb[CreateUserWizardEmailRegex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_872_1.aspx)]
 [!code-cs[CreateUserWizardEmailRegex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_872_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EmailRegularExpressionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string EmailRegularExpressionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailRegularExpressionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message displayed when the entered e-mail address does not pass the site's criteria for e-mail addresses.</summary>
        <value>The error message displayed when the entered e-mail address does not pass the regular expression defined in the &lt;xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression%2A&gt; property. The default is "Please enter a different e-mail address." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the EmailRegularExpressionErrorMessage property to inform the user that the e-mail address entered did not pass the site's criteria for e-mail addresses.  
  
   
  
## Examples  
 The following code example assigns an error message to the EmailRegularExpressionErrorMessage property to indicate to users that the e-mail address is not in a valid format.  
  
 [!code-vb[CreateUserWizardEmailRegex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1348_1.aspx)]
 [!code-cs[CreateUserWizardEmailRegex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1348_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EmailRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string EmailRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message shown to the user when an e-mail address is not entered in the e-mail text box.</summary>
        <value>The error message shown to the user when an e-mail address is not entered in the e-mail text box. The default value is "E-mail is required." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ErrorMessageStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle ErrorMessageStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ErrorMessageStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of style properties that define the appearance of error messages.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> containing the style properties that define the appearance of error messages on the control. The default is null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ErrorMessageStyle property to change the appearance of error messages that are displayed when the membership provider fails to create a new user account. By default, the ErrorMessageStyle is set to display the following messages in red:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.DuplicateEmailErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.DuplicateUserNameErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidAnswerErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidEmailErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidQuestionErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UnknownErrorMessage%2A>  
  
 The ErrorMessageStyle property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `ErrorMessageStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `ErrorMessageStyle.ForeColor`).  
  
 Common settings include custom background color, text color, and font properties. The style settings for the ErrorMessageStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings that are applied in the ErrorMessageStyle property override the corresponding settings in the properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by ErrorMessageStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the ErrorMessageStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets design-time data for a control.</summary>
        <returns>None</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of an image to display next to the link to the Help page.</summary>
        <value>The URL of an image to display next to the link to the Help page. The default value is an empty string ("").</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text caption for the link to the Help page.</summary>
        <value>The text caption for the link to the Help page. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the Help page.</summary>
        <value>The URL of the Help page. The default value is an empty string ("").</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a collection of properties that define the appearance of hyperlinks.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that contains properties that define the appearance of hyperlinks.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HyperLinkStyle property gets a reference to a <xref:System.Web.UI.WebControls.TableItemStyle> object that you use to change the appearance of hyperlinks in the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The HyperLinkStyle property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `HyperLinkStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `HyperLinkStyle.ForeColor`).  
  
 The style settings for the HyperLinkStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the HyperLinkStyle property override the corresponding settings in the properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by HyperLinkStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the HyperLinkStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets instructions for creating a new user account.</summary>
        <value>The instruction text for creating a new user account. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The InstructionText property contains instructions for users creating a new user account. This text is displayed in the <xref:System.Web.UI.WebControls.CreateUserWizard> control, following the title.  
  
 If the InstructionText property is set to an empty string (""), no instruction text is displayed to the user.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of instruction text.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that contains properties that define the appearance of instruction text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The InstructionTextStyle property defines the appearance of instruction text in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object that it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `InstructionTextStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `InstructionTextStyle.ForeColor`).  
  
 The InstructionTextStyle property defines the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionText%2A> property.  
  
 The style settings for the InstructionTextStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the InstructionTextStyle property override the corresponding settings in properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by InstructionTextStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the InstructionTextStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InvalidAnswerErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidAnswerErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidAnswerErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the message displayed when the password retrieval answer is not valid.</summary>
        <value>The message displayed when the password retrieval answer is not valid. The default is "Please enter a different security answer." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.Membership> class membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property can support a question and answer for retrieving or resetting the user's password. The InvalidAnswerErrorMessage property is displayed when the answer entered by the user does not meet the requirements for the answer set by the membership provider. The actual requirements for the answer are determined by the membership provider, and might be different for different providers.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example changes the InvalidAnswerErrorMessage property for a membership provider that requires the answer to have a minimum length. The actual membership provider is not shown.  
  
 [!code-cs[CreateUserWizardInvalidAnswerErrorMessage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_327_1.aspx)]
 [!code-vb[CreateUserWizardInvalidAnswerErrorMessage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_327_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InvalidEmailErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidEmailErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidEmailErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the message displayed when the entered e-mail address is not valid.</summary>
        <value>The message displayed when the e-mail address entered is not valid. The default is "Please enter a valid e-mail address." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.Membership> class membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property can restrict the e-mail addresses that it will accept. The InvalidEmailErrorMessage property is displayed when the e-mail address entered by the user does not meet the requirements for the e-mail address set by the membership provider. The actual requirements for the e-mail address are determined by the membership provider, and might be different for different providers.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InvalidPasswordErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidPasswordErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidPasswordErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the message displayed when the password entered is not valid.</summary>
        <value>The message displayed when the password entered is not valid. The default is "Please enter a valid password." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.Membership> class membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property can restrict the passwords that it will accept. The InvalidPasswordErrorMessage property is displayed when the password entered by the user does not meet the requirements for a password set by the membership provider. The actual requirements for the password are determined by the membership provider, and might be different for different providers.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example changes the InvalidPasswordErrorMessage property for a membership provider that requires a password containing both lowercase and uppercase characters. The actual membership provider is not shown.  
  
 [!code-vb[CreateUserWizardInvalidPasswordErrorMessage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_31_1.aspx)]
 [!code-cs[CreateUserWizardInvalidPasswordErrorMessage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_31_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="InvalidQuestionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidQuestionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidQuestionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the message displayed when the password retrieval question entered is not valid.</summary>
        <value>The message displayed when the password retrieval question is not valid. The default is "Please enter a valid answer." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.Security.Membership> class membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property can restrict the password retrieval questions that it will accept. The InvalidQuestionErrorMessage property is displayed when the question entered by the user does not meet the requirements for the question set by the membership provider. The actual requirements for the question are determined by the membership provider, and might be different for different providers.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example changes the InvalidQuestionErrorMessage property for a membership provider that restricts questions to the alphanumeric characters a-z, A-Z, and 0-9. The actual membership provider is not shown.  
  
 [!code-vb[CreateUserWizardInvalidQuestionErrorMessage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1233_1.aspx)]
 [!code-cs[CreateUserWizardInvalidQuestionErrorMessage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1233_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of labels.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that contains properties that define the appearance of labels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LabelStyle property defines the appearance of labels in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object that it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `LabelStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `LabelStyle.ForeColor`).  
  
 The LabelStyle property defines the appearance of the following properties:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.EmailLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UserNameLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.AnswerLabelText%2A>  
  
 The style settings for the LabelStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the LabelStyle property override the corresponding settings in properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by LabelStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the LabelStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An object that represents the control state to restore.</param>
        <summary>Restores view-state information from a previous page request that was saved by the SaveViewState method.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> is not a valid &lt;xref:System.Web.UI.Control.ViewState%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoginCreatedUser">
      <MemberSignature Language="C#" Value="public virtual bool LoginCreatedUser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoginCreatedUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to log in the new user after creating the user account.</summary>
        <value>
          <see langword="true" /> if the new user should be logged in after creating the user account; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoginCreatedUser property can be set to `false` if you want to create a user account but not authenticate the account after it is created. This might be useful if you are an administrator creating user accounts, for example, or if there is a waiting period before users can access the Web site.  
  
> [!NOTE]
>  When the LoginCreatedUser property is set to `true`, the user will be created and logged in at the end of the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> step. If you want the user to be logged in after all the steps have been completed, you can set the <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> property to `false` until all of the steps of the <xref:System.Web.UI.WebControls.CreateUserWizard> control are completed.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MailDefinition">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MailDefinition MailDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MailDefinition MailDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the characteristics of the e-mail message sent to new users.</summary>
        <value>A reference to a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object that defines the e-mail message sent to a new user.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MailDefinition property returns a reference to a group of properties that you use to define the format and content of the e-mail message that is sent to new users. Common settings include the subject line and the sender's return address. For a complete list of properties, see the <xref:System.Web.UI.WebControls.MailDefinition> class.  
  
 The MailDefinition property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MailDefinition> object it returns. You can set the MailDefinition properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.MailDefinition> class (for example, `MailDefinition-Subject`). You can also set the properties programmatically in the form `Property.SubProperty` (for example, `MailDefinition.Subject`).  
  
 An e-mail message is sent to new users only if <xref:System.Web.UI.WebControls.MailDefinition> is not `null` and if <xref:System.Web.Mail.MailMessage.Body%2A> is not empty or `null`. In that case, the <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> event is raised and an attempt is made to send the e-mail message. The <xref:System.Web.UI.WebControls.MailDefinition.From%2A> property must be set to an e-mail address. Otherwise, an <xref:System.Web.HttpException> exception is thrown.  
  
 When the e-mail message is created from the <xref:System.Web.UI.WebControls.MailDefinition> object, it will make the substitutions listed in the following table.  
  
|Substitution text|Replaced with|  
|-----------------------|-------------------|  
|`<%UserName%>`|The user name of the newly created user account.|  
|`<%Password%>`|The password for the newly created user account.|  
  
 If the <xref:System.Web.UI.WebControls.MailDefinition.IsBodyHtml%2A> property of the <xref:System.Web.UI.WebControls.MailDefinition> object is `true`, the contents of the mail message will be HTML encoded to guard against cross-site scripting security vulnerabilities for the message recipient.  
  
 You can use the <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail%2A> method to modify the <xref:System.Web.Mail.MailMessage> created by the <xref:System.Web.UI.WebControls.MailDefinition> object.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
> [!NOTE]
>  It is not possible to guarantee that a user will receive or view an e-mail message. To verify that a user has received a notification by e-mail, consider providing a confirmation link in the e-mail message that enables the user to confirm that the notification was received.  
  
   
  
## Examples  
 The following code example sets properties of the MailDefinition property by using both declarative and programmatic syntax. This code example requires a text file named MailFile.txt that contains the following text.  
  
```  
Your account was set up on our Web site with the following:  
  
    Username:   <%UserName%>  
  
To reset your password, you must answer the following question:  
  
    Password Question: <%PasswordQuestion%>    
    Password Answer:   <%PasswordAnswer%>    
  
Thank you for creating an account with our Web site.  
  
```  
  
 [!code-cs[CreateUserWizardMailDefinition#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_347_1.aspx)]
 [!code-vb[CreateUserWizardMailDefinition#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_347_1.aspx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">&lt;xref:System.Web.UI.WebControls.MailDefinition.From%2A&gt; is not set to an e-mail address.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the membership provider called to create user accounts.</summary>
        <value>The &lt;xref:System.Web.Security.MembershipProvider&gt; used to create user accounts. The default is &lt;xref:System.String.Empty&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MembershipProvider property contains the name of the defined <xref:System.Web.Security.MembershipProvider> class membership provider that is used to store the user information. You can store membership information for users in different data stores by changing the value of the MembershipProvider property. When the MembershipProvider property is set to <xref:System.String.Empty>, the default membership provider defined in the Web.config file is used.  
  
 Membership providers are defined in the Web.config file in the `<membership>` section.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example requires membership providers defined in the `<membership>` section of the Web.config file. The following is a Web.config file that defines membership providers for each division in a small company. For this example, each membership provider points to a SQL Server database.  
  
 `<configuration>`  
  
 `<system.web>`  
  
 `<membership>`  
  
 `<providers>`  
  
 `<add name="accountingProvider"`  
  
 `type="System.Web.Security.SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `<add name="manufacturingProvider"`  
  
 `type="System.Web.Security.` `SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `<add name="marketingProvider"`  
  
 `type="System.Web.Security.` `SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `<add name="salesProvider"`  
  
 `type="System.Web.Security.` `SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `</providers>`  
  
 `</membership>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 The following code example inserts a step before the user account is created to determine which division of an organization the user belongs to. It then sets the MembershipProvider provider to the appropriate provider for that division.  
  
 [!code-cs[CreateUserWizardMembershipProvider#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_339_1.aspx)]
 [!code-vb[CreateUserWizardMembershipProvider#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_339_1.aspx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The specified membership provider is not defined in the Web.config file.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">None</param>
        <param name="e">None</param>
        <summary>Determines whether the event for the server control is passed up the page's UI server control hierarchy.</summary>
        <returns>A Boolean value.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnContinueButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContinueButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinueButtonClick(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick" /> event when the user clicks the **Continue** button on the final user account creation step.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick> event is raised when the user clicks the **Continue** button on the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnContinueButtonClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCreatedUser">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatedUser (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatedUser(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.CreateUserWizard.CreatedUser" /> event after the membership provider creates the user account.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnCreatedUser method is called after the Web site user account is created by the membership provider. If the <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> property is `true`, the user is logged in after the OnCreatedUser method is called.  
  
 Use the OnCreatedUser method to set Web site values, such as personalization properties, before the user is logged in for the first time.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnCreatedUser method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCreateUserError">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateUserError (System.Web.UI.WebControls.CreateUserErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateUserError(class System.Web.UI.WebControls.CreateUserErrorEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CreateUserErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.CreateUserErrorEventArgs" /> with the data for the event.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.CreateUserWizard.CreateUserError" /> event when there is a problem creating the specified user account.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnCreateUserError method is called when the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property returns an error message from creating the specified user account. The <xref:System.Web.UI.WebControls.CreateUserErrorEventArgs.CreateUserError%2A> property of the <xref:System.Web.UI.WebControls.CreateUserErrorEventArgs> object passed as the `e` parameter contains a <xref:System.Web.Security.MembershipCreateStatus> object that contains the details of the error.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnCreateUserError method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnCreatingUser">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatingUser (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatingUser(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" /> containing the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.CreateUserWizard.CreatingUser" /> event prior to calling the membership provider to create the new user account.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the OnCreatingUser method to do any processing required before sending the new user information to the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method of the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property. For example, you might set the user name field to all lowercase letters, or compare the e-mail address to a list of restricted addresses before allowing creation of the user account.  
  
 If you need to cancel the request to create the new user account, set the <xref:System.Web.UI.WebControls.LoginCancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.LoginCancelEventArgs> object passed as the `e` parameter to `true`.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnCreatingUser method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example defines a custom <xref:System.Web.UI.WebControls.CreateUserWizard> control that uses the OnCreatingUser method to make the <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> property all lowercase.  
  
 [!code-vb[CreateUserWizardOnCreatingUser#2](~/add/codesnippet/visualbasic/349e60ff-bb1c-4723-8908-_1.vb)]
 [!code-cs[CreateUserWizardOnCreatingUser#2](~/add/codesnippet/csharp/349e60ff-bb1c-4723-8908-_1.cs)]  
  
 The following code example demonstrates a Web page that uses the `CustomCreateUserWizard`.  
  
 [!code-vb[CreateUserWizardOnCreatingUser#1](~/add/codesnippet/visualbasic/349e60ff-bb1c-4723-8908-_2.aspx)]
 [!code-cs[CreateUserWizardOnCreatingUser#1](~/add/codesnippet/csharp/349e60ff-bb1c-4723-8908-_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnNextButtonClick">
      <MemberSignature Language="C#" Value="protected override void OnNextButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNextButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> containing the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" /> event.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">The membership provider for the page cannot be found. For more information, see &lt;xref:System.Web.Security.Membership.Providers%2A?displayProperty=fullName&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSendingMail">
      <MemberSignature Language="C#" Value="protected virtual void OnSendingMail (System.Web.UI.WebControls.MailMessageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendingMail(class System.Web.UI.WebControls.MailMessageEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MailMessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.MailMessageEventArgs" /> containing the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" /> event before an e-mail message is sent to a new user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the OnSendingMail method to modify the e-mail message sent to new users. The <xref:System.Web.UI.WebControls.MailMessageEventArgs.Message%2A> property of the <xref:System.Web.UI.WebControls.MailMessageEventArgs> object passed as the `e` parameter contains the <xref:System.Web.Mail.MailMessage> object that will be sent to the new user. Modify the properties of the <xref:System.Web.Mail.MailMessage> object to modify the e-mail message.  
  
 E-mail messages are only created when the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property of the <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> object specified by the <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> property points to a valid file name.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnSendingMail method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example defines a custom <xref:System.Web.UI.WebControls.CreateUserWizard> control that uses the OnSendingMail method to modify the text of the e-mail sent to new users. This example requires a text file named MailFile.txt that contains the following text.  
  
```c#  
Your account was set up on our Web site with the following:  
  
    Username:   <%UserName%>  
  
To reset your password, you must answer the following question:  
  
    Password Question: <%PasswordQuestion%>    
    Password Answer:   <%PasswordAnswer%>    
  
Thank you for creating an account with our Web site.  
```  
  
 [!code-cs[CreateUserWizardOnSendingMail#1](~/add/codesnippet/csharp/a8291697-6bbf-47b7-a06e-_1.aspx)]
 [!code-vb[CreateUserWizardOnSendingMail#1](~/add/codesnippet/visualbasic/a8291697-6bbf-47b7-a06e-_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnSendMailError">
      <MemberSignature Language="C#" Value="protected virtual void OnSendMailError (System.Web.UI.WebControls.SendMailErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendMailError(class System.Web.UI.WebControls.SendMailErrorEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> containing the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" /> event when e-mail cannot be sent to the new user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnSendMailError method is called when the SMTP mail system raises an exception while attempting to send e-mail to the new user.  
  
 Examine the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object passed as the `e` parameter to determine the actual cause of the exception. The most common problem is a configuration error in the `<smtpMail>` section of the Web.config file.  
  
 You must set the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object passed as the `e` parameter to signal that the exception that caused the OnSendMailError method to be called has been taken care of, otherwise the exception is re-thrown.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  
  
 The OnSendMailError method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example defines a custom <xref:System.Web.UI.WebControls.CreateUserWizard> object that logs e-mail errors to a site-specific logging function.  
  
 [!code-cs[CreateUserWizardOnSendMailError#2](~/add/codesnippet/csharp/0e05d285-2ea4-416c-a29e-_1.cs)]
 [!code-vb[CreateUserWizardOnSendMailError#2](~/add/codesnippet/visualbasic/0e05d285-2ea4-416c-a29e-_1.vb)]  
  
 The following code example demonstrates a Web page that uses the `CustomCreateUserWizard`.  
  
 [!code-cs[CreateUserWizardOnSendMailError#1](~/add/codesnippet/csharp/0e05d285-2ea4-416c-a29e-_2.aspx)]
 [!code-vb[CreateUserWizardOnSendMailError#1](~/add/codesnippet/visualbasic/0e05d285-2ea4-416c-a29e-_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public virtual string Password { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the password entered by the user.</summary>
        <value>The password entered by the user. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Password property contains the password entered by the user. By default, a <xref:System.Web.UI.WebControls.CompareValidator> object is provided for the Password and <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword%2A> text box values. Each text box displayed on the <xref:System.Web.UI.WebControls.CreateUserWizard> control also has a <xref:System.Web.UI.MobileControls.RequiredFieldValidator> object associated with it.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PasswordHintStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PasswordHintStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PasswordHintStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of the text that describes password requirements.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that contains properties that define the appearance of the text that describes password requirements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The PasswordHintStyle property defines the appearance of the text that describes password requirements in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object that it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `PasswordHintStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `PasswordHintStyle.ForeColor`).  
  
 The PasswordHintStyle property defines the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintText%2A> property.  
  
 The style settings for the PasswordHintStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the PasswordHintStyle property override the corresponding settings in properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by PasswordHintStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the PasswordHintStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PasswordHintText">
      <MemberSignature Language="C#" Value="public virtual string PasswordHintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordHintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that describes password requirements.</summary>
        <value>The text that describes password requirements. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the PasswordHintText property to provide guidelines and requirements for the user on how to create a password. For example, you could set the PasswordHintText property to "Your password must be at least six characters long." You can then use the <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A> property to validate that the user entered a password that conforms to the guidelines.  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the label for the password text box.</summary>
        <value>The text of the label for the password text box. The default value is "Password:". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PasswordRegularExpression">
      <MemberSignature Language="C#" Value="public virtual string PasswordRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a regular expression used to validate the provided password.</summary>
        <value>A string containing the regular expression used to validate the provided password. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the PasswordRegularExpression property to define the requirements for passwords used to validate users on your Web site. A common use is to make sure that a user has included symbols other than letters in a password to make it harder for attackers to guess a password. The regular expression is used in addition to any restrictions placed on the password by the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property. If the membership provider rejects the password for any reason, the text contained in the <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage%2A> property is displayed.  
  
 If the password entered does not pass the regular expression, the error message contained in the <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A> property is displayed to the user.  
  
   
  
## Examples  
 The following code example uses the PasswordRegularExpression property to define a regular expression that checks passwords to ensure that they:  
  
-   Are longer than seven characters.  
  
-   Contain at least one digit.  
  
-   Contain at least one special (non-alphanumeric) character.  
  
 If the password entered by the user does not meet these criteria, the text contained in the <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A> property is displayed to the user.  
  
 [!code-vb[CreateUserWizardPasswordRegex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1211_1.aspx)]
 [!code-cs[CreateUserWizardPasswordRegex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1211_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PasswordRegularExpressionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRegularExpressionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRegularExpressionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message shown when the password entered does not conform to the site's password requirements.</summary>
        <value>The error message shown when the password entered does not pass the regular expression defined in the &lt;xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A&gt; property. The default is "Please enter a different password." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the PasswordRegularExpressionErrorMessage property to inform the user that the password entered did not conform to the site's password requirements.  
  
   
  
## Examples  
 The following code example sets the <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRequiredErrorMessage%2A> property to explain to the user that the password entered does not meet the requirements of the regular expression contained in the <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A> property. To pass the regular expression, passwords must:  
  
-   Be longer than six characters.  
  
-   Contain at least one digit.  
  
-   Contain at least one special (non-alphanumeric) character.  
  
 [!code-vb[CreateUserWizardPasswordRegex#1](~/add/codesnippet/visualbasic/9e24a6f0-27d5-442d-85ab-_1.aspx)]
 [!code-cs[CreateUserWizardPasswordRegex#1](~/add/codesnippet/csharp/9e24a6f0-27d5-442d-85ab-_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the error message shown when the user does not enter a password.</summary>
        <value>The error message shown when the user does not enter a password. The default value is "Password is required." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Question">
      <MemberSignature Language="C#" Value="public virtual string Question { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Question" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password recovery confirmation question entered by the user.</summary>
        <value>The password recovery confirmation question entered by the user. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property will determine whether the Question and <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> text boxes are displayed at run time. Each text box displayed on the <xref:System.Web.UI.WebControls.CreateUserWizard> control has a <xref:System.Web.UI.WebControls.RequiredFieldValidator> associated with it.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example modifies the e-mail message in the <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> event to include the user's password recovery confirmation question in the message sent to new users.  
  
 [!code-cs[CreateUserWizardOnSendingMail#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1261_1.aspx)]
 [!code-vb[CreateUserWizardOnSendingMail#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1261_1.aspx)]  
[!code-cs[CreateUserWizardOnSendingMail#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1261_2.cs)]
[!code-vb[CreateUserWizardOnSendingMail#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1261_2.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="QuestionAndAnswerRequired">
      <MemberSignature Language="C#" Value="protected bool QuestionAndAnswerRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QuestionAndAnswerRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user is required to enter a password confirmation question and answer.</summary>
        <value>
          <see langword="true" /> if the user is required to enter a password confirmation question and answer; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The QuestionAndAnswerRequired property returns a value from the membership provider set in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property specifying whether the user is required to enter a password confirmation question and answer.  
  
 If a Membership provider requires a question and answer, the <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> controls are required and the <xref:System.Web.UI.WebControls.CreateUserWizard> throws an exception if they are not found or of the wrong type. If they are not required by the Membership provider, no exception is thrown if they are not found, and if they are of the wrong type they are ignored.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="QuestionLabelText">
      <MemberSignature Language="C#" Value="public virtual string QuestionLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the label for the question text box.</summary>
        <value>The text of the label for the question text box. The default value is "Security Question:". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="QuestionRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string QuestionRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message that is displayed when the user does not enter a password confirmation question.</summary>
        <value>The error message that is displayed when the user does not enter a password confirmation question. The default value is "Security question is required." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RequireEmail">
      <MemberSignature Language="C#" Value="public virtual bool RequireEmail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether an e-mail address is required for the Web site user.</summary>
        <value>
          <see langword="true" /> if an e-mail address is required; otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When the RequireEmail property is `true`, the <xref:System.Web.UI.WebControls.CreateUserWizard> will display a text box and an associated label for the user to enter an e-mail address. If the user does not enter an e-mail address, the <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage%2A> property will display an error message.  
  
 If the RequireEmail property is set to `true` and you are using templated content, the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> control is required and the <xref:System.Web.UI.WebControls.CreateUserWizard> throws an exception if the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> control is not found or is of the wrong type. If RequireEmail is set to `false`, no exception is thrown if the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> is not found. If it is of the wrong type, it is ignored.  
  
> [!NOTE]
>  If the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property requires a unique e-mail address for new users, you must set the RequireEmail property to `true` so that the UI for entering an e-mail address is displayed. Otherwise, the user will see the <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage%2A> but have no way to enter an e-mail address.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves any state that was modified after the &lt;xref:System.Web.UI.WebControls.Style.TrackViewState%2A&gt; method was invoked.</summary>
        <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SendingMail">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MailMessageEventHandler SendingMail" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before the user is sent an e-mail confirmation that an account has been created.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.CreateUserWizard> class will send an e-mail message confirming that a new Web site account has been created when the <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> property defines an e-mail message to send.  
  
 Because the e-mail message only has automatic replacement fields for the user name and password fields, you can use the SendingMail event to modify the e-mail message before it is sent to the new user.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 The following code example uses the SendingMail event to modify the e-mail message that is sent to new users. This example requires a text file named MailFile.txt that contains the following text.  
  
```c#  
Your account was set up on our Web site with the following:  
  
    Username:   <%UserName%>  
  
To reset your password, you must answer the following question:  
  
    Password Question: <%PasswordQuestion%>    
    Password Answer:   <%PasswordAnswer%>    
  
Thank you for creating an account with our Web site.  
```  
  
 [!code-cs[CreateUserWizardMailDefinition#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_81_1.aspx)]
 [!code-vb[CreateUserWizardMailDefinition#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_81_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SendMailError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SendMailErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when there is an SMTP error sending e-mail to the new user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SendMailError event is raised when there is a problem using the SMTP mail provider to send e-mail to the e-mail address provided by the new user. The most common reason to raise this event is when the `<smtpMail>` section of the Web.config file is incorrect.  
  
 The default SendMailError event handler does not catch or handle the SMTP error from the e-mail system. Your SendMailError event handler must set the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object to `true` in order to stop the error from appearing to the Web site user.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 The following code example is a handler for the SendMailError event that calls a site-specific procedure to log the e-mail error. The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  
  
 [!code-vb[CreateUserWizardSendMailError#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_40_1.aspx)]
 [!code-cs[CreateUserWizardSendMailError#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_40_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">An &lt;xref:System.Collections.IDictionary&gt; containing the design-time data for the control.</param>
        <summary>Sets design-time data for a control.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public override string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that is used to render alternate text that notifies screen readers to skip the sidebar area's content.</summary>
        <value>A string that the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> renders as alternate text with an invisible image, as a hint to screen readers. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the SkipLinkText property to specify the alternate text for a hidden-image read by screen readers that will provide the ability to skip the sidebar area's content. The text that you specify provides assistive technology devices with a description of the hidden image that can be used to make the control more accessible.  
  
> [!NOTE]
>  If the <xref:System.Web.UI.WebControls.CreateUserWizard.DisplaySideBar%2A> property is set to `false` (the default), the SkipLinkText property does not create a hidden image with alternate text. The SkipLinkText property works only when the <xref:System.Web.UI.WebControls.CreateUserWizard.DisplaySideBar%2A> property is `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of text box controls.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that contains properties that define the appearance of text box controls.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TextBoxStyle property defines the appearance of text box controls in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.Style> object that it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.Style> class (for example, `TextBoxStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `TextBoxStyle.ForeColor`).  
  
 The TextBoxStyle property defines the appearance of the following text box controls:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> text box field  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A> text box field  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword%2A> text box field  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> text box field  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> text box field  
  
 The style settings for the TextBoxStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the TextBoxStyle property override the corresponding settings in properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by TextBoxStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the TextBoxStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection of properties that define the appearance of titles.</summary>
        <value>A reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> that contains properties that define the appearance of titles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TitleTextStyle property defines the appearance of titles in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object that it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.TableItemStyle> class (for example, `TitleTextStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `TitleTextStyle.ForeColor`).  
  
 The TitleTextStyle property defines the appearance of the title on the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> step and the <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> step.  
  
 The style settings for the TitleTextStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the TitleTextStyle property override the corresponding settings in properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by TitleTextStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the TitleTextStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marks the starting point to begin tracking changes to the control as part of the control viewstate.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UnknownErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UnknownErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnknownErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message displayed when an error returned by the membership provider is not defined.</summary>
        <value>The error message displayed when an error returned by the membership provider is not defined. The default value is "Your account was not created. Please try again." The default text of the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user name entered by the user.</summary>
        <value>The user name entered by the user. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If a user name is required by the membership provider specified in the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> property, then the user name text box will appear on the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Each text box displayed on the <xref:System.Web.UI.WebControls.CreateUserWizard> control has a <xref:System.Web.UI.WebControls.RequiredFieldValidator> object associated with it.  
  
   
  
## Examples  
 The following code example sets the UserName property to all lowercase alphabetical characters in the <xref:System.Web.UI.WebControls.CreateUserWizard.CreatingUser> event.  
  
 [!code-vb[CreateUserWizardLoggingIn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_465_1.aspx)]
 [!code-cs[CreateUserWizardLoggingIn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_465_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the label for the user name text box.</summary>
        <value>The text of the label for the user name text box. The default value is "User Name:". The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message displayed when the user name text box is left blank.</summary>
        <value>The error message displayed when the user name text box is left blank. The default value is "User Name is required." The default text for the control is localized based on the server's current locale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.Style" /> object that allows you to set the appearance of the validation error messages.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> containing the style properties that define the appearance of validation error messages on the control. The default is null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the ValidatorTextStyle property to change the appearance of messages that are displayed for input validation errors. By default, the ValidatorTextStyle is set to display the following messages in red:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.AnswerRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UserNameRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage%2A>  
  
 The ValidatorTextStyle property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.Style> object it returns. You can set these properties declaratively in the form `Property-Subproperty`, where `Subproperty` represents a property of the <xref:System.Web.UI.WebControls.Style> class (for example, `ValidatorTextStyle-ForeColor`). You can set the property programmatically in the form `Property.Subproperty` (for example, `ValidatorTextStyle.ForeColor`).  
  
 Common settings include custom background color, text color, and font properties. The style settings for the ValidatorTextStyle property are merged with the style settings for the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Any settings applied in the ValidatorTextStyle property override the corresponding settings in the properties of the <xref:System.Web.UI.WebControls.CreateUserWizard> control.  
  
 The following <xref:System.Web.UI.WebControls.CreateUserWizard> style properties are overridden by ValidatorTextStyle settings:  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 However, when you use templates to define the appearance of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, the ValidatorTextStyle property has no effect.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WizardSteps">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WizardStepCollection WizardSteps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepCollection WizardSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to a collection containing all the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects defined for the control.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> representing all the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects defined for the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The WizardSteps property returns a collection of <xref:System.Web.UI.WebControls.WizardStepBase> objects that make up the <xref:System.Web.UI.WebControls.CreateUserWizard> control. You can use the WizardSteps collection to programmatically access the <xref:System.Web.UI.WebControls.WizardStepBase> objects contained in the <xref:System.Web.UI.WebControls.CreateUserWizard> control. Use the <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>, <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>, <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>, and <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> methods to programmatically manipulate the <xref:System.Web.UI.WebControls.WizardStepBase> objects in the collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>