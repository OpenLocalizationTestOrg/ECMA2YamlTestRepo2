<Type Name="CircleHotSpot" FullName="System.Web.UI.WebControls.CircleHotSpot">
  <TypeSignature Language="C#" Value="public sealed class CircleHotSpot : System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CircleHotSpot extends System.Web.UI.WebControls.HotSpot" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HotSpot</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines a circular hot spot region in an <see cref="T:System.Web.UI.WebControls.ImageMap" /> control. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class defines a circle-shaped hot spot region in an <xref:System.Web.UI.WebControls.ImageMap> control. To define the region of the CircleHotSpot object, set the <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> property to the value that represents the x-coordinate of the center of the circular region. Set the <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> property to the value that represents the y-coordinate of the center of the circular region. Set the <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> property to the distance from the center of the circle to the edge.  
  
 When a CircleHotSpot control is clicked, the page either navigates to a URL, generates a post back to the server, or does nothing. The <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property specifies this behavior. To navigate to a URL, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.Navigate`, and use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to. To post back to the server, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.PostBack`, and use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify a name for the CircleHotSpot object. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when the CircleHotSpot is clicked. If you want the CircleHotSpot object to have no behavior, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.Inactive`.  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two CircleHotSpot objects. The <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.Navigate`, which causes the page to navigate to the specified URL each time a user clicks one of the hot spot regions. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  
  
 [!code-vb[ImageMapClass1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_47_1.aspx)]
 [!code-cs[ImageMapClass1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_47_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CircleHotSpot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.CircleHotSpot> class.  
  
   
  
## Examples  
 The following code example demonstrates how to programmatically create two <xref:System.Web.UI.WebControls.CircleHotSpot> objects, set their properties, and add them to the <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.HotSpotCollection>. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  
  
 [!code-cs[CircleHotSpot.Cstr#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_58_1.aspx)]
 [!code-vb[CircleHotSpot.Cstr#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_58_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetCoordinates">
      <MemberSignature Language="C#" Value="public override string GetCoordinates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetCoordinates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the x- and y-coordinates of a <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object's center and the length of its radius.</summary>
        <returns>A string that represents the x- and y-coordinates of a <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object's center and the length of its radius.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method uses the values assigned to the <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> and <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> properties to return the center coordinates and the value assigned to the <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> property to return the radius.  
  
 The GetCoordinates method is used internally by ASP.NET to get the text to use for the coordinates of a <xref:System.Web.UI.WebControls.CircleHotSpot> when it is rendered.  
  
   
  
## Examples  
 The following code example demonstrates how to declaratively create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two <xref:System.Web.UI.WebControls.CircleHotSpot> objects. When a user clicks one of the <xref:System.Web.UI.WebControls.CircleHotSpot> objects, the GetCoordinates method returns its coordinates and displays them to the user. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  
  
 [!code-vb[CircleHotSpot.GetCoordinates#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_116_1.aspx)]
 [!code-cs[CircleHotSpot.GetCoordinates#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_116_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MarkupName">
      <MemberSignature Language="C#" Value="protected override string MarkupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public int Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the distance from the center to the edge of the circular region defined by this <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object.</summary>
        <value>An integer that represents the distance in pixels from the center to the edge of the circular region defined by this <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object. The default is 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Radius property allows you to get or set a value that represents the distance in pixels from the center to the edge of the circular region defined by this <xref:System.Web.UI.WebControls.CircleHotSpot> object. To completely define a <xref:System.Web.UI.WebControls.CircleHotSpot> object, you must specify a value for the Radius property as well as the <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> and <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> properties.  
  
   
  
## Examples  
 The following code example demonstrates how to create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two <xref:System.Web.UI.WebControls.CircleHotSpot> objects. One is created declaratively; its <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, and Radius properties are likewise set declaratively. The other is created programmatically and its <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, and Radius properties are set programmatically. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  
  
 [!code-vb[CircleHotSpot.Radius#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_818_1.aspx)]
 [!code-cs[CircleHotSpot.Radius#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_818_1.aspx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified value is less than 0.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the x-coordinate of the center of the circular region defined by this <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object.</summary>
        <value>The x-coordinate of the center of the circular region defined by this <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object. The default is 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The X property allows you to get or set a value that represents the x-coordinate of the center of the circular region defined by this <xref:System.Web.UI.WebControls.CircleHotSpot> object. To completely define a <xref:System.Web.UI.WebControls.CircleHotSpot> object, you must specify a value for the X property as well as the <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> and <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> properties.  
  
   
  
## Examples  
 The following code example demonstrates how to create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two <xref:System.Web.UI.WebControls.CircleHotSpot> objects. One is created declaratively; its X, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, and <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> properties are likewise set declaratively. The other is created programmatically and its X, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, and <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> properties are set programmatically. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  
  
 [!code-vb[CircleHotSpot.Radius#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_470_1.aspx)]
 [!code-cs[CircleHotSpot.Radius#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_470_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the y-coordinate of the center of the circular region defined by this <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object.</summary>
        <value>The y-coordinate of the center of the circular region defined by this <see cref="T:System.Web.UI.WebControls.CircleHotSpot" /> object. The default is 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Y property allows you to get or set a value that represents the y-coordinate of the center of the circular region defined by this <xref:System.Web.UI.WebControls.CircleHotSpot> object. To completely define a <xref:System.Web.UI.WebControls.CircleHotSpot> object, you must specify a value for the Y property as well as the <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> and <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> properties.  
  
   
  
## Examples  
 The following code example demonstrates how to create an <xref:System.Web.UI.WebControls.ImageMap> control that contains two <xref:System.Web.UI.WebControls.CircleHotSpot> objects. One is created declaratively; its <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, Y, and <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> properties are likewise set declaratively. The other is created programmatically and its <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, Y, and <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> properties are set programmatically. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  
  
 [!code-vb[CircleHotSpot.Radius#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_30_1.aspx)]
 [!code-cs[CircleHotSpot.Radius#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_30_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>