<Type Name="GridViewPageEventHandler" FullName="System.Web.UI.WebControls.GridViewPageEventHandler">
  <TypeSignature Language="C#" Value="public delegate void GridViewPageEventHandler(object sender, GridViewPageEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GridViewPageEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewPageEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" /> object that contains the event data.</param>
    <summary>Represents the method that handles the <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> event of a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event when a pager button (a button with its `CommandName` property set to "Page") within the control is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This allows you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  
  
> [!NOTE]
>  Pager buttons are usually located in the pager row of a <xref:System.Web.UI.WebControls.GridView> control.  
  
 When you create a GridViewPageEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
   
  
## Examples  
 The following example demonstrates how to programmatically add a GridViewPageEventHandler delegate to the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event of a <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-cs[GridViewPageEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_167_1.aspx)]
 [!code-vb[GridViewPageEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_167_1.aspx)]  
  
 The following example demonstrates how to declaratively add a GridViewPageEventHandler delegate to the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event of a <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-cs[GridViewPageIndexChanging#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_167_2.aspx)]
 [!code-vb[GridViewPageIndexChanging#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_167_2.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>