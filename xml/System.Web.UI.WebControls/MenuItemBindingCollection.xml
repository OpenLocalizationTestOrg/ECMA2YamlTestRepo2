<Type Name="MenuItemBindingCollection" FullName="System.Web.UI.WebControls.MenuItemBindingCollection">
  <TypeSignature Language="C#" Value="public sealed class MenuItemBindingCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItemBindingCollection extends System.Web.UI.StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MenuItemBindingCollection class is used to store and manage a collection of <xref:System.Web.UI.WebControls.MenuItemBinding> objects in the <xref:System.Web.UI.WebControls.Menu> control. The <xref:System.Web.UI.WebControls.Menu> control uses the MenuItemBindingCollection class as the data type for its <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> property. The <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> property is used to store any menu item bindings defined for the <xref:System.Web.UI.WebControls.Menu> control.  
  
> [!NOTE]
>  The order in which <xref:System.Web.UI.WebControls.MenuItemBinding> objects appear in the collection has no effect on how those objects are applied to the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  
  
 The MenuItemBindingCollection class supports several ways to access the items in the collection:  
  
-   Use the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A> indexer to directly retrieve the <xref:System.Web.UI.WebControls.MenuItemBinding> object at a specific zero-based index.  
  
-   Use the <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A> method to create an enumerator that can be used to iterate through the collection.  
  
-   Use the <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> method to copy the contents of the collection into an array.  
  
 You can programmatically manage a MenuItemBindingCollection object by adding and removing <xref:System.Web.UI.WebControls.MenuItemBinding> objects. To add menu items to the collection, use the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> or the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> method. To remove nodes from the collection, use the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>, the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>, or the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.  
  
 The MenuItemBindingCollection class contains properties and methods that allow you to retrieve information about the collection itself. To find out how many items are in the collection, use the <xref:System.Web.UI.StateManagedCollection.Count%2A> property. If you want to determine whether the collection contains a certain <xref:System.Web.UI.WebControls.MenuItemBinding> object, use the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A> method. To get the index of a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection, use the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A> method.  
  
   
  
## Examples  
 The following code example demonstrates how to populate a MenuItemBindingCollection object declaratively. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-vb[MenuBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_1.aspx)]
 [!code-cs[MenuBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_1.aspx)]  
  
 The following code example demonstrates how to add <xref:System.Web.UI.WebControls.MenuItemBinding> objects to a MenuItemBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_2.aspx)]
 [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_2.aspx)]  
  
 The following is sample site map data for the previous examples.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.MenuItemBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.MenuItemBinding binding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.MenuItemBinding" />
      </Parameters>
      <Docs>
        <param name="binding">The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> to append to the end of the collection.</param>
        <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object to the end of the collection.</summary>
        <returns>The index at which the <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> was inserted in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Add method to append the specified <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the collection.  
  
> [!NOTE]
>  You can add null values and duplicate <xref:System.Web.UI.WebControls.MenuItemBinding> objects to the collection.  
  
 As an alternative, you can insert a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection at a specific index by using the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> method.  
  
> [!NOTE]
>  The order in which <xref:System.Web.UI.WebControls.MenuItemBinding> objects appear in the collection has no effect on how those objects are applied to the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Add method to append a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/455e41fd-8e8e-40dd-99e4-_1.aspx)]
 [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/455e41fd-8e8e-40dd-99e4-_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.MenuItemBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.MenuItemBinding binding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.MenuItemBinding" />
      </Parameters>
      <Docs>
        <param name="binding">The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> to find.</param>
        <summary>Determines whether the specified <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object is in the collection.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> is contained in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Contains method to determine whether a <xref:System.Web.UI.WebControls.MenuItemBinding> object is contained in the collection. This method is commonly used to test for the existence of a <xref:System.Web.UI.WebControls.MenuItemBinding> object before performing a task, such as adding or removing a menu item binding from the collection.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.MenuItemBinding[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.MenuItemBinding[] array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.MenuItemBinding[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">A zero-based array of <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects that receives the copied items from the collection.</param>
        <param name="index">The position in the target array at which to start receiving the copied content.</param>
        <summary>Copies all the items from the <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" /> object to a compatible one-dimensional array of <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects, starting at the specified index in the target array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> method to copy the contents of the collection into the specified zero-based array. Items are copied starting at the specified index of the target array. With the array, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.MenuItemBindingCollection> object.  
  
 As an alternative, you can also use the <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.  
  
   
  
## Examples  
 The following code example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.MenuItemBinding> objects from the collection to an array. The array is then iterated through to display the properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> objects. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-cs[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/csharp/23779e9d-0868-4199-8f19-_1.aspx)]
 [!code-vb[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/23779e9d-0868-4199-8f19-_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.MenuItemBinding value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.MenuItemBinding value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItemBinding" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> to determine the index of.</param>
        <summary>Determines the index of the specified <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object in the collection.</summary>
        <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the collection, if found; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the IndexOf method to determine the index of the specified <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection.  
  
> [!NOTE]
>  The order in which <xref:System.Web.UI.WebControls.MenuItemBinding> objects appear in the collection has no effect on how those objects are applied to the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  
  
 If the menu item binding is not in the collection, the method returns -1.  
  
> [!NOTE]
>  If the specified menu item binding appears multiple times in the collection, the index of the first occurrence is returned.  
  
   
  
## Examples  
 The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-vb[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/visualbasic/4ddc9e66-fb4e-4063-8f80-_1.aspx)]
 [!code-cs[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/csharp/4ddc9e66-fb4e-4063-8f80-_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.MenuItemBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.MenuItemBinding binding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="binding" Type="System.Web.UI.WebControls.MenuItemBinding" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index location at which to insert the <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />.</param>
        <param name="binding">The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> to insert.</param>
        <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object to the collection at the specified index location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Insert method to insert the specified <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection at the specified index.  
  
> [!NOTE]
>  You can add null values and duplicate <xref:System.Web.UI.WebControls.MenuItemBinding> objects to the collection.  
  
 As an alternative, you can simply append a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the collection by using the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> method.  
  
> [!NOTE]
>  The order in which <xref:System.Web.UI.WebControls.MenuItemBinding> objects appear in the collection has no effect on the how those objects are applied to the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Insert method to add a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-vb[MenuItemBindingCollectionInsert#1](~/add/codesnippet/visualbasic/4e0eb68e-1774-4135-bfc7-_1.aspx)]
 [!code-cs[MenuItemBindingCollectionInsert#1](~/add/codesnippet/csharp/4e0eb68e-1774-4135-bfc7-_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBinding this[int i] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBinding Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">The zero-based index of the <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> to retrieve.</param>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object at the specified index from the collection.</summary>
        <value>The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> at the specified index in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this indexer to access a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection at the specified index using array notation. The indexer allows you to access, modify, or replace a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection directly.  
  
   
  
## Examples  
 The following code example demonstrates how to retrieve a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection using the indexer. The properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> object are then updated programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-cs[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_289_1.aspx)]
 [!code-vb[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_289_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected override void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.MenuItemBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.MenuItemBinding binding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.MenuItemBinding" />
      </Parameters>
      <Docs>
        <param name="binding">The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Remove method to remove the specified menu item binding from the collection. All items that follow that menu item are then moved up to fill in the vacant position. The indexes of the moved items are also updated.  
  
> [!NOTE]
>  The collection can contain null values, as well as duplicate <xref:System.Web.UI.WebControls.MenuItemBinding> objects.  
  
 As an alternative, you can remove a menu item from a specific index in the collection by using the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> method. You can also remove all menu items from the collection by using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.  
  
> [!NOTE]
>  The order in which <xref:System.Web.UI.WebControls.MenuItemBinding> objects appear in the collection has no effect on how those objects are applied to the menu items in a <xref:System.Web.UI.WebControls.Menu> control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-vb[MenuItemBindingCollectionRemove#1](~/add/codesnippet/visualbasic/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]
 [!code-cs[MenuItemBindingCollectionRemove#1](~/add/codesnippet/csharp/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index location of the menu item binding to remove.</param>
        <summary>Removes the <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object at the specified index location from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the RemoveAt method to remove the <xref:System.Web.UI.WebControls.MenuItemBinding> object at the specified index location from the collection. All items that follow that menu item are then moved up to fill in the vacant position. The indexes of the moved items are also updated.  
  
> [!NOTE]
>  The collection can contain null values, as well as duplicate <xref:System.Web.UI.WebControls.MenuItemBinding> objects.  
  
 As an alternative, you can remove a specific <xref:System.Web.UI.WebControls.MenuItemBinding> object by using the <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A> method. You can also remove all menu items from the collection by using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.  
  
   
  
## Examples  
 The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-cs[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_120_1.aspx)]
 [!code-vb[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_120_1.aspx)]  
  
 The following is sample site map data for the previous example.  
  
 `<MapHomeNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<MapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<MapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<MapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<MapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</MapNode>`  
  
 `<MapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<MapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<MapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<MapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</MapNode>`  
  
 `</MapHomeNode>`  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>