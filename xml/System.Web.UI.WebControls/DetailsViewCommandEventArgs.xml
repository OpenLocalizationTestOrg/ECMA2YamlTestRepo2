<Type Name="DetailsViewCommandEventArgs" FullName="System.Web.UI.WebControls.DetailsViewCommandEventArgs">
  <TypeSignature Language="C#" Value="public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event when a button within a <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, or <xref:System.Web.UI.WebControls.TemplateField> row field is clicked. This allows you to provide an event handler that performs a custom routine whenever this event occurs.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.DetailsView> control also raises other specialized events when certain buttons are clicked (buttons with the `CommandName` property set to "Delete", "Insert", "Page", or "Update"). When using one of these buttons, you should consider using one of the specialized events provided by the control (such as <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> or <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).  
  
 A DetailsViewCommandEventArgs object is passed to the event handler. If the button that raised the event has a command name or command argument value, you can use the DetailsViewCommandEventArgs object to determine these values. To determine the command name and command argument of the button clicked, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> and <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> properties, respectively. You can also access the <xref:System.Web.UI.WebControls.DetailsView> control that raised the event by using the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> property.  
  
 For a list of initial property values for an instance of the DetailsViewCommandEventArgs class, see the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following code example demonstrates how to use the DetailsViewCommandEventArgs object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event to determine the command name of the button clicked by the user. This example uses the single-file coding model.  
  
 [!code-vb[DetailsViewCommandEventArgsCodeInline#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_1.aspx)]
 [!code-cs[DetailsViewCommandEventArgsCodeInline#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_1.aspx)]  
  
 The following code example shows a code-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code-behind file.  
  
 [!code-cs[DetailsViewCommandEventArgsCodeBehind2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_2.aspx)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_2.aspx)]  
  
 The following code example shows the code-behind file for the previous example.  
  
 [!code-cs[DetailsViewCommandEventArgsCodeBehind2#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_3.cs)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_3.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">The source of the command.</param>
        <param name="originalArgs">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> that contains event data.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> class.  
  
 The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>.  
  
|Property|Initial value|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|The value of the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> contained in the `originalArgs` parameter.|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|The value of the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> object contained in the `originalArgs` parameter.|  
|<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>|The object contained in the `commandSource` parameter.|  
  
> [!NOTE]
>  This constructor is used primarily by control developers when raising events.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the source of the command.</summary>
        <value>An instance of the &lt;xref:System.Object?displayProperty=fullName&gt; class that represents the source of the command.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the CommandSource property to access the properties of the object that represents the source of the command. In some cases, this will be the <xref:System.Web.UI.WebControls.DetailsView> control itself, and in other cases it will be the <xref:System.Web.UI.WebControls.Button> control that was clicked.  
  
   
  
## Examples  
 The following code example demonstrates how to use the CommandSource property to determine which of two <xref:System.Web.UI.WebControls.DetailsView> controls raised the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event.  
  
 [!code-cs[DetailsViewCommandEventArgsCommandSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_379_1.aspx)]
 [!code-vb[DetailsViewCommandEventArgsCommandSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_379_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the control has handled the event.</summary>
        <value>
          <see langword="true" /> if data-bound event code was skipped or has finished running; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set this property to `true` in the event handler to specify that the <xref:System.Web.UI.WebControls.DetailsView> control should not handle the event because you are handling it in your code.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>