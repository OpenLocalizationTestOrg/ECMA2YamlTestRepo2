<Type Name="FormViewUpdateEventHandler" FullName="System.Web.UI.WebControls.FormViewUpdateEventHandler">
  <TypeSignature Language="C#" Value="public delegate void FormViewUpdateEventHandler(object sender, FormViewUpdateEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormViewUpdateEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that handles the <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> event of a <see cref="T:System.Web.UI.WebControls.FormView" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event when an Update button (a button with its `CommandName` property set to "Update") within the control is clicked, but before the <xref:System.Web.UI.WebControls.FormView> control updates the record. This allows you to provide an event-handling method that performs a custom routine, such as HTML encoding or validating the values of a record before updating it in the data source, whenever this event occurs.  
  
 When you create a FormViewUpdateEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
   
  
## Examples  
 The following example demonstrates how to programmatically add a FormViewUpdateEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event of a <xref:System.Web.UI.WebControls.FormView> control.  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-vb[FormViewUpdatedEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_198_1.aspx)]
 [!code-cs[FormViewUpdatedEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_198_1.aspx)]  
  
 The following example demonstrates how to declaratively add a FormViewUpdateEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event of a <xref:System.Web.UI.WebControls.FormView> control.  
  
 [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_198_2.aspx)]
 [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_198_2.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>