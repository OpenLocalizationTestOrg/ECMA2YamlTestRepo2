<Type Name="XmlSchemaSimpleContent" FullName="System.Xml.Schema.XmlSchemaSimpleContent">
  <TypeSignature Language="C#" Value="public class XmlSchemaSimpleContent : System.Xml.Schema.XmlSchemaContentModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSimpleContent extends System.Xml.Schema.XmlSchemaContentModel" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaContentModel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the <see langword="simpleContent" /> element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for simple and complex types with simple content model.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XmlSchemaSimpleContent is used to indicate that the content model of the new type contains only character data and no elements. It does this through <xref:System.Xml.Schema.XmlSchemaSimpleContentExtension> or <xref:System.Xml.Schema.XmlSchemaSimpleContentRestriction>.  
  
   
  
## Examples  
 The following example shows the `XmlSchemaSimpleContent` class.  
  
 [!code-cpp[Classic WebData XmlSchemaSimpleContent Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_25_1.cpp)]
 [!code-cs[Classic WebData XmlSchemaSimpleContent Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_25_1.cs)]
 [!code-vb[Classic WebData XmlSchemaSimpleContent Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_25_1.vb)]  
  
 The following XML file is generated for the preceding code example.  
  
 [!code-xml[Classic WebData XmlSchemaSimpleContent Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_25_2.xml)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSimpleContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.XmlSchemaContent Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaContent Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("restriction", typeof(System.Xml.Schema.XmlSchemaSimpleContentRestriction))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("extension", typeof(System.Xml.Schema.XmlSchemaSimpleContentExtension))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets one of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> or <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
        <value>The content contained within the <see langword="XmlSchemaSimpleContentRestriction" /> or <see langword="XmlSchemaSimpleContentExtension" /> class.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `simpleContent` element enables you to specify an element as containing a simple type with no elements and restrict the value of the element's content or extend the content with attributes.  
  
   
  
## Examples  
 Using the `simpleContent` element, the following element declaration contains a `complexType` that defines the content of the element as a `decimal` type with a single attribute (`sizing`):  
  
```  
<xs:element name="shoeSize">  
  <xs:complexType>  
    <xs:simpleContent>  
      <xs:extension base="xs:decimal">  
        <xs:attribute name="sizing">  
          <xs:restriction base="xs:string">  
            <xs:enumeration value="US"/>  
            <xs:enumeration value="European"/>  
            <xs:enumeration value="UK"/>  
            <xs:enumeration value="Japan"/>  
          </xs:restriction>  
        </xs:attribute>  
      </xs:extension>  
    </xs:simpleContent>  
  </xs:complexType>  
</xs:element>  
```  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>