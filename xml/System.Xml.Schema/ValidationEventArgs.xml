<Type Name="ValidationEventArgs" FullName="System.Xml.Schema.ValidationEventArgs">
  <TypeSignature Language="C#" Value="public class ValidationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationEventArgs extends System.EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Returns detailed information related to the <see langword="ValidationEventHandler" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 For an example, see the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for the <xref:System.Xml.Schema.XmlSchemaCollection> class.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaException Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Xml.Schema.XmlSchemaException" /> associated with the validation event.</summary>
        <value>The <see langword="XmlSchemaException" /> associated with the validation event.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the text description corresponding to the validation event.</summary>
        <value>The text description.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Severity">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSeverityType Severity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSeverityType Severity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSeverityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the severity of the validation event.</summary>
        <value>An <see cref="T:System.Xml.Schema.XmlSeverityType" /> value representing the severity of the validation event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example validates an XML file and generates the appropriate error or warning.  
  
 [!code-cpp[ValidationEventArgs.Severity#1](~/add/codesnippet/cpp/p-system.xml.schema.vali_1.cpp)]
 [!code-cs[ValidationEventArgs.Severity#1](~/add/codesnippet/csharp/p-system.xml.schema.vali_1.cs)]
 [!code-vb[ValidationEventArgs.Severity#1](~/add/codesnippet/visualbasic/p-system.xml.schema.vali_1.vb)]  
  
 The preceding example uses the following input files.  
  
 `store.xml`  
  
 [!code-xml[ValidationEventArgs.Severity#2](~/add/codesnippet/xml/p-system.xml.schema.vali_2.xml)]  
  
 `books.xsd`  
  
 [!code-xml[ValidationEventArgs.Severity#3](~/add/codesnippet/xml/p-system.xml.schema.vali_3.xsd)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>