<Type Name="XmlSchemaSimpleTypeUnion" FullName="System.Xml.Schema.XmlSchemaSimpleTypeUnion">
  <TypeSignature Language="C#" Value="public class XmlSchemaSimpleTypeUnion : System.Xml.Schema.XmlSchemaSimpleTypeContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSimpleTypeUnion extends System.Xml.Schema.XmlSchemaSimpleTypeContent" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaSimpleTypeContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the <see langword="union" /> element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). A <see langword="union" /> datatype can be used to specify the content of a <see langword="simpleType" />. The value of the <see langword="simpleType" /> element must be any one of a set of alternative datatypes specified in the union. Union types are always derived types and must comprise at least two alternative datatypes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `union` type enables an element or attribute value to be one or more instances of one type drawn from the union of multiple atomic and list types.  
  
   
  
## Examples  
 The following example shows the use of `XmlSchemaSimpleTypeUnion` class.  
  
 [!code-cpp[Classic WebData XmlSchemaSimpleTypeUnion Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_12_1.cpp)]
 [!code-vb[Classic WebData XmlSchemaSimpleTypeUnion Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_12_1.vb)]
 [!code-cs[Classic WebData XmlSchemaSimpleTypeUnion Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_12_1.cs)]  
  
 The following XML file is generated for this code example.  
  
 [!code-xml[Classic WebData XmlSchemaSimpleTypeUnion Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_12_2.xsd)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSimpleTypeUnion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BaseMemberTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSimpleType[] BaseMemberTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSimpleType[] BaseMemberTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSimpleType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> objects representing the type of the <see langword="simpleType" /> element based on the &lt;xref:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes%2A&gt; and &lt;xref:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes%2A&gt; values of the simple type.</summary>
        <value>An array of <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> objects representing the type of the <see langword="simpleType" /> element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is a post-schema-compilation-infoset property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BaseTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectCollection BaseTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectCollection BaseTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("simpleType", typeof(System.Xml.Schema.XmlSchemaSimpleType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of base types.</summary>
        <value>The collection of simple type base values.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MemberTypes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName[] MemberTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlQualifiedName[] MemberTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("memberTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the array of qualified member names of built-in data types or <see langword="simpleType" /> elements defined in this schema (or another schema indicated by the specified namespace).</summary>
        <value>An array that consists of a list of members of built-in data types or simple types.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>