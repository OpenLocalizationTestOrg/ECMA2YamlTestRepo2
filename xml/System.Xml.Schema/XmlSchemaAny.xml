<Type Name="XmlSchemaAny" FullName="System.Xml.Schema.XmlSchemaAny">
  <TypeSignature Language="C#" Value="public class XmlSchemaAny : System.Xml.Schema.XmlSchemaParticle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaAny extends System.Xml.Schema.XmlSchemaParticle" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaParticle</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the World Wide Web Consortium (W3C) <see langword="any" /> element.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `any` element enables any element from the specified namespace or namespaces to appear in the containing `complexType` element.  
  
   
  
## Examples  
 The following example creates the `any` element.  
  
 [!code-cpp[Classic WebData XmlSchemaAny Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_18_1.cpp)]
 [!code-cs[Classic WebData XmlSchemaAny Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_18_1.cs)]
 [!code-vb[Classic WebData XmlSchemaAny Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_18_1.vb)]  
  
 The following XML file is generated for the preceding code example.  
  
 [!code-xml[Classic WebData XmlSchemaAny Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_18_2.xml)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaAny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaAny" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("namespace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the namespaces containing the elements that can be used.</summary>
        <value>Namespaces for elements that are available for use. The default is <see langword="##any" />.  
  
 Optional.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If no namespace is specified, `##any` is the default. If the namespace is specified, it must be one of the values shown in the following table.  
  
|Namespace value|Description|  
|---------------------|-----------------|  
|`##any`|Elements from any namespace can be present.|  
|`##other`|Elements from any namespace that is not the `targetNamespace` of the parent element containing the `any` element can be present.|  
|`##local`|Elements that are not qualified with a namespace can be present.|  
|`##targetNamespace`|Elements from the `targetNamespace` of the parent element containing the `any` element can be present.|  
|`List of {URIs, ##targetNamespace, ##local}`|Elements from a space-delimited list of namespaces can be present. The list can contain the following: Uniform Resource Identifier (URI) references of namespaces, `##targetNamespace`, and `##local`.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProcessContents">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaContentProcessing ProcessContents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaContentProcessing ProcessContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("processContents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaContentProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets information about how an application or XML processor should handle the validation of XML documents for the elements specified by the <see langword="any" /> element.</summary>
        <value>One of the <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" /> values. If no <see langword="processContents" /> attribute is specified, the default is <see langword="Strict" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>