<Type Name="IReceiveMessageCallback" FullName="System.ServiceModel.Activities.IReceiveMessageCallback">
  <TypeSignature Language="C#" Value="public interface IReceiveMessageCallback" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMessageCallback" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Implements a callback to be executed when a service message is received by the <see cref="T:System.ServiceModel.Activities.Receive" /> and &lt;xref:System.ServiceModel.Activities.ReceiveParameters&gt; activities.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to implement the IReceiveMessageCallback interface to access a message header when a message is received.  
  
 [!code-cs[AccessingOperationContext#1](~/add/codesnippet/csharp/t-system.servicemodel.ac_9_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="OnReceiveMessage">
      <MemberSignature Language="C#" Value="public void OnReceiveMessage (System.ServiceModel.OperationContext operationContext, System.Activities.ExecutionProperties activityExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceiveMessage(class System.ServiceModel.OperationContext operationContext, class System.Activities.ExecutionProperties activityExecutionProperties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="activityExecutionProperties" Type="System.Activities.ExecutionProperties" />
      </Parameters>
      <Docs>
        <param name="operationContext">The operation context under which the message received.</param>
        <param name="activityExecutionProperties">The set of execution properties available within the workflow.</param>
        <summary>Executed when a service message is received.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to implement the <xref:System.ServiceModel.Activities.IReceiveMessageCallback> interface to access a message header when a message is received.  
  
 [!code-cs[AccessingOperationContext#1](~/add/codesnippet/csharp/a62c3857-4bbe-4c4e-b568-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>