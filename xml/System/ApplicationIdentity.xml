<Type Name="ApplicationIdentity" FullName="System.ApplicationIdentity">
  <TypeSignature Language="C#" Value="public sealed class ApplicationIdentity : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ApplicationIdentity extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides the ability to uniquely identify a manifest-activated application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ApplicationIdentity class is used in the activation of manifest-based applications.  
  
   
  
## Examples  
 The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the ApplicationIdentity for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  
  
 [!code-vb[System.ActivationContext#2](~/add/codesnippet/visualbasic/t-system.applicationiden_1.vb)]
 [!code-cs[System.ActivationContext#2](~/add/codesnippet/csharp/t-system.applicationiden_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationIdentity (string applicationIdentityFullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string applicationIdentityFullName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="applicationIdentityFullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationIdentityFullName">The full name of the application.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ApplicationIdentity" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The format of the `applicationIdentityFullName` parameter is a comma-delimited Unicode string that begins with the name, as follows:  
  
```  
  
applicationURL  
#  
deploymentIdentity  
\  
applicationIdentity  
  
```  
  
 Where *deploymentIdentity* =  
  
```  
  
deploymentManifest  
, Version =   
Major.Minor.Build.Revision  
, Culture =   
CultureInfo  
, PublicKeyToken=  
TokenNumber  
, processorArchitecture=  
processorArchitecture  
  
```  
  
 And *applicationIdentity* =  
  
```  
  
applicationName  
, Version =   
Major.Minor.Build.Revision  
, Culture =   
CultureInfo  
, PublicKeyToken=  
TokenNumber  
, processorArchitecture=  
processorArchitecture  
, type=  
OsType  
  
```  
  
 The following is an example of the full name for an application named ActivationContext:  
  
```  
http://testserver/ActivationContext/ActivationContext.application  
#ActivationContext.application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ae13aad84c1a3490, processorArchitecture=msil  
\ActivationContext.exe, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ae13aad84c1a3490, processorArchitecture=msil, type=win32  
```  
  
 The default value for processor architecture is "msil", and the default value for type is "win32".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentityFullName" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the location of the deployment manifest as a URL.</summary>
        <value>The URL of the deployment manifest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following are two examples of CodeBase property values for an application named ActivationContext:  
  
-   http://testserver/ActivationContext/ActivationContext.application  
  
-   file://C:/UserFiles/UserName/SolutionName/ActivationContext/publish/ActivationContext.application.  
  
   
  
## Examples  
 The following code example demonstrates the use of an <xref:System.ApplicationIdentity> object to obtain the value of the CodeBase property for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  
  
 [!code-vb[System.ActivationContext#3](~/add/codesnippet/visualbasic/p-system.applicationiden_1_1.vb)]
 [!code-cs[System.ActivationContext#3](~/add/codesnippet/csharp/p-system.applicationiden_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the full name of the application.</summary>
        <value>The full name of the application, also known as the display name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For a description of the format of the FullName property, see the <xref:System.ApplicationIdentity.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following code example demonstrates the use of an <xref:System.ApplicationIdentity> object to obtain the value of the FullName property for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  
  
 [!code-vb[System.ActivationContext#3](~/add/codesnippet/visualbasic/p-system.applicationiden_0_1.vb)]
 [!code-cs[System.ActivationContext#3](~/add/codesnippet/csharp/p-system.applicationiden_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
        <param name="context">The &lt;xref:System.Runtime.Serialization.StreamingContext&gt;) structure for the serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the full name of the manifest-activated application.</summary>
        <returns>The full name of the manifest-activated application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For a description of the format of a full name for a manifest activated application, see the <xref:System.ApplicationIdentity.%23ctor%2A> constructor.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>