<Type Name="GCNotificationStatus" FullName="System.GCNotificationStatus">
  <TypeSignature Language="C#" Value="public enum GCNotificationStatus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed GCNotificationStatus extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Provides information about the current registration for notification of the next full garbage collection.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.GC.RegisterForFullGCNotification%2A> method to register for a full garbage collection notification. Then use the <xref:System.GC.WaitForFullGCApproach%2A> method or the <xref:System.GC.WaitForFullGCComplete%2A> method to return a GCNotificationStatus enumeration that contains the status of the notification.  
  
   
  
## Examples  
 The following example obtains a GCNotificationStatus enumeration from the <xref:System.GC.WaitForFullGCApproach%2A> method. If the enumeration returns Succeeded, it calls the custom method `OnFullGCApproachNotify` to perform actions in response to the approaching full garbage collection. This code example is part of a larger example provided for [Garbage Collection Notifications](~/add/includes/ajax-current-ext-md.md) topic.  
  
 [!code-cpp[GCNotification#8](~/add/codesnippet/cpp/t-system.gcnotifications_1.cpp)]
 [!code-cs[GCNotification#8](~/add/codesnippet/csharp/t-system.gcnotifications_1.cs)]
 [!code-vb[GCNotification#8](~/add/codesnippet/visualbasic/t-system.gcnotifications_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="Canceled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.GCNotificationStatus Canceled = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current registration was canceled by the user.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Failed">
      <MemberSignature Language="C#" Value="Failed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.GCNotificationStatus Failed = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The notification failed for any reason.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NotApplicable">
      <MemberSignature Language="C#" Value="NotApplicable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.GCNotificationStatus NotApplicable = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This result can be caused by the following: there is no current registration for a garbage collection notification, concurrent garbage collection is enabled, or the time specified for the <paramref name="millisecondsTimeout" /> parameter has expired and no garbage collection notification was obtained. (See the [&lt;gcConcurrent&gt;](../Topic/%3CgcConcurrent%3E%20Element.md) runtime setting for information about how to disable concurrent garbage collection.)</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Succeeded">
      <MemberSignature Language="C#" Value="Succeeded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.GCNotificationStatus Succeeded = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The notification was successful and the registration was not canceled.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="Timeout" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.GCNotificationStatus Timeout = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The time specified by the <paramref name="millisecondsTimeout" /> parameter for either &lt;xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=fullName&gt; or &lt;xref:System.GC.WaitForFullGCComplete%28System.Int32%29?displayProperty=fullName&gt; has elapsed.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>