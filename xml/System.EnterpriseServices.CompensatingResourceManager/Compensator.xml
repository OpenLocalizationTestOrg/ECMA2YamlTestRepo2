<Type Name="Compensator" FullName="System.EnterpriseServices.CompensatingResourceManager.Compensator">
  <TypeSignature Language="C#" Value="public class Compensator : System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compensator extends System.EnterpriseServices.ServicedComponent" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EnterpriseServices.ServicedComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the base class for all Compensating Resource Manager (CRM) Compensators.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The user should extend from this object in order to write a custom transaction Compensator.  
  
 A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.  
  
 For more information, see [How to: Create a Compensating Resource Manager (CRM)](http://msdn.microsoft.com/en-us/0a8a024b-0be1-4519-a659-076577278029).  
  
   
  
## Examples  
 The following code example demonstrates the use of this class.  
  
 [!code-vb[EnterpriseServices_Crm#20](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#20](~/add/codesnippet/cpp/t-system.enterpriseservi_0_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#20](~/add/codesnippet/csharp/t-system.enterpriseservi_0_1.cs)]  
  
 This compensator is used by the following worker class.  
  
 [!code-vb[EnterpriseServices_Crm#10](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_2.vb)]
 [!code-cpp[EnterpriseServices_Crm#10](~/add/codesnippet/cpp/t-system.enterpriseservi_0_2.cpp)]
 [!code-cs[EnterpriseServices_Crm#10](~/add/codesnippet/csharp/t-system.enterpriseservi_0_2.cs)]  
  
 The following code example demonstrates a client that exercises this compensator and worker.  
  
 [!code-cpp[EnterpriseServices_Crm#30](~/add/codesnippet/cpp/t-system.enterpriseservi_0_3.cpp)]
 [!code-cs[EnterpriseServices_Crm#30](~/add/codesnippet/csharp/t-system.enterpriseservi_0_3.cs)]
 [!code-vb[EnterpriseServices_Crm#30](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_3.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Compensator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AbortRecord">
      <MemberSignature Language="C#" Value="public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AbortRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">The log record to be delivered.</param>
        <summary>Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.</summary>
        <returns>
          <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#28](~/add/codesnippet/visualbasic/bf259d0d-d4a3-40ee-874a-_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#28](~/add/codesnippet/cpp/bf259d0d-d4a3-40ee-874a-_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#28](~/add/codesnippet/csharp/bf259d0d-d4a3-40ee-874a-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginAbort">
      <MemberSignature Language="C#" Value="public virtual void BeginAbort (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAbort(bool fRecovery) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">
          <see langword="true" /> to begin abort phase; otherwise, <see langword="false" />.</param>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#27](~/add/codesnippet/visualbasic/efebd077-452a-4485-98bc-_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#27](~/add/codesnippet/cpp/efebd077-452a-4485-98bc-_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#27](~/add/codesnippet/csharp/efebd077-452a-4485-98bc-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public virtual void BeginCommit (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginCommit(bool fRecovery) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">
          <see langword="true" /> to begin commit phase; otherwise, <see langword="false" />.</param>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#24](~/add/codesnippet/visualbasic/a929af72-5899-4499-aac0-_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#24](~/add/codesnippet/cpp/a929af72-5899-4499-aac0-_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#24](~/add/codesnippet/csharp/a929af72-5899-4499-aac0-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BeginPrepare">
      <MemberSignature Language="C#" Value="public virtual void BeginPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginPrepare() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#21](~/add/codesnippet/visualbasic/b4b00685-a222-4032-bae9-_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#21](~/add/codesnippet/cpp/b4b00685-a222-4032-bae9-_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#21](~/add/codesnippet/csharp/b4b00685-a222-4032-bae9-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Clerk">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.CompensatingResourceManager.Clerk</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value representing the Compensating Resource Manager (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</summary>
        <value>The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CommitRecord">
      <MemberSignature Language="C#" Value="public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">The log record to forward.</param>
        <summary>Delivers a log record in forward order during the commit phase.</summary>
        <returns>
          <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#25](~/add/codesnippet/visualbasic/35b176a0-7924-4158-a97a-_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#25](~/add/codesnippet/cpp/35b176a0-7924-4158-a97a-_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#25](~/add/codesnippet/csharp/35b176a0-7924-4158-a97a-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndAbort">
      <MemberSignature Language="C#" Value="public virtual void EndAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAbort() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#29](~/add/codesnippet/visualbasic/m-system.enterpriseservi_32_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#29](~/add/codesnippet/cpp/m-system.enterpriseservi_32_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#29](~/add/codesnippet/csharp/m-system.enterpriseservi_32_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public virtual void EndCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCommit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#26](~/add/codesnippet/visualbasic/m-system.enterpriseservi_12_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#26](~/add/codesnippet/cpp/m-system.enterpriseservi_12_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#26](~/add/codesnippet/csharp/m-system.enterpriseservi_12_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EndPrepare">
      <MemberSignature Language="C#" Value="public virtual bool EndPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndPrepare() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.</summary>
        <returns>
          <see langword="true" /> if successful; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#23](~/add/codesnippet/visualbasic/m-system.enterpriseservi_3_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#23](~/add/codesnippet/cpp/m-system.enterpriseservi_3_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#23](~/add/codesnippet/csharp/m-system.enterpriseservi_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrepareRecord">
      <MemberSignature Language="C#" Value="public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">The log record to forward.</param>
        <summary>Delivers a log record in forward order during the prepare phase.</summary>
        <returns>
          <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 [!code-vb[EnterpriseServices_Crm#22](~/add/codesnippet/visualbasic/37b41c14-71b9-4a11-be23-_1.vb)]
 [!code-cpp[EnterpriseServices_Crm#22](~/add/codesnippet/cpp/37b41c14-71b9-4a11-be23-_1.cpp)]
 [!code-cs[EnterpriseServices_Crm#22](~/add/codesnippet/csharp/37b41c14-71b9-4a11-be23-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>