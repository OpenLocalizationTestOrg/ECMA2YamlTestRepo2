<Type Name="IGridItemProvider" FullName="System.Windows.Automation.Provider.IGridItemProvider">
  <TypeSignature Language="C#" Value="public interface IGridItemProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGridItemProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d02541f1-fb81-4d64-ae32-f520f8a6dbd1")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exposes methods and properties to support UI Automation client access to individual child controls of containers that implement <see cref="T:System.Windows.Automation.Provider.IGridProvider" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controls that implement IGridItemProvider can typically be traversed (that is, a UI Automation client can move to adjacent controls) by using the keyboard.  
  
 Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.GridItemPattern> control pattern.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
        <value>A zero-based ordinal number that identifies the column containing the cell or item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example code returns the property, which is stored in an internal variable.  
  
 [!code-cs[UIAMiscPatternProviders_snip#104](~/add/codesnippet/csharp/PatternProviders/CustomGridItem.cs#104)]
 [!code-vb[UIAMiscPatternProviders_snip#104](~/add/codesnippet/visualbasic/patternproviders/customgriditem.vb#104)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ColumnSpan">
      <MemberSignature Language="C#" Value="public int ColumnSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of columns spanned by a cell or item.</summary>
        <value>The number of columns spanned.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example code returns the property for an item in a grid whose items always span a single column.  
  
 [!code-cs[UIAMiscPatternProviders_snip#107](~/add/codesnippet/csharp/PatternProviders/CustomGridItem.cs#107)]
 [!code-vb[UIAMiscPatternProviders_snip#107](~/add/codesnippet/visualbasic/patternproviders/customgriditem.vb#107)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ContainingGrid">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple ContainingGrid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderSimple ContainingGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> and represents the container of the cell or item.</summary>
        <value>A UI Automation provider that implements the <see cref="T:System.Windows.Automation.GridPattern" /> and represents the cell or item container.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example code returns an object, stored as an internal variable that represents the grid container. This object implements <xref:System.Windows.Automation.Provider.IGridProvider> and <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>.  
  
 [!code-cs[UIAMiscPatternProviders_snip#108](~/add/codesnippet/csharp/PatternProviders/CustomGridItem.cs#108)]
 [!code-vb[UIAMiscPatternProviders_snip#108](~/add/codesnippet/visualbasic/patternproviders/customgriditem.vb#108)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
        <value>A zero-based ordinal number that identifies the row containing the cell or item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example code returns the property, which is stored in an internal variable.  
  
 [!code-cs[UIAMiscPatternProviders_snip#105](~/add/codesnippet/csharp/PatternProviders/CustomGridItem.cs#105)]
 [!code-vb[UIAMiscPatternProviders_snip#105](~/add/codesnippet/visualbasic/patternproviders/customgriditem.vb#105)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of rows spanned by a cell or item.</summary>
        <value>The number of rows spanned.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example code returns the property for an item in a grid whose items always span a single row.  
  
 [!code-cs[UIAMiscPatternProviders_snip#106](~/add/codesnippet/csharp/PatternProviders/CustomGridItem.cs#106)]
 [!code-vb[UIAMiscPatternProviders_snip#106](~/add/codesnippet/visualbasic/patternproviders/customgriditem.vb#106)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>