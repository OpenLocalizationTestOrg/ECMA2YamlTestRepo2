<Type Name="IToggleProvider" FullName="System.Windows.Automation.Provider.IToggleProvider">
  <TypeSignature Language="C#" Value="public interface IToggleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IToggleProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("56d00bd0-c4f4-433c-a836-1a52a57e0892")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exposes methods and properties to support UI Automation client access to controls that can cycle through a set of states and maintain a state once set.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TogglePattern> control pattern.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Toggle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cycles through the toggle states of a control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A control must cycle through its toggle states in this order: <xref:System.Windows.Automation.ToggleState>, <xref:System.Windows.Automation.ToggleState>, and (if supported) <xref:System.Windows.Automation.ToggleState>.  
  
   
  
## Examples  
 The following example shows one possible implementation of this method for a custom control that can be toggled.  
  
 [!code-vb[UIAIToggleProvider_snip#Toggle](~/add/codesnippet/visualbasic/uiaitoggleprovider_snip/togglefragment.vb#toggle)]
 [!code-cs[UIAIToggleProvider_snip#Toggle](~/add/codesnippet/csharp/UIAIToggleProvider_snip/ToggleFragment.cs#toggle)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToggleState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ToggleState ToggleState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ToggleState ToggleState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ToggleState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the toggle state of the control.</summary>
        <value>The <see cref="T:System.Windows.Automation.ToggleState" /> of the control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A control must cycle through its <xref:System.Windows.Automation.ToggleState> in this order: <xref:System.Windows.Automation.ToggleState>, <xref:System.Windows.Automation.ToggleState>, and (if supported) <xref:System.Windows.Automation.ToggleState>.  
  
   
  
## Examples  
 The following example shows an implementation of this method for a control that can be toggled. The ToggleState returned is based on the color of the control; this is analogous to the <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> property of a CheckBox control.  
  
 [!code-vb[UIAIToggleProvider_snip#ToggleState](~/add/codesnippet/visualbasic/uiaitoggleprovider_snip/togglefragment.vb#togglestate)]
 [!code-cs[UIAIToggleProvider_snip#ToggleState](~/add/codesnippet/csharp/UIAIToggleProvider_snip/ToggleFragment.cs#togglestate)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>