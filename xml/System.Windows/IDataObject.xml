<Type Name="IDataObject" FullName="System.Windows.IDataObject">
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Provides a format-independent mechanism for transferring data.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IDataObject interface is used by the <xref:System.Windows.Clipboard> class for data transfer operations like drag-and-drop.  
  
 When implemented by a class, the IDataObject methods enable a single data object to offer data in multiple formats.  Offering data in multiple formats tends to make the data usable by a wider variety of applications than if only a single data format were supported.  
  
 The <xref:System.Windows.DataObject> class provides a basic implementation of the IDataObject interface.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies what format to retrieve the data as. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
        <summary>Retrieves a data object in a specified format; the data format is specified by a string.</summary>
        <returns>A data object with the data in the specified format, or **null** if the data is not available in the specified format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">A &lt;xref:System.Type&gt; object that specifies what format to retrieve the data as. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
        <summary>Retrieves a data object in a specified format; the data format is specified by a &lt;xref:System.Type&gt; object.</summary>
        <returns>A data object with the data in the specified format, or **null** if the data is not available in the specified format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies what format to retrieve the data as. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
        <param name="autoConvert">
          <see langword="true" /> to attempt to automatically convert the data to the specified format; <see langword="false" /> for no data format conversion.  
  
 If this parameter is <see langword="false" />, the method returns data in the specified format if available, or <see langword="null" /> if the data is not available in the specified format.</param>
        <summary>Retrieves a data object in a specified format, optionally converting the data to the specified format.</summary>
        <returns>A data object with the data in the specified format, or **null** if the data is not available in the specified format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies what format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of pre-defined data formats.</param>
        <summary>Checks to see whether the data is available in, or can be converted to, a specified format; the data format is specified by a string.</summary>
        <returns>
          <see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Call **GetDataPresent** to determine whether a specified format is available in this data object before calling <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Call <xref:System.Windows.IDataObject.GetFormats%2A> to obtain a list of all the formats that are available in this data object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">A &lt;xref:System.Type&gt; that specifies what format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
        <summary>Checks to see whether the data is available in, or can be converted to, a specified format. The data format is specified by a &lt;xref:System.Type&gt; object.</summary>
        <returns>
          <see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Call **GetDataPresent** to determine whether a specified format is available in this data object before calling <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Call <xref:System.Windows.IDataObject.GetFormats%2A> to obtain a list of all the formats that are available in this data object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies what format to check for. See the <see cref="T:System.Windows.DataFormats" /> class for a set of pre-defined data formats.</param>
        <param name="autoConvert">
          <see langword="false" /> to only check for the specified format; <see langword="true" /> to also check whether or not data stored in this data object can be converted to the specified format.</param>
        <summary>Checks to see whether the data is available in, or can be converted to, a specified format. A <see langword="Boolean" /> flag indicates whether to check if the data can be converted to the specified format, if it is not available in that format.</summary>
        <returns>
          <see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Call **GetDataPresent** to determine whether a specified format is available in this data object before calling <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Call <xref:System.Windows.IDataObject.GetFormats%2A> to obtain a list of all the formats that are available in this data object.  
  
 This method returns **true** when:  
  
-   The *autoConvert* parameter is **true** and the data is in the specified format, or it can be converted to the specified format.  
  
-   The *autoConvert* parameter is **false** and the data is in the specified format.  
  
 This method returns **false** when:  
  
-   The *autoConvert* parameter is **true** and the data is not available in the specified format and cannot be converted to the specified format.  
  
-   The *autoConvert* parameter is **false**, and the data is not available in the specified format.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a list of all formats that the data in this data object is stored in, or can be converted to.</summary>
        <returns>An array of strings, with each string specifying the name of a format supported by this data object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> to retrieve all formats that data stored in this data object is stored in, or can be converted to; <see langword="false" /> to retrieve only formats that data stored in this data object is stored in (excluding formats that the data is not stored in, but can be automatically converted to).</param>
        <summary>Returns a list of all formats that the data in this data object is stored in. A <see langword="Boolean" /> flag indicates whether or not to also include formats that the data can be automatically converted to.</summary>
        <returns>An array of strings, with each string specifying the name of a format supported by this data object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">The data to store in this data object.</param>
        <summary>Stores the specified data in this data object, automatically converting the data format from the source object type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies what format to store the data in. See the <see cref="T:System.Windows.DataFormats" /> class for a set of pre-defined data formats.</param>
        <param name="data">The data to store in this data object.</param>
        <summary>Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A &lt;xref:System.Type&gt; that specifies what format to store the data in. See the <see cref="T:System.Windows.DataFormats" /> class for a set of predefined data formats.</param>
        <param name="data">The data to store in this data object.</param>
        <summary>Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a &lt;xref:System.Type&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies what format to store the data in. See the <see cref="T:System.Windows.DataFormats" /> class for a set of pre-defined data formats.</param>
        <param name="data">The data to store in this data object.</param>
        <param name="autoConvert">
          <see langword="true" /> to allow the data to be converted to another format on retrieval; <see langword="false" /> to prohibit the data from being converted to another format on retrieval.</param>
        <summary>Stores the specified data in this data object, along with one or more specified data formats. This overload includes a <see langword="Boolean" /> flag to indicate whether the data may be converted to another format on retrieval.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For an implementation of this method, see <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>