<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a trigger that applies property values or performs actions when the bound data meets a specified condition.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, and <xref:System.Windows.DataTemplate> all have a triggers collection. A DataTrigger allows you to set property values when the property value of the data object matches a specified <xref:System.Windows.Condition.Value%2A>. For example, if you are displaying a list of `Employee` objects, you may want the foreground color to be different based on each `Employee's` current attendance. (For example, `Employees` who are currently on vacation are displayed with a purple foreground.) In some scenarios it may be more suitable to create a converter or to use a <xref:System.Windows.Controls.DataTemplateSelector>. For more information, see the [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
 Note that you must specify both the <xref:System.Windows.DataTrigger.Binding%2A> and <xref:System.Windows.DataTrigger.Value%2A> properties on a DataTrigger for the data trigger to be meaningful. If one or both of the properties are not specified, an exception is thrown.  
  
 The <xref:System.Windows.DataTrigger.Setters%2A> property of a DataTrigger object can only consist of <xref:System.Windows.Setter> objects. Adding a <xref:System.Windows.Setter> child to a DataTrigger object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the DataTrigger object. <xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects.  
  
   
  
## Examples  
 In the following example, the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> of the <xref:System.Windows.Controls.ListBox> is bound to *Places*, an <xref:System.Collections.ObjectModel.ObservableCollection%601> of *Place* objects. *Place* objects have properties *Name* and *State*.  
  
 Each <xref:System.Windows.Controls.ListBoxItem> of the <xref:System.Windows.Controls.ListBox> displays a *Place* object. The <xref:System.Windows.Style> in the example is applied to each <xref:System.Windows.Controls.ListBoxItem>.  
  
 The DataTrigger is specified such that if the *State* of the *Place* data item is "WA" then the foreground of the corresponding <xref:System.Windows.Controls.ListBoxItem> is set to Red.  
  
 [!code-xml[DataTrigger#1](~/add/codesnippet/xaml/DataTrigger/Window1.xaml#1)]  
  
 The following example shows how to use a DataTrigger, a <xref:System.Windows.Media.Animation.BeginStoryboard> action, and a <xref:System.Windows.Media.Animation.Storyboard> to animate a property when bound data meets a specified condition. The example displays inventory information in a <xref:System.Windows.Controls.ListBox> control. It uses a DataTrigger to animate the <xref:System.Windows.UIElement.Opacity%2A> of every <xref:System.Windows.Controls.ListBoxItem> that contains an out-of-stock book.  
  
 [!code-xml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/add/codesnippet/xaml/AnimateProperty_Storyboards_markup/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.DataTrigger" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the binding that produces the property value of the data object.</summary>
        <value>The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The property value produced by this binding is compared with the value specified by the <xref:System.Windows.DataTrigger.Value%2A> property. That value is first converted to the type of the value of the binding (if possible), and then the two values are compared using the `Object.Equals` method. If the two values are equal, then the associated actions or setters are applied.  
  
 You create a binding and use the <xref:System.Windows.Data.Binding.Path%2A> property to bind to a property of a certain object (the binding source object). For example, you may bind to the *Priority* property of a *Task*. For more information, see [Data Binding Overview](~/add/includes/ajax-current-ext-md.md).  
  
 Note that you must specify both the Binding and <xref:System.Windows.DataTrigger.Value%2A> properties on a <xref:System.Windows.DataTrigger> for the data trigger to be meaningful. If one or both of the properties are not set, an exception is thrown.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## XAML Attribute Usage  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## XAML Values  
 *declaration*  
 Zero or more attribute-assignment clauses separated by commas (,). See [Binding Markup Extension](~/add/includes/ajax-current-ext-md.md) for more information.  
  
   
  
## Examples  
 In the following example, the <xref:System.Windows.DataTrigger> sets the <xref:System.Windows.Controls.Border.BorderBrush%2A> of the element named `border` to `Yellow` if the `TaskType` property is `TaskType.Home`.  
  
 [!code-xml[DataTemplatingIntro#DT](~/add/codesnippet/xaml/datatemplatingsample/window1.xaml#dt)]  
[!code-xml[DataTemplatingIntro#DataTrigger](~/add/codesnippet/xaml/datatemplatingsample/window1.xaml#datatrigger)]  
[!code-xml[DataTemplatingIntro#AddingMore2](~/add/codesnippet/xaml/datatemplatingsample/window1.xaml#addingmore2)]  
  
 For a detailed discussion of this example, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">The object where the markup extension sets the value.</param>
        <param name="eventArgs">Data that is relevant for markup extension processing.</param>
        <summary>Handles cases where a markup extension provides a value for a property of a <see cref="T:System.Windows.DataTrigger" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is the method referenced by an applied <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attribute at the class level, which means that this method processes all attempts to set values of<xref:System.Windows.DataTrigger> with a markup extension. You do not typically call this method directly.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of <see cref="T:System.Windows.Setter" /> objects, which describe the property values to apply when the data item meets the specified condition.</summary>
        <value>The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## XAML Values  
 *ZeroOrMoreSetters*  
 Zero or more <xref:System.Windows.Setter> objects.  
  
 A <xref:System.Windows.DataTrigger> allows you to start actions or to use <xref:System.Windows.Setter>s to apply property values when the data item meets a specified condition.  
  
 If there is more than one setter setting the same property in the same setter collection, the setter that is declared last is used.  
  
 The Setters property of a <xref:System.Windows.DataTrigger> object can only consist of <xref:System.Windows.Setter> objects. Adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.DataTrigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.DataTrigger> object. <xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects.  
  
   
  
## Examples  
 The following example shows two <xref:System.Windows.DataTrigger> objects that are defined in a <xref:System.Windows.DataTemplate>. The <xref:System.Windows.DataTemplate> is applied to *AuctionItem* data objects (not shown in this example), which have the property *SpecialFeatures*.  
  
 The first <xref:System.Windows.DataTrigger> is specified such that if the data object has a *SpecialFeatures* value of *Color*, then the item is displayed with a `DodgerBlue` background with Navy titles. If the data object has a *SpecialFeatures* value of *Highlight*, then the second <xref:System.Windows.DataTrigger> will be active, causing the item to be displayed with an Orange border with a star.  
  
 For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xml[DataBindingLab#AuctionItemsDataTriggers](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The child object to add.</param>
        <summary>Adds a child object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.DataTrigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to add to the object.</param>
        <summary>Adds the text content of a node to the object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.DataTrigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value to be compared with the property value of the data object.</summary>
        <value>The default value is <see langword="null" />. See also the Exceptions section.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 This value is compared with the property value produced by the <xref:System.Windows.DataTrigger.Binding%2A> property of the <xref:System.Windows.DataTrigger>. The comparison is a reference equality check. If the two values are equal, then the associated actions or setters are applied.  
  
 Note that you must specify both the <xref:System.Windows.DataTrigger.Binding%2A> and Value properties on a <xref:System.Windows.DataTrigger> for the data trigger to be meaningful. If one or both properties are not set, an exception will be thrown.  
  
   
  
## Examples  
 In the following example, the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> of the <xref:System.Windows.Controls.ListBox> is bound to *Places*, an <xref:System.Collections.ObjectModel.ObservableCollection%601> of *Place* objects. *Place* objects have properties *Name* and *State*.  
  
 Each <xref:System.Windows.Controls.ListBoxItem> of the <xref:System.Windows.Controls.ListBox> displays a *Place* object. The <xref:System.Windows.Style> in the example is applied to each <xref:System.Windows.Controls.ListBoxItem>.  
  
 The <xref:System.Windows.DataTrigger> is specified such that if the *State* of the *Place* data item is "WA" then the foreground of the corresponding <xref:System.Windows.Controls.ListBoxItem> is set to Red.  
  
 [!code-xml[DataTrigger#1](~/add/codesnippet/xaml/DataTrigger/Window1.xaml#1)]  
  
 The following example shows two <xref:System.Windows.DataTrigger>s that are defined in a <xref:System.Windows.DataTemplate>. The <xref:System.Windows.DataTemplate> is applied to *AuctionItem* data objects (not shown in this example), which have the property *SpecialFeatures*. See [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703) for the complete example.  
  
 The first <xref:System.Windows.DataTrigger> is specified such that if the data object has a *SpecialFeatures* value of *Color*, then the item is displayed with a DodgerBlue background with Navy titles. If the data object has a *SpecialFeatures* value of *Highlight*, then the second <xref:System.Windows.DataTrigger> will be active, causing the item to be displayed with an Orange border with a star.  
  
 [!code-xml[DataBindingLab#AuctionItemsDataTriggers](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Expressions are not supported. Bindings are not supported.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>