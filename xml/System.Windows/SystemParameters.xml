<Type Name="SystemParameters" FullName="System.Windows.SystemParameters">
  <TypeSignature Language="C#" Value="public static class SystemParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SystemParameters extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains properties that you can use to query system settings.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public static int Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Border" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the border multiplier factor that determines the width of a window's sizing border.</summary>
        <value>A multiplier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETBORDER. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_Border"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.Border`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BorderKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey BorderKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey BorderKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.Border%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.BorderKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public static double BorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the border width of the nonclient area of a nonminimized window.</summary>
        <value>A border width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The metric is obtained from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_BorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.BorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey BorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey BorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.BorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.BorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaptionHeight">
      <MemberSignature Language="C#" Value="public static double CaptionHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CaptionHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the caption height for the nonclient area of a nonminimized window.</summary>
        <value>The caption height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtain the metric from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_CaptionHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.CaptionHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaptionHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CaptionHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CaptionHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.CaptionHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CaptionHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.CaptionHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaptionWidth">
      <MemberSignature Language="C#" Value="public static double CaptionWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CaptionWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the caption width for the nonclient area of a nonminimized window.</summary>
        <value>The caption width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtains the metric from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_CaptionWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.CaptionWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaptionWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CaptionWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CaptionWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.CaptionWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CaptionWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.CaptionWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaretWidth">
      <MemberSignature Language="C#" Value="public static double CaretWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CaretWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the caret width, in pixels, for edit controls.</summary>
        <value>The caret width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETCARETWIDTH. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_CaretWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.CaretWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CaretWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CaretWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CaretWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.CaretWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CaretWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.CaretWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClientAreaAnimation">
      <MemberSignature Language="C#" Value="public static bool ClientAreaAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ClientAreaAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the client area animation feature is enabled.</summary>
        <value>A Boolean value; **true** if client area animation is enabled, **false** otherwise.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ControlAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ClientAreaAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClientAreaAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ClientAreaAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ClientAreaAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ClientAreaAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ControlAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ClientAreaAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ComboBoxAnimation">
      <MemberSignature Language="C#" Value="public static bool ComboBoxAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ComboBoxAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the slide-open effect for combo boxes is enabled.</summary>
        <value>
          <see langword="true" /> for enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETCOMBOBOXANIMATION. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ComboBoxAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ComboBoxAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ComboBoxAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ComboBoxAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ComboBoxAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ComboBoxAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ComboBoxAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ComboBoxAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ComboBoxPopupAnimation">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Primitives.PopupAnimation ComboBoxPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Primitives.PopupAnimation ComboBoxPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the system value of the &lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt; property for combo boxes.</summary>
        <value>A pop-up animation value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ComboBoxPopupAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ComboBoxPopupAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ComboBoxPopupAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ComboBoxPopupAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ComboBoxPopupAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ComboBoxPopupAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ComboBoxPopupAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ComboBoxPopupAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CursorHeight">
      <MemberSignature Language="C#" Value="public static double CursorHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CursorHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height, in pixels, of a cursor.</summary>
        <value>The cursor height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYCURSOR. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_CursorHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.CursorHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CursorHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CursorHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CursorHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.CursorHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CursorHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.CursorHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CursorShadow">
      <MemberSignature Language="C#" Value="public static bool CursorShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the cursor has a shadow around it.</summary>
        <value>
          <see langword="true" /> if the shadow is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETCURSORSHADOW. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_CursorShadow"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.CursorShadow`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CursorShadowKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CursorShadowKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CursorShadowKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.CursorShadow%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CursorShadowKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.CursorShadowKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CursorWidth">
      <MemberSignature Language="C#" Value="public static double CursorWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 CursorWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of a cursor.</summary>
        <value>The cursor width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXCURSOR. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_CursorWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.CursorWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CursorWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CursorWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CursorWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.CursorWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CursorWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.CursorWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DragFullWindows">
      <MemberSignature Language="C#" Value="public static bool DragFullWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DragFullWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether dragging of full windows is enabled.</summary>
        <value>
          <see langword="true" /> if dragging of full windows is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETDRAGFULLWINDOWS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_DragFullWindows"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.DragFullWindows`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DragFullWindowsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey DragFullWindowsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey DragFullWindowsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.DragFullWindows%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DragFullWindowsKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.DragFullWindowsKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DropShadow">
      <MemberSignature Language="C#" Value="public static bool DropShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the drop shadow effect is enabled.</summary>
        <value>
          <see langword="true" /> if the drop shadow effect is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETDROPSHADOW. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_DropShadow"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.DropShadow`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DropShadowKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey DropShadowKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey DropShadowKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.DropShadow%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DropShadowKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.DropShadowKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FixedFrameHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double FixedFrameHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FixedFrameHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the horizontal border of the frame around a window.</summary>
        <value>The border height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXFIXEDFRAME. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_FixedFrameHorizontalBorderHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FixedFrameHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FixedFrameHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FixedFrameHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FixedFrameHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FixedFrameHorizontalBorderHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FixedFrameHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FixedFrameVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double FixedFrameVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FixedFrameVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of the vertical border of the frame around a window.</summary>
        <value>The border width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYFIXEDFRAME. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_FixedFrameVerticalBorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FixedFrameVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FixedFrameVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FixedFrameVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FixedFrameVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FixedFrameVerticalBorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FixedFrameVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FlatMenu">
      <MemberSignature Language="C#" Value="public static bool FlatMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool FlatMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether native menus appear as a flat menu.</summary>
        <value>
          <see langword="true" /> if the flat menu appearance is set; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETFLATMENU. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_FlatMenu"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FlatMenu`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FlatMenuKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FlatMenuKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FlatMenuKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FlatMenu%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FlatMenuKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FlatMenuKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusBorderHeight">
      <MemberSignature Language="C#" Value="public static double FocusBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height, in pixels, of the upper and lower edges of the focus rectangle.</summary>
        <value>The edge height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETFOCUSBORDERHEIGHT. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_FocusBorderHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FocusBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FocusBorderHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusBorderHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FocusBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusBorderWidth">
      <MemberSignature Language="C#" Value="public static double FocusBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of the left and right edges of the focus rectangle.</summary>
        <value>The edge width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETFOCUSBORDERWIDTH. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_FocusBorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FocusBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FocusBorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusBorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FocusBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double FocusHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the upper and lower edges of the focus rectangle.</summary>
        <value>The edge height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXFOCUSBORDER. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_FocusHorizontalBorderHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FocusHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FocusHorizontalBorderHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusHorizontalBorderHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FocusHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double FocusVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FocusVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of the left and right edges of the focus rectangle.</summary>
        <value>The edge width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYFOCUSBORDER. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_FocusVerticalBorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FocusVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FocusVerticalBorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusVerticalBorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FocusVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FocusVisualStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FocusVisualStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see langword="FocusVisualStyle" /> property.</summary>
        <value>The resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FocusVisualStyleKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FocusVisualStyleKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ForegroundFlashCount">
      <MemberSignature Language="C#" Value="public static int ForegroundFlashCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ForegroundFlashCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of times the Set Foreground Window flashes the taskbar button when rejecting a foreground switch request.</summary>
        <value>A flash count.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETFOREGROUNDFLASHCOUNT. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ForegroundFlashCount"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ForegroundFlashCount`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ForegroundFlashCountKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ForegroundFlashCountKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ForegroundFlashCountKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ForegroundFlashCount%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ForegroundFlashCountKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ForegroundFlashCountKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenHeight">
      <MemberSignature Language="C#" Value="public static double FullPrimaryScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FullPrimaryScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height, in pixels, of the client area for a full-screen window on the primary display monitor.</summary>
        <value>The height of the client area.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYFULLSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_FullPrimaryScreenHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FullPrimaryScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FullPrimaryScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FullPrimaryScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FullPrimaryScreenHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FullPrimaryScreenHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FullPrimaryScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenWidth">
      <MemberSignature Language="C#" Value="public static double FullPrimaryScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 FullPrimaryScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of the client area for a full-screen window on the primary display monitor.</summary>
        <value>The width of the client area.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXFULLSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_FullPrimaryScreenWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.FullPrimaryScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FullPrimaryScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey FullPrimaryScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey FullPrimaryScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.FullPrimaryScreenWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_FullPrimaryScreenWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.FullPrimaryScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GradientCaptions">
      <MemberSignature Language="C#" Value="public static bool GradientCaptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool GradientCaptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the gradient effect for window title bars is enabled.</summary>
        <value>
          <see langword="true" /> if the gradient effect is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETGRADIENTCAPTIONS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_GradientCaptions"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.GradientCaptions`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GradientCaptionsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey GradientCaptionsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey GradientCaptionsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.GradientCaptions%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_GradientCaptionsKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.GradientCaptionsKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HighContrast">
      <MemberSignature Language="C#" Value="public static bool HighContrast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HighContrast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the High Contrast accessibility feature.</summary>
        <value>
          <see langword="true" /> if the HIGHCONTRASTON option is selected; otherwise,<see langword=" false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETHIGHCONTRAST, which references HCF_HIGHCONTRASTON. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp) and [HighContrast](http://msdn.microsoft.com/library/default.asp?url=/library/msaa/access_1wqa.asp).  
  
<a name="xamlAttributeUsage_HighContrast"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.HighContrast`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HighContrastKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HighContrastKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HighContrastKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.HighContrast%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HighContrastKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.HighContrastKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarButtonWidth">
      <MemberSignature Language="C#" Value="public static double HorizontalScrollBarButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 HorizontalScrollBarButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of the arrow bitmap on a horizontal scroll bar.</summary>
        <value>The width of the arrow bitmap.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXHSCROLL. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_HorizontalScrollBarButtonWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.HorizontalScrollBarButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HorizontalScrollBarButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HorizontalScrollBarButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HorizontalScrollBarButtonWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarHeight">
      <MemberSignature Language="C#" Value="public static double HorizontalScrollBarHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 HorizontalScrollBarHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of a horizontal scroll bar, in pixels.</summary>
        <value>The height of the scroll bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYHSCROLL. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_HorizontalScrollBarHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.HorizontalScrollBarHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HorizontalScrollBarHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HorizontalScrollBarHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.HorizontalScrollBarHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HorizontalScrollBarHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.HorizontalScrollBarHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarThumbWidth">
      <MemberSignature Language="C#" Value="public static double HorizontalScrollBarThumbWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 HorizontalScrollBarThumbWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in a horizontal scroll bar.</summary>
        <value>The width of the thumb.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXHTHUMB. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_HorizontalScrollBarThumbWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.HorizontalScrollBarThumbWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarThumbWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HorizontalScrollBarThumbWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HorizontalScrollBarThumbWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HorizontalScrollBarThumbWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.HorizontalScrollBarThumbWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public static bool HotTracking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled.</summary>
        <value>
          <see langword="true" /> if hot tracking is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETHOTTRACKING. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_HotTracking"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.HotTracking`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HotTrackingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey HotTrackingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey HotTrackingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.HotTracking%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_HotTrackingKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.HotTrackingKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconGridHeight">
      <MemberSignature Language="C#" Value="public static double IconGridHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconGridHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of a grid in which a large icon will fit.</summary>
        <value>The grid height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYICONSPACING. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IconGridHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconGridHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconGridHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconGridHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconGridHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconGridHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconGridHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconGridHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconGridWidth">
      <MemberSignature Language="C#" Value="public static double IconGridWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconGridWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of a grid that a large icon will fit into.</summary>
        <value>The grid width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXICONSPACING. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IconGridWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconGridWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconGridWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconGridWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconGridWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconGridWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconGridWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconGridWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconHeight">
      <MemberSignature Language="C#" Value="public static double IconHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default height of an icon.</summary>
        <value>The icon height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYICON. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IconHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconHorizontalSpacing">
      <MemberSignature Language="C#" Value="public static double IconHorizontalSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconHorizontalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view.</summary>
        <value>The width of an icon cell.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETICONMETRICS, which references SPI_ICONHORIZONTALSPACING. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_IconHorizontalSpacing"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconHorizontalSpacing`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconHorizontalSpacingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconHorizontalSpacingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconHorizontalSpacingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconHorizontalSpacing%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconHorizontalSpacingKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconHorizontalSpacingKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconTitleWrap">
      <MemberSignature Language="C#" Value="public static bool IconTitleWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IconTitleWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether icon-title wrapping is enabled.</summary>
        <value>
          <see langword="true" /> if icon-title wrapping is enabled; otherwise <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETICONMETRICS, which references SPI_GETICONTITLEWRAP. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_IconTitleWrap"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconTitleWrap`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconTitleWrapKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconTitleWrapKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconTitleWrapKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconTitleWrap%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconTitleWrapKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconTitleWrapKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconVerticalSpacing">
      <MemberSignature Language="C#" Value="public static double IconVerticalSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconVerticalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view.</summary>
        <value>The height of an icon cell.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETICONMETRICS, which references SPI_ICONVERTICALSPACING. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_IconVerticalSpacing"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconVerticalSpacing`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconVerticalSpacingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconVerticalSpacingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconVerticalSpacingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconVerticalSpacing%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconVerticalSpacingKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconVerticalSpacingKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconWidth">
      <MemberSignature Language="C#" Value="public static double IconWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 IconWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default width of an icon.</summary>
        <value>The icon width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXICON. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IconWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IconWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IconWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IconWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IconWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IconWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IconWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IconWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsGlassEnabled">
      <MemberSignature Language="C#" Value="public static bool IsGlassEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsGlassEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether glass window frames are being used.</summary>
        <value>
          <see langword="true" /> if glass window frames are being used; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsImmEnabled">
      <MemberSignature Language="C#" Value="public static bool IsImmEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsImmEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the system is ready to use a Unicode-based [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)] on a Unicode application.</summary>
        <value>
          <see langword="true" /> if the Input Method Manager/Input Method Editor features are enabled; otherwise, <see langword="false" />.<see langword="" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_IMMENABLED. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsImmEnabled"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsImmEnabled`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsImmEnabledKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsImmEnabledKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsImmEnabledKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsImmEnabled%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsImmEnabledKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsImmEnabledKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMediaCenter">
      <MemberSignature Language="C#" Value="public static bool IsMediaCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMediaCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current operating system is the [!INCLUDE[TLA#tla_whistler2](~/add/includes/tlasharptla-whistler2-md.md)] Media Center Edition.</summary>
        <value>
          <see langword="true" /> if the current operating system is [!INCLUDE[TLA2#tla_whistler2](~/add/includes/tla2sharptla-whistler2-md.md)] Media Center Edition; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_MEDIACENTER. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsMediaCenter"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsMediaCenter`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMediaCenterKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMediaCenterKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMediaCenterKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsMediaCenter%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMediaCenterKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsMediaCenterKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMenuDropRightAligned">
      <MemberSignature Language="C#" Value="public static bool IsMenuDropRightAligned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMenuDropRightAligned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether drop-down menus are right-aligned with the corresponding menu item.</summary>
        <value>
          <see langword="true" /> if drop-down menus are right-aligned; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_MENUDROPALIGNMENT. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsMenuDropRightAligned"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsMenuDropRightAligned`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMenuDropRightAlignedKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMenuDropRightAlignedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMenuDropRightAlignedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsMenuDropRightAligned%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMenuDropRightAlignedKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsMenuDropRightAlignedKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMiddleEastEnabled">
      <MemberSignature Language="C#" Value="public static bool IsMiddleEastEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMiddleEastEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the system is enabled for Hebrew and Arabic languages.</summary>
        <value>
          <see langword="true" /> if the system is enabled for Hebrew and Arabic languages; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_MIDEASTENABLED. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsMiddleEastEnabled"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsMiddleEastEnabled`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMiddleEastEnabledKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMiddleEastEnabledKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMiddleEastEnabledKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsMiddleEastEnabled%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMiddleEastEnabledKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsMiddleEastEnabledKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMousePresent">
      <MemberSignature Language="C#" Value="public static bool IsMousePresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMousePresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether a mouse is installed.</summary>
        <value>
          <see langword="true" /> if a mouse is installed; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This value is rarely `false`, because virtual mice are supported and because some systems detect the presence of the port, instead of a mouse.  
  
 Maps to SM_MOUSEPRESENT. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsMousePresent"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsMousePresent`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMousePresentKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMousePresentKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMousePresentKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsMousePresent%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMousePresentKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsMousePresentKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMouseWheelPresent">
      <MemberSignature Language="C#" Value="public static bool IsMouseWheelPresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsMouseWheelPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the installed mouse has a vertical scroll wheel.</summary>
        <value>
          <see langword="true" /> if the installed mouse has a vertical scroll wheel; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_MOUSEWHEELPRESENT. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsMouseWheelPresent"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsMouseWheelPresent`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsMouseWheelPresentKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsMouseWheelPresentKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsMouseWheelPresentKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsMouseWheelPresent%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsMouseWheelPresentKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsMouseWheelPresentKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsPenWindows">
      <MemberSignature Language="C#" Value="public static bool IsPenWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPenWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] for Pen Computing extensions are installed.</summary>
        <value>
          <see langword="true" /> if Pen Computing extensions are installed; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_PENWINDOWS. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsPenWindows"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsPenWindows`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsPenWindowsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsPenWindowsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsPenWindowsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsPenWindows%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsPenWindowsKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsPenWindowsKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyControlled">
      <MemberSignature Language="C#" Value="public static bool IsRemotelyControlled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsRemotelyControlled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current session is remotely controlled.</summary>
        <value>
          <see langword="true" /> if the current session is remotely controlled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This system metric is used in a Terminal Services environment.  
  
 Maps to SM_REMOTECONTROL. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsRemotelyControlled"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsRemotelyControlled`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyControlledKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsRemotelyControlledKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsRemotelyControlledKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsRemotelyControlled%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsRemotelyControlledKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsRemotelyControlledKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRemoteSession">
      <MemberSignature Language="C#" Value="public static bool IsRemoteSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsRemoteSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the calling process is associated with a Terminal Services client session.</summary>
        <value>
          <see langword="true" /> if the calling process is associated with a Terminal Services client session; <see langword="false" /> if the calling process is associated with the Terminal Server console session.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This system metric is used in a Terminal Services environment.  
  
 Maps to SM_REMOTESESSION. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsRemoteSession"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsRemoteSession`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRemoteSessionKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsRemoteSessionKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsRemoteSessionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsRemoteSession%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsRemoteSessionKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsRemoteSessionKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsSlowMachine">
      <MemberSignature Language="C#" Value="public static bool IsSlowMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSlowMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the computer has a low-end (slow) processor.</summary>
        <value>
          <see langword="true" /> if the computer has a low-end (slow) processor; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_SLOWMACHINE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsSlowMachine"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsSlowMachine`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsSlowMachineKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsSlowMachineKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsSlowMachineKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsSlowMachine%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsSlowMachineKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsSlowMachineKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTabletPC">
      <MemberSignature Language="C#" Value="public static bool IsTabletPC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsTabletPC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current operating system is [!INCLUDE[TLA#tla_whistler](~/add/includes/ajax-current-ext-md.md)] [!INCLUDE[TLA#tla_tpc](~/add/includes/tlasharptla-tpc-md.md)] Edition.</summary>
        <value>
          <see langword="true" /> if the current operating system is [!INCLUDE[TLA2#tla_whistler](~/add/includes/tla2sharptla-whistler-md.md)] [!INCLUDE[TLA2#tla_tpc](~/add/includes/tla2sharptla-tpc-md.md)] Edition; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_TABLETPC. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_IsTabletPC"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.IsTabletPC`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsTabletPCKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey IsTabletPCKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey IsTabletPCKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.IsTabletPC%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_IsTabletPCKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.IsTabletPCKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KanjiWindowHeight">
      <MemberSignature Language="C#" Value="public static double KanjiWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 KanjiWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of the kanji window at the bottom of the screen for systems that use double-byte characters.</summary>
        <value>The window height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYKANJIWINDOW. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_KanjiWindowHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.KanjiWindowHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KanjiWindowHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KanjiWindowHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KanjiWindowHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.KanjiWindowHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KanjiWindowHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.KanjiWindowHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardCues">
      <MemberSignature Language="C#" Value="public static bool KeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether menu access keys are always underlined.</summary>
        <value>
          <see langword="true" /> if menu access keys are always underlined; <see langword="false" /> if they are underlined only when the menu is activated by the keyboard.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETKEYBOARDCUES. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_KeyboardCues"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.KeyboardCues`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardCuesKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardCuesKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardCuesKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.KeyboardCues%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardCuesKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.KeyboardCuesKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardDelay">
      <MemberSignature Language="C#" Value="public static int KeyboardDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 KeyboardDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the keyboard repeat-delay setting, which is a value in the range from 0 (approximately 250 milliseconds delay) through 3 (approximately 1 second delay).</summary>
        <value>The keyboard repeat-delay setting.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETKEYBOARDDELAY. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_KeyboardDelay"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.KeyboardDelay`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardDelayKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardDelayKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardDelayKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.KeyboardDelay%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardDelayKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.KeyboardDelayKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardPreference">
      <MemberSignature Language="C#" Value="public static bool KeyboardPreference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyboardPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user relies on the keyboard instead of the mouse, and whether the user wants applications to display keyboard interfaces that are typically hidden.</summary>
        <value>
          <see langword="true" /> if the user relies on the keyboard; otherwise,<see langword=" false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETKEYBOARDPREF. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_KeyboardPreference"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.KeyboardPreference`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardPreferenceKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardPreferenceKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardPreferenceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.KeyboardPreference%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardPreferenceKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.KeyboardPreferenceKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardSpeed">
      <MemberSignature Language="C#" Value="public static int KeyboardSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 KeyboardSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the keyboard repeat-speed setting, which is a value in the range from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second).</summary>
        <value>The keyboard repeat-speed setting.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETKEYBOARDSPEED. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_KeyboardSpeed"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.KeyboardSpeed`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="KeyboardSpeedKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey KeyboardSpeedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey KeyboardSpeedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.KeyboardSpeed%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_KeyboardSpeedKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.KeyboardSpeedKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ListBoxSmoothScrolling">
      <MemberSignature Language="C#" Value="public static bool ListBoxSmoothScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ListBoxSmoothScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the smooth-scrolling effect for list boxes is enabled.</summary>
        <value>
          <see langword="true" /> if the smooth-scrolling effect is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETLISTBOXSMOOTHSCROLLING. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ListBoxSmoothScrolling"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ListBoxSmoothScrolling`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ListBoxSmoothScrollingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ListBoxSmoothScrollingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ListBoxSmoothScrollingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ListBoxSmoothScrolling%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ListBoxSmoothScrollingKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ListBoxSmoothScrollingKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenHeight">
      <MemberSignature Language="C#" Value="public static double MaximizedPrimaryScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximizedPrimaryScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a maximized top-level window on the primary display monitor.</summary>
        <value>The window height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYMAXIMIZED. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MaximizedPrimaryScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximizedPrimaryScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximizedPrimaryScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MaximizedPrimaryScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenWidth">
      <MemberSignature Language="C#" Value="public static double MaximizedPrimaryScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximizedPrimaryScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a maximized top-level window on the primary display monitor.</summary>
        <value>The window width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXMAXIMIZED. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MaximizedPrimaryScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximizedPrimaryScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximizedPrimaryScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximizedPrimaryScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximizedPrimaryScreenWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MaximizedPrimaryScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackHeight">
      <MemberSignature Language="C#" Value="public static double MaximumWindowTrackHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximumWindowTrackHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the maximum height, in pixels, of a window that has a caption and sizing borders.</summary>
        <value>The maximum window height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This metric refers to the entire desktop. The user cannot drag the window frame to a height larger than this dimension.  
  
 Maps to SM_CYMAXTRACK. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MaximumWindowTrackHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MaximumWindowTrackHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximumWindowTrackHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximumWindowTrackHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MaximumWindowTrackHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximumWindowTrackHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MaximumWindowTrackHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackWidth">
      <MemberSignature Language="C#" Value="public static double MaximumWindowTrackWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MaximumWindowTrackWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the maximum width, in pixels, of a window that has a caption and sizing borders.</summary>
        <value>The maximum window width.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This metric refers to the entire desktop. The user cannot drag the window frame to a width larger than this dimension.  
  
 Maps to SM_CXMAXTRACK. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MaximumWindowTrackWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MaximumWindowTrackWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MaximumWindowTrackWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MaximumWindowTrackWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MaximumWindowTrackWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MaximumWindowTrackWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximumWindowTrackWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MaximumWindowTrackWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuAnimation">
      <MemberSignature Language="C#" Value="public static bool MenuAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MenuAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the menu animation feature is enabled.</summary>
        <value>
          <see langword="true" /> if menu animation is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETMENUANIMATION. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MenuAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuBarHeight">
      <MemberSignature Language="C#" Value="public static double MenuBarHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuBarHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a single-line menu bar.</summary>
        <value>The height of the menu bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYMENU. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MenuBarHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuBarHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuBarHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuBarHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuBarHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuBarHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuBarHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuBarHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuButtonHeight">
      <MemberSignature Language="C#" Value="public static double MenuButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a menu bar button.</summary>
        <value>The height of a menu bar button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYMENUSIZE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MenuButtonHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuButtonHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuButtonHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuButtonWidth">
      <MemberSignature Language="C#" Value="public static double MenuButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a menu bar button.</summary>
        <value>The width of a menu bar button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXMENUSIZE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MenuButtonWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuButtonWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuButtonWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkHeight">
      <MemberSignature Language="C#" Value="public static double MenuCheckmarkHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuCheckmarkHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of the default menu check-mark bitmap.</summary>
        <value>The height of a bitmap.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYMENUCHECK. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MenuCheckmarkHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuCheckmarkHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuCheckmarkHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuCheckmarkHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuCheckmarkHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuCheckmarkHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuCheckmarkHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkWidth">
      <MemberSignature Language="C#" Value="public static double MenuCheckmarkWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuCheckmarkWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of the default menu check-mark bitmap.</summary>
        <value>The width of the bitmap.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXMENUCHECK. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MenuCheckmarkWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuCheckmarkWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckmarkWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuCheckmarkWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuCheckmarkWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuCheckmarkWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuCheckmarkWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuCheckmarkWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuDropAlignment">
      <MemberSignature Language="C#" Value="public static bool MenuDropAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MenuDropAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu item.</summary>
        <value>
          <see langword="true" /> if left-aligned; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETMENUDROPALIGNMENT. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MenuDropAlignment"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuDropAlignment`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuDropAlignmentKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuDropAlignmentKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuDropAlignmentKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuDropAlignment%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuDropAlignmentKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuDropAlignmentKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuFade">
      <MemberSignature Language="C#" Value="public static bool MenuFade { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MenuFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether menu fade animation is enabled.</summary>
        <value>
          <see langword="true" /> when fade animation is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If fade animation is disabled, menus use slide animation. This flag is ignored unless menu animation is enabled.  
  
 Maps to SPI_GETMENUFADE. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MenuFade"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuFade`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuFadeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuFadeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuFadeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuFade%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuFadeKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuFadeKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuHeight">
      <MemberSignature Language="C#" Value="public static double MenuHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the height of the menu.</summary>
        <value>The menu height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtain the metric from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MenuHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuPopupAnimation">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Primitives.PopupAnimation MenuPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Primitives.PopupAnimation MenuPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the system value of the &lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt; property for menus.</summary>
        <value>The pop-up animation property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuPopupAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuPopupAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuPopupAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuPopupAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuPopupAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuPopupAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuPopupAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuPopupAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuShowDelay">
      <MemberSignature Language="C#" Value="public static int MenuShowDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MenuShowDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is over a submenu item.</summary>
        <value>The delay time.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETMENUSHOWDELAY. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MenuShowDelay"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuShowDelay`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuShowDelayKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuShowDelayKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuShowDelayKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuShowDelay%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuShowDelayKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuShowDelayKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuWidth">
      <MemberSignature Language="C#" Value="public static double MenuWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MenuWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the width of the menu.</summary>
        <value>The menu width, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtain the metric from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MenuWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MenuWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MenuWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MenuWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MenuWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MenuWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizeAnimation">
      <MemberSignature Language="C#" Value="public static bool MinimizeAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MinimizeAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the animation effects associated with user actions.</summary>
        <value>
          <see langword="true" /> if the minimize window animations feature is enabled; otherwise,<see langword=" false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SPI_GETANIMATION system parameter gets an [ANIMATIONINFO](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/animationinfo_str.asp) structure. If the *iMinAnimate* member of the structure is non-zero the minimize animation effects are enabled.  
  
 Maps to SPI_GETANIMATION. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MinimizeAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimizeAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizeAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizeAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizeAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimizeAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizeAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimizeAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridHeight">
      <MemberSignature Language="C#" Value="public static double MinimizedGridHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedGridHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a grid cell for a minimized window.</summary>
        <value>The height of a grid cell for a minimized window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each minimized window fits into a rectangle with this height. The value is always greater than or equal to <xref:System.Windows.SystemParameters.MinimizedWindowHeight%2A>.  
  
 Maps to SM_CYMINSPACING. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimizedGridHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimizedGridHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedGridHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedGridHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimizedGridHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedGridHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimizedGridHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridWidth">
      <MemberSignature Language="C#" Value="public static double MinimizedGridWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedGridWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a grid cell for a minimized window.</summary>
        <value>The width of a grid cell for a minimized window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each minimized window fits into a rectangle with this width. The value is always greater than or equal to <xref:System.Windows.SystemParameters.MinimizedWindowWidth%2A>.  
  
 Maps to SM_CXMINSPACING. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimizedGridWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimizedGridWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedGridWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedGridWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedGridWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimizedGridWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedGridWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimizedGridWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowHeight">
      <MemberSignature Language="C#" Value="public static double MinimizedWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a minimized window.</summary>
        <value>The height of a minimized window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYMINIMIZED. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimizedWindowHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimizedWindowHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedWindowHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedWindowHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimizedWindowHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedWindowHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimizedWindowHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowWidth">
      <MemberSignature Language="C#" Value="public static double MinimizedWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimizedWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a minimized window.</summary>
        <value>The width of a minimized window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXMINIMIZED. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimizedWindowWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimizedWindowWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimizedWindowWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimizedWindowWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimizedWindowWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimizedWindowWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizedWindowWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimizedWindowWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumHorizontalDragDistance">
      <MemberSignature Language="C#" Value="public static double MinimumHorizontalDragDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumHorizontalDragDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.</summary>
        <value>The width of the rectangle, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXDRAG. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimumHorizontalDragDistance"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimumHorizontalDragDistance`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumVerticalDragDistance">
      <MemberSignature Language="C#" Value="public static double MinimumVerticalDragDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumVerticalDragDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.</summary>
        <value>The height of the rectangle, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXDRAG. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimumVerticalDragDistance"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimumVerticalDragDistance`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowHeight">
      <MemberSignature Language="C#" Value="public static double MinimumWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the minimum height, in pixels, of a window.</summary>
        <value>The minimum height of a window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYMIN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimumWindowHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimumWindowHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimumWindowHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimumWindowHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackHeight">
      <MemberSignature Language="C#" Value="public static double MinimumWindowTrackHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowTrackHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the minimum tracking height of a window, in pixels.</summary>
        <value>The minimun tracking height of a window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The user cannot drag the window frame to a height smaller than this dimension.  
  
 Maps to SM_CYMINTRACK. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimumWindowTrackHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimumWindowTrackHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowTrackHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowTrackHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimumWindowTrackHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowTrackHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimumWindowTrackHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackWidth">
      <MemberSignature Language="C#" Value="public static double MinimumWindowTrackWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowTrackWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the minimum tracking width of a window, in pixels.</summary>
        <value>The minimum tracking width of a window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The user cannot drag the window frame to a width smaller than this dimension.  
  
 Maps to SM_CXMINTRACK. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimumWindowTrackWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimumWindowTrackWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowTrackWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowTrackWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowTrackWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimumWindowTrackWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowTrackWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimumWindowTrackWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowWidth">
      <MemberSignature Language="C#" Value="public static double MinimumWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MinimumWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the minimum width, in pixels, of a window.</summary>
        <value>The minimum width of a window.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXMIN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_MinimumWindowWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MinimumWindowWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MinimumWindowWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MinimumWindowWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MinimumWindowWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MinimumWindowWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimumWindowWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MinimumWindowWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseHoverHeight">
      <MemberSignature Language="C#" Value="public static double MouseHoverHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MouseHoverHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event.</summary>
        <value>The height of a rectangle used for a mouse-hover event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETMOUSEHOVERHEIGHT. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MouseHoverHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MouseHoverHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseHoverHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MouseHoverHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MouseHoverHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MouseHoverHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MouseHoverHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MouseHoverHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseHoverTime">
      <MemberSignature Language="C#" Value="public static TimeSpan MouseHoverTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan MouseHoverTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time, in milliseconds, that the mouse pointer must remain in the hover rectangle to generate a mouse-hover event.</summary>
        <value>The time, in milliseconds, that the mouse must be in the hover rectangle to generate a mouse-hover event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETMOUSEHOVERTIME. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MouseHoverTime"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MouseHoverTime`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseHoverTimeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MouseHoverTimeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MouseHoverTimeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MouseHoverTime%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MouseHoverTimeKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MouseHoverTimeKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseHoverWidth">
      <MemberSignature Language="C#" Value="public static double MouseHoverWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 MouseHoverWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event.</summary>
        <value>The width of a rectangle used for a mouse-hover event.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETMOUSEHOVERWIDTH. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_MouseHoverWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.MouseHoverWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MouseHoverWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MouseHoverWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MouseHoverWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.MouseHoverWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MouseHoverWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.MouseHoverWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NavigationChromeDownLevelStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey NavigationChromeDownLevelStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey NavigationChromeDownLevelStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the NavigationChromeDownLevelStyleKey property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_NavigationChromeDownLevelStyleKey"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.NavigationChromeDownLevelStyleKey`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NavigationChromeStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey NavigationChromeStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey NavigationChromeStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the NavigationChromeStyleKey property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_NavigationChromeStyleKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.NavigationChromeStyleKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PowerLineStatus">
      <MemberSignature Language="C#" Value="public static System.Windows.PowerLineStatus PowerLineStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.PowerLineStatus PowerLineStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PowerLineStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the system power is online, or that the system power status is unknown.</summary>
        <value>A value in the enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PowerLine"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.PowerLine`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PowerLineStatusKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey PowerLineStatusKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey PowerLineStatusKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.PowerLineStatus%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PowerLineKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.PowerLineKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenHeight">
      <MemberSignature Language="C#" Value="public static double PrimaryScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 PrimaryScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the screen height, in pixels, of the primary display monitor.</summary>
        <value>The height of the screen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_PrimaryScreenHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.PrimaryScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey PrimaryScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey PrimaryScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.PrimaryScreenHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PrimaryScreenHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.PrimaryScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenWidth">
      <MemberSignature Language="C#" Value="public static double PrimaryScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 PrimaryScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the screen width, in pixels, of the primary display monitor.</summary>
        <value>The width of the screen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_PrimaryScreenWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.PrimaryScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrimaryScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey PrimaryScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey PrimaryScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.PrimaryScreenWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PrimaryScreenWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.PrimaryScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double ResizeFrameHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ResizeFrameHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height (thickness), in pixels, of the horizontal sizing border around the perimeter of a window that can be resized.</summary>
        <value>The height of the border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXSIZEFRAME. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ResizeFrameHorizontalBorderHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ResizeFrameHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ResizeFrameHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ResizeFrameHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ResizeFrameHorizontalBorderHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ResizeFrameHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double ResizeFrameVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ResizeFrameVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width (thickness), in pixels, of the vertical sizing border around the perimeter of a window that can be resized.</summary>
        <value>The width of the border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYSIZEFRAME. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ResizeFrameVerticalBorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ResizeFrameVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResizeFrameVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ResizeFrameVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ResizeFrameVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ResizeFrameVerticalBorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ResizeFrameVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ScrollHeight">
      <MemberSignature Language="C#" Value="public static double ScrollHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ScrollHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the scroll height of the nonclient area of a nonminimized window.</summary>
        <value>The scroll height, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The metric is obtained from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ScrollHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ScrollHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ScrollHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ScrollHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ScrollHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ScrollHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScrollHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ScrollHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ScrollWidth">
      <MemberSignature Language="C#" Value="public static double ScrollWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ScrollWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the scroll width of the nonclient area of a nonminimized window.</summary>
        <value>The scroll width, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The metric is obtained from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ScrollWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ScrollWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ScrollWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ScrollWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ScrollWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ScrollWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScrollWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ScrollWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionFade">
      <MemberSignature Language="C#" Value="public static bool SelectionFade { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SelectionFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the selection fade effect is enabled.</summary>
        <value>
          <see langword="true" /> if the fade effect is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The selection fade effect causes the menu item selected by the user to remain on the screen briefly while fading out after a menu is dismissed.  
  
 Maps to SPI_GETSELECTIONFADE. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_SelectionFade"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SelectionFade`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SelectionFadeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SelectionFadeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SelectionFadeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SelectionFade%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionFadeKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SelectionFadeKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowSounds">
      <MemberSignature Language="C#" Value="public static bool ShowSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShowSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the user requires information in visual format.</summary>
        <value>
          <see langword="true" /> if the user requires an application to present information visually where it typically presents the information only in audible form; otherwise <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_SHOWSOUNDS. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ShowSounds"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ShowSounds`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShowSoundsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ShowSoundsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ShowSoundsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ShowSounds%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ShowSoundsKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ShowSoundsKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionHeight">
      <MemberSignature Language="C#" Value="public static double SmallCaptionHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallCaptionHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the height of the small caption of the nonclient area of a nonminimized window.</summary>
        <value>The caption height, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtain the metric from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_SmallCaptionHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SmallCaptionHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallCaptionHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallCaptionHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SmallCaptionHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallCaptionHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SmallCaptionHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionWidth">
      <MemberSignature Language="C#" Value="public static double SmallCaptionWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallCaptionWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metric that determines the width of the small caption of the nonclient area of a nonminimized window.</summary>
        <value>The caption width, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtain the metric from SPI_GETNONCLIENTMETRICS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_SmallCaptionWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SmallCaptionWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallCaptionWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallCaptionWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SmallCaptionWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallCaptionWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SmallCaptionWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallIconHeight">
      <MemberSignature Language="C#" Value="public static double SmallIconHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallIconHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the recommended height, in pixels, of a small icon.</summary>
        <value>The icon height.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Small icons typically appear in window captions and in small-icon view.  
  
 Maps to SM_CYSMICON. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_SmallIconHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SmallIconHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallIconHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallIconHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallIconHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SmallIconHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallIconHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SmallIconHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallIconWidth">
      <MemberSignature Language="C#" Value="public static double SmallIconWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallIconWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the recommended width, in pixels, of a small icon.</summary>
        <value>The width of the icon.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Small icons typically appear in window captions and in small-icon view.  
  
 Maps to SM_CXSMICON. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_SmallIconWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SmallIconWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallIconWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallIconWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallIconWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SmallIconWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallIconWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SmallIconWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonHeight">
      <MemberSignature Language="C#" Value="public static double SmallWindowCaptionButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallWindowCaptionButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of small caption buttons.</summary>
        <value>The height of the caption button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYSMSIZE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SmallWindowCaptionButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallWindowCaptionButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallWindowCaptionButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SmallWindowCaptionButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonWidth">
      <MemberSignature Language="C#" Value="public static double SmallWindowCaptionButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 SmallWindowCaptionButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of small caption buttons.</summary>
        <value>The width of the caption button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXSMSIZE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SmallWindowCaptionButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SmallWindowCaptionButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SmallWindowCaptionButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SmallWindowCaptionButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SmallWindowCaptionButtonWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SmallWindowCaptionButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SnapToDefaultButton">
      <MemberSignature Language="C#" Value="public static bool SnapToDefaultButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SnapToDefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the snap-to-default button is enabled. If enabled, the mouse cursor automatically moves to the default button of a dialog box, such as **OK** or **Apply**.</summary>
        <value>
          <see langword="true" /> when the feature is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtain this metric from SPI_GETSNAPTODEFBUTTON. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_SnapToDefaultButton"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SnapToDefaultButton`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SnapToDefaultButtonKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SnapToDefaultButtonKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SnapToDefaultButtonKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SnapToDefaultButton%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SnapToDefaultButtonKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SnapToDefaultButtonKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StaticPropertyChanged">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.PropertyChangedEventHandler StaticPropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler StaticPropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when one of the properties changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylusHotTracking">
      <MemberSignature Language="C#" Value="public static bool StylusHotTracking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool StylusHotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether hot tracking of a stylus is enabled.</summary>
        <value>
          <see langword="true" /> if hot tracking of a stylus is enabled; otherwise <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETSTYLUSHOTTRACKING. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_StylusHotTracking"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.StylusHotTracking`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StylusHotTrackingKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey StylusHotTrackingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey StylusHotTrackingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.StylusHotTracking%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_StylusHotTrackingKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.StylusHotTrackingKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SwapButtons">
      <MemberSignature Language="C#" Value="public static bool SwapButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SwapButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the functionality of the left and right mouse buttons are swapped.</summary>
        <value>
          <see langword="true" /> if the functionality of the left and right mouse buttons are swapped; otherwise <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_SWAPBUTTON. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_SwapButtons"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.SwapButtons`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SwapButtonsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SwapButtonsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SwapButtonsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.SwapButtons%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SwapButtonsKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.SwapButtonsKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThickHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double ThickHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThickHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] border.</summary>
        <value>The height of a border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXEDGE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ThickHorizontalBorderHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ThickHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThickHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThickHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThickHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ThickHorizontalBorderHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThickHorizontalBorderHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ThickHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThickVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double ThickVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThickVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a [!INCLUDE[TLA#tla_3d](~/add/includes/tlasharptla-3d-md.md)] border.</summary>
        <value>The width of a border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYEDGE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ThickVerticalBorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ThickVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThickVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThickVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThickVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ThickVerticalBorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThickVerticalBorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ThickVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThinHorizontalBorderHeight">
      <MemberSignature Language="C#" Value="public static double ThinHorizontalBorderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThinHorizontalBorderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a horizontal window border.</summary>
        <value>The height of a border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXBORDER. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ThinHorizontalBorderHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ThinHorizontalBorderHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThinHorizontalBorderHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThinHorizontalBorderHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThinHorizontalBorderHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ThinHorizontalBorderHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThinHorizontalBorderHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ThinHorizontalBorderHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThinVerticalBorderWidth">
      <MemberSignature Language="C#" Value="public static double ThinVerticalBorderWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 ThinVerticalBorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a vertical window border.</summary>
        <value>The width of a border.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYBORDER. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_ThinVerticalBorderWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ThinVerticalBorderWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ThinVerticalBorderWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ThinVerticalBorderWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ThinVerticalBorderWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ThinVerticalBorderWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ThinVerticalBorderWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ThinVerticalBorderWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTipAnimation">
      <MemberSignature Language="C#" Value="public static bool ToolTipAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ToolTipAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether <see cref="T:System.Windows.Controls.ToolTip" /> animation is enabled.</summary>
        <value>
          <see langword="true" /> if ToolTip animation is enabled; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETTOOLTIPANIMATION. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ToolTipAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ToolTipAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTipAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToolTipAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToolTipAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ToolTipAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ToolTipAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTipFade">
      <MemberSignature Language="C#" Value="public static bool ToolTipFade { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ToolTipFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether ToolTip animation uses a fade effect or a slide effect.</summary>
        <value>
          <see langword="true" /> if a fade effect is used; <see langword="false" /> if a slide effect is used.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.SystemParameters.ToolTipAnimation%2A> must be enabled.  
  
 Maps to SPI_GETTOOLTIPFADE. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_ToolTipFade"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ToolTipFade`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTipFadeKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToolTipFadeKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToolTipFadeKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ToolTipFade%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipFadeKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ToolTipFadeKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTipPopupAnimation">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Primitives.PopupAnimation ToolTipPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Primitives.PopupAnimation ToolTipPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the system value of the &lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt; property for ToolTips.</summary>
        <value>A system value for the pop-up animation property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipPopupAnimation"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.ToolTipPopupAnimation`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToolTipPopupAnimationKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToolTipPopupAnimationKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToolTipPopupAnimationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.ToolTipPopupAnimation%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ToolTipPopupAnimationKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.ToolTipPopupAnimationKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UIEffects">
      <MemberSignature Language="C#" Value="public static bool UIEffects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UIEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether all [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] effects are enabled.</summary>
        <value>
          <see langword="true" /> if all [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] effects are enabled; <see langword="false" /> if they are disabled.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETUIEFFECTS. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_UIEffects"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.UIEffects`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UIEffectsKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey UIEffectsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey UIEffectsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.UIEffects%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_UIEffectsKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.UIEffectsKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UxThemeColor">
      <MemberSignature Language="C#" Value="public static string UxThemeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UxThemeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the color theme name.</summary>
        <value>The color theme name.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UxThemeName">
      <MemberSignature Language="C#" Value="public static string UxThemeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UxThemeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the theme name.</summary>
        <value>The theme name.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarButtonHeight">
      <MemberSignature Language="C#" Value="public static double VerticalScrollBarButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VerticalScrollBarButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of the arrow bitmap on a vertical scroll bar.</summary>
        <value>The height of a bitmap.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYVSCROLL. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VerticalScrollBarButtonHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VerticalScrollBarButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VerticalScrollBarButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VerticalScrollBarButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VerticalScrollBarButtonHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VerticalScrollBarButtonHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VerticalScrollBarButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarThumbHeight">
      <MemberSignature Language="C#" Value="public static double VerticalScrollBarThumbHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VerticalScrollBarThumbHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of the thumb in a vertical scroll bar.</summary>
        <value>The height of the thumb.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYVTHUMB. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VerticalScrollBarThumbHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VerticalScrollBarThumbHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarThumbHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VerticalScrollBarThumbHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VerticalScrollBarThumbHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VerticalScrollBarThumbHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VerticalScrollBarThumbHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VerticalScrollBarThumbHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarWidth">
      <MemberSignature Language="C#" Value="public static double VerticalScrollBarWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VerticalScrollBarWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a vertical scroll bar.</summary>
        <value>The width of a scroll bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXVSCROLL. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VerticalScrollBarWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VerticalScrollBarWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VerticalScrollBarWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VerticalScrollBarWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VerticalScrollBarWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VerticalScrollBarWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VerticalScrollBarWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenHeight">
      <MemberSignature Language="C#" Value="public static double VirtualScreenHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of the virtual screen.</summary>
        <value>The height of the virtual screen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The virtual screen is the bounding rectangle of all display monitors. The <xref:System.Windows.SystemParameters.VirtualScreenTop%2A> and <xref:System.Windows.SystemParameters.VirtualScreenLeft%2A> metrics are the coordinates of the upper-left corner of the virtual screen.  
  
 Maps to SM_CYVIRTUALSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VirtualScreenHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VirtualScreenHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VirtualScreenHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VirtualScreenHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenLeft">
      <MemberSignature Language="C#" Value="public static double VirtualScreenLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the coordinate for the left side of the virtual screen.</summary>
        <value>A screen coordinate, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The virtual screen is the bounding rectangle of all display monitors. The <xref:System.Windows.SystemParameters.VirtualScreenWidth%2A> and <xref:System.Windows.SystemParameters.VirtualScreenHeight%2A> metrics are the width and height of the virtual screen.  
  
 Maps to SM_XVIRTUALSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VirtualScreenLeft"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VirtualScreenLeft`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenLeftKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenLeftKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenLeftKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VirtualScreenLeft%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenLeftKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VirtualScreenLeftKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenTop">
      <MemberSignature Language="C#" Value="public static double VirtualScreenTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the upper coordinate of the virtual screen.</summary>
        <value>A screen coordinate, in pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The virtual screen is the bounding rectangle of all display monitors. The <xref:System.Windows.SystemParameters.VirtualScreenWidth%2A> and <xref:System.Windows.SystemParameters.VirtualScreenHeight%2A> metrics are the width and height of the virtual screen.  
  
 Maps to SM_YVIRTUALSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VirtualScreenTop"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VirtualScreenTop`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenTopKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenTopKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenTopKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VirtualScreenTop%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenTopKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VirtualScreenTopKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenWidth">
      <MemberSignature Language="C#" Value="public static double VirtualScreenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 VirtualScreenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of the virtual screen.</summary>
        <value>The width of the virtual screen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The virtual screen is the bounding rectangle of all display monitors. The <xref:System.Windows.SystemParameters.VirtualScreenTop%2A> and <xref:System.Windows.SystemParameters.VirtualScreenLeft%2A> metrics are the coordinates of the upper-left corner of the virtual screen.  
  
 Maps to SM_CXVIRTUALSCREEN. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_VirtualScreenWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.VirtualScreenWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="VirtualScreenWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey VirtualScreenWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey VirtualScreenWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.VirtualScreenWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_VirtualScreenWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.VirtualScreenWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WheelScrollLines">
      <MemberSignature Language="C#" Value="public static int WheelScrollLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WheelScrollLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the number of lines to scroll when the mouse wheel is rotated.</summary>
        <value>The number of lines.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SPI_GETWHEELSCROLLLINES. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_WheelScrollLines"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.WheelScrollLines`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WheelScrollLinesKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WheelScrollLinesKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WheelScrollLinesKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.WheelScrollLines%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WheelScrollLinesKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.WheelScrollLinesKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonHeight">
      <MemberSignature Language="C#" Value="public static double WindowCaptionButtonHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 WindowCaptionButtonHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a button in the title bar of a window.</summary>
        <value>The height of a caption button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYSIZE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_WindowCaptionButtonHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.WindowCaptionButtonHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WindowCaptionButtonHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WindowCaptionButtonHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.WindowCaptionButtonHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WindowCaptionButtonHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.WindowCaptionButtonHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonWidth">
      <MemberSignature Language="C#" Value="public static double WindowCaptionButtonWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 WindowCaptionButtonWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the width, in pixels, of a button in the title bar of a window.</summary>
        <value>The width of a caption button.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CXSIZE. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_WindowCaptionButtonWidth"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.WindowCaptionButtonWidth`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionButtonWidthKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WindowCaptionButtonWidthKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WindowCaptionButtonWidthKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.WindowCaptionButtonWidth%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WindowCaptionButtonWidthKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.WindowCaptionButtonWidthKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionHeight">
      <MemberSignature Language="C#" Value="public static double WindowCaptionHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 WindowCaptionHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates the height, in pixels, of a caption area.</summary>
        <value>The height of a caption area.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maps to SM_CYCAPTION. See [GetSystemMetrics](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/getsystemmetrics.asp).  
  
<a name="xamlAttributeUsage_WindowCaptionHeight"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.WindowCaptionHeight`}`"/>  
  
 ]]></format>
        </remarks>
        <permission cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">to call this method, because it calls an unsafe native method. Associated enumeration:  
  
 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCaptionHeightKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WindowCaptionHeightKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WindowCaptionHeightKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.WindowCaptionHeight%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WindowCaptionHeightKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.WindowCaptionHeightKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowCornerRadius">
      <MemberSignature Language="C#" Value="public static System.Windows.CornerRadius WindowCornerRadius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.CornerRadius WindowCornerRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.CornerRadius</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the radius of the corners for a window.</summary>
        <value>The degree to which the corners of a window are rounded.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowGlassBrush">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Brush WindowGlassBrush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.Brush WindowGlassBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the brush that paints the glass window frame.</summary>
        <value>The brush that paints the glass window frame.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowGlassColor">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color WindowGlassColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Color WindowGlassColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the color that is used to paint the glass window frame.</summary>
        <value>The color that is used to paint the glass window frame.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowNonClientFrameThickness">
      <MemberSignature Language="C#" Value="public static System.Windows.Thickness WindowNonClientFrameThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Thickness WindowNonClientFrameThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the non-client area of the window.</summary>
        <value>The size of the non-client area of the window, in device-independent units (1/96th of an inch).</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WindowResizeBorderThickness">
      <MemberSignature Language="C#" Value="public static System.Windows.Thickness WindowResizeBorderThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Thickness WindowResizeBorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the resizing border around the window.</summary>
        <value>The size of the resizing border around the window, in device-independent units (1/96th of an inch).</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WorkArea">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect WorkArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect WorkArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the work area on the primary display monitor.</summary>
        <value>A <see langword="RECT" /> structure that receives the work area coordinates, expressed as virtual screen coordinates.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The work area is the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars.  
  
 Maps to SPI_GETWORKAREA. See [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp).  
  
<a name="xamlAttributeUsage_WorkArea"></a>   
## XAML Attribute Usage  
 <*object property*="{ SystemParameters.WorkArea`}`"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WorkAreaKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey WorkAreaKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey WorkAreaKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the &lt;xref:System.Windows.SystemParameters.WorkArea%2A&gt; property.</summary>
        <value>A resource key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_WorkAreaKey"></a>   
## XAML Attribute Usage  
 \<*object property*="{ { SystemParameters.WorkAreaKey}}"/>  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>