<Type Name="XamlAccessLevel" FullName="System.Xaml.Permissions.XamlAccessLevel">
  <TypeSignature Language="C#" Value="public class XamlAccessLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlAccessLevel extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines access control to assemblies and types for purposes of XAML loading.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Static methods of XamlAccessLevel return instances of XamlAccessLevel, based on input. This is the only way to generate a XamlAccessLevel value (the constructor is private).  
  
 XamlAccessLevel is generally only used in conjunction with <xref:System.Xaml.Permissions.XamlLoadPermission>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="AssemblyAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo(class System.Reflection.Assembly assembly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly for the request.</param>
        <summary>Returns a <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance based on an assembly requested by &lt;xref:System.Reflection.Assembly&gt;.</summary>
        <returns>A <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance, with the <paramref name="assembly" /> value used as source information for &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt;.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AssemblyAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName">The assembly name for the request.</param>
        <summary>Returns a <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance based on an assembly requested by &lt;xref:System.Reflection.AssemblyName&gt;.</summary>
        <returns>A <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance, with the <paramref name="assemblyName" /> value used as source information for &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt;.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyName" /> is not a valid fully qualified assembly name.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AssemblyAccessToAssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyAccessToAssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyAccessToAssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;xref:System.Reflection.AssemblyName&gt; of the assembly for which this <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determines permissions.</summary>
        <value>The &lt;xref:System.Reflection.AssemblyName&gt; of the assembly for which this <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determines permissions.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrivateAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo (string assemblyQualifiedTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo(string assemblyQualifiedTypeName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyQualifiedTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyQualifiedTypeName">A string that is parsed as an assembly-qualified type name.</param>
        <summary>Returns a <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance based on a specific type specified by its qualified name.</summary>
        <returns>A <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance, with the <paramref name="assemblyQualifiedTypeName" /> value used as source information for &lt;xref:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName%2A?displayProperty=fullName&gt; and &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt; determined by reflection on the type.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyQualifiedTypeName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyQualifiedTypeName" /> is not a valid assembly-qualified type name.  
  
 -or-  
  
 Assembly name within <paramref name="assemblyQualifiedTypeName" /> is not a valid assembly name.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrivateAccessTo">
      <MemberSignature Language="C#" Value="public static System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The &lt;xref:System.Type&gt; to request access for.</param>
        <summary>Returns a <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance based on a specific type specified by &lt;xref:System.Type&gt;.</summary>
        <returns>A <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> instance, with the <paramref name="type" /> value used as source information for &lt;xref:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName%2A?displayProperty=fullName&gt; and &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt; determined by reflection on the type.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PrivateAccessToTypeName">
      <MemberSignature Language="C#" Value="public string PrivateAccessToTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateAccessToTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unqualified string name of the type for which this <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determines permissions.</summary>
        <value>The unqualified string name of the type for which this <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determines permissions.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>