<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 One of the ways to specify a binding source is to use the <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> property. This is the property type of that property. RelativeSource is simultaneously a markup extension implementation and a data object. When the extension returns itself (see <xref:System.Windows.Data.RelativeSource.ProvideValue%2A>), the relevant information is contained in the data. The main purpose of the markup extension is to allow a variable-argument constructor syntax in attribute form, so that the <xref:System.Windows.Data.RelativeSourceMode> mode can be defined inline with the two extra arguments for ancestor type and level that the other modes do not require.  
  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
<a name="xamlTextUsage_RelativeSource"></a>   
## XAML Text Usage  
   
  
## Examples  
 The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. Using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property, the value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style). For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]  
  
 The following example shows the <xref:System.Windows.Style> definition of a custom control called `NumericUpDown`. The <xref:System.Windows.Controls.TextBlock.Text%2A> property of the <xref:System.Windows.Controls.TextBlock> is bound to the `Value` of the object that is the `TemplatedParent`, which is the `NumericUpDown` control that this <xref:System.Windows.Style> is applied to in this case.  
  
 [!code-xml[CustomControlNumericUpDown#RelativeSource](~/add/codesnippet/xaml/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 For the complete sample, see [NumericUpDown Custom Control with Theme and UI Automation Support Sample](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 The following returns the second <xref:System.Windows.Controls.ItemsControl> encountered on the upward path starting at the target element of the binding.  
  
 [!code-cs[BindConversion#RelativeSource](~/add/codesnippet/csharp/BindConversion/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/add/codesnippet/visualbasic/bindconversion/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. For this signature to be relevant, this should be <see cref="T:System.Windows.Data.RelativeSourceMode" />.</param>
        <param name="ancestorType">The &lt;xref:System.Type&gt; of ancestor to look for.</param>
        <param name="ancestorLevel">The ordinal position of the desired ancestor among all ancestors of the given type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode and additional tree-walking qualifiers for finding the desired relative source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType` and `ancestorLevel` have no relevance if given as parameters for a `mode` other than <xref:System.Windows.Data.RelativeSourceMode>. Do not use this signature for the other <xref:System.Windows.Data.RelativeSourceMode> values.  
  
   
  
## Examples  
 The following returns the second <xref:System.Windows.Controls.ItemsControl> encountered on the upward path starting at the target element of the binding.  
  
 [!code-cs[BindConversion#RelativeSource](~/add/codesnippet/csharp/BindConversion/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/add/codesnippet/visualbasic/bindconversion/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the level of ancestor to look for, in <see cref="T:System.Windows.Data.RelativeSourceMode" /> mode. Use 1 to indicate the one nearest to the binding target element.</summary>
        <value>The ancestor level. Use 1 to indicate the one nearest to the binding target element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Windows.Data.RelativeSource.Mode%2A> property is not set explicitly, setting the <xref:System.Windows.Data.RelativeSource.AncestorType%2A> or the AncestorLevel property will implicitly lock the <xref:System.Windows.Data.RelativeSource.Mode%2A> property value to <xref:System.Windows.Data.RelativeSourceMode>.  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## XAML Text Usage  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following returns the second <xref:System.Windows.Controls.ItemsControl> encountered on the upward path starting at the target element of the binding.  
  
 [!code-cs[BindConversion#RelativeSource](~/add/codesnippet/csharp/BindConversion/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/add/codesnippet/visualbasic/bindconversion/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of ancestor to look for.</summary>
        <value>The type of ancestor. The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Windows.Data.RelativeSource.Mode%2A> property is not set explicitly, setting the AncestorType or the <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> property will implicitly lock the <xref:System.Windows.Data.RelativeSource.Mode%2A> property value to <xref:System.Windows.Data.RelativeSourceMode>.  
  
<a name="xamlTextUsage_AncestorType"></a>   
## XAML Text Usage  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following returns the second <xref:System.Windows.Controls.ItemsControl> encountered on the upward path starting at the target element of the binding.  
  
 [!code-cs[BindConversion#RelativeSource](~/add/codesnippet/csharp/BindConversion/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/add/codesnippet/visualbasic/bindconversion/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.RelativeSource" /> is not in the <see cref="T:System.Windows.Data.RelativeSourceMode" /> mode.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Data.RelativeSourceMode" /> value that describes the location of the binding source relative to the position of the binding target.</summary>
        <value>One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. The default value is <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is read-only after initialization. If this property is not set explicitly, setting the <xref:System.Windows.Data.RelativeSource.AncestorType%2A> or the <xref:System.Windows.Data.RelativeSource.AncestorType%2A> and the <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> properties will implicitly lock this property value to <xref:System.Windows.Data.RelativeSourceMode>.  
  
<a name="xamlTextUsage_Mode"></a>   
## XAML Text Usage  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">This property is immutable after initialization. Instead of changing the Mode on this instance, create a new <see cref="T:System.Windows.Data.RelativeSource" /> or use a different static instance.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="T:System.Windows.Data.RelativeSourceMode" /> mode.</summary>
        <value>A static <see cref="T:System.Windows.Data.RelativeSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Three of the four <xref:System.Windows.Data.RelativeSourceMode> values, <xref:System.Windows.Data.RelativeSourceMode>, <xref:System.Windows.Data.RelativeSourceMode>, or <xref:System.Windows.Data.RelativeSourceMode>, can produce a <xref:System.Windows.Data.RelativeSource> that is wholly static, containing no unique private values. All uses of the static property can share the same object, eliminating the need to allocate separate objects for each use. Therefore, using the static property reduces memory usage.  
  
<a name="xamlTextUsage_PreviousData"></a>   
## XAML Text Usage  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An object that can provide services for the markup extension. In this implementation, this parameter can be <see langword="null" />.</param>
        <summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.Data.RelativeSource" />, this is another <see cref="T:System.Windows.Data.RelativeSource" />, using the appropriate source for the specified mode.</summary>
        <returns>Another <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource> is simultaneously a markup extension implementation and a data object. When the extension returns itself, the relevant information is contained in the data. The main purpose of the markup extension is to allow a variable-argument constructor syntax in attribute form so that the <xref:System.Windows.Data.RelativeSourceMode> mode can be defined inline, with the two extra arguments for ancestor type and level that the other modes do not require.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="T:System.Windows.Data.RelativeSourceMode" /> mode.</summary>
        <value>A static <see cref="T:System.Windows.Data.RelativeSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Three of the four <xref:System.Windows.Data.RelativeSourceMode> values, <xref:System.Windows.Data.RelativeSourceMode>, <xref:System.Windows.Data.RelativeSourceMode>, or <xref:System.Windows.Data.RelativeSourceMode>, can produce a <xref:System.Windows.Data.RelativeSource> that is wholly static, containing no unique private values. All uses of the static property can share the same object, eliminating the need to allocate separate objects for each use. Therefore, using the static property reduces memory usage.  
  
<a name="xamlTextUsage_Self"></a>   
## XAML Text Usage  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. See [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md) for more information on this example.  
  
 [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the &lt;xref:System.Windows.Data.RelativeSource.AncestorLevel%2A&gt; property should be persisted.</summary>
        <returns>
          <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.RelativeSource> or developing your own control incorporating the <xref:System.Windows.Data.RelativeSource>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the &lt;xref:System.Windows.Data.RelativeSource.AncestorType%2A&gt; property should be persisted.</summary>
        <returns>
          <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.RelativeSource.AncestorType%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.RelativeSource> or developing your own control incorporating the <xref:System.Windows.Data.RelativeSource>.  
  
 For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="T:System.Windows.Data.RelativeSourceMode" /> mode.</summary>
        <value>A static <see cref="T:System.Windows.Data.RelativeSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Three of the four <xref:System.Windows.Data.RelativeSourceMode> values, <xref:System.Windows.Data.RelativeSourceMode>, <xref:System.Windows.Data.RelativeSourceMode>, or <xref:System.Windows.Data.RelativeSourceMode>, can produce a <xref:System.Windows.Data.RelativeSource> that is wholly static, containing no unique private values. All uses of the static property can share the same object, eliminating the need to allocate separate objects for each use. Therefore, using the static property reduces memory usage.  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## XAML Text Usage  
 For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example shows the <xref:System.Windows.Style> definition of a custom control called `NumericUpDown`. The <xref:System.Windows.Controls.TextBlock.Text%2A> property of the <xref:System.Windows.Controls.TextBlock> is bound to the `Value` of the object that is the `TemplatedParent`, which is the `NumericUpDown` control that this <xref:System.Windows.Style> is applied to in this case.  
  
 [!code-xml[CustomControlNumericUpDown#RelativeSource](~/add/codesnippet/xaml/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 For the complete sample, see [NumericUpDown Custom Control with Theme and UI Automation Support Sample](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>