<Type Name="MalformedLineException" FullName="Microsoft.VisualBasic.FileIO.MalformedLineException">
  <TypeSignature Language="C#" Value="public class MalformedLineException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable MalformedLineException extends System.Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The exception that is thrown when the &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A&gt; method cannot parse a row using the specified format.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Check to ensure that the `TextFieldType` and `Delimiter` parameters are defined properly.  
  
 If the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> method cannot parse a row using the specified format, the MalformedLineException exception is thrown. The exception contains the line number of the malformed line.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The exception indicates that the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> method cannot parse a row using the specified format.  
  
 The following table shows the initial property values for an instance of <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>.  
  
|||  
|-|-|  
|Property|Value|  
|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|The localized error message string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A message that describes the error.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  
  
 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> inherits from the <xref:System.Exception> class. This constructor sets the properties of the <xref:System.Exception> object as shown in the following table.  
  
|||  
|-|-|  
|Property|Value|  
|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic)|  
|<xref:System.Exception.Message%2A>|The `message` string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MalformedLineException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; structure that contains contextual information about the source or destination.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with serialized data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A &lt;xref:System.String&gt; describing the error.</param>
        <param name="innerException">The &lt;xref:System.Exception&gt; object that is the cause of the current exception. If the &lt;xref:System.Exception.InnerException%2A&gt; parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  
  
 An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  
  
 The following table shows the initial property values for an instance of <xref:System.ApplicationException>.  
  
|||  
|-|-|  
|Property|Value|  
|<xref:System.Exception.InnerException%2A>|The `innerException` reference.|  
|<xref:System.Exception.Message%2A>|The `message` string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message, long lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, int64 lineNumber) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="message">The message for the exception.</param>
        <param name="lineNumber">The line number of the malformed line.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message and a line number.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. The `lineNumber` parameter initializes the <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A> property.  
  
 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> inherits from the <xref:System.Exception>. This constructor sets the properties of the <xref:System.Exception> object as shown in the following table.  
  
|||  
|-|-|  
|Property|Value|  
|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic)|  
|<xref:System.Exception.Message%2A>|The `message` string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message, long lineNumber, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, int64 lineNumber, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int64" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message for the exception.</param>
        <param name="lineNumber">The line number of the malformed line.</param>
        <param name="innerException">The &lt;xref:System.Exception&gt; that is the cause of the current exception. If the &lt;xref:System.Exception.InnerException%2A&gt; parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. The `lineNumber` parameter initializes the <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A> property.  
  
 An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  
  
 The following table shows the initial property values for an instance of <xref:System.ApplicationException>.  
  
|||  
|-|-|  
|Property|Value|  
|<xref:System.Exception.InnerException%2A>|The `innerException` reference.|  
|<xref:System.Exception.Message%2A>|The `message` string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; structure that contains contextual information about the source or destination.</param>
        <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line number of the malformed line.</summary>
        <value>The line number of the malformed line.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> method cannot parse a row using the specified format, the <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception is thrown. The exception contains the line number of the malformed line.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a string representation of the current exception.</summary>
        <returns>A string representation of the current exception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ToString returns a representation of the current exception that is intended to be understood by humans. Where the exception contains culture-sensitive data, the string representation returned by ToString is required to take into account the current system culture. Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.  
  
 The default implementation of ToString obtains the name of the class that threw the current exception, the message, the result of calling ToString on the inner exception, the result of calling <xref:System.Environment.StackTrace%2A>, and the line number of the malformed line If any of these members is a null reference (`Nothing` in Visual Basic), its value is not included in the returned string.  
  
 If there is no error message or if it is an empty string (""), then no error message is returned. The name of the inner exception and the stack trace are returned only if they are not a null reference (`Nothing` in Visual Basic).  
  
 This method overrides <xref:System.Exception.ToString%2A?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>