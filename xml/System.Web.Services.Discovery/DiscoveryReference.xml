<Type Name="DiscoveryReference" FullName="System.Web.Services.Discovery.DiscoveryReference">
  <TypeSignature Language="C#" Value="public abstract class DiscoveryReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DiscoveryReference extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The base class for discoverable references using XML Web services discovery.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Discovery.ContractReference>, <xref:System.Web.Services.Discovery.SchemaReference>, and <xref:System.Web.Services.Discovery.DiscoveryDocumentReference> all inherit from DiscoveryReference, and represent the three types of documents discoverable through XML Web services discovery: Service Descriptions, XML Schema Definition (XSD) schemas, and discovery documents, respectively.  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference1#1](~/add/codesnippet/cpp/t-system.web.services.di_11_1.cpp)]
 [!code-cs[DiscoveryReference1#1](~/add/codesnippet/csharp/t-system.web.services.di_11_1.cs)]
 [!code-vb[DiscoveryReference1#1](~/add/codesnippet/visualbasic/t-system.web.services.di_11_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoveryReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ClientProtocol">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process.</summary>
        <value>An instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cs[DiscoveryReference#1](~/add/codesnippet/csharp/p-system.web.services.di_11_1.cs)]
 [!code-cpp[DiscoveryReference#1](~/add/codesnippet/cpp/p-system.web.services.di_11_1.cpp)]
 [!code-vb[DiscoveryReference#1](~/add/codesnippet/visualbasic/p-system.web.services.di_11_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefaultFilename">
      <MemberSignature Language="C#" Value="public virtual string DefaultFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the default file to use when saving the referenced discovery document, XSD schema, or Service Description.</summary>
        <value>Name of the default file to use when saving the referenced document.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cs[DiscoveryReference#1](~/add/codesnippet/csharp/p-system.web.services.di_27_1.cs)]
 [!code-cpp[DiscoveryReference#1](~/add/codesnippet/cpp/p-system.web.services.di_27_1.cpp)]
 [!code-vb[DiscoveryReference#1](~/add/codesnippet/visualbasic/p-system.web.services.di_27_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FilenameFromUrl">
      <MemberSignature Language="C#" Value="public static string FilenameFromUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FilenameFromUrl(string url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">The URL on which the name of the file is based.</param>
        <summary>Returns a file name based on the passed URL.</summary>
        <returns>Name of the file based on the passed URL.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReadDocument">
      <MemberSignature Language="C#" Value="public abstract object ReadDocument (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadDocument(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">&lt;xref:System.IO.Stream&gt; containing the reference document.</param>
        <summary>Reads the passed &lt;xref:System.IO.Stream&gt; and returns an instance of the class representing the type of referenced document.</summary>
        <returns>An &lt;xref:System.Object&gt; with an underlying type matching the type of referenced document.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The return value is always an <xref:System.Object>. However, the underlying type varies, depending on the type of document referenced. For instance, a <xref:System.IO.Stream> passed into <xref:System.Web.Services.Discovery.SchemaReference.ReadDocument%2A?displayProperty=fullName> returns an instance of <xref:System.Xml.Schema.XmlSchema>.  
  
   
  
## Examples  
 [!code-cs[DiscoveryReference#1](~/add/codesnippet/csharp/a3880945-3c81-41fa-8b40-_1.cs)]
 [!code-cpp[DiscoveryReference#1](~/add/codesnippet/cpp/a3880945-3c81-41fa-8b40-_1.cpp)]
 [!code-vb[DiscoveryReference#1](~/add/codesnippet/visualbasic/a3880945-3c81-41fa-8b40-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Downloads the referenced document at &lt;xref:System.Web.Services.Discovery.DiscoveryReference.Url%2A&gt; to resolve whether the referenced document is valid.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Downloads the referenced document and then invokes the overloaded Resolve member that takes a MIME type and a <xref:System.IO.Stream>. If the MIME type and the contents of `stream` match those expected by the reference type, then the contents of `stream` are added to the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> and <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> properties of <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A>.  
  
   
  
## Examples  
 [!code-cs[DiscoveryReference#1](~/add/codesnippet/csharp/m-system.web.services.di_1_1.cs)]
 [!code-cpp[DiscoveryReference#1](~/add/codesnippet/cpp/m-system.web.services.di_1_1.cpp)]
 [!code-vb[DiscoveryReference#1](~/add/codesnippet/visualbasic/m-system.web.services.di_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The &lt;xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A&gt; property is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="protected abstract void Resolve (string contentType, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Resolve(string contentType, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="contentType">The MIME type of `stream`.</param>
        <param name="stream">The &lt;xref:System.IO.Stream&gt; containing the referenced document.</param>
        <summary>Resolves whether the referenced document is valid.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the MIME type and the contents of `stream` match those expected by the reference type, then the contents of `stream` are added to the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> and <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> properties of <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the referenced document.</summary>
        <value>The URL of the referenced document.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cs[DiscoveryReference#1](~/add/codesnippet/csharp/p-system.web.services.di_18_1.cs)]
 [!code-cpp[DiscoveryReference#1](~/add/codesnippet/cpp/p-system.web.services.di_18_1.cpp)]
 [!code-vb[DiscoveryReference#1](~/add/codesnippet/visualbasic/p-system.web.services.di_18_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="WriteDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteDocument (object document, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocument(object document, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="document">The document to write into a &lt;xref:System.IO.Stream&gt;.</param>
        <param name="stream">The &lt;xref:System.IO.Stream&gt; into which the `document` is written.</param>
        <summary>When overridden in a derived class, writes the document to a &lt;xref:System.IO.Stream&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 DiscoveryReference#1  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>