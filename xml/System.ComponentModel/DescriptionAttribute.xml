<Type Name="DescriptionAttribute" FullName="System.ComponentModel.DescriptionAttribute">
  <TypeSignature Language="C#" Value="public class DescriptionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DescriptionAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies a description for a property or event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A visual designer can display the specified description when referencing the component member, such as in a Properties window. Call <xref:System.ComponentModel.DescriptionAttribute.Description%2A> to access the value of this attribute.  
  
 For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example creates the `MyImage` property. The property has two attributes, a DescriptionAttribute and a <xref:System.ComponentModel.CategoryAttribute>.  
  
 [!code-cpp[Classic DescriptionAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._116_1.cpp)]
 [!code-cs[Classic DescriptionAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._116_1.cs)]
 [!code-vb[Classic DescriptionAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._116_1.vb)]  
  
 The next example gets the description of `MyImage`. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyImage`. Then it returns the attributes for this property and saves them in the attributes variable.  
  
 The example then prints the description by retrieving DescriptionAttribute from the <xref:System.ComponentModel.AttributeCollection>, and writing it to the console screen.  
  
 [!code-cpp[Classic DescriptionAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._116_2.cpp)]
 [!code-cs[Classic DescriptionAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._116_2.cs)]
 [!code-vb[Classic DescriptionAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._116_2.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DescriptionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DescriptionAttribute" /> class with no parameters.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DescriptionAttribute (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string description) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">The description text.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DescriptionAttribute" /> class with a description.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.DescriptionAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.DescriptionAttribute Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DescriptionAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the default value for the <see cref="T:System.ComponentModel.DescriptionAttribute" />, which is an empty string (""). This <see langword="static" /> field is read-only.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the description stored in this attribute.</summary>
        <value>The description stored in this attribute.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DescriptionValue">
      <MemberSignature Language="C#" Value="protected string DescriptionValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DescriptionValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string stored as the description.</summary>
        <value>The string stored as the description. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default implementation of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A> property simply returns this value.  
  
 This extra property exists so that you can derive from <xref:System.ComponentModel.DescriptionAttribute> and provide a localized version. The derived localizable <xref:System.ComponentModel.DescriptionAttribute> will maintain a private Boolean field to indicate if it has been localized. On the first access to the <xref:System.ComponentModel.DescriptionAttribute.Description%2A> property, it will look up the localized string and store it back in the DescriptionValue property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to test the value equality of.</param>
        <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
        <returns>
          <see langword="true" /> if the value of the given object is equal to that of the current; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value indicating whether this is the default <see cref="T:System.ComponentModel.DescriptionAttribute" /> instance.</summary>
        <returns>
          <see langword="true" />, if this is the default <see cref="T:System.ComponentModel.DescriptionAttribute" /> instance; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value is an empty string ("").  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>