<Type Name="AttributeProviderAttribute" FullName="System.ComponentModel.AttributeProviderAttribute">
  <TypeSignature Language="C#" Value="public class AttributeProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeProviderAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enables attribute redirection. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 There are a few cases in the .NET Framework object model where a property is purposely typed to be vague. For example, the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> property is typed as `object`. The reason for this is that this property can accept several types of input. Unfortunately, this provides no common place to add metadata to describe the characteristics of the property. Each `DataSource` property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata. The AttributeProviderAttribute remedies this situation.  
  
 Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName> collection differ. Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type. In this case, the attributes are taken from the type returned from the AttributeProviderAttribute, not from the actual property type. This attribute is used on <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> to point the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> object's specific type to <xref:System.ComponentModel.IListSource>, and the appropriate metadata is placed on <xref:System.ComponentModel.IListSource> to enable data binding. In so doing, external parties can easily add metadata to all data sources.  
  
 Attributes obtained from a type declared in the AttributeProviderAttribute have a priority in between the attributes of the propertyâ€™s type and the attributes on the property. The following list, in priority order, shows the full set of available merged attributes:  
  
-   Property Attributes  
  
-   Attribute Provider Attributes  
  
-   Property Type Attributes  
  
   
  
## Examples  
 The following code example demonstrates using AttributeProviderAttribute to mark a `DataSource` property with a specific type of <xref:System.ComponentModel.IListSource>. For a full code listing, see [How to: Apply Attributes in Windows Forms Controls](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-vb[System.ComponentModel.AttributesDemoControl#25](~/add/codesnippet/visualbasic/t-system.componentmodel._72_1.vb)]
 [!code-cs[System.ComponentModel.AttributesDemoControl#25](~/add/codesnippet/csharp/t-system.componentmodel._72_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeProviderAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">The name of the type to specify.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeProviderAttribute" /> class with the given type name.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeProviderAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to specify.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeProviderAttribute" /> class with the given type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates using <xref:System.ComponentModel.AttributeProviderAttribute> to mark a `DataSource` property with a specific type of <xref:System.ComponentModel.IListSource>. For a full code listing, see [How to: Apply Attributes in Windows Forms Controls](~/add/includes/ajax-current-ext-md.md).  
  
 [!code-vb[System.ComponentModel.AttributesDemoControl#25](~/add/codesnippet/visualbasic/m-system.componentmodel._23_1.vb)]
 [!code-cs[System.ComponentModel.AttributesDemoControl#25](~/add/codesnippet/csharp/m-system.componentmodel._23_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeProviderAttribute (string typeName, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string propertyName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">The name of the type to specify.</param>
        <param name="propertyName">The name of the property for which attributes will be retrieved.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeProviderAttribute" /> class with the given type name and property name.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the property for which attributes will be retrieved.</summary>
        <value>The name of the property for which attributes will be retrieved.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the assembly qualified type name passed into the constructor.</summary>
        <value>The assembly qualified name of the type specified in the constructor.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>