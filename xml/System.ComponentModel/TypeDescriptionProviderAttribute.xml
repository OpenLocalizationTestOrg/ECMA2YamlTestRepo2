<Type Name="TypeDescriptionProviderAttribute" FullName="System.ComponentModel.TypeDescriptionProviderAttribute">
  <TypeSignature Language="C#" Value="public sealed class TypeDescriptionProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptionProviderAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the custom type description provider for a class. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This attribute supplies a way for developers to provide custom metadata for their authored classes. This capability extends the static type information functionality in the <xref:System.ComponentModel.TypeDescriptor> class, which by default only obtains type information directly from metadata of the compiled classes.  
  
> [!NOTE]
>  For a more dynamic way to provide custom metadata for your authored classes, see the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method.  
  
 Tagging a class with a TypeDescriptionProviderAttribute will associate a <xref:System.ComponentModel.TypeDescriptionProvider> with that class. A <xref:System.ComponentModel.TypeDescriptionProvider> provides supplemental metadata information about the tagged class. For example, the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method returns an <xref:System.ComponentModel.ICustomTypeDescriptor> that defines additional type information, such as attributes, events, and properties. Subsequently, if a <xref:System.ComponentModel.TypeDescriptionProvider> member is used to investigate the tagged class, it will discover both the default and custom type information.  
  
 This attribute can only be applied to classes and is inherited by derived classes.  
  
 This attribute cannot be derived from.  
  
 For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDescriptionProviderAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">The qualified name of the type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" /> class using the specified type name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TypeDescriptionProviderAttribute constructor associates the specified <xref:System.ComponentModel.TypeDescriptionProvider> with the tagged class.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDescriptionProviderAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to store in the attribute.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" /> class using the specified type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The TypeDescriptionProviderAttribute constructor associates the specified <xref:System.ComponentModel.TypeDescriptionProvider> with the tagged class.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type name for the type description provider.</summary>
        <value>A &lt;xref:System.String&gt; containing the qualified type name for the <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This read-only property retrieves the name of the type description provider set in the constructor.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>