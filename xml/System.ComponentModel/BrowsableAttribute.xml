<Type Name="BrowsableAttribute" FullName="System.ComponentModel.BrowsableAttribute">
  <TypeSignature Language="C#" Value="public sealed class BrowsableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BrowsableAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies whether a property or event should be displayed in a Properties window.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A visual designer typically displays in the Properties window those members that either have no browsable attribute or are marked with the <xref:System.ComponentModel.BrowsableAttribute.%23ctor%2A> constructor's `browsable` parameter set to `true`. These members can be modified at design time. Members marked with the <xref:System.ComponentModel.BrowsableAttribute.%23ctor%2A> constructor's `browsable` parameter set to `false` are not appropriate for design-time editing and therefore are not displayed in a visual designer. The default is `true`.  
  
> [!NOTE]
>  When you mark a property with `Browsable(true)`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BrowsableAttribute.Yes>. For a property marked with `Browsable(false)`, the value is <xref:System.ComponentModel.BrowsableAttribute.No>. Therefore, when you check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BrowsableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BrowsableAttribute.No?displayProperty=fullName>.  
  
 For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following example marks a property as browsable.  
  
 [!code-cpp[Classic BrowsableAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._15_1.cpp)]
 [!code-cs[Classic BrowsableAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._15_1.cs)]
 [!code-vb[Classic BrowsableAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._15_1.vb)]  
  
 The next example shows how to check the value of the BrowsableAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, the code indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  
  
 The example presents two different ways of checking the value of the BrowsableAttribute. In the second code fragment, the example calls the <xref:System.Object.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.BrowsableAttribute.Browsable%2A> property to check the value.  
  
 [!code-cpp[Classic BrowsableAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._15_2.cpp)]
 [!code-cs[Classic BrowsableAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._15_2.cs)]
 [!code-vb[Classic BrowsableAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._15_2.vb)]  
  
 If you marked a class with the BrowsableAttribute, use the following code to check the value.  
  
 [!code-cpp[Classic BrowsableAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._15_3.cpp)]
 [!code-cs[Classic BrowsableAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._15_3.cs)]
 [!code-vb[Classic BrowsableAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._15_3.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrowsableAttribute (bool browsable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool browsable) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="browsable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="browsable">
          <see langword="true" /> if a property or event can be modified at design time; otherwise, <see langword="false" />. The default is <see langword="true" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.BrowsableAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you mark a property with the BrowsableAttribute constructor of the value `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.BrowsableAttribute.Yes>. For a property marked with the BrowsableAttribute constructor of the value `false`, the value is <xref:System.ComponentModel.BrowsableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.BrowsableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.BrowsableAttribute.No?displayProperty=fullName>.  
  
   
  
## Examples  
 The following example marks a property as browsable. This code creates a new <xref:System.ComponentModel.BrowsableAttribute>, sets its value to <xref:System.ComponentModel.BrowsableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  
  
 [!code-cs[Classic BrowsableAttribute.BrowsableAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._29_1.cs)]
 [!code-cpp[Classic BrowsableAttribute.BrowsableAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._29_1.cpp)]
 [!code-vb[Classic BrowsableAttribute.BrowsableAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._29_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Browsable">
      <MemberSignature Language="C#" Value="public bool Browsable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Browsable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether an object is browsable.</summary>
        <value>
          <see langword="true" /> if the object is browsable; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example checks to see whether `MyProperty` is browsable. First the code gets the attributes for `MyProperty` by:  
  
-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  
  
-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  
  
-   Saving the attributes for this property in the attributes variable.  
  
 Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.BrowsableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is browsable.  
  
 [!code-cs[Classic BrowsableAttribute.Browsable Example#1](~/add/codesnippet/csharp/p-system.componentmodel._1_1.cs)]
 [!code-cpp[Classic BrowsableAttribute.Browsable Example#1](~/add/codesnippet/cpp/p-system.componentmodel._1_1.cpp)]
 [!code-vb[Classic BrowsableAttribute.Browsable Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._1_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.BrowsableAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.BrowsableAttribute Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BrowsableAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the default value for the <see cref="T:System.ComponentModel.BrowsableAttribute" />, which is <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />. This <see langword="static" /> field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.BrowsableAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.BrowsableAttribute?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Another object to compare to.</param>
        <summary>Indicates whether this instance and a specified object are equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines if this attribute is the default.</summary>
        <returns>
          <see langword="true" /> if the attribute is the default value for this attribute class; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.BrowsableAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.BrowsableAttribute No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BrowsableAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that a property or event cannot be modified at design time. This <see langword="static" /> field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you mark a property with the <xref:System.ComponentModel.BrowsableAttribute.%23ctor%2A> constructor of the value `false`, this attribute is set to the constant member No. Therefore, when you check whether the attribute is set to this value in your code, you must specify the attribute as No.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.BrowsableAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.BrowsableAttribute Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BrowsableAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that a property or event can be modified at design time. This <see langword="static" /> field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This field is the default setting for this attribute.  
  
 When you mark a property with the <xref:System.ComponentModel.BrowsableAttribute.%23ctor%2A> constructor of the value `true`, this attribute is set to the constant member Yes. Therefore, when you check whether the attribute is set to this value in your code, you must specify the attribute as Yes.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>