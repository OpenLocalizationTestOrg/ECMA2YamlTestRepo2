<Type Name="ServiceDebugElement" FullName="System.ServiceModel.Configuration.ServiceDebugElement">
  <TypeSignature Language="C#" Value="public sealed class ServiceDebugElement : System.ServiceModel.Configuration.BehaviorExtensionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDebugElement extends System.ServiceModel.Configuration.BehaviorExtensionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.BehaviorExtensionElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a configuration element that specifies debugging and help information features for a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set the <xref:System.ServiceModel.Configuration.ServiceDebugElement.IncludeExceptionDetailInFaults%2A> property to `true` programmatically, you can enable the flow of managed exception information to the client for debugging purposes, as well as the publication of HTML information files for users browsing the service in Web browsers.  
  
> [!CAUTION]
>  Returning managed exception information to services can be a security risk. This is because exception details expose information about the internal client implementation that could be used by unauthorized services.  
  
 The <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageEnabled%2A> and <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageEnabled%2A> properties instruct the service to publish HTML help files when the service is viewed using an HTML browser.  
  
 The <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl%2A> and <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl%2A> properties control the location of the HTML help page that is viewed.  
  
 To enable or disable one of the ServiceDebugElement features using a configuration file, you must:  
  
1.  Add a `behaviorConfiguration` attribute to the [\&lt;service\&gt;](../Topic/%3Cservice%3E.md) element for your [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service. (Endpoint behaviors are configured on `<endpoint>` elements; service behaviors on [\&lt;service\&gt;](../Topic/%3Cservice%3E.md) elements.)  
  
2.  Add to or create a [\&lt;serviceBehaviors\&gt;](../Topic/%3CserviceBehaviors%3E.md) section and add a [\&lt;behavior\&gt;](../Topic/%3Cbehavior%3E%20of%20%3CendpointBehaviors%3E.md) element to that with the name that matches the `behaviorConfiguration` attribute value from step 1. (Endpoint behaviors are configured using an [\&lt;endpointBehaviors\&gt;](../Topic/%3CendpointBehaviors%3E.md) element; service behaviors are configured using a [\&lt;serviceBehaviors\&gt;](../Topic/%3CserviceBehaviors%3E.md) element.  
  
3.  Add a [\&lt;serviceDebug\&gt;](../Topic/%3CserviceDebug%3E.md) element to the [\&lt;behavior\&gt;](../Topic/%3Cbehavior%3E%20of%20%3CendpointBehaviors%3E.md) element from step 2 and enable or disable the various properties appropriate to your scenario.  
  
 For a specific example, see the Example section.  
  
   
  
## Examples  
 The following code example shows how to use a configuration file to enable the HTML help page feature and return exception information inside a SOAP fault back to the client for debugging purposes (in addition to enabling metadata support).  
  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDebugElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceDebugElement" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BehaviorType">
      <MemberSignature Language="C#" Value="public override Type BehaviorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BehaviorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of this behavior element.</summary>
        <value>The type of the behavior.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from">The configuration element to be copied.</param>
        <summary>Copies the content of the specified configuration element to this configuration element.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateBehavior">
      <MemberSignature Language="C#" Value="protected override object CreateBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object CreateBehavior() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageBinding">
      <MemberSignature Language="C#" Value="public string HttpHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpHelpPageBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpHelpPageBinding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string value that specifies the binding to be used when HTTP is utilized to access the service help page.</summary>
        <value>The binding to be used when HTTP is utilized to access the service help page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this property is not set, the default binding (HttpTransportBindingElement) is used for service help page access as appropriate.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageBindingConfiguration">
      <MemberSignature Language="C#" Value="public string HttpHelpPageBindingConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpHelpPageBindingConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpHelpPageBindingConfiguration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string that points to an XML section defining additional configuration information for the binding specified in &lt;xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBinding%2A&gt;.</summary>
        <value>An XML section defining additional configuration information for the binding specified in &lt;xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBinding%2A&gt;.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpHelpPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpHelpPageEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] publishes an HTML help page at the address specified by the &lt;xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl%2A&gt; property.</summary>
        <value>
          <see langword="true" /> if WCF publishes an HTML help page; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can set this property to `false` to disable the publication of an HTML help page visible to HTML browsers.  
  
 To ensure the HTML help page is published at the location controlled by the <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl%2A> property, you must set this property to `true`. In addition, one of the following conditions must also be met:  
  
-   The <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl%2A> property is an absolute address that supports the HTTP protocol scheme.  
  
-   There is a base address for the service that supports the HTTP protocol scheme.  
  
 Although an exception is thrown if an absolute address that does not support the HTTP protocol scheme is assigned to the <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl%2A> property, any other scenario in which neither of the preceding criteria is met results in no exception and no HTML help page.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpHelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpHelpPageUrl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the location at which the HTML help file is published.</summary>
        <value>The relative or absolute HTTP-based URL of the custom HTML help file the user sees when the endpoint is viewed using an HTML browser.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use this property to enable the use of a custom HTML help file that is returned from an HTTP/Get request, for example, from an HTML browser. The location of the HTML help file is resolved as follows.  
  
1.  If the value of this property is a relative address, the location of the HTML help file is the value of the service base address that supports HTTP requests, plus this property value.  
  
2.  If the value of this property is an absolute address and supports HTTP requests, the location of the HTML help file is the value of this property.  
  
3.  If the value of this property is absolute but does not support HTTP requests, an exception is thrown.  
  
 This property is valid only when the <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageEnabled%2A> property is `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageBinding">
      <MemberSignature Language="C#" Value="public string HttpsHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpsHelpPageBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpsHelpPageBinding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string value that specifies the binding to be used when HTTPS is utilized to access the service help page.</summary>
        <value>The binding to be used when HTTPS is utilized to access the service help page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this property is not set, the default binding (HttpsTransportBindingElement) is used for service help page access as appropriate.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageBindingConfiguration">
      <MemberSignature Language="C#" Value="public string HttpsHelpPageBindingConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpsHelpPageBindingConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpsHelpPageBindingConfiguration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string that points to an XML section defining additional configuration information for the binding specified in &lt;xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBinding%2A&gt;.</summary>
        <value>An XML section defining additional configuration information for the binding specified in &lt;xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBinding%2A&gt;.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsHelpPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpsHelpPageEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] returns an HTML help file over HTTPS at the address specified by the &lt;xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl%2A&gt; property.</summary>
        <value>
          <see langword="true" /> if an HTML help file is returned to clients making an HTTPS/GET request, for example, from an HTML browser; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can set this property to `false` to disable the publication of an HTML help page visible to HTML browsers.  
  
 To ensure the HTML help page is published at the location controlled by the <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl%2A> property, you must set this property to `true`. In addition, one of the following conditions must also be met:  
  
-   The <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl%2A> property is an absolute address that supports the HTTPS protocol scheme.  
  
-   There is a base address for the service that supports the HTTPS protocol scheme.  
  
-   Although an exception is thrown if an absolute address that does not support the HTTPS protocol scheme is assigned to the <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl%2A> property, any other scenario in which neither of the preceding criteria is met results in no exception and no HTML help page.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsHelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("httpsHelpPageUrl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the location at which an HTML help file is published for retrieval using HTTPS.</summary>
        <value>The relative or absolute HTTPS-based URL of the custom HTML help file the user sees when the endpoint is viewed using an HTML browser.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use this property to enable the use of a custom HTML help file that is returned from an HTTPS/Get request, for example, from an HTML browser. The location of the HTML help file is resolved as follows.  
  
1.  If the value of this property is a relative address, the location of the HTML help file is the value of the service base address that supports HTTPS requests, plus this property value.  
  
2.  If the value of this property is an absolute address and supports HTTPS requests, the location of the HTML help file is the value of this property.  
  
3.  If the value of this property is absolute but does not support HTTPS requests, an exception is thrown.  
  
 This property is valid only when the <xref:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageEnabled%2A> property is `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("includeExceptionDetailInFaults", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether to include managed exception information in the detail of SOAP faults returned to the client for debugging purposes.</summary>
        <value>
          <see langword="true" /> if [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] returns managed exception information in the SOAP faults for client-side debugging purposes; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set the IncludeExceptionDetailInFaults property to `true` programmatically, you can enable the flow of managed exception information to the client for debugging purposes, as well as the publication of HTML information files for users browsing the service in Web browsers.  
  
> [!CAUTION]
>  Returning managed exception information to services can be a security risk. This is because exception details expose information about the internal client implementation that could be used by unauthorized services.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>