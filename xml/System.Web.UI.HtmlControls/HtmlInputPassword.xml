<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows programmatic access to the HTML <see langword="&lt;input type= password&gt;" /> element on the server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HtmlInputPassword class is derived from the <xref:System.Web.UI.HtmlControls.HtmlInputText> class and is used to create a single-line text box that allows the user to enter a password. When using the HtmlInputPassword control, the <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> property is posted to the server each time the form is submitted. The <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> property for the HtmlInputPassword control is not persisted in view state.  
  
 The <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> property specifies the maximum number of characters that can be entered in the text box. The <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> property allows you to specify the width of the text box. Use the <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> property to determine the value entered in the text box by the user. The HtmlInputPassword control provides a <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> event that is raised when the <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> property changes values between posts to the server. This allows you to create an event handler that performs a custom set of instructions each time the event is raised.  
  
> [!NOTE]
>  The HtmlInputPassword control does not provide a built-in way to post back to the server. You must provide another control on the Web page that supports posting back to the server, such as an <xref:System.Web.UI.HtmlControls.HtmlButton> or an <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> control.  
  
 For a list of initial property values for an instance of HtmlInputPassword, see the <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following code example demonstrates how to use the `<input type=text>`, `<input type=password>`, and `<input type=submit>` HTML controls declaratively on a Web Forms page.  
  
 [!code-cs[System.Web.UI.HtmlControls.HtmlInput_1#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_17_1.aspx)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_17_1.aspx)]  
  
 The following code example demonstrates how to add the same HTML controls programmatically during a call to the `Page_Load` method.  
  
 [!code-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_17_2.aspx)]
 [!code-cs[System.Web.UI.HtmlControls.HtmlInput_2#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_17_2.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> class using default values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlInputPassword> control using default values. It creates a `password` type text box control.  
  
 The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputPassword>.  
  
|Property|Initial Value|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|The "password" literal string.|  
  
   
  
## Examples  
 The following code example demonstrates how to programmatically add <xref:System.Web.UI.HtmlControls.HtmlInputText>, <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, and <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> controls to a Web Forms page using default constructors to create a simple login screen.  
  
 [!code-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_20_1.aspx)]
 [!code-cs[System.Web.UI.HtmlControls.HtmlInput_2#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_20_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
        <summary>Renders the attributes of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderAttributes method removes the `Value` attribute from the view state collection to prevent it from being rendered, and then calls the base class's <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>