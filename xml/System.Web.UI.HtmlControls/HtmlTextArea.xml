<Type Name="HtmlTextArea" FullName="System.Web.UI.HtmlControls.HtmlTextArea">
  <TypeSignature Language="C#" Value="public class HtmlTextArea : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTextArea extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows programmatic access to the <see langword="&lt;textarea&gt;" /> HTML element on the server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The HtmlTextArea control corresponds to the `<textarea>` HTML element that allows you to create a multiline text box on a Web page. Use this control to programmatically manipulate a `<textarea>` HTML element.  
  
 This class allows you to control the height and width of a multiline text box by setting the <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> and <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> properties, respectively. You also can assign a name to the control by setting the <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> property. To determine or specify the text in the text box, use the <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> property.  
  
 The HtmlTextArea class provides a <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> event that allows you to perform a custom set of instructions every time the value of the text box changes between posts to the server. This event is commonly used for data validation.  
  
> [!NOTE]
>  If you want to create a single-line text box, use the <xref:System.Web.UI.HtmlControls.HtmlInputText> control.  
  
 For a list of initial property values for an instance of HtmlTextArea, see the <xref:System.Web.UI.HtmlControls.HtmlTextArea.%23ctor%2A> constructor.  
  
> [!CAUTION]
>  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 The following code example demonstrates how to use the HtmlTextArea control to create a multiline text box.  
  
 [!code-cs[HtmlTextArea2#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_7_1.aspx)]
 [!code-vb[HtmlTextArea2#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_7_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextArea ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> class.  
  
 The following table shows initial property values for an instance of <xref:System.Web.UI.HtmlControls.HtmlTextArea>.  
  
|Property|Initial Value|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|The "textarea" literal string.|  
  
   
  
## Examples  
 The following code example demonstrates how to create an instance of an <xref:System.Web.UI.HtmlControls.HtmlTextArea> control and place on the Web page.  
  
 [!code-vb[HtmlTextAreaCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_41_1.aspx)]
 [!code-cs[HtmlTextAreaCtor#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_41_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An &lt;xref:System.Object&gt; that represents the parsed element.</param>
        <summary>Notifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control that an object was parsed and adds the object to the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AddParsedSubObject method adds an object to the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control's <xref:System.Web.UI.ControlCollection> if the object is of the type <xref:System.Web.UI.LiteralControl> or <xref:System.Web.UI.DataBoundLiteralControl>; otherwise, an <xref:System.Web.HttpException> is thrown.  
  
 The AddParsedSubObject method is primarily used by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
   
  
## Examples  
 The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.HtmlControls.HtmlTextArea> server control so that it always determines whether the parsed object is of the type <xref:System.Web.UI.LiteralControl> or <xref:System.Web.UI.DataBoundLiteralControl>.  
  
 [!code-cs[CustomHtmlTextAreaAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_42_1.aspx)]
 [!code-vb[CustomHtmlTextAreaAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_42_1.aspx)]  
  
 [!code-vb[CustomHtmlTextAreaAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_42_2.vb)]
 [!code-cs[CustomHtmlTextAreaAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_42_2.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The object specified by the <paramref name="obj" /> parameter can only be of the type <see cref="T:System.Web.UI.LiteralControl" /> or <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Cols">
      <MemberSignature Language="C#" Value="public int Cols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Cols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the width (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
        <value>The width (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. The default value is <see langword="-1" />, which indicates that this property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Cols property to specify or determine the width (in characters) of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control. If you enter text that is longer than the width of the text box, the text automatically continues on the next line of the control.  
  
 To control the height of the control, set the <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Cols property to control the width of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
 [!code-cs[HtmlTextAreaCols#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_64_1.aspx)]
 [!code-vb[HtmlTextAreaCols#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_64_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">The key identifier for the control.</param>
        <param name="postCollection">The collection of all incoming name values.</param>
        <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's state has changed as a result of the postback; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoadPostData method checks whether the postback value of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control is different from its previous value, and if so, returns `true`.  
  
 The LoadPostData method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the unique identifier name for the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
        <value>A string that represents the value of the &lt;xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName&gt; property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Name property to determine the unique identifier name for the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control. In this implementation of the property, the `get` accessor returns the value of the <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName> property. However, the `set` accessor does not assign a value to this property.  
  
> [!NOTE]
>  The `set` accessor does not assign a value to this property because the <xref:System.Web.UI.HtmlControls.HtmlInputControl.Name%2A> property must have the same value as the <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName> property for the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control to work properly.  
  
 Classes that inherit from the <xref:System.Web.UI.HtmlControls.HtmlTextArea> class may override this implementation, if necessary.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Name property to select an <xref:System.Web.UI.HtmlControls.HtmlTextArea> control on a page and set its <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A>property.  
  
 [!code-vb[HtmlTextAreaName#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_83_1.aspx)]
 [!code-cs[HtmlTextAreaName#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_83_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An &lt;xref:System.EventArgs&gt; object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnPreRender method notifies the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control to perform any necessary steps prior to saving the view state and rendering content.  
  
 The OnPreRender method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
   
  
## Examples  
 The following code example demonstrates how to override the OnPreRender method to always display 5 rows and 75 columns in a custom <xref:System.Web.UI.HtmlControls.HtmlTextArea> server control.  
  
 [!code-cs[CustomHtmlTextAreaOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_46_1.aspx)]
 [!code-vb[CustomHtmlTextAreaOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_46_1.aspx)]  
  
 [!code-cs[CustomHtmlTextAreaOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_46_2.cs)]
 [!code-vb[CustomHtmlTextAreaOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_46_2.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" /> event of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. This allows you to provide a custom handler for the event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> event is raised when the content of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control changes between posts to the server.  
  
> [!NOTE]
>  This event is only raised when the user initiates a post to the server, such as by clicking a `submit` button. This event does not cause a post to the server to occur.  
  
> [!NOTE]
>  The control must have viewstate enabled for the <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> event to work correctly.  
  
 This event is commonly used to perform data validation on the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control when the user updates the text in the control.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnServerChange method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example demonstrates how to specify and create a custom event handler for the <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> event. A message is displayed when the value entered in the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control exceeds 20 characters.  
  
 [!code-vb[HtmlTextAreaServerChanged#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_38_1.aspx)]
 [!code-cs[HtmlTextAreaServerChanged#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_38_1.aspx)]  
  
 [!code-cs[HtmlTextAreaServerChange#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_38_2.aspx)]
 [!code-vb[HtmlTextAreaServerChange#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_38_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calls the &lt;xref:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange%2A&gt; method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control that the state of the control has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RaisePostDataChangedEvent method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
        <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderAttributes method renders the `name` attribute of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control directly to ensure that it has the same value as the <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName> property. After rendering the attribute, the RenderAttributes method calls the base class's <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A> method.  
  
 The RenderAttributes method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
   
  
## Examples  
 The following code example demonstrates how to override the RenderAttributes method in a custom server control so that specific title text is always displayed for the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
 [!code-cs[CustomHtmlTextAreaRenderAttributes#1](~/add/codesnippet/csharp/840a34a5-224a-497a-8b4f-_1.aspx)]
 [!code-vb[CustomHtmlTextAreaRenderAttributes#1](~/add/codesnippet/visualbasic/840a34a5-224a-497a-8b4f-_1.aspx)]  
  
 [!code-vb[CustomHtmlTextAreaRenderAttributes#2](~/add/codesnippet/visualbasic/840a34a5-224a-497a-8b4f-_2.vb)]
 [!code-cs[CustomHtmlTextAreaRenderAttributes#2](~/add/codesnippet/csharp/840a34a5-224a-497a-8b4f-_2.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
        <value>The height (in characters) of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. The default value is <see langword="-1" />, which indicates that this property is not set.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Rows property to specify or determine the height (in characters) of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control. If you enter text that takes up more lines than the height specified, scroll bars are enabled.  
  
 To control the width of the control, set the <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Rows property to control the height of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
 [!code-cs[HtmlTextAreaRows#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_56_1.aspx)]
 [!code-vb[HtmlTextAreaRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_56_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the content of the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control changes between posts to the server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ServerChange event is raised when the content of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control changes between posts to the server. This event is commonly used to perform data validation on the text box.  
  
> [!NOTE]
>  This event is only raised when the user initiates a post to the server, such as clicking a `submit` button. This event does not cause a post to the server to occur.  
  
> [!NOTE]
>  The control must have viewstate enabled for the ServerChange event to work correctly.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 The following code example demonstrates how to specify and create a custom event handler for the ServerChange event. A message is displayed when the value entered in the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control exceeds 10 characters.  
  
 [!code-vb[HtmlTextAreaServerChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.htmlcont_2_1.aspx)]
 [!code-cs[HtmlTextAreaServerChanged#1](~/add/codesnippet/csharp/e-system.web.ui.htmlcont_2_1.aspx)]  
  
 [!code-cs[HtmlTextAreaServerChange#1](~/add/codesnippet/csharp/e-system.web.ui.htmlcont_2_2.aspx)]
 [!code-vb[HtmlTextAreaServerChange#1](~/add/codesnippet/visualbasic/e-system.web.ui.htmlcont_2_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">The key identifier for the control.</param>
        <param name="postCollection">The collection of all incoming name values.</param>
        <summary>For a description of this member, see &lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName&gt;.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control's state has changed as a result of postback; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.HtmlControls.HtmlTextArea> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.HtmlControls.HtmlTextArea> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text entered in the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control.</summary>
        <value>The text entered in the <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> control. The default value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Value property to programmatically control the text entered in the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control. This property is commonly used to retrieve the text entered in the text box, but you can also use it to specify the text to display in the control. This is useful if you want to provide a default value or display a message in the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control.  
  
> [!CAUTION]
>  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 The following code example demonstrates how to use the Value property to determine the contents of the <xref:System.Web.UI.HtmlControls.HtmlTextArea> control. The contents are then displayed in the Web page.  
  
 [!code-cs[HtmlTextArea2#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_40_1.aspx)]
 [!code-vb[HtmlTextArea2#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_40_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>