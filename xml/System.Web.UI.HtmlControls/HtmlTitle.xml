<Type Name="HtmlTitle" FullName="System.Web.UI.HtmlControls.HtmlTitle">
  <TypeSignature Language="C#" Value="public class HtmlTitle : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTitle extends System.Web.UI.HtmlControls.HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Allows programmatic access to the HTML <see langword="&lt;title&gt;" /> element on the server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the HtmlTitle class to programmatically specify the HTML `<title>` element of a Web Forms page.  
  
> [!NOTE]
>  You can also set the page title by using the `title` attribute of the [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive, or by setting the <xref:System.Web.UI.Page.Title%2A> property of the <xref:System.Web.UI.Page> class.  
  
   
  
## Examples  
 The following code example demonstrates how to display the current date and time in the title bar of the Web page.  
  
 [!code-cs[System.Web.UI.HtmlControls.HtmlTitleClass#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_10_1.aspx)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlTitleClass#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_10_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlTitle> control using default values. It creates an HTML `<title>` element on the Web page. The following table shows the initial property value for an instance of the <xref:System.Web.UI.HtmlControls.HtmlTitle> class.  
  
|Property|Initial Value|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|The "title" literal string.|  
  
   
  
## Examples  
 The following code example demonstrates how to display the current date and time in the title bar of the Web page.  
  
 [!code-cs[System.Web.UI.HtmlControls.HtmlTitleClass#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_8_1.aspx)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlTitleClass#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_8_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An &lt;xref:System.Object&gt; that represents the parsed element.</param>
        <summary>Notifies the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> control that an XML or HTML element was parsed and adds that element to the <see cref="T:System.Web.UI.ControlCollection" /> collection of the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the element added to the <xref:System.Web.UI.HtmlControls.HtmlTitle> control is a <xref:System.Web.UI.LiteralControl> control, then the AddParsedSubObject method sets the <xref:System.Web.UI.HtmlControls.HtmlTitle.Text%2A> property with the value of the literal string; otherwise, the base <xref:System.Web.UI.Control.AddParsedSubObject%2A> method is called. The AddParsedSubObject method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlTitle> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> collection for the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> control.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object to contain the current server control's child server controls.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
        <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlTitle" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Render method first calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method using the `Title` member of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration. Next, any child controls of the <xref:System.Web.UI.HtmlControls.HtmlTitle> control are rendered. Finally, the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is called.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the HTML <see langword="&lt;title&gt;" /> element.</summary>
        <value>The text of the HTML <see langword="&lt;title&gt;" /> element. The default value is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Text property to specify or determine the title of the Web page.  
  
   
  
## Examples  
 The following code example demonstrates using the Text property of an <xref:System.Web.UI.HtmlControls.HtmlTitle> control to dynamically change the title of a Web page.  
  
 [!code-cs[System.Web.UI.HtmlControls.HtmlTitleClass#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_45_1.aspx)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlTitleClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_45_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>