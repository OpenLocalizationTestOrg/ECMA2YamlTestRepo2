<Type Name="HtmlInputRadioButton" FullName="System.Web.UI.HtmlControls.HtmlInputRadioButton">
  <TypeSignature Language="C#" Value="public class HtmlInputRadioButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputRadioButton extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows programmatic access to the HTML <see langword="&lt;input type= radio&gt;" /> element on the server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the HtmlInputRadioButton control to create a radio button on a Web page. The HtmlInputRadioButton control does not provide built-in functionality to display a caption for the radio button. To create a caption, use literal text in the Web page at the desired location. This allows you to determine where the caption is displayed relative to the radio button. For example, if you want to display the caption on the right side of the radio button, declare an HtmlInputRadioButton control, followed by the caption text, as shown in the following code.  
  
```  
<input type="radio"   
 id="Radio1"   
 name="Mode"   
 runat="server"/>  
Caption Text<br>  
```  
  
 You can optionally associate a quantity with the HtmlInputRadioButton control by setting the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> property. This is useful when you have multiple radio buttons and need to perform a calculation, based on the selection.  
  
 HtmlInputRadioButton controls can be grouped together by specifying a common value for the <xref:System.Web.UI.HtmlControls.HtmlInputControl.Name%2A> property of each radio button you want to include in the group.  
  
> [!NOTE]
>  When you group HtmlInputRadioButton controls together, only one radio button in the group can be selected at a time.  
  
 To determine whether the HtmlInputRadioButton control is selected, test the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> property. If you have a group of HtmlInputRadioButton controls, you must iterate through the controls and test the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> property of each control individually.  
  
 The HtmlInputRadioButton control provides a <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> event that is raised when the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> property changes values between posts to the server. This allows you to create a custom event handler that performs a specific set of instructions when the event is raised, such as data validation.  
  
 For a list of initial property values for an instance of HtmlInputRadioButton, see the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.%23ctor%2A> constructor.  
  
   
  
## Examples  
 The following code example demonstrates how to use the HtmlInputRadioButton control to create a group of radio buttons.  
  
 [!code-vb[Classic HtmlInputRadioButton Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_18_1.aspx)]
 [!code-cs[Classic HtmlInputRadioButton Example#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_18_1.aspx)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputRadioButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> class.  
  
 The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton>.  
  
|Property|Initial Value|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|The "radio" literal string.|  
  
   
  
## Examples  
 [!code-vb[HtmlInputRadioButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_3_1.aspx)]
 [!code-cs[HtmlInputRadioButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_3_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control is selected.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control is selected; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Checked property to determine whether the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control is selected. If you have a group of <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> controls, you must iterate through the controls and test the Checked property of each control individually. You can also use this property to programmatically specify whether the control is selected.  
  
 You can group <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> controls together by specifying a common value for the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name%2A> property of each radio button control you want to include in the group.  
  
> [!NOTE]
>  When you group <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> controls, only one radio button in the group can be selected at a time. The Checked property of the selected control is set to `true`, while the same property is set to `false` for all other radio buttons in the group.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Checked property to determine which radio button in the group is selected.  
  
 [!code-vb[Classic HtmlInputRadioButton Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_22_1.aspx)]
 [!code-cs[Classic HtmlInputRadioButton Example#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_22_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">The key identifier for the control.</param>
        <param name="postCollection">The collection of all incoming name values.</param>
        <summary>Processes the postback data for the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control's state has changed as a result of the postback; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LoadPostData method checks to see whether the postback value of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control is different from its previous value, and if so, returns `true`.  
  
 The LoadPostData method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the group that the instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> class is associated with.</summary>
        <value>The group of check box controls that the instance of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> class is a member of.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Group multiple <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> controls by specifying a common value for the Name property of each radio button you want to include in the group. When you group <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> controls, only one radio button in the group can be selected at a time. The <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> property of the selected control is set to `true`, while the same property is set to `false` for all other radio buttons in the group.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Name property to group multiple <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> controls.  
  
 [!code-vb[Classic HtmlInputRadioButton Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_49_1.aspx)]
 [!code-cs[Classic HtmlInputRadioButton Example#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_49_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event and registers the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control as one that requires postback handling.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnPreRender method is called just prior to rendering the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control.  
  
 The OnPreRender method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control.  
  
   
  
## Examples  
 The following code example demonstrates how to override the OnPreRender method so that it adds a `Title` attribute in a custom <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> server control.  
  
 [!code-vb[CustomHtmlInputRadioButtonOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_55_1.aspx)]
 [!code-cs[CustomHtmlInputRadioButtonOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_55_1.aspx)]  
  
 [!code-vb[CustomHtmlInputRadioButtonOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_55_2.vb)]
 [!code-cs[CustomHtmlInputRadioButtonOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_55_2.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" /> event. This allows you to create a custom event handler when the event is raised.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> event is raised when the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> property of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control changes values between posts to the server. This allows you to create a custom event handler that performs a specific set of instructions (such as data validation) when the event is raised.  
  
> [!NOTE]
>  The control must have view state enabled for the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> event to work correctly. To enable view state for all controls on the Web Forms page, set the <xref:System.Web.UI.Page.EnableViewState%2A?displayProperty=fullName> property to `true`. You can also enable view state for an individual control by setting the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property to `true`.  
  
 Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 The OnServerChange method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  
  
   
  
## Examples  
 The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> event. The custom event handler updates a label on the Web page to display the value of the selected radio button.  
  
 [!code-vb[HtmlInputRadioButton#1](~/add/codesnippet/visualbasic/34c92f97-6d89-4263-a1b0-_1.aspx)]
 [!code-cs[HtmlInputRadioButton#1](~/add/codesnippet/csharp/34c92f97-6d89-4263-a1b0-_1.aspx)]  
  
 [!code-vb[HtmlInputRadioButtonServerChange#1](~/add/codesnippet/visualbasic/34c92f97-6d89-4263-a1b0-_2.aspx)]
 [!code-cs[HtmlInputRadioButtonServerChange#1](~/add/codesnippet/csharp/34c92f97-6d89-4263-a1b0-_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calls the &lt;xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange%2A&gt; method to signal the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control that the state of the control has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RaisePostDataChangedEvent method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered output.</param>
        <summary>Renders the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control attributes to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderAttributes method writes the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> property as an attribute of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control and then calls the base class's <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> method  
  
 The RenderAttributes method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control.  
  
   
  
## Examples  
 The following code example demonstrates how to override the RenderAttributes method in a custom server control so that specific title text is always displayed for the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton>.  
  
 [!code-vb[CustomHtmlInputRadioButtonRenderAttributes#1](~/add/codesnippet/visualbasic/9974e973-901d-4dac-bc0a-_1.aspx)]
 [!code-cs[CustomHtmlInputRadioButtonRenderAttributes#1](~/add/codesnippet/csharp/9974e973-901d-4dac-bc0a-_1.aspx)]  
  
 [!code-cs[CustomHtmlInputRadioButtonRenderAttributes#2](~/add/codesnippet/csharp/9974e973-901d-4dac-bc0a-_2.cs)]
 [!code-vb[CustomHtmlInputRadioButtonRenderAttributes#2](~/add/codesnippet/visualbasic/9974e973-901d-4dac-bc0a-_2.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the &lt;xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A&gt; property of the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control changes between posts to the server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ServerChange event is raised when the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> property of the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control changes value between posts to the server. This allows you to create a custom event handler that performs a specific set of instructions (such as data validation) when the event is raised.  
  
> [!NOTE]
>  The control must have view state enabled for the ServerChange event to work correctly. To enable view state for all controls on the Web Forms page, set the <xref:System.Web.UI.Page.EnableViewState%2A?displayProperty=fullName> property to `true`. You can also enable view state for an individual control by setting the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property to `true`.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 The following code example demonstrates how to specify and code a handler for the ServerChange event. The custom event handler updates a label on the Web page to display the value of the selected radio button.  
  
 [!code-vb[HtmlInputRadioButton#1](~/add/codesnippet/visualbasic/e-system.web.ui.htmlcont_1_1.aspx)]
 [!code-cs[HtmlInputRadioButton#1](~/add/codesnippet/csharp/e-system.web.ui.htmlcont_1_1.aspx)]  
  
 [!code-vb[HtmlInputRadioButtonServerChange#1](~/add/codesnippet/visualbasic/e-system.web.ui.htmlcont_1_2.aspx)]
 [!code-cs[HtmlInputRadioButtonServerChange#1](~/add/codesnippet/csharp/e-system.web.ui.htmlcont_1_2.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">The key identifier for the control.</param>
        <param name="postCollection">The collection of all incoming name values</param>
        <summary>Implements the &lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName&gt; method by calling the &lt;xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData%2A&gt; method.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control's state has changed as a result of the postback; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the &lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName&gt; method by calling the &lt;xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent%2A&gt; method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control.</summary>
        <value>The value associated with the <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Value property to specify or determine the value associated with the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control. The value can be any valid string that you want to associate with the control. This is useful when you have multiple radio buttons and need to perform a calculation based on the selection. For example, you can have radio buttons that represent different shipping methods. You can store the shipping cost in the Value property. When the user selects the shipping method, the appropriate shipping amount can be determined from this property and added to the sales total.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Value property to associate a description with the <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> control.  
  
 [!code-vb[HtmlInputRadioButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_78_1.aspx)]
 [!code-cs[HtmlInputRadioButton#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_78_1.aspx)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>