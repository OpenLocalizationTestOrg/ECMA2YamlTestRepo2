<Type Name="SecurityUtilities" FullName="Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities">
  <TypeSignature Language="C#" Value="public static class SecurityUtilities" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SecurityUtilities extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a set of utility functions for manipulating security permision sets and signing.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ComputeZonePermissionSet">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ComputeZonePermissionSet (string targetZone, System.Security.PermissionSet includedPermissionSet, string[] excludedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ComputeZonePermissionSet(string targetZone, class System.Security.PermissionSet includedPermissionSet, string[] excludedPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetZone" Type="System.String" />
        <Parameter Name="includedPermissionSet" Type="System.Security.PermissionSet" />
        <Parameter Name="excludedPermissions" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetZone">Specifies a zone default permission set, which is obtained from machine policy. Valid values are <see langword="Internet" />, <see langword="LocalIntranet" />, or <see langword="Custom" />. If <see langword="Custom" /> is specified, the generated permission set is based only on the `includedPermissionSet` parameter.</param>
        <param name="includedPermissionSet">A &lt;xref:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet%2A&gt; object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of `targetZone` or `excludedPermissions` parameters.</param>
        <param name="excludedPermissions">An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the &lt;xref:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList%2A&gt; method. This parameter is ignored if `targetZone` is not <see langword="Internet" /> or <see langword="LocalIntranet" />.</param>
        <summary>Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.</summary>
        <returns>Returns the generated permission set.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IdentityListToPermissionSet">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet IdentityListToPermissionSet (string[] ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet IdentityListToPermissionSet(string[] ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ids" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="ids">An array of permission identity strings.</param>
        <summary>Converts an array of permission identity strings to a permission set object.</summary>
        <returns>Returns the converted permission set.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PermissionSetToIdentityList">
      <MemberSignature Language="C#" Value="public static string[] PermissionSetToIdentityList (System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] PermissionSetToIdentityList(class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permissionSet">The input permission set to be converted.</param>
        <summary>Converts a permission set object to an array of permission identity strings.</summary>
        <returns>Returns an array of permission identity strings.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SignFile">
      <MemberSignature Language="C#" Value="public static void SignFile (System.Security.Cryptography.X509Certificates.X509Certificate2 cert, Uri timestampUrl, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignFile(class System.Security.Cryptography.X509Certificates.X509Certificate2 cert, class System.Uri timestampUrl, string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cert" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="timestampUrl" Type="System.Uri" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cert">The certificate to be used to sign the file.</param>
        <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
        <param name="path">The name of the file to sign.</param>
        <summary>Signs a ClickOnce manifest or PE file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the current user's personal certificate store.  
  
 This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to be installed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SignFile">
      <MemberSignature Language="C#" Value="public static void SignFile (string certThumbprint, Uri timestampUrl, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignFile(string certThumbprint, class System.Uri timestampUrl, string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certThumbprint" Type="System.String" />
        <Parameter Name="timestampUrl" Type="System.Uri" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certThumbprint">Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.</param>
        <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
        <param name="path">The name of the file to sign.</param>
        <summary>Signs a ClickOnce manifest or PE file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to be installed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SignFile">
      <MemberSignature Language="C#" Value="public static void SignFile (string certPath, System.Security.SecureString certPassword, Uri timestampUrl, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignFile(string certPath, class System.Security.SecureString certPassword, class System.Uri timestampUrl, string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certPath" Type="System.String" />
        <Parameter Name="certPassword" Type="System.Security.SecureString" />
        <Parameter Name="timestampUrl" Type="System.Uri" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certPath">The certificate to be used to sign the file. The certificate must contain a private key. The <see langword="KeyUsage" /> extension is optional, but if it is present, <see langword="DigitalSignature" /> must be set to <see langword="True" />. The <see langword="EnhancedKeyUsage" /> extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.</param>
        <param name="certPassword">The certificate password.</param>
        <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
        <param name="path">The name of the file to sign.</param>
        <summary>Signs a ClickOnce manifest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This function is only for signing a manifest, not a PE file.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="XmlToPermissionSet">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet XmlToPermissionSet (System.Xml.XmlElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet XmlToPermissionSet(class System.Xml.XmlElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="element">An XML representation of the permission set.</param>
        <summary>Converts an XML element to a permission set object.</summary>
        <returns>The converted permission set object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Converts an <xref:System.Xml.XmlElement> object to a <xref:System.Security.PermissionSet> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>