<Type Name="Polyline" FullName="System.Windows.Shapes.Polyline">
  <TypeSignature Language="C#" Value="public sealed class Polyline : System.Windows.Shapes.Shape" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Polyline extends System.Windows.Shapes.Shape" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shapes.Shape</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Draws a series of connected straight lines.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This object is similar to the <xref:System.Windows.Shapes.Polygon> object, except that this object does not need to be a closed shape.  
  
   
  
## Examples  
 The following example shows how to create a Polyline element and set its properties by using code.  
  
 [!code-cpp[shapesprocedural#ShapesProceduralPolyline](~/add/codesnippet/cpp/shapesprocedural/ShapesProcedural.cpp#shapesproceduralpolyline)]
 [!code-vb[shapesprocedural#ShapesProceduralPolyline](~/add/codesnippet/visualbasic/ShapesProcedural/ShapesProceduralVB.vb#shapesproceduralpolyline)]
 [!code-cs[shapesprocedural#ShapesProceduralPolyline](~/add/codesnippet/csharp/ShapesProcedural/ShapesProcedural.cs#shapesproceduralpolyline)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Polyline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polyline" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefiningGeometry">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry DefiningGeometry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry DefiningGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRule">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FillRule FillRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.FillRule FillRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FillRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule" /> enumeration that specifies how the interior fill of the shape is determined.</summary>
        <value>One of the <see cref="T:System.Windows.Media.FillRule" /> enumeration values. The default is <see cref="T:System.Windows.Media.FillRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.FillRule> enumeration value determines the "insideness" of a point on the shape. It draws a ray from the point to infinity in any direction and counts the number of path segments from the specified shape that the ray crosses. If the number is odd, the point is inside; if it is even, the point is outside.  
  
 The <xref:System.Windows.Media.FillRule> enumeration value determines the "insideness" of a point on the shape. It first draws a ray from the point to infinity in any direction and then examines the places where a segment of the shape crosses the ray. It starts with a count of zero, adding one each time a Segment crosses the ray from left to right and subtracting one each time a path segment crosses the ray from right to left. After it counts the crossings, if the result is zero, the point is outside the path. Otherwise, it is inside.  
  
 ![Fill rule illustration](~/add/media/ref-mil-fillrule-stars.PNG "Fill rule illustration")  
FillRule Example  
  
<a name="dependencyPropertyInfo_FillRule"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Shapes.Polyline.FillRuleProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FillRuleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillRuleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillRuleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shapes.Polyline.FillRule%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PointCollection Points { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PointCollection Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a collection that contains the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />.</summary>
        <value>A collection of <see cref="T:System.Windows.Point" /> structures that describe the vertex points of the <see cref="T:System.Windows.Shapes.Polyline" />. The default is a null  reference (<see langword="Nothing" /> in Visual Basic).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], use a space-delimited list of comma-separated x- coordinate and y-coordinate pairs to set this attribute. Use simple notation, that is, `x`1`,y`1 `x`2`,y`2 ... `x`n`,y`n.  
  
<a name="dependencyPropertyInfo_Points"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Shapes.Polyline.PointsProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Shapes.Polyline> element and set the Points property by using code.  
  
 [!code-cpp[shapesprocedural#ShapesProceduralPolyline](~/add/codesnippet/cpp/shapesprocedural/ShapesProcedural.cpp#shapesproceduralpolyline)]
 [!code-vb[shapesprocedural#ShapesProceduralPolyline](~/add/codesnippet/visualbasic/ShapesProcedural/ShapesProceduralVB.vb#shapesproceduralpolyline)]
 [!code-cs[shapesprocedural#ShapesProceduralPolyline](~/add/codesnippet/csharp/ShapesProcedural/ShapesProcedural.cs#shapesproceduralpolyline)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PointsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shapes.Polyline.Points%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>