<Type Name="Path" FullName="System.Windows.Shapes.Path">
  <TypeSignature Language="C#" Value="public sealed class Path : System.Windows.Shapes.Shape" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Path extends System.Windows.Shapes.Shape" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shapes.Shape</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Draws a series of connected lines and curves.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Path object can draw closed or open shapes, multiple shapes, and even curved shapes.  
  
 Unlike the <xref:System.Windows.Shapes.Line> and <xref:System.Windows.Shapes.Polyline> objects, you can use this object to draw curves. See the <xref:System.Windows.Shapes.Path.Data%2A> property for a description of the shapes that the Path element supports.  
  
   
  
## Examples  
 The following example shows how to create a Path element and set its properties by using code.  
  
 [!code-cpp[shapesprocedural#ShapesProceduralPath](~/add/codesnippet/cpp/shapesprocedural/ShapesProcedural.cpp#shapesproceduralpath)]
 [!code-vb[shapesprocedural#ShapesProceduralPath](~/add/codesnippet/visualbasic/ShapesProcedural/ShapesProceduralVB.vb#shapesproceduralpath)]
 [!code-cs[shapesprocedural#ShapesProceduralPath](~/add/codesnippet/csharp/ShapesProcedural/ShapesProcedural.cs#shapesproceduralpath)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Path ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Path" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Media.Geometry" /> that specifies the shape to be drawn.</summary>
        <value>A description of the shape to be drawn.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To draw simple shapes, use the <xref:System.Windows.Media.EllipseGeometry>, <xref:System.Windows.Media.LineGeometry>, and <xref:System.Windows.Media.RectangleGeometry> objects. To draw curves, arcs, or complex shapes, use the <xref:System.Windows.Media.PathGeometry> object. To create a composite geometry, use a <xref:System.Windows.Media.GeometryGroup>. To combine geometries, use a <xref:System.Windows.Media.CombinedGeometry>.  
  
<a name="xamlPropertyElementUsage_Data"></a>   
## XAML Property Element Usage  
  
```  
<Path>  
  <Path.Data>  
    singleGeometry  
  </Path.Data>  
</Path>  
```  
  
<a name="xamlAttributeUsage_Data"></a>   
## XAML Attribute Usage  
  
```  
<objectÂ Data="moveAndDrawCommands"/>  
```  
  
<a name="xamlValues_Data"></a>   
## XAML Values  
 *singleGeometry*  
 A single object element that derives from <xref:System.Windows.Media.Geometry>. This can be one of the following:  
  
-   One of the simple geometries <xref:System.Windows.Media.EllipseGeometry>, <xref:System.Windows.Media.LineGeometry>, or <xref:System.Windows.Media.RectangleGeometry>.  
  
-   A single <xref:System.Windows.Media.GeometryGroup>, which supports other geometries as child elements. See XAML Values section for <xref:System.Windows.Media.GeometryGroup>.  
  
-   A <xref:System.Windows.Media.PathGeometry>, which supports child object elements that establish a path geometry object model of figures and segments. See XAML Values section for <xref:System.Windows.Media.PathGeometry>.  
  
 *moveAndDrawCommands*  
 One or more move and draw commands. For the complete syntax, see [Path Markup Syntax](~/add/includes/ajax-current-ext-md.md).  
  
<a name="dependencyPropertyInfo_Data"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Shapes.Path.DataProperty>|  
|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 The following example shows how to create a <xref:System.Windows.Shapes.Path> element and set the Data property by using code.  
  
 [!code-cpp[shapesprocedural#ShapesProceduralPath](~/add/codesnippet/cpp/shapesprocedural/ShapesProcedural.cpp#shapesproceduralpath)]
 [!code-vb[shapesprocedural#ShapesProceduralPath](~/add/codesnippet/visualbasic/ShapesProcedural/ShapesProceduralVB.vb#shapesproceduralpath)]
 [!code-cs[shapesprocedural#ShapesProceduralPath](~/add/codesnippet/csharp/ShapesProcedural/ShapesProcedural.cs#shapesproceduralpath)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DataProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DataProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the &lt;xref:System.Windows.Shapes.Path.Data%2A&gt; dependency property.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DefiningGeometry">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry DefiningGeometry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry DefiningGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>