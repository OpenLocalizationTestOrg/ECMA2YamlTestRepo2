<Type Name="DefaultAuthenticationModule" FullName="System.Web.Security.DefaultAuthenticationModule">
  <TypeSignature Language="C#" Value="public sealed class DefaultAuthenticationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DefaultAuthenticationModule extends System.Object implements class System.Web.IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Ensures that an authentication object is present in the context. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The DefaultAuthenticationModule ensures that the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is set to an <xref:System.Security.Principal.IPrincipal> object for each request. The DefaultAuthenticationModule examines the <xref:System.Web.HttpContext.User%2A> property after the <xref:System.Web.HttpApplication.AuthenticateRequest> event and before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. If the <xref:System.Web.HttpContext.User%2A> property is `null`, the DefaultAuthenticationModule sets the <xref:System.Web.HttpContext.User%2A> property to a <xref:System.Security.Principal.GenericPrincipal> object that contains no user information.  
  
 If the authentication module sets the <xref:System.Web.HttpResponse.StatusCode%2A> property to 401, the DefaultAuthenticationModule will render an access-denied error page. If the value of the <xref:System.Web.HttpResponse.StatusCode%2A> property is set to a value greater than 200, the DefaultAuthenticationModule object will end the request. In that case, only HTTP modules that subscribe to the <xref:System.Web.HttpApplication.EndRequest> event are called prior to the completion of the current request.  
  
 The DefaultAuthenticationModule exposes an <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> event. You can use this event to provide a custom <xref:System.Security.Principal.IPrincipal> object for the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance. The <xref:System.Web.Security.WindowsAuthenticationModule.Authenticate> event is accessed by specifying an event named **DefaultAuthentication_OnAuthenticate** in the application's Global.asax file.  
  
   
  
## Examples  
 The following example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of "default."  
  
> [!NOTE]
>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users="?" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is "default." Instead, you would specify `<deny users="default" />` to ensure that only authenticated users can access your site.  
  
 [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/t-system.web.security.de_1_1.asax)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/t-system.web.security.de_1_1.asax)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor is not intended to be called from application code.  
  
 ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.DefaultAuthenticationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.DefaultAuthenticationModule.Init%2A> method to initialize the new <xref:System.Web.Security.DefaultAuthenticationModule> object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.DefaultAuthenticationEventHandler Authenticate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.DefaultAuthenticationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after the request has been authenticated.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Authenticate event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event. It is used to ensure that the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is populated with an <xref:System.Security.Principal.IPrincipal> object.  
  
 You can access the Authenticate event of the <xref:System.Web.Security.DefaultAuthenticationModule> class by specifying a subroutine named **DefaultAuthentication_OnAuthenticate** in the application's Global.asax file.  
  
 You can use the <xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> property of the <xref:System.Web.Security.DefaultAuthenticationEventArgs> object in the **DefaultAuthentication_OnAuthenticate** event to set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom <xref:System.Security.Principal.IPrincipal> object. If you do not specify a value for the <xref:System.Web.HttpContext.User%2A> property, the <xref:System.Web.Security.DefaultAuthenticationModule> sets the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object that contains no user information.  
  
 The **DefaultAuthentication_OnAuthenticate** event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event and before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. If you have an  section that depends on the user name to deny or allow access to your application, modifying the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance can affect the behavior of your application. Be sure that the user name you set during the **DefaultAuthentication_OnAuthenticate** event is considered when you specify the  section in your configuration.  
  
> [!NOTE]
>  If the Web application is running in IIS 7.0 in Integrated mode, the Authenticate event of the <xref:System.Web.Security.DefaultAuthenticationModule> is not raised. If the `mode` attribute of the  configuration element is set to "None" and the application subscribes to the Authenticate event, a <xref:System.PlatformNotSupportedException> error is raised. In this scenario, to receive authentication notification, subscribe to the <xref:System.Web.HttpApplication.AuthenticateRequest> event of the <xref:System.Web.HttpApplication> instance. For more information about compatibility issues in Integrated mode, see [Moving an ASP.NET Application from IIS 6.0 to IIS 7.0](~/add/includes/ajax-current-ext-md.md).  
  
   
  
## Examples  
 The following code example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of "default."  
  
> [!NOTE]
>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users="?" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is "default." Instead, you would specify `<deny users="default" />` to ensure that only authenticated users can access your site.  
  
 [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/e-system.web.security.de_1.asax)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/e-system.web.security.de_1.asax)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources, other than memory, used by the <see cref="T:System.Web.Security.DefaultAuthenticationModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is not intended to be called from application code.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">The current <see cref="T:System.Web.HttpApplication" /> instance.</param>
        <summary>Initializes the <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is not intended to be called from application code.  
  
 The Init method ensures that the <xref:System.Web.Security.DefaultAuthenticationModule> is included in the processing of events.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>