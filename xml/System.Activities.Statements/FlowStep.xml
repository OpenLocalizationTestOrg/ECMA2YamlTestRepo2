<Type Name="FlowStep" FullName="System.Activities.Statements.FlowStep">
  <TypeSignature Language="C#" Value="public sealed class FlowStep : System.Activities.Statements.FlowNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FlowStep extends System.Activities.Statements.FlowNode" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Statements.FlowNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Action")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:System.Activities.Statements.FlowNode" /> element that executes a specified &lt;xref:System.Activities.Statements.FlowStep.Action%2A&gt; and has a &lt;xref:System.Activities.Statements.FlowStep.Next%2A&gt; pointer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code sample demonstrates creating a FlowStep node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  
  
 [!code-cs[wfs_FlowChartWithFaultHandling#4](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#4)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowStep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Returns a new instance of the <see cref="T:System.Activities.Statements.FlowStep" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowStep> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  
  
 [!code-cs[wfs_FlowChartWithFaultHandling#4](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:System.Activities.Activity" /> that the <see cref="T:System.Activities.Statements.FlowStep" /> executes.</summary>
        <value>The activity to be executed as part of this step of the flowchart.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code sample demonstrates using the Action property of a <xref:System.Activities.Statements.FlowStep> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  
  
 [!code-cs[wfs_FlowChartWithFaultHandling#4](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode Next { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The next <see cref="T:System.Activities.Statements.FlowNode" />in the flowchart to execute after executing the current <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
        <value>The specified element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code sample demonstrates using the Next property of a <xref:System.Activities.Statements.FlowStep> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  
  
 [!code-cs[wfs_FlowChartWithFaultHandling#4](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>