<Type Name="WorkflowWebHostingModule" FullName="System.Workflow.Runtime.Hosting.WorkflowWebHostingModule">
  <TypeSignature Language="C#" Value="public sealed class WorkflowWebHostingModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowWebHostingModule extends System.Object implements class System.Web.IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a mechanism for routing the workflow instance ID to and from a <see cref="T:System.Workflow.Activities.WorkflowWebService" /> to a cookie in the Web client. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  
  
 This functionality is required to reenter a workflow definition that is exposed as a Web service. Without this module, the first call to the workflow-exposed Web service works, but subsequent calls fail. Additionally, make sure that the client application has cookies enabled.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowWebHostingModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpModule.Dispose">
      <MemberSignature Language="C#" Value="void IHttpModule.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpModule.Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Call <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System.Web.IHttpModule.Dispose%2A> when you are finished using the <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule>. The <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System.Web.IHttpModule.Dispose%2A> method leaves the <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> in an unusable state. After calling <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System.Web.IHttpModule.Dispose%2A>, you must release all references to the <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> so the garbage collector can reclaim the memory that the <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> occupied.  
  
> [!NOTE]
>  Always call `Dispose` before you release your last reference to the <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule>. Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> object's `Finalize` method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpModule.Init">
      <MemberSignature Language="C#" Value="void IHttpModule.Init (System.Web.HttpApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpModule.Init(class System.Web.HttpApplication application) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="application">An <see cref="T:System.Web.HttpApplication" /> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application.</param>
        <summary>Initializes the workflow Web hosting module and prepares the module to handle requests.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System.Web.IHttpModule.Init%2A> to register event handling methods with specific events.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>