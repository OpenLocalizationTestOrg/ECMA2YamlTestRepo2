<Type Name="AncestorIterator" FullName="System.Xml.Xsl.Runtime.AncestorIterator">
  <TypeSignature Language="C#" Value="public struct AncestorIterator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AncestorIterator extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlXml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Iterates over all ancestor nodes according to the <see cref="N:System.Xml.XPath" /> ancestor axis rules, and returns the nodes in reverse document order.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Xml.XPath.XPathNavigator context, System.Xml.Xsl.Runtime.XmlNavigatorFilter filter, bool orSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Xml.XPath.XPathNavigator context, class System.Xml.Xsl.Runtime.XmlNavigatorFilter filter, bool orSelf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
        <Parameter Name="orSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">The node from which you start traversing ancestors.</param>
        <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name. For more information, see <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.</param>
        <param name="orSelf">
          <see langword="true" /> if you want the `context` node to be returned as a part of the iteration and not filtered out.</param>
        <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.AncestorIterator" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current result navigator.</summary>
        <value>The current result navigator.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The state of the navigator changes only if the <xref:System.Xml.Xsl.Runtime.AncestorIterator.MoveNext%2A> method has returned `true`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Positions the iterator on the next ancestor node.</summary>
        <returns>
          <see langword="true" /> if the next ancestor node exists; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the next ancestor node exists, the MoveNext method sets the <xref:System.Xml.Xsl.Runtime.AncestorIterator.Current%2A> property to the current result navigator; otherwise, the <xref:System.Xml.Xsl.Runtime.AncestorIterator.Current%2A> property remains unchanged.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>