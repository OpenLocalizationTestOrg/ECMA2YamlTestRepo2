<Type Name="MaskDescriptor" FullName="System.Windows.Forms.Design.MaskDescriptor">
  <TypeSignature Language="C#" Value="public abstract class MaskDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MaskDescriptor extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines a set of members for derived classes to provide options for the masked text box UI type editor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The MaskDescriptor abstract class defines the common set of properties that all mask descriptors must implement. You can use mask descriptors to create predefined mask options for use in the UI type editor for the <xref:System.Windows.Forms.MaskedTextBox>. For example, [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] provides predefined masks for data such as the Postal Code, time, different date formats, and telephone number. All predefined masks will be associated with the <xref:System.ComponentModel.MaskedTextProvider> parsing engine.  
  
 You can discover MaskDescriptor types at design time by querying the <xref:System.ComponentModel.Design.ITypeDiscoveryService> service provider.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MaskDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 MaskDescriptor is a compiler-supplied default constructor. A default constructor is required by the <xref:System.ComponentModel.Design.ITypeDiscoveryService> service provider.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;xref:System.Globalization.CultureInfo&gt; representing the locale the mask is authored for.</summary>
        <value>A &lt;xref:System.Globalization.CultureInfo&gt; representing the locale the mask is authored for.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object maskDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object maskDescriptor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskDescriptor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="maskDescriptor">The <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> to compare with the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</param>
        <summary>Determines whether the specified <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> is equal to the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> is equal to the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Equals method determines whether `maskDescriptor` and the current mask descriptor describe the same mask.  
  
 This method returns `true` if the following conditions are met in both mask descriptors.  
  
 1. The <xref:System.Windows.Forms.Design.MaskDescriptor.Mask%2A> property is the same for both mask descriptors.  
  
 2. The validating type is the same for both mask descriptors.  
  
> [!NOTE]
>  The <xref:System.Windows.Forms.Design.MaskDescriptor.Name%2A> property is not considered, because the <xref:System.ComponentModel.MaskedTextProvider> and <xref:System.Windows.Forms.MaskedTextBox> classes do not use it.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for a particular type.</summary>
        <returns>A hash code for the current &lt;xref:System.Object&gt;.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskDescriptor">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskDescriptor (System.Windows.Forms.Design.MaskDescriptor maskDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskDescriptor(class System.Windows.Forms.Design.MaskDescriptor maskDescriptor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskDescriptor" Type="System.Windows.Forms.Design.MaskDescriptor" />
      </Parameters>
      <Docs>
        <param name="maskDescriptor">The mask descriptor to test for validity.</param>
        <summary>Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.</summary>
        <returns>
          <see langword="true" /> if <paramref name="maskDescriptor" /> is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IsValidMaskDescriptor method determines whether `maskDescriptor` is valid and can be added to the masks list.  
  
 A valid <xref:System.Windows.Forms.Design.MaskDescriptor> must meet the following conditions.  
  
-   Not `null`.  
  
-   Not `null` or an empty mask.  
  
-   Not `null` or an empty name.  
  
-   Not `null` or an empty sample.  
  
-   The sample is correct based on the mask and all required edit characters have been provided. This means the mask is completed but not necessarily full.  
  
-   The sample is valid based on the <xref:System.Windows.Forms.Design.MaskDescriptor.ValidatingType%2A> object, if any.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskDescriptor">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskDescriptor (System.Windows.Forms.Design.MaskDescriptor maskDescriptor, out string validationErrorDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskDescriptor(class System.Windows.Forms.Design.MaskDescriptor maskDescriptor, string validationErrorDescription) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskDescriptor" Type="System.Windows.Forms.Design.MaskDescriptor" />
        <Parameter Name="validationErrorDescription" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="maskDescriptor">The mask descriptor to test for validity.</param>
        <param name="validationErrorDescription">A string representing a validation error. If no validation error occurred, the `validationErrorDescription` is &lt;xref:System.String&gt;.</param>
        <summary>Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.</summary>
        <returns>
          <see langword="true" /> if <paramref name="maskDescriptor" /> is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IsValidMaskDescriptor method determines whether `maskDescriptor` is valid and can be added to the masks list.  
  
 A valid <xref:System.Windows.Forms.Design.MaskDescriptor> must meet the following conditions.  
  
-   Not `null`.  
  
-   Not `null` or an empty mask.  
  
-   Not `null` or an empty name.  
  
-   Not `null` or an empty sample.  
  
-   The sample is correct based on the mask and all required edit characters have been provided. This means the mask is completed but not necessarily full.  
  
-   The sample is valid based on the <xref:System.Windows.Forms.Design.MaskDescriptor.ValidatingType%2A> object, if any.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public abstract string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the mask being defined.</summary>
        <value>A &lt;xref:System.String&gt; containing the mask being defined.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The mask must contain only valid characters, as defined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidMaskChar%2A> method of the <xref:System.ComponentModel.MaskedTextProvider> class. When a predefined mask is selected in [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], its Mask property is displayed.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the user-friendly name of the mask.</summary>
        <value>A &lt;xref:System.String&gt; containing the name or brief description of the &lt;xref:System.Windows.Forms.Design.MaskDescriptor.Mask%2A&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Name property is displayed in the **Mask Description** column in the visual editor for the <xref:System.Windows.Forms.MaskedTextBox> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="public abstract string Sample { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sample" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a sample of a formatted string for the mask.</summary>
        <value>A &lt;xref:System.String&gt; containing text that is formatted by using the &lt;xref:System.Windows.Forms.Design.MaskDescriptor.Mask%2A&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Sample property is displayed in the **Data Format** column in the visual editor for the <xref:System.Windows.Forms.MaskedTextBox> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current object.</summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public abstract Type ValidatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type providing validation associated with the mask.</summary>
        <value>The &lt;xref:System.Type&gt; that the formatted string is validated against.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ValidatingType property is used to validate the input string after the mask has been applied to it. It directly corresponds to the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>