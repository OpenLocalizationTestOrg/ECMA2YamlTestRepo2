<Type Name="AnchorEditor" FullName="System.Windows.Forms.Design.AnchorEditor">
  <TypeSignature Language="C#" Value="public sealed class AnchorEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnchorEditor extends System.Drawing.Design.UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a user interface for configuring an &lt;xref:System.Windows.Forms.Control.Anchor%2A&gt; property.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AnchorEditor provides a design-time user interface for configuring an <xref:System.Windows.Forms.Control.Anchor%2A> property. An <xref:System.Windows.Forms.Control.Anchor%2A> property is typically used to determine which sides of the container a control is bound to. This class provides a drop-down graphical control that allows the user to specify which sides of the container to anchor the control to.  
  
   
  
## Examples  
 The following code example uses an <xref:System.ComponentModel.EditorAttribute> to associate the AnchorEditor with a property.  
  
 [!code-cpp[EditorAttributesExample#4](~/add/codesnippet/cpp/t-system.windows.forms.d_40_1.cpp)]
 [!code-vb[EditorAttributesExample#4](~/add/codesnippet/visualbasic/t-system.windows.forms.d_40_1.vb)]
 [!code-cs[EditorAttributesExample#4](~/add/codesnippet/csharp/t-system.windows.forms.d_40_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnchorEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
        <param name="provider">An &lt;xref:System.IServiceProvider&gt; through which editing services may be obtained.</param>
        <param name="value">An instance of the value being edited.</param>
        <summary>Edits the value of the specified object using the specified service provider and context.</summary>
        <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A service provider is provided so that any required editing services can be obtained.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
        <summary>Gets the editor style used by the &lt;xref:System.Windows.Forms.Design.AnchorEditor.EditValue%2A&gt; method.</summary>
        <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style. If the method is not supported, this method will return <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>