<Type Name="IChannelReceiver" FullName="System.Runtime.Remoting.Channels.IChannelReceiver">
  <TypeSignature Language="C#" Value="public interface IChannelReceiver : System.Runtime.Remoting.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelReceiver implements class System.Runtime.Remoting.Channels.IChannel" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides required functions and properties for the receiver channels.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The receiving side of channels must expose the IChannelReceiver interface.  
  
   
  
## Examples  
 [!code-cpp[IChannelReceiver_StartListening_ChannelData#1](~/add/codesnippet/cpp/t-system.runtime.remotin_6_1.cpp)]
 [!code-cs[IChannelReceiver_StartListening_ChannelData#1](~/add/codesnippet/csharp/t-system.runtime.remotin_6_1.cs)]
 [!code-vb[IChannelReceiver_StartListening_ChannelData#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_6_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the channel-specific data.</summary>
        <value>The channel data.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is used when <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=fullName> is called and a <xref:System.Runtime.Remoting.ObjRef> is created.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="T:System.Security.Permissions.SecurityAction" />; Permission value: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI">The URI for which URLs are required.</param>
        <summary>Returns an array of all the URLs for a URI.</summary>
        <returns>An array of the URLs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName> method.  
  
   
  
## Examples  
 [!code-cpp[IChannelReceiver_StartListening_ChannelData#3](~/add/codesnippet/cpp/m-system.runtime.remotin_20_1.cpp)]
 [!code-cs[IChannelReceiver_StartListening_ChannelData#3](~/add/codesnippet/csharp/m-system.runtime.remotin_20_1.cs)]
 [!code-vb[IChannelReceiver_StartListening_ChannelData#3](~/add/codesnippet/visualbasic/m-system.runtime.remotin_20_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="T:System.Security.Permissions.SecurityAction" />; Permission value: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Optional initialization information.</param>
        <summary>Instructs the current channel to start listening for requests.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The data object can be used to pass specific initialization state to the channel.  
  
   
  
## Examples  
 [!code-cpp[IChannelReceiver_StartListening_ChannelData#4](~/add/codesnippet/cpp/fe7e0c29-e5e1-410f-81a5-_1.cpp)]
 [!code-cs[IChannelReceiver_StartListening_ChannelData#4](~/add/codesnippet/csharp/fe7e0c29-e5e1-410f-81a5-_1.cs)]
 [!code-vb[IChannelReceiver_StartListening_ChannelData#4](~/add/codesnippet/visualbasic/fe7e0c29-e5e1-410f-81a5-_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="T:System.Security.Permissions.SecurityAction" />; Permission value: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Optional state information for the channel.</param>
        <summary>Instructs the current channel to stop listening for requests.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The data object can be used to pass the specific state to the channel.  
  
   
  
## Examples  
 [!code-cpp[HttpServerChannel_Server_Client#3](~/add/codesnippet/cpp/m-system.runtime.remotin_70_1.cpp)]
 [!code-cs[HttpServerChannel_Server_Client#3](~/add/codesnippet/csharp/m-system.runtime.remotin_70_1.cs)]
 [!code-vb[HttpServerChannel_Server_Client#3](~/add/codesnippet/visualbasic/m-system.runtime.remotin_70_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="T:System.Security.Permissions.SecurityAction" />; Permission value: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>