<Type Name="MenuAdapter" FullName="System.Web.UI.WebControls.Adapters.MenuAdapter">
  <TypeSignature Language="C#" Value="public class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter implements class System.Web.UI.IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides the means to modify the behavior of the <see cref="T:System.Web.UI.WebControls.Menu" /> control for specific browsers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A MenuAdapter modifies the markup or behavior of a <xref:System.Web.UI.WebControls.Menu> control for a specific browser or class of browsers, or acts as a filter on some capability.  
  
 By default, the <xref:System.Web.UI.WebControls.MenuItem> objects in the <xref:System.Web.UI.WebControls.Menu> control are rendered as hyperlinks to accommodate menu navigation. The <xref:System.Web.UI.WebControls.Menu> class maintains state by implementing the <xref:System.Web.UI.IPostBackEventHandler> interface so that it can respond to and raise specific events during postback. You can extend the MenuAdapter class to further customize rendering or behavior of the <xref:System.Web.UI.WebControls.Menu> control.  
  
 The initial request for an adapter causes the .NET Framework to search for a mapped adapter for the control, given the characteristics of the requesting browser. The <xref:System.Web.HttpBrowserCapabilities> class uses browser definition files to identify the characteristics of the client browser and to map the adapter to the browser type.  
  
 For more information about adaptive rendering in ASP.NET, see [Architectural Overview of Adaptive Control Behavior](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The initial request for an adapter causes the .NET Framework to search for a mapped adapter for the control, given the characteristics of the requesting browser. After the adapter is found, the control holds a reference to the mapped adapter instance in its <xref:System.Web.UI.Control.Adapter%2A> property.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.Menu Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Menu Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves a strongly typed reference to the <see cref="T:System.Web.UI.WebControls.Menu" /> control associated with this <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> object.</summary>
        <value>The <see cref="T:System.Web.UI.WebControls.Menu" /> control associated with the current <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Control property provides a way to reference the adapter's corresponding control. When an adapter is associated with a particular control, the .NET Framework will call the life-cycle methods of the adapter in place of or in addition to the life-cycle methods of the control.  
  
   
  
## Examples  
 The following code example demonstrates how to use the Control property to retrieve the <xref:System.Web.UI.WebControls.Menu> control of the parent class. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> class.  
  
 [!code-vb[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_526_1.vb)]
 [!code-cs[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_526_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected override void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">An &lt;xref:System.Object&gt; in the form of a dictionary that contains the adapter's state information.</param>
        <summary>Loads any control state information that was saved by the &lt;xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A&gt; method during a previous request to the page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When an adapter needs to maintain private state information, it can override the LoadAdapterControlState and <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> methods. In the case of the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> class, where the displayed menu hierarchy is dependent on the previously selected <xref:System.Web.UI.WebControls.MenuItem> object, `state` provides a dictionary of name/value pairs containing the path of the selected item in the menu's hierarchy. The `state` parameter is a <xref:System.Web.UI.Pair> object saved by the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> during a previous request to the page.  
  
 If the control is not registered to participate in control state, the adapter must register for control state. Adapter control state is maintained in addition to the state for the control, unlike other life-cycle methods.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The &lt;xref:System.EventArgs&gt; data associated with this event.</param>
        <summary>Registers the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control as one that requires control state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnInit method registers the associated control as one that requires control state. By default, the .NET Framework calls the Web server control's own <xref:System.Web.UI.Control.OnInit%2A> method. However, after the <xref:System.Web.UI.Control.Adapter%2A> property of the server control is set, the .NET Framework will call the adapter's implementation of the <xref:System.Web.UI.Control.OnInit%2A> method instead of the control's implementation.  
  
 Use the OnInit method to initialize settings in the control. During a postback, this is an important phase for managing interaction with existing view-state data. For more information, see [Architectural Overview of Adaptive Control Behavior](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The &lt;xref:System.EventArgs&gt; data associated with this event.</param>
        <summary>Handles the &lt;xref:System.Web.UI.Control.OnPreRender%2A&gt; method for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The OnPreRender method calls an internal `OnPreRender` method in the <xref:System.Web.UI.WebControls.Menu> class. All other pre-rendering functions of the parent classes, such as data binding, applying styles, and event assignments perform as expected.  
  
 By default, the .NET Framework calls the <xref:System.Web.UI.WebControls.Menu> control's <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> method. However, after the <xref:System.Web.UI.Control.Adapter%2A> property of that control is set, the .NET Framework will call the adapter's implementation of the OnPreRender method instead of the control's implementation.  
  
 Use the OnPreRender method to finalize any settings in the control. Changes made to control properties in this phase will be saved to view state, but changes made in the <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> method are not saved. For more information, see [Architectural Overview of Adaptive Control Behavior](~/add/includes/ajax-current-ext-md.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">A &lt;xref:System.String&gt; that represents the path of the current node in the menu hierarchy.</param>
        <summary>Used to maintain the path of the menu when a postback event is raised.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RaisePostBackEvent method is called when the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> event is raised, and is used to maintain the navigation path of the menu. The `eventArgument` parameter contains a delimited string of menu items that identify the current location in the menu hierarchy.  
  
 The page passes the value of `eventArgument` to the associated control's <xref:System.Web.UI.WebControls.Menu.RaisePostBackEvent%2A> method. The associated <xref:System.Web.UI.WebControls.Menu> control also renders the markup element that causes the postback to occur. If the control renders client-side script for postback, the argument from the script is passed in the `eventArgument` parameter. If the postback is caused by a simple submit, `eventArgument` is `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The depth of the current node is more than allowed. This can be caused by an invalid declaration, by a change since the last request, or by a forged (spoofed) request.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance containing methods to build and render the device-specific output.</param>
        <summary>Adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the browser or device.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderBeginTag method adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the response stream for the client browser. The <xref:System.Web.UI.WebControls.MenuItem> objects will be rendered individually in the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> method and the control will be closed with a call to the subsequent <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> method.  
  
 Override RenderBeginTag when you want to implement custom behavior. For example, override the method to write multiple tags to the response stream before any control content, such as `<table><tr><td>`. Use the RenderBeginTag method in conjunction with the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> method to assure opening and closing tag consistency in your output.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to build and render the device-specific output.</param>
        <summary>Writes the associated menu items in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control to the output stream as a series of hyperlinks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderContents method writes the <xref:System.Web.UI.WebControls.MenuItem> objects of the associated <xref:System.Web.UI.WebControls.Menu> control to the output stream as hyperlinks. The RenderContents method is called from the <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> method and is used to perform modifications to the markup code that is rendered to a device browser.  
  
 Control properties should be set prior to this phase of the life cycle, and only the actual markup creation for the control done here. Changes made to the control in this stage of the life cycle are not saved to view state. For saving changes made to the control, override the <xref:System.Web.UI.Control.OnPreRender%2A> event.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The depth of the current item is more than allowed.  
  
 -or-  
  
 The current item is disabled.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance containing methods to build and render the device-specific output.</param>
        <summary>Creates final markup and writes the markup for the closing tag of the control to the output stream emitted to the browser or device.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderEndTag method writes the markup for the closing tag of the control to the output stream emitted to the response stream for the client browser. The attributes, style attributes, and opening tag are rendered in the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> method. The <xref:System.Web.UI.WebControls.MenuItem> objects are rendered individually in the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> method.  
  
 Override RenderEndTag when you want to implement custom behavior. For example, override the method to write multiple closing tags to the response stream after any control content, such as `</td></tr></table>`. Use the RenderEndTag method in conjunction with the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> method to assure opening and closing tag consistency in your output.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RenderItem">
      <MemberSignature Language="C#" Value="protected virtual void RenderItem (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderItem(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.MenuItem item, int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance containing methods to build and render the device-specific output.</param>
        <param name="item">The <see cref="T:System.Web.UI.WebControls.MenuItem" /> object containing the properties to write to the response stream.</param>
        <param name="position">The position of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object in the menu hierarchy.</param>
        <summary>Renders a single menu item as a hyperlink.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The RenderItem method is called from the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> method to retrieve the styles and spacing attributes from the <xref:System.Web.UI.WebControls.MenuItem> object and apply them to a newly created hyperlink element. The menu hierarchy is traversed in the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> method and will call the RenderItem method to render each item. Each item is rendered as a hyperlink and inherits the properties and styles of the specified <xref:System.Web.UI.WebControls.MenuItem> control. The hyperlink rendered to the page is one of the following:  
  
-   A postback event to open or select the item.  
  
-   A link to navigate to the target specified in the <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> property of the <xref:System.Web.UI.WebControls.MenuItem> control.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected override object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveAdapterControlState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves any changes to the adapter private control state that have occurred since the page was posted back to the server.</summary>
        <returns>An &lt;xref:System.Object&gt; that contains the adapter's control state information as a <see cref="T:System.Web.UI.StateBag" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The SaveAdapterControlState method uses the <xref:System.Web.UI.WebControls.Menu> control state to maintain the current navigation path of the menu. When an adapter needs to maintain private state information, it can override the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> and SaveAdapterControlState methods. An adapter might maintain private control state when there are complex features that need to maintain state across requests, separate from the associated control's state. The adapter needs to register for control state during the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> method call in every request.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">A &lt;xref:System.String&gt; that contains an optional event argument to pass to the event handler.</param>
        <summary>Enables the <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> class to process an event raised when a page is posted back to the server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method enables the <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> class to process an event that is raised when a page is posted back to the server. The page passes `eventArgument` to the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>