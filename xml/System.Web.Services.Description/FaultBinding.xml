<Type Name="FaultBinding" FullName="System.Web.Services.Description.FaultBinding">
  <TypeSignature Language="C#" Value="public sealed class FaultBinding : System.Web.Services.Description.MessageBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FaultBinding extends System.Web.Services.Description.MessageBinding" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Description.MessageBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Services.Configuration.XmlFormatExtensionPoint("Extensions")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the format for any error messages that might be output as a result of the operation. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `FaultBinding` class corresponds to the Web Services Description Language (WSDL) `<fault>` element enclosed by the `<operation>` element, which in turn corresponds to the <xref:System.Web.Services.Description.OperationBinding> class. For more information about WSDL, see the specification at http://www.w3.org/TR/wsdl/.  
  
   
  
## Examples  
 The following example demonstrates a typical use of the `FaultBinding` class.  
  
 [!code-vb[FaultBindingCollection_Add#1](~/add/codesnippet/visualbasic/t-system.web.services.de_17_1.vb)]
 [!code-cpp[FaultBindingCollection_Add#1](~/add/codesnippet/cpp/t-system.web.services.de_17_1.cpp)]
 [!code-cs[FaultBindingCollection_Add#1](~/add/codesnippet/csharp/t-system.web.services.de_17_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaultBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.FaultBinding" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public override System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of extensibility elements associated with the current <see cref="T:System.Web.Services.Description.FaultBinding" />.</summary>
        <value>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />. The default value is a collection with a &lt;xref:System.Collections.CollectionBase.Count%2A&gt; of zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates a typical use of the `Extensions` property.  
  
 FaultBindingCollection_Add#1  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>