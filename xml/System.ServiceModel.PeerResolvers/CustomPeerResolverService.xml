<Type Name="CustomPeerResolverService" FullName="System.ServiceModel.PeerResolvers.CustomPeerResolverService">
  <TypeSignature Language="C#" Value="public class CustomPeerResolverService : System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomPeerResolverService extends System.Object implements class System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.PeerResolvers.IPeerResolverContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, UseSynchronizationContext=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a basic implementation of a custom peer resolver service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CustomPeerResolverService class defines the base implementation of a custom peer resolver service and provides lookup for the resolution of registration IDs to peer endpoint addresses within the mesh maintained by this resolver.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPeerResolverService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CleanupInterval">
      <MemberSignature Language="C#" Value="public TimeSpan CleanupInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CleanupInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the recurring length of time after which stale entries are deleted from the peer resolver service's registration lookup table.</summary>
        <value>&lt;xref:System.TimeSpan&gt; that specifies the time interval after which stale entries are deleted from the peer resolver service's registration lookup table.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property must be set before the peer resolver service has been and must not be zero. The default interval is 1 minute.  
  
 This value must be less than the value of <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval%2A> to avoid the occurrence of stale entries in the peer resolver service's registration lookup table.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The interval is either zero or greater than &lt;xref:System.Int32.MaxValue&gt;.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt to set the property was made after a call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the peer resolver service.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The service has been closed by a previous call to this method.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ControlShape">
      <MemberSignature Language="C#" Value="public bool ControlShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether referrals are shared by the peer resolver service.</summary>
        <value>True if referrals are shared by the peer resolver service; false if they are not.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetServiceSettings">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtains the specific response settings for the peer resolver service.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> that contains the specific response settings for the custom peer resolver service, including cleanup and refresh interval settings.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens the peer resolver service.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When this method is called, it schedules the first registration lookup table cleanup based on the value set for the <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A> property.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">&lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A&gt; or &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval%2A&gt; are set to a time span interval of 0.</exception>
        <exception cref="T:System.InvalidOperationException">The service has been started by a previous call to this method.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh (System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh(class System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RefreshResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshInfo" Type="System.ServiceModel.PeerResolvers.RefreshInfo" />
      </Parameters>
      <Docs>
        <param name="refreshInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> object that contains the mesh ID and the registration ID of the entry to refresh in the peer resolver service's registration lookup table.</param>
        <summary>Refreshes the expiry of an entry in the peer resolver service's registration lookup table.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> that contains the newly refreshed registration entry.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A refresh of an entry extends the length of time for which it remains valid. All information used to uniquely identify the entry must be supplied in the <xref:System.ServiceModel.PeerResolvers.RefreshInfo> object supplied to this method.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="refreshInfo" /> is set to null.</exception>
        <exception cref="T:System.InvalidOperationException">The custom peer resolver service has not been started with a previous call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="RefreshInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RefreshInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the length of time that entries remain valid in a peer resolver service's registration lookup table.</summary>
        <value>&lt;xref:System.TimeSpan&gt; that specifies the length of time that entries remain valid in a peer resolver service's registration lookup table.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property must be set before the peer resolver service has been and must not be zero. The default interval is 2 minutes.  
  
 When the amount of time supplied to this property has passed for a given entry in a peer resolver service's registration lookup table, that entry is marked for deletion. The delete occurs when interval specified in the <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A> property occurs.  For example, if this property is set to a timespan of 10 minutes, entries in the registration lookup table will become stale and marked for deletion after the interval has passed. As a result, the peer resolver client must update every ten minutes to avoid having their entry deleted.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The interval is either zero or greater than &lt;xref:System.Int32.MaxValue&gt;.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt to set the property was made after a call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (System.ServiceModel.PeerResolvers.RegisterInfo registerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(class System.ServiceModel.PeerResolvers.RegisterInfo registerInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registerInfo" Type="System.ServiceModel.PeerResolvers.RegisterInfo" />
      </Parameters>
      <Docs>
        <param name="registerInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> that contains information about the registration entry to register with the peer resolver service.</param>
        <summary>Adds a new entry to the registration lookup table of the peer resolver service.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> that contains a copy of the entry added to the peer resolver service's registration lookup table.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method adds a new entry to the registration lookup table of the peer resolver service. Note that registrations made after the service is closed  have no effect -- these entries are not returned by resolve requests.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> object supplied to this method was either null or not correctly formed.</exception>
        <exception cref="T:System.NullReferenceException">The AddressInfo property of the object supplied to the <paramref name="registerInfo" /> parameter was null.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="meshId" /> value supplied to this method is set to null.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (Guid clientId, string meshId, System.ServiceModel.PeerNodeAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(valuetype System.Guid clientId, string meshId, class System.ServiceModel.PeerNodeAddress address) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.Guid" />
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="address" Type="System.ServiceModel.PeerNodeAddress" />
      </Parameters>
      <Docs>
        <param name="clientId">A &lt;xref:System.Guid&gt; that specifies a unique identifier for the registration entry to register with the resolver service.</param>
        <param name="meshId">A &lt;xref:System.String&gt; that specifies the mesh ID of the peer mesh in which the registration entry participates.</param>
        <param name="address">A <see cref="T:System.ServiceModel.PeerNodeAddress" /> that contains the endpoint address of the registration entry.</param>
        <summary>Adds a new entry to the registration lookup table of the peer resolver service.</summary>
        <returns>A <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> that contains a copy of the entry added to the peer resolver service's registration lookup table.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> object supplied to this method was either null or not correctly formed.</exception>
        <exception cref="T:System.ArgumentNullException">The MeshId and/or the RegistrationId property of object supplied to the <paramref name="refreshInfo" /> parameter was null.</exception>
        <exception cref="T:System.NullReferenceException">The MeshId property of the object supplied to the <paramref name="refreshInfo" /> parameter is unknown.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve (System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve(class System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ResolveResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolveInfo" Type="System.ServiceModel.PeerResolvers.ResolveInfo" />
      </Parameters>
      <Docs>
        <param name="resolveInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> that contains information on the registration entry for which endpoints, if known, are to be looked up by the peer resolver service.</param>
        <summary>Returns a list of known endpoints for a registration entry.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> that contains the endpoints for the registration entry in the lookup table that matches the information supplied in the <paramref name="resolveInfo" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method looks up a registration entry based on the data supplied in a <xref:System.ServiceModel.PeerResolvers.ResolveInfo> object and returns any corresponding endpoint addresses found in the peer resolver service's registration lookup table. The number of endpoint addresses returned is equal to or less than the value of the  <xref:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses%2A> property set on the <xref:System.ServiceModel.PeerResolvers.ResolveInfo> object.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> object is null or is not correctly formed.</exception>
        <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public virtual void Unregister (System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unregisterInfo" Type="System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </Parameters>
      <Docs>
        <param name="unregisterInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> that contains the information used to uniquely identify the registration entry to remove from the registration lookup table.</param>
        <summary>Removes a specific entry from the registration lookup table of the peer resolver service.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">An entry for the specified registration entry could not be found, or the supplied <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> object is null or not correctly formed.</exception>
        <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Update (System.ServiceModel.PeerResolvers.UpdateInfo updateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Update(class System.ServiceModel.PeerResolvers.UpdateInfo updateInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateInfo" Type="System.ServiceModel.PeerResolvers.UpdateInfo" />
      </Parameters>
      <Docs>
        <param name="updateInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> that uniquely identifies a specific registration entry and provides updated information for it.</param>
        <summary>Updates an existing registration entry entry in the registration lookup table of the peer resolver service.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> that contains a copy of the updated registration entry entry.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">An entry for the specified registration entry could not be found, or the supplied <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> object was not correctly formed.</exception>
        <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to &lt;xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open%2A&gt;.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>