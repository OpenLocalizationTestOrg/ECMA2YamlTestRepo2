<Type Name="ActionMessageFilter" FullName="System.ServiceModel.Dispatcher.ActionMessageFilter">
  <TypeSignature Language="C#" Value="public class ActionMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActionMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a query that tests whether the action of a message is one of a specified set of actions.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 It is invalid to construct an ActionMessageFilter with no actions.  
  
 This type is serializable as a <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
   
  
## Examples  
 The following example creates two ActionMessageFilters, gets the action string out of one of the filters using the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions%2A> property, tests a message against the action filters directly, and displays the result of applying the filter.  
  
 [!code-cs[UEActionFilter#1](~/add/codesnippet/csharp/t-system.servicemodel.di_4_1.cs)]
 [!code-vb[UEActionFilter#1](~/add/codesnippet/visualbasic/t-system.servicemodel.di_4_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionMessageFilter (string[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] actions) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actions" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">The &lt;xref:System.Array&gt; that contains the set of actions for which the filter tests.</param>
        <summary>Initializes a new instance of this class with the set of actions for which it tests.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the array of `actions` provided to populate the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> contains duplicate actions, the duplicates are removed and only one of them is added to the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter>. The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of `actions` contained in the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> is accessed by the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions%2A> property and cannot be modified after the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> object is instantiated.  
  
   
  
## Examples  
 [!code-cs[UEActionFilter#2](~/add/codesnippet/csharp/m-system.servicemodel.di_3_1.cs)]
 [!code-vb[UEActionFilter#2](~/add/codesnippet/visualbasic/m-system.servicemodel.di_3_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="actions" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The<paramref name=" actions" /> array is empty.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a read-only copy of action strings for which this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> tests.</summary>
        <value>The &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains the action strings for which this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> tests.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The actions in the read-only collection returned cannot be modified after the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> object is instantiated.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">The &lt;xref:System.ServiceModel.Channels.Message&gt; to test.</param>
        <summary>Tests whether a message's action matches one of the actions specified in this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.ServiceModel.Channels.Message&gt; action header matches one of the specified actions; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this overload of <xref:System.ServiceModel.Dispatcher.ActionMessageFilter.Match%2A> when a message must be tested against the actions in a single filter and the <xref:System.ServiceModel.Channels.Message> is available.  
  
   
  
## Examples  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">The &lt;xref:System.ServiceModel.Channels.MessageBuffer&gt; to test.</param>
        <summary>Tests whether a buffered message's action header matches one of the actions specified in this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />.</summary>
        <returns>
          <see langword="true" /> if the &lt;xref:System.ServiceModel.Channels.MessageBuffer&gt; action header matches one of the specified actions; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this overload of the <xref:System.ServiceModel.Dispatcher.ActionMessageFilter.Match%2A> method when a message must be tested against the actions in a single filter and the <xref:System.ServiceModel.Channels.MessageBuffer> is available.  
  
   
  
## Examples  
 [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageBuffer" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>