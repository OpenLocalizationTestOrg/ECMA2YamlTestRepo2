<Type Name="RibbonMenuItemDataAutomationPeer" FullName="System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer">
  <TypeSignature Language="C#" Value="public class RibbonMenuItemDataAutomationPeer : System.Windows.Automation.Peers.ItemAutomationPeer, System.Windows.Automation.Provider.IExpandCollapseProvider, System.Windows.Automation.Provider.IInvokeProvider, System.Windows.Automation.Provider.IToggleProvider, System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RibbonMenuItemDataAutomationPeer extends System.Windows.Automation.Peers.ItemAutomationPeer implements class System.Windows.Automation.Provider.IExpandCollapseProvider, class System.Windows.Automation.Provider.IInvokeProvider, class System.Windows.Automation.Provider.IToggleProvider, class System.Windows.Automation.Provider.ITransformProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Peers.ItemAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IExpandCollapseProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IInvokeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IToggleProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.ITransformProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents the data contained in a <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" />.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonMenuItemDataAutomationPeer (object item, System.Windows.Automation.Peers.ItemsControlAutomationPeer itemsControlPeer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object item, class System.Windows.Automation.Peers.ItemsControlAutomationPeer itemsControlPeer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="itemsControlPeer" Type="System.Windows.Automation.Peers.ItemsControlAutomationPeer" />
      </Parameters>
      <Docs>
        <param name="item">The element associated with this automation peer.</param>
        <param name="itemsControlPeer">The automation peer that is associated with the <see cref="T:System.Windows.Controls.ItemsControl" /> that holds the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlTypeCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />. This method is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType%2A&gt;.</summary>
        <returns>The <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> enumeration value.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected override string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetClassNameCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the class name of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />. This method is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName%2A&gt;.</summary>
        <returns>The class name of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public override object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">A value enumeration that specifies the control pattern.</param>
        <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> that is associated with the <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <returns>An object that supports the control pattern if <paramref name="patternInterface" /> is a supported value; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If one of the following cases occurs, this method returns an object that supports the specified control pattern.  
  
-   `patternInterface` equals <xref:System.Windows.Automation.Peers.PatternInterface> and the <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> that is associated with this <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> has child objects.  
  
-   `patternInterface` equals <xref:System.Windows.Automation.Peers.PatternInterface> and the <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> that is associated with this <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> does not have child objects.  
  
-   `patternInterface` equals <xref:System.Windows.Automation.Peers.PatternInterface> and the <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> that is associated with this <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> has its checkable property set to `true`.  
  
-   `patternInterface` equals <xref:System.Windows.Automation.Peers.PatternInterface> and the <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> that is associated with this <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> can be resized.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <MemberSignature Language="C#" Value="void IExpandCollapseProvider.Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hides all items that are in the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.IExpandCollapseProvider> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not enabled.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is virtualized.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> does not contain any items.  
  
 -or-  
  
 The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not available.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <MemberSignature Language="C#" Value="void IExpandCollapseProvider.Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IExpandCollapseProvider.Expand() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Displays all items that are in the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.IExpandCollapseProvider> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not enabled.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is virtualized.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> does not contain any items.  
  
 -or-  
  
 The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not available.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <MemberSignature Language="C#" Value="System.Windows.Automation.ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ExpandCollapseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the state, expanded or collapsed, of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>The state of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.IExpandCollapseProvider> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is virtualized.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not available.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <MemberSignature Language="C#" Value="void IInvokeProvider.Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IInvokeProvider.Invoke() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sends a request to activate the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.IInvokeProvider> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not enabled.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is virtualized.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not available.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <MemberSignature Language="C#" Value="void IToggleProvider.Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IToggleProvider.Toggle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cycles through the checked states of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.IToggleProvider> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not enabled.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is virtualized.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not available.  
  
 -or-  
  
 The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> cannot be checked.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <MemberSignature Language="C#" Value="System.Windows.Automation.ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ToggleState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the checked state of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>The checked state of the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.IToggleProvider> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is virtualized.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not available.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> can be moved.</summary>
        <value>
          <see langword="false" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.ITransformProvider> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> can be resized.</summary>
        <value>
          <see langword="true" /> if the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> can be resized; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.ITransformProvider> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> can be rotated.</summary>
        <value>
          <see langword="false" /> in all cases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> instance is cast to an <xref:System.Windows.Automation.Provider.ITransformProvider> interface.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Move">
      <MemberSignature Language="C#" Value="void ITransformProvider.Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Move(float64 x, float64 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">This API is not implemented.</param>
        <param name="y">This API is not implemented.</param>
        <summary>This API is not implemented.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">In all cases.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Resize">
      <MemberSignature Language="C#" Value="void ITransformProvider.Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Resize(float64 width, float64 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">This API is not implemented.</param>
        <param name="height">This API is not implemented.</param>
        <summary>This API is not implemented.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> is not enabled.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> cannot be resized.  
  
 -or-  
  
 The <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> cannot be checked.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Rotate">
      <MemberSignature Language="C#" Value="void ITransformProvider.Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Rotate(float64 degrees) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">This API is not implemented.</param>
        <summary>This API is not implemented.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">In all cases.</exception>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>