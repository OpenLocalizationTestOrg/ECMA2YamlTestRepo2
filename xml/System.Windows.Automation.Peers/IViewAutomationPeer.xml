<Type Name="IViewAutomationPeer" FullName="System.Windows.Automation.Peers.IViewAutomationPeer">
  <TypeSignature Language="C#" Value="public interface IViewAutomationPeer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IViewAutomationPeer" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Allows a customized view of a <see cref="T:System.Windows.Controls.ListView" /> that derives from <see cref="T:System.Windows.Controls.ViewBase" /> to implement automation peer features that are specific to the custom view.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows a custom view implementing IViewAutomationPeer in a separate class to handle a button that appears at the top of the <xref:System.Windows.Controls.ListView> control.  
  
 [!code-cs[ListViewCustomView#IVAPCreate](~/add/codesnippet/csharp/ListViewCustomView/OneButtonHeaderView.cs#ivapcreate)]
 [!code-vb[ListViewCustomView#IVAPCreate](~/add/codesnippet/visualbasic/listviewcustomview/onebuttonheaderview.vb#ivapcreate)]  
[!code-cs[ListViewCustomView#IVAP](~/add/codesnippet/csharp/ListViewCustomView/OneButtonHeaderView.cs#ivap)]
[!code-vb[ListViewCustomView#IVAP](~/add/codesnippet/visualbasic/listviewcustomview/onebuttonheaderview.vb#ivap)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="CreateItemAutomationPeer">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer(object item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.ItemAutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The <see cref="T:System.Windows.Controls.ListViewItem" /> that is associated with the <see cref="T:System.Windows.Controls.ListView" /> that is used by this <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />.</param>
        <summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> class.</summary>
        <returns>The new <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> instance.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationControlType GetAutomationControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlType() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the control type for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />.</summary>
        <returns>A value in the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> enumeration.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; GetChildren (System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Windows.Automation.Peers.AutomationPeer&gt; GetChildren(class System.Collections.Generic.List`1&lt;class System.Windows.Automation.Peers.AutomationPeer&gt; children) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;" />
      </Parameters>
      <Docs>
        <param name="children">The automation peers for the list items.</param>
        <summary>Gets the collection of immediate child elements of the specified [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] peer.</summary>
        <returns>The automation peers for all items in the control. If the view contains interactive or informational elements in addition to the list items, automation peers for these elements must be added to the list.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">A value in the enumeration.</param>
        <summary>Gets the control pattern that is associated with the specified <paramref name="patternInterface" />.</summary>
        <returns>Return the object that implements the control pattern. If this method returns null, the return value from GetPattern is used.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ItemsChanged">
      <MemberSignature Language="C#" Value="public void ItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A &lt;xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs&gt; that contains the event data.</param>
        <summary>Called by <see cref="T:System.Windows.Controls.ListView" /> when the collection of items changes.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ViewDetached">
      <MemberSignature Language="C#" Value="public void ViewDetached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ViewDetached() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the custom view is no longer applied to the <see cref="T:System.Windows.Controls.ListView" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>