<Type Name="MediaPermission" FullName="System.Security.Permissions.MediaPermission">
  <TypeSignature Language="C#" Value="public sealed class MediaPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit MediaPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>The MediaPermission describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermission (System.Security.Permissions.MediaPermissionAudio permissionAudio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.MediaPermissionAudio permissionAudio) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionAudio" Type="System.Security.Permissions.MediaPermissionAudio" />
      </Parameters>
      <Docs>
        <param name="permissionAudio">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the audio permission level.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage> and <xref:System.Security.Permissions.MediaPermissionVideo>.  
  
   
  
## Examples  
 The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionAudio> value.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission1](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission1)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission1](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission1)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermission (System.Security.Permissions.MediaPermissionImage permissionImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.MediaPermissionImage permissionImage) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionImage" Type="System.Security.Permissions.MediaPermissionImage" />
      </Parameters>
      <Docs>
        <param name="permissionImage">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the image permission level.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionVideo>.  
  
   
  
## Examples  
 The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionImage> value.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission2](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission2)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission2](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission2)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermission (System.Security.Permissions.MediaPermissionVideo permissionVideo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.MediaPermissionVideo permissionVideo) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionVideo" Type="System.Security.Permissions.MediaPermissionVideo" />
      </Parameters>
      <Docs>
        <param name="permissionVideo">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the video permission level.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionImage>.  
  
   
  
## Examples  
 The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionVideo> value.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission3](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission3)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission3](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission3)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">An enumerated value of <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying a permission state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are granted full permission to play or display with no restrictions. If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are restricted from playing or displaying.  
  
   
  
## Examples  
 The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.PermissionState> value.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission4](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission4)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission4](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission4)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPermission (System.Security.Permissions.MediaPermissionAudio permissionAudio, System.Security.Permissions.MediaPermissionVideo permissionVideo, System.Security.Permissions.MediaPermissionImage permissionImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.MediaPermissionAudio permissionAudio, valuetype System.Security.Permissions.MediaPermissionVideo permissionVideo, valuetype System.Security.Permissions.MediaPermissionImage permissionImage) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionAudio" Type="System.Security.Permissions.MediaPermissionAudio" />
        <Parameter Name="permissionVideo" Type="System.Security.Permissions.MediaPermissionVideo" />
        <Parameter Name="permissionImage" Type="System.Security.Permissions.MediaPermissionImage" />
      </Parameters>
      <Docs>
        <param name="permissionAudio">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
        <param name="permissionVideo">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
        <param name="permissionImage">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the audio, video, and image permission levels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionVideo>, and <xref:System.Security.Permissions.MediaPermissionImage> values  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission5](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission5)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission5](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission5)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.MediaPermissionAudio Audio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.MediaPermissionAudio Audio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.MediaPermissionAudio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current value of the audio permission level.</summary>
        <value>The audio permission level.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionAudio> value for the <xref:System.Security.Permissions.MediaPermission>.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission6](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission6)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission6](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission6)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns an identical copy of the current permission.</summary>
        <returns>A copy of the current permission.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A copy of a permission represents the same access to resources as the original permission.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">The XML encoding to use to reconstruct the permission.</param>
        <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.MediaPermissionImage Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.MediaPermissionImage Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.MediaPermissionImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current value of the image permission level.</summary>
        <value>The image permission level.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionImage> value for the <xref:System.Security.Permissions.MediaPermission>.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission7](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission7)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission7](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission7)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
        <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
        <returns>The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
        <summary>Determines whether the current permission is a subset of the specified permission.</summary>
        <returns>
          <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.  
  
 If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
        <returns>
          <see langword="true" /> if the audio, image, and video permissions are all unrestricted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The return value is `true` when the media permission values are <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo>.  
  
   
  
## Examples  
 The following code example shows how to determine whether the <xref:System.Security.Permissions.MediaPermission> is unrestricted.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission16](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission16)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission16](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission16)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an XML encoding of the permission and its current state.</summary>
        <returns>An XML encoding of the permission, including any state information.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
        <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
        <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Video">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.MediaPermissionVideo Video { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.MediaPermissionVideo Video" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.MediaPermissionVideo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current value of the video permission level.</summary>
        <value>The media permission level.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionVideo> value for the <xref:System.Security.Permissions.MediaPermission>.  
  
 [!code-vb[SecurityPermissionsSnippets#MediaPermission8](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission8)]
 [!code-cs[SecurityPermissionsSnippets#MediaPermission8](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission8)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>