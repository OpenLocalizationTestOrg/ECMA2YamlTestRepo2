<Type Name="SqlFunctions" FullName="System.Data.Objects.SqlClient.SqlFunctions">
  <TypeSignature Language="C#" Value="public static class SqlFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlFunctions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides common language runtime (CLR) methods that call functions in the database in LINQ to Entities queries.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Acos (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Acos(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ACOS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The cosine of an angle.</param>
        <summary>A mathematical function that returns the angle, in radians, whose cosine is the specified numerical value. This angle is called the arccosine.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ACOS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Acos (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Acos(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ACOS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The cosine of an angle.</param>
        <summary>A mathematical function that returns the angle, in radians, whose cosine is the specified numerical value. This angle is called the arccosine.</summary>
        <returns>The angle, in radians, defined by the input cosine value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ACOS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Ascii">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Ascii (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Ascii(string arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASCII")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">A valid string.</param>
        <summary>Returns the ASCII code value of the left-most character of a character expression.</summary>
        <returns>The ASCII code of the first character in the input string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ASCII (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140040).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Asin (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Asin(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The sine of an angle.</param>
        <summary>A mathematical function that returns the angle, in radians, whose sine is the specified numerical value. This angle is called the arcsine.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ASIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Asin (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Asin(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The sine of an angle.</param>
        <summary>A mathematical function that returns the angle, in radians, whose sine is the specified numerical value. This angle is called the arcsine.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ASIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The tangent of an angle.</param>
        <summary>A mathematical function that returns the angle, in radians, whose tangent is the specified numerical value. This angle is called the arctangent.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ATAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The tangent of an angle.</param>
        <summary>A mathematical function that returns the angle, in radians, whose tangent is the specified numerical value. This angle is called the arctangent.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ATAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan2 (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan2(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATN2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The y-coordinate of a point.</param>
        <param name="arg2">The x-coordinate of a point.</param>
        <summary>Returns the positive angle, in radians, between the positive x-axis and the ray from the origin through the point (x, y), where x and y are the two specified numerical values. The first parameter passed to the function is the y-value and the second parameter is the x-value.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ATN2 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan2 (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan2(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATN2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The y-coordinate of a point.</param>
        <param name="arg2">The x-coordinate of a point.</param>
        <summary>Returns the positive angle, in radians, between the positive x-axis and the ray from the origin through the point (x, y), where x and y are the two specified numerical values. The first parameter passed to the function is the y-value and the second parameter is the x-value.</summary>
        <returns>An angle, measured in radians.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ATN2 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="public static string Char (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Char(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An ASCII code.</param>
        <summary>Returns the character that corresponds to the specified integer ASCII value.</summary>
        <returns>The character that corresponds to the specified ASCII value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHAR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140119).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (byte[] toSearch, byte[] target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="toSearch">The string expression to be searched.</param>
        <param name="target">The string expression to be found.</param>
        <summary>Returns the starting position of one expression found within another expression.</summary>
        <returns>The starting position of <paramref name="target" /> if it is found in <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (string toSearch, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(string toSearch, string target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toSearch">The string expression to be searched.</param>
        <param name="target">The string expression to be found.</param>
        <summary>Returns the starting position of one expression found within another expression.</summary>
        <returns>The starting position of <paramref name="target" /> if it is found in <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (byte[] toSearch, byte[] target, Nullable&lt;int&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target, valuetype System.Nullable`1&lt;int32&gt; startLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">The string expression to be searched.</param>
        <param name="target">The string expression to be found.</param>
        <param name="startLocation">The character position in `toSearch` where searching begins.</param>
        <summary>Returns the starting position of one expression found within another expression.</summary>
        <returns>The starting position of <paramref name="target" /> if it is found in <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; CharIndex (byte[] toSearch, byte[] target, Nullable&lt;long&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target, valuetype System.Nullable`1&lt;int64&gt; startLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">The string expression to be searched.</param>
        <param name="target">The string expression to be found.</param>
        <param name="startLocation">The character position in `toSearch` at which searching begins.</param>
        <summary>Returns the starting position of one expression found within another expression.</summary>
        <returns>The starting position of <paramref name="target" /> if it is found in <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (string toSearch, string target, Nullable&lt;int&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(string toSearch, string target, valuetype System.Nullable`1&lt;int32&gt; startLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">The string expression to be searched.</param>
        <param name="target">The string expression to be found.</param>
        <param name="startLocation">The character position in `toSearch` where searching begins.</param>
        <summary>Returns the starting position of one expression found within another expression.</summary>
        <returns>The starting position of <paramref name="target" /> if it is found in <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; CharIndex (string toSearch, string target, Nullable&lt;long&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; CharIndex(string toSearch, string target, valuetype System.Nullable`1&lt;int64&gt; startLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">The string expression to be searched.</param>
        <param name="target">The string expression to be found.</param>
        <param name="startLocation">The character position in `toSearch` where searching begins.</param>
        <summary>Returns the starting position of one expression found within another expression.</summary>
        <returns>A &lt;xref:System.Nullable%601&gt; of &lt;xref:System.Int64&gt; value that is the starting position of <paramref name="target" /> if it is found in <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">The character array for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input argument.</summary>
        <returns>The checksum computed over the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1, unsigned int8[] arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">The character array for which the checksum is calculated.</param>
        <param name="arg2">The character array for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1, Nullable&lt;bool&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1, valuetype System.Nullable`1&lt;bool&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1, Nullable&lt;DateTime&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1, Nullable&lt;DateTimeOffset&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1, Nullable&lt;Guid&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1, Nullable&lt;TimeSpan&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1, string arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1, byte[] arg2, byte[] arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1, unsigned int8[] arg2, unsigned int8[] arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
        <Parameter Name="arg2" Type="System.Byte[]" />
        <Parameter Name="arg3" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">The character array for which the checksum is calculated.</param>
        <param name="arg2">The character array for which the checksum is calculated.</param>
        <param name="arg3">The character array for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1, Nullable&lt;bool&gt; arg2, Nullable&lt;bool&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1, valuetype System.Nullable`1&lt;bool&gt; arg2, valuetype System.Nullable`1&lt;bool&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1, Nullable&lt;DateTime&gt; arg2, Nullable&lt;DateTime&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1, Nullable&lt;DateTimeOffset&gt; arg2, Nullable&lt;DateTimeOffset&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2, Nullable&lt;decimal&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2, Nullable&lt;double&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2, valuetype System.Nullable`1&lt;float64&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1, Nullable&lt;Guid&gt; arg2, Nullable&lt;Guid&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1, Nullable&lt;TimeSpan&gt; arg2, Nullable&lt;TimeSpan&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1, string arg2, string arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">The value for which the checksum is calculated.</param>
        <param name="arg2">The value for which the checksum is calculated.</param>
        <param name="arg3">The value for which the checksum is calculated.</param>
        <summary>Returns the checksum value computed over the input arguments.</summary>
        <returns>The checksum computed over the input values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ChecksumAggregate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; ChecksumAggregate (System.Collections.Generic.IEnumerable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; ChecksumAggregate(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM_AGG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The collection of values over which the checksum is computed.</param>
        <summary>Returns the checksum of the values in a collection. Null values are ignored.</summary>
        <returns>The checksum computed from the input collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM_AGG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ChecksumAggregate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; ChecksumAggregate (System.Collections.Generic.IEnumerable&lt;Nullable&lt;int&gt;&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; ChecksumAggregate(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM_AGG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The collection of values over which the checksum is computed.</param>
        <summary>Returns the checksum of the values in a collection. Null values are ignored.</summary>
        <returns>The checksum computed from the input collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM_AGG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cos (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cos(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>Returns the trigonometric cosine of the specified angle, in radians, in the specified expression.</summary>
        <returns>The trigonometric cosine of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [COS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cos (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cos(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>Returns the trigonometric cosine of the specified angle, in radians, in the specified expression.</summary>
        <returns>The trigonometric cosine of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [COS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cot (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cot(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>A mathematical function that returns the trigonometric cotangent of the specified angle, in radians.</summary>
        <returns>The trigonometric cotangent of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [COT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cot (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cot(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>A mathematical function that returns the trigonometric cotangent of the specified angle, in radians.</summary>
        <returns>The trigonometric cotangent of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [COT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimestamp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; CurrentTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; CurrentTimestamp() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CURRENT_TIMESTAMP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current date and time.</summary>
        <returns>The current date and time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CURRENT_TIMESTAMP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140125).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static string CurrentUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CurrentUser() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CURRENT_USER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the name of the current user.</summary>
        <returns>The name of the current user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CURRENT_USER (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140126).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (byte[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(unsigned int8[] arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;bool&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;bool&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;DateTime&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;DateTimeOffset&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;Guid&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;TimeSpan&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(string arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">The value to be examined for data length.</param>
        <summary>Returns the number of bytes used to represent any expression.</summary>
        <returns>The number of bytes in the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to increment.</param>
        <param name="number">The value used to increment a date by a specified amount.</param>
        <param name="date">The date to increment.</param>
        <summary>Returns a new <see langword="datetime" /> value based on adding an interval to the specified date.</summary>
        <returns>The new date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTimeOffset&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;DateTimeOffset&gt; dateTimeOffsetArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; dateTimeOffsetArg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="dateTimeOffsetArg" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to increment.</param>
        <param name="number">The value used to increment a date by a specified amount.</param>
        <param name="dateTimeOffsetArg">The date to increment.</param>
        <summary>Returns a new date value based on adding an interval to the specified date.</summary>
        <returns>The new point in time, expressed as a date and time of day, relative to Coordinated Universal Time (UTC).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;TimeSpan&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;TimeSpan&gt; time);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; time) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="time" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to increment.</param>
        <param name="number">The value used to increment a date by a specified amount.</param>
        <param name="time">The time span to increment.</param>
        <summary>Returns a new time span value based on adding an interval to the specified time span.</summary>
        <returns>The new time span.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, string date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to increment.</param>
        <param name="number">The value used to increment a date by a specified amount.</param>
        <param name="date">The date to increment.</param>
        <summary>Returns a new <see langword="datetime" /> value based on adding an interval to the specified date.</summary>
        <returns>A &lt;xref:System.Nullable%601&gt; of &lt;xref:System.DateTime&gt; value that is the new date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, string endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two Dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, string endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, string endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The value specifying the number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, string endDate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="startDate">The first date.</param>
        <param name="endDate">The second date.</param>
        <summary>Returns the count of the specified datepart boundaries crossed between the specified start date and end date.</summary>
        <returns>The number of time intervals between the two dates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="date">The date.</param>
        <summary>Returns a character string that represents the specified datepart of the specified date.</summary>
        <returns>The specified part of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;DateTimeOffset&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="date">The date.</param>
        <summary>Returns a character string that represents the specified datepart of the specified date.</summary>
        <returns>The specified part of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;TimeSpan&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="date">The date.</param>
        <summary>Returns a character string that represents the specified datepart of the specified date.</summary>
        <returns>The specified part of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, string date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to calculate the differing number of time intervals.</param>
        <param name="date">The date.</param>
        <summary>Returns a character string that represents the specified datepart of the specified date.</summary>
        <returns>The specified part of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to return the value.</param>
        <param name="date">The date.</param>
        <summary>Returns an integer that represents the specified datepart of the specified date.</summary>
        <returns>The the specified datepart of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;DateTimeOffset&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to return the value.</param>
        <param name="date">The date.</param>
        <summary>Returns an integer that represents the specified datepart of the specified date.</summary>
        <returns>The specified datepart of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;TimeSpan&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to return the value.</param>
        <param name="date">The date.</param>
        <summary>Returns an integer that represents the specified datepart of the specified date.</summary>
        <returns>The specified datepart of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, string date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">The part of the date to return the value.</param>
        <param name="date">The date.</param>
        <summary>Returns an integer that represents the specified datepart of the specified date.</summary>
        <returns>The specified datepart of the specified date.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Degrees (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Degrees(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">An angle, measured in radians.</param>
        <summary>Returns the corresponding angle in degrees for an angle specified in radians.</summary>
        <returns>The specified angle converted to degrees.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DEGREES (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Degrees (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Degrees(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">An angle, measured in radians.</param>
        <summary>Returns the corresponding angle in degrees for an angle specified in radians.</summary>
        <returns>The specified angle converted to degrees.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DEGREES (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Degrees (Nullable&lt;int&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Degrees(valuetype System.Nullable`1&lt;int32&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">An angle, measured in radians.</param>
        <summary>Returns the corresponding angle in degrees for an angle specified in radians.</summary>
        <returns>The specified angle converted to degrees.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DEGREES (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Degrees (Nullable&lt;long&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Degrees(valuetype System.Nullable`1&lt;int64&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">An angle, measured in radians.</param>
        <summary>Returns the corresponding angle in degrees for an angle specified in radians.</summary>
        <returns>The specified angle converted to degrees.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DEGREES (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Difference">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Difference (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Difference(string string1, string string2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DIFFERENCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">The first string.</param>
        <param name="string2">The second string.</param>
        <summary>Returns an integer value that indicates the difference between the SOUNDEX values of two character expressions.</summary>
        <returns>The SOUNDEX difference between the two strings.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DIFFERENCE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141349).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Exp (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Exp(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "EXP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The input value.</param>
        <summary>Returns the exponential value of the specified float expression.</summary>
        <returns>The constant e raised to the power of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [EXP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Exp (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Exp(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "EXP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The input value.</param>
        <summary>Returns the exponential value of the specified float expression.</summary>
        <returns>The constant e raised to the power of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [EXP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; GetDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; GetDate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "GETDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current database system timestamp as a datetime value without the database time zone offset. This value is derived from the operating system of the computer on which the instance of SQL Server is running.</summary>
        <returns>The current database timestamp.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [GETDATE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141352).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetUtcDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; GetUtcDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; GetUtcDate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "GETUTCDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current database system timestamp as a datetime value. The database time zone offset is not included. This value represents the current UTC time (Coordinated Universal Time). This value is derived from the operating system of the computer on which the instance of SQL Server is running.</summary>
        <returns>The current database UTC timestamp.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [GETUTCDATE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141353).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public static string HostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HostName() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "HOST_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the workstation name.</summary>
        <returns>The name of the workstation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [HOSTNAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141354).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; IsDate (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; IsDate(string arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ISDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">The tested value.</param>
        <summary>Indicates whether the input value is a valid date or time.</summary>
        <returns>1 if the input expression is a valid date or time value of datetime or smalldatetime data types; otherwise, 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [HOSTNAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141354).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; IsNumeric (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; IsNumeric(string arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ISNUMERIC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">A string expression.</param>
        <summary>Indicates whether the input value is a valid numeric type.</summary>
        <returns>1 if the input expression is a valid numeric data type; otherwise, 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [ISNUMERIC (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141355).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the natural logarithm of the specified input value.</summary>
        <returns>The natural logarithm of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [LOG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the natural logarithm of the specified input value.</summary>
        <returns>The natural logarithm of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [LOG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log10 (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log10(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the base-10 logarithm of the specified input value.</summary>
        <returns>The base-10 logarithm of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [LOG10 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log10 (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log10(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the base-10 logarithm of the specified input value.</summary>
        <returns>The base-10 logarithm of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [LOG10 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NChar">
      <MemberSignature Language="C#" Value="public static string NChar (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NChar(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "NCHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A character code.</param>
        <summary>Returns the Unicode character with the specified integer code, as defined by the Unicode standard.</summary>
        <returns>The character that corresponds to the input character code.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [NCHAR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141365).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="PatIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; PatIndex (string stringPattern, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; PatIndex(string stringPattern, string target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "PATINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringPattern" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringPattern">A string pattern to search for.</param>
        <param name="target">The string to search.</param>
        <summary>Returns the starting position of the first occurrence of a pattern in a specified expression, or zeros if the pattern is not found, on all valid text and character data types.</summary>
        <returns>The starting character position where the string pattern was found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [PATINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141310).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Pi ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Pi() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "PI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the constant value of pi.</summary>
        <returns>The numeric value of pi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [PI (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141311).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="QuoteName">
      <MemberSignature Language="C#" Value="public static string QuoteName (string stringArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteName(string stringArg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "QUOTENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringArg">The expression that quote characters will be added to.</param>
        <summary>Returns a Unicode string with the delimiters added to make the input string a valid Microsoft SQL Server delimited identifier.</summary>
        <returns>The original string with brackets added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [QUOTENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="QuoteName">
      <MemberSignature Language="C#" Value="public static string QuoteName (string stringArg, string quoteCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteName(string stringArg, string quoteCharacter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "QUOTENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArg" Type="System.String" />
        <Parameter Name="quoteCharacter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringArg">The expression that quote characters will be added to.</param>
        <param name="quoteCharacter">The one-character string to use as the delimiter. It can be a single quotation mark ( ' ), a left or right bracket ( [ ] ), or a double quotation mark ( " ). If quote_character is not specified, brackets are used.</param>
        <summary>Returns a Unicode string with the delimiters added to make the input string a valid Microsoft SQL Server delimited identifier.</summary>
        <returns>The original string with the specified quote characters added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [QUOTENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Radians (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Radians(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The angle, measured in degrees.</param>
        <summary>Returns the radian measure corresponding to the specified angle in degrees.</summary>
        <returns>The radian measure of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [RADIANS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Radians (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Radians(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The angle, measured in degrees.</param>
        <summary>Returns the radian measure corresponding to the specified angle in degrees.</summary>
        <returns>The radian measure of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [RADIANS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Radians (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Radians(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The angle, measured in degrees</param>
        <summary>Returns the radian measure corresponding to the specified angle in degrees.</summary>
        <returns>The radian measure of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [RADIANS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Radians (Nullable&lt;long&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Radians(valuetype System.Nullable`1&lt;int64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">The angle, measured in degrees</param>
        <summary>Returns the radian measure corresponding to the specified angle in degrees.</summary>
        <returns>The radian measure of the specified angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [RADIANS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Rand ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Rand() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a pseudo-random float value from 0 through 1, exclusive.</summary>
        <returns>The pseudo-random value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [RAND (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Rand (Nullable&lt;int&gt; seed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Rand(valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="seed">The seed value. If `seed` is not specified, the SQL Server Database Engine assigns a seed value at random. For a specified seed value, the result returned is always the same.</param>
        <summary>Returns a pseudo-random float value from 0 through 1, exclusive.</summary>
        <returns>The pseudo-random value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see see [RAND (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Replicate">
      <MemberSignature Language="C#" Value="public static string Replicate (string target, Nullable&lt;int&gt; count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replicate(string target, valuetype System.Nullable`1&lt;int32&gt; count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "REPLICATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="target">A valid string.</param>
        <param name="count">The value that specifies how many time to repeat `target`.</param>
        <summary>Repeats a string value a specified number of times.</summary>
        <returns>The target string, repeated the number of times specified by <paramref name="count" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [REPLICATE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141318).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sign (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sign(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the positive (+1), zero (0), or negative (-1) sign of the specified expression.</summary>
        <returns>The sign of the input expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SIGN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sign (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sign(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the positive (+1), zero (0), or negative (-1) sign of the specified expression.</summary>
        <returns>The sign of the input expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SIGN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sign (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sign(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the positive (+1), zero (0), or negative (-1) sign of the specified expression.</summary>
        <returns>The sign of the input expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SIGN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sign (Nullable&lt;long&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sign(valuetype System.Nullable`1&lt;int64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the positive (+1), zero (0), or negative (-1) sign of the specified expression.</summary>
        <returns>The sign of the input expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SIGN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sin (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sin(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>Returns the trigonometric sine of the specified angle.</summary>
        <returns>The trigonometric sine of the input expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sin (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sin(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>Returns the trigonometric sine of the specified angle.</summary>
        <returns>The trigonometric sine of the input expression.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SoundCode">
      <MemberSignature Language="C#" Value="public static string SoundCode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SoundCode(string arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SOUNDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">A valid string.</param>
        <summary>Converts an alphanumeric string to a four-character (SOUNDEX) code to find similar-sounding words or names.</summary>
        <returns>The SOUNDEX code of the input string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SOUNDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141325).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (Nullable&lt;int&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Space(valuetype System.Nullable`1&lt;int32&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SPACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">The number of spaces. If negative, a null string is returned.</param>
        <summary>Returns a string of repeated spaces.</summary>
        <returns>A string that consists of the specified number of spaces.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SPACE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141326).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Square">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Square (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Square(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQUARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">A numeric expression.</param>
        <summary>Returns the square of the specified number.</summary>
        <returns>The square of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SQUARE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Square">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Square (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Square(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQUARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">A numeric expression.</param>
        <summary>Returns the square of the specified number.</summary>
        <returns>The square of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SQUARE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SquareRoot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; SquareRoot (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; SquareRoot(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQRT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the square root of the specified number.</summary>
        <returns>The square root of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SQRT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="SquareRoot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; SquareRoot (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; SquareRoot(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQRT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A numeric expression.</param>
        <summary>Returns the square root of the specified number.</summary>
        <returns>The square root of the input value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [SQRT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="number">A numeric expression.</param>
        <summary>Returns character data converted from numeric data.</summary>
        <returns>The input expression converted to a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="number">A numeric expression.</param>
        <summary>Returns character data converted from numeric data.</summary>
        <returns>The numeric input expression converted to a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">A numeric expression.</param>
        <param name="length">The total length of the string. This includes decimal point, sign, digits, and spaces. The default is 10.</param>
        <summary>Returns character data converted from numeric data.</summary>
        <returns>The input expression converted to a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">A numeric expression.</param>
        <param name="length">The total length of the string. This includes decimal point, sign, digits, and spaces. The default is 10.</param>
        <summary>Returns character data converted from numeric data.</summary>
        <returns>The numeric input expression converted to a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number, Nullable&lt;int&gt; length, Nullable&lt;int&gt; decimalArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number, valuetype System.Nullable`1&lt;int32&gt; length, valuetype System.Nullable`1&lt;int32&gt; decimalArg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="decimalArg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">A numeric expression.</param>
        <param name="length">The total length of the string. This includes decimal point, sign, digits, and spaces. The default is 10.</param>
        <param name="decimalArg">The number of places to the right of the decimal point. `decimal` must be less than or equal to 16. If `decimal` is more than 16 then the result is truncated to sixteen places to the right of the decimal point.</param>
        <summary>Returns character data converted from numeric data.</summary>
        <returns>The input expression converted to a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number, Nullable&lt;int&gt; length, Nullable&lt;int&gt; decimalArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;int32&gt; length, valuetype System.Nullable`1&lt;int32&gt; decimalArg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="decimalArg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">A numeric expression.</param>
        <param name="length">The total length of the string. This includes decimal point, sign, digits, and spaces. The default is 10.</param>
        <param name="decimalArg">The number of places to the right of the decimal point. `decimal` must be less than or equal to 16. If `decimal` is more than 16 then the result is truncated to sixteen places to the right of the decimal point.</param>
        <summary>Returns character data converted from numeric data.</summary>
        <returns>The numeric input expression converted to a string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Stuff">
      <MemberSignature Language="C#" Value="public static string Stuff (string stringInput, Nullable&lt;int&gt; start, Nullable&lt;int&gt; length, string stringReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Stuff(string stringInput, valuetype System.Nullable`1&lt;int32&gt; start, valuetype System.Nullable`1&lt;int32&gt; length, string stringReplacement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STUFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringInput" Type="System.String" />
        <Parameter Name="start" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="stringReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringInput">The target string.</param>
        <param name="start">The character position in `stringinput` where the replacement string is to be inserted.</param>
        <param name="length">The number of characters to delete from `stringInput`. If `length` is longer than `stringInput`, deletion occurs up to the last character in `stringReplacement`.</param>
        <param name="stringReplacement">The substring to be inserted into `stringInput`.</param>
        <summary>Inserts a string into another string. It deletes a specified length of characters in the target string at the start position and then inserts the second string into the target string at the start position.</summary>
        <returns>A string consisting of the two strings.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [STUFF (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141708).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Tan (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Tan(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "TAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>Returns the trigonometric tangent of the input expression.</summary>
        <returns>The tangent of the input angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [TAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Tan (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Tan(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "TAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">An angle, measured in radians.</param>
        <summary>Returns the trigonometric tangent of the input expression.</summary>
        <returns>The tangent of the input angle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [TAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Unicode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Unicode(string arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "UNICODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">A valid string.</param>
        <summary>Returns the integer value, as defined by the Unicode standard, for the first character of the input expression.</summary>
        <returns>The character code for the first character in the input string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [UNICODE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141716).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UserName() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "USER_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a database user name corresponding to a specified identification number.</summary>
        <returns>The user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [USER_NAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UserName(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "USER_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">A user ID.</param>
        <summary>Returns a database user name corresponding to a specified identification number.</summary>
        <returns>The user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [USER_NAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718).  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>