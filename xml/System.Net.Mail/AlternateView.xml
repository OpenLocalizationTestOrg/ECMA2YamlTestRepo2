<Type Name="AlternateView" FullName="System.Net.Mail.AlternateView">
  <TypeSignature Language="C#" Value="public class AlternateView : System.Net.Mail.AttachmentBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternateView extends System.Net.Mail.AttachmentBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Mail.AttachmentBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the format to view an email message.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the AlternateView class to specify copies of an e-mail message in different formats. For example, if you send a message in HTML, you might also want provide a plain text version in case some of the recipients use e-mail readers that cannot display HTML content.  
  
 This class has two properties <xref:System.Net.Mail.AlternateView.LinkedResources%2A> and <xref:System.Net.Mail.AlternateView.BaseUri%2A> that are used to resolve URLs within the content of the email. <xref:System.Net.Mail.AlternateView.LinkedResources%2A> is a collection of <xref:System.Net.Mail.LinkedResource> objects. When rendered, URLs within the e-mail's content are first matched against the URLs in the <xref:System.Net.Mail.LinkedResource.ContentLink%2A> of each <xref:System.Net.Mail.LinkedResource> object in the <xref:System.Net.Mail.AlternateView.LinkedResources%2A> collection, and resolved. <xref:System.Net.Mail.AlternateView.BaseUri%2A> is used by the mail reader to resolve relative URLs within the body, and also to resolve relative <xref:System.Net.Mail.LinkedResource.ContentLink%2A> URLs, in the <xref:System.Net.Mail.AlternateView.LinkedResources%2A> collection.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateView (System.IO.Stream contentStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="contentStream">A stream that contains the content for this view.</param>
        <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified &lt;xref:System.IO.Stream&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new instance of the <xref:System.Net.Mail.AlternateView> class call also be initialized by calling one of the <xref:System.Net.Mail.AlternateView.CreateAlternateViewFromString%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentStream" /> is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateView (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file that contains the content for this alternate view.</param>
        <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified file name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new instance of the <xref:System.Net.Mail.AlternateView> class call also be initialized by calling one of the <xref:System.Net.Mail.AlternateView.CreateAlternateViewFromString%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred, such as a disk error.</exception>
        <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified file handle, such as when access is Write or ReadWrite and the file handle is set for read-only access.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateView (System.IO.Stream contentStream, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="contentStream">A stream that contains the content for this attachment.</param>
        <param name="contentType">The type of the content.</param>
        <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified &lt;xref:System.IO.Stream&gt; and <see cref="T:System.Net.Mime.ContentType" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new instance of the <xref:System.Net.Mail.AlternateView> class call also be initialized by calling one of the <xref:System.Net.Mail.AlternateView.CreateAlternateViewFromString%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentStream" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="contentType" /> is not a valid value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateView (System.IO.Stream contentStream, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, string mediaType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentStream">A stream that contains the content for this attachment.</param>
        <param name="mediaType">The MIME media type of the content.</param>
        <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified &lt;xref:System.IO.Stream&gt; and media type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new instance of the <xref:System.Net.Mail.AlternateView> class call also be initialized by calling one of the <xref:System.Net.Mail.AlternateView.CreateAlternateViewFromString%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentStream" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="mediaType" /> is not a valid value.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateView (string fileName, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file that contains the content for this alternate view.</param>
        <param name="contentType">The type of the content.</param>
        <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified file name and content type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new instance of the <xref:System.Net.Mail.AlternateView> class call also be initialized by calling one of the <xref:System.Net.Mail.AlternateView.CreateAlternateViewFromString%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="contentType" /> is not a valid value.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred, such as a disk error.</exception>
        <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified file handle, such as when access is Write or ReadWrite and the file handle is set for read-only access.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternateView (string fileName, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string mediaType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file that contains the content for this alternate view.</param>
        <param name="mediaType">The MIME media type of the content.</param>
        <summary>Initializes a new instance of <see cref="T:System.Net.Mail.AlternateView" /> with the specified file name and media type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new instance of the <xref:System.Net.Mail.AlternateView> class call also be initialized by calling one of the <xref:System.Net.Mail.AlternateView.CreateAlternateViewFromString%2A> methods.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="mediaType" /> is not a valid value.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred, such as a disk error.</exception>
        <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified file handle, such as when access is Write or ReadWrite and the file handle is set for read-only access.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the base URI to use for resolving relative URIs in the <see cref="T:System.Net.Mail.AlternateView" />.</summary>
        <value>A &lt;xref:System.Uri&gt;.  
  
 The base &lt;xref:System.Uri&gt;.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateViewFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.AlternateView CreateAlternateViewFromString (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.AlternateView CreateAlternateViewFromString(string content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">The &lt;xref:System.String&gt; that contains the content of the email message.</param>
        <summary>Creates a <see cref="T:System.Net.Mail.AlternateView" /> of an email message using the content specified in a &lt;xref:System.String&gt;.</summary>
        <returns>An <see cref="T:System.Net.Mail.AlternateView" /> object that represents an alternate view of an email message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default media type is plain text and the default encoding is ASCII.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateViewFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.AlternateView CreateAlternateViewFromString (string content, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.AlternateView CreateAlternateViewFromString(string content, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="content">A &lt;xref:System.String&gt; that contains the content for this attachment.</param>
        <param name="contentType">A <see cref="T:System.Net.Mime.ContentType" /> that describes the data in `string`.</param>
        <summary>Creates an <see cref="T:System.Net.Mail.AlternateView" /> of an email message using the content specified in a &lt;xref:System.String&gt; and the specified MIME media type of the content.</summary>
        <returns>An <see cref="T:System.Net.Mail.AlternateView" /> object that represents an alternate view of an email message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateViewFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.AlternateView CreateAlternateViewFromString (string content, System.Text.Encoding contentEncoding, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.AlternateView CreateAlternateViewFromString(string content, class System.Text.Encoding contentEncoding, string mediaType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">A &lt;xref:System.String&gt; that contains the content for this attachment.</param>
        <param name="contentEncoding">An &lt;xref:System.Text.Encoding&gt;. This value can be <see langword="null." /></param>
        <param name="mediaType">The MIME media type of the content.</param>
        <summary>Creates an <see cref="T:System.Net.Mail.AlternateView" /> of an email message using the content specified in a &lt;xref:System.String&gt;, the specified text encoding, and MIME media type of the content.</summary>
        <returns>An <see cref="T:System.Net.Mail.AlternateView" /> object that represents an alternate view of an email message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Mail.AlternateView" /> and optionally releases the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  
  
 When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Mail.AlternateView> references. This method invokes the `Dispose()` method of each referenced object.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="LinkedResources">
      <MemberSignature Language="C#" Value="public System.Net.Mail.LinkedResourceCollection LinkedResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.LinkedResourceCollection LinkedResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.LinkedResourceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the set of embedded resources referred to by this attachment.</summary>
        <value>A <see cref="T:System.Net.Mail.LinkedResourceCollection" /> object that stores the collection of linked resources to be sent as part of an e-mail message.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <altCompliant cref="None." />
      </Docs>
    </Member>
  </Members>
</Type>