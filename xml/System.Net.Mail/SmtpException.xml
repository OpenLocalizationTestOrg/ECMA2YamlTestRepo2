<Type Name="SmtpException" FullName="System.Net.Mail.SmtpException">
  <TypeSignature Language="C#" Value="public class SmtpException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SmtpException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the exception that is thrown when the <see cref="T:System.Net.Mail.SmtpClient" /> is not able to complete a &lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt; or &lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt; operation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Net.Mail.SmtpException.StatusCode%2A> property contains the status code returned by the SMTP server.  
  
   
  
## Examples  
 The following code example displays an error message when the SmtpException exception is thrown.  
  
 [!code-cpp[NclMailSync#27](~/add/codesnippet/cpp/t-system.net.mail.smtpex_1.cpp)]
 [!code-cs[NclMailSync#27](~/add/codesnippet/csharp/t-system.net.mail.smtpex_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The exception returned by this constructor has its <xref:System.Net.Mail.SmtpException.StatusCode%2A> property set to <xref:System.Net.Mail.SmtpStatusCode>.  
  
   
  
## Examples  
 The following code example demonstrates calling this constructor.  
  
 [!code-cpp[NclMailSync#28](~/add/codesnippet/cpp/m-system.net.mail.smtpex_2_1.cpp)]
 [!code-cs[NclMailSync#28](~/add/codesnippet/csharp/m-system.net.mail.smtpex_2_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpException (System.Net.Mail.SmtpStatusCode statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Mail.SmtpStatusCode statusCode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Net.Mail.SmtpStatusCode" />
      </Parameters>
      <Docs>
        <param name="statusCode">An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified status code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor uses the `statusCode` parameter to initialize the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates calling this constructor.  
  
 [!code-cpp[NclMailSync#30](~/add/codesnippet/cpp/m-system.net.mail.smtpex_1_1.cpp)]
 [!code-cs[NclMailSync#30](~/add/codesnippet/csharp/m-system.net.mail.smtpex_1_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A &lt;xref:System.String&gt; that describes the error that occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified error message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor uses the `message` parameter to initialize the <xref:System.Exception.Message%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates calling this constructor.  
  
 [!code-cpp[NclMailSync#29](~/add/codesnippet/cpp/m-system.net.mail.smtpex_3_1.cpp)]
 [!code-cs[NclMailSync#29](~/add/codesnippet/csharp/m-system.net.mail.smtpex_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpException (System.Net.Mail.SmtpStatusCode statusCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Mail.SmtpStatusCode statusCode, string message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Net.Mail.SmtpStatusCode" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statusCode">An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value.</param>
        <param name="message">A &lt;xref:System.String&gt; that describes the error that occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified status code and error message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor uses the `statusCode` parameter to initialize the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property and uses the `message` parameter to initialize the <xref:System.Exception.Message%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates calling this constructor.  
  
 [!code-cpp[NclMailSync#31](~/add/codesnippet/cpp/7fc753c2-f94e-45f2-aebf-_1.cpp)]
 [!code-cs[NclMailSync#31](~/add/codesnippet/csharp/7fc753c2-f94e-45f2-aebf-_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SmtpException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.Mail.SmtpException" />.</param>
        <param name="streamingContext">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream associated with the new instance.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and &lt;xref:System.Runtime.Serialization.StreamingContext&gt; classes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Net.Mail.SmtpException> class.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A &lt;xref:System.String&gt; that describes the error that occurred.</param>
        <param name="innerException">The exception that is the cause of the current exception.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpException" /> class with the specified error message and inner exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor uses the `message` parameter to initialize the <xref:System.Exception.Message%2A> property and the `innerException` parameter to initialize the <xref:System.Exception.InnerException%2A> property.  
  
 If `innerException` is not `null`, the current exception is raised in a catch block that handles `innerException`.  
  
   
  
## Examples  
 The following code example demonstrates calling this constructor.  
  
 [!code-cpp[NclMailSync#32](~/add/codesnippet/cpp/m-system.net.mail.smtpex_0_1.cpp)]
 [!code-cs[NclMailSync#32](~/add/codesnippet/csharp/m-system.net.mail.smtpex_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
        <param name="streamingContext">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that specifies the destination for this serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.Mail.SmtpException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpStatusCode StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpStatusCode StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpStatusCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the status code returned by an SMTP server when an e-mail message is transmitted.</summary>
        <value>An <see cref="T:System.Net.Mail.SmtpStatusCode" /> value that indicates the error that occurred.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example displays the value of this property.  
  
 [!code-cpp[NclMailSync#27](~/add/codesnippet/cpp/p-system.net.mail.smtpex_1.cpp)]
 [!code-cs[NclMailSync#27](~/add/codesnippet/csharp/p-system.net.mail.smtpex_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, which holds the serialized data for the <see cref="T:System.Net.Mail.SmtpException" />.</param>
        <param name="streamingContext">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the destination of the serialized stream associated with the new <see cref="T:System.Net.Mail.SmtpException" />.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the <see cref="T:System.Net.Mail.SmtpException" />.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>