<Type Name="ServiceInstallerDialog" FullName="System.ServiceProcess.Design.ServiceInstallerDialog">
  <TypeSignature Language="C#" Value="public class ServiceInstallerDialog : System.Windows.Forms.Form" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceInstallerDialog extends System.Windows.Forms.Form" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Form</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a dialog box, which prompts for account information of a Windows Service application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normally, you do not use the ServiceInstallerDialog class directly within your code; this dialog is generally used by the installation utility for a Windows Service application.  
  
 If a <xref:System.ServiceProcess.ServiceProcessInstaller> object has the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> set to `User`, and either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> is an empty string (""), then the installation utility uses ServiceInstallerDialog to prompt for these values.  
  
 ServiceInstallerDialog derives from <xref:System.Windows.Forms.Form>; use the <xref:System.Windows.Forms.Form> class methods and properties to display and manipulate the dialog. For example, use <xref:System.Windows.Forms.Form.ShowDialog%2A> to display the form, and then check the <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Result%2A> before validating the input text for the <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> and <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> properties.  
  
> [!NOTE]
>  ServiceInstallerDialog does not check the credentials and privileges for the specified account. For example, the user might enter an invalid account name and password for the computer, or the account might not have the correct privileges to run as a service. Validate the user input to ensure that the installed service runs successfully.  
  
   
  
## Examples  
 The following example uses a ServiceInstallerDialog to prompt the user for a service installation account.  
  
 [!code-cs[ServiceInstallConfig#1](~/add/codesnippet/csharp/t-system.serviceprocess._2_1.cs)]
 [!code-cpp[ServiceInstallConfig#1](~/add/codesnippet/cpp/t-system.serviceprocess._2_1.cpp)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceInstallerDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the service account form.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A new <xref:System.ServiceProcess.Design.ServiceInstallerDialog> form has its <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Result%2A> set to <xref:System.ServiceProcess.Design.ServiceInstallerDialogResult>, the <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> set to an empty string (""), and the <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> set to an empty string.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Main">
      <MemberSignature Language="C#" Value="public static void Main ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Main() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.STAThread</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins running a standard application message loop and displays the service account form.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is equivalent to calling <xref:System.Windows.Forms.Application.Run%2A?displayProperty=fullName> on a new <xref:System.ServiceProcess.Design.ServiceInstallerDialog> form; it is typically used for testing purposes.  
  
 Call <xref:System.Windows.Forms.Form.ShowDialog%2A> on the <xref:System.ServiceProcess.Design.ServiceInstallerDialog> form to display the dialog box in your application.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password for the service account form.</summary>
        <value>A string representing the password in the service account form. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ServiceProcess.Design.ServiceInstallerDialog> does not validate the <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> and Password values. The dialog checks that the user confirms the password, but it does not authenticate the account credentials on the computer.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.Design.ServiceInstallerDialogResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.Design.ServiceInstallerDialogResult Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.Design.ServiceInstallerDialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the dialog result for the service account form.</summary>
        <value>A <see cref="T:System.ServiceProcess.Design.ServiceInstallerDialogResult" /> indicating the user response to the dialog box. The default is <see langword="OK" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Windows.Forms.Form.ShowDialog%2A> to prompt the user for the service installation account, then check the Result value. If the value is <xref:System.ServiceProcess.Design.ServiceInstallerDialogResult>, verify that the input <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> and <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> are valid.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user name for the service account form.</summary>
        <value>A string representing the user name in the service account form. The default is an empty string ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ServiceProcess.Design.ServiceInstallerDialog> does not validate the Username or <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> values.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>