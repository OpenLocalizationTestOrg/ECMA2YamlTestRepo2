<Type Name="ITypeLibImporterNotifySink" FullName="System.Runtime.InteropServices.ITypeLibImporterNotifySink">
  <TypeSignature Language="C#" Value="public interface ITypeLibImporterNotifySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeLibImporterNotifySink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("F1C3BF76-C3E4-11d3-88E7-00902754C43A")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a callback mechanism for the type library converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This interface is used in the process of converting a COM type library to a managed assembly.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="ReportEvent">
      <MemberSignature Language="C#" Value="public void ReportEvent (System.Runtime.InteropServices.ImporterEventKind eventKind, int eventCode, string eventMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportEvent(valuetype System.Runtime.InteropServices.ImporterEventKind eventKind, int32 eventCode, string eventMsg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventKind" Type="System.Runtime.InteropServices.ImporterEventKind" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventMsg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventKind">An <see cref="T:System.Runtime.InteropServices.ImporterEventKind" /> value indicating the type of event.</param>
        <param name="eventCode">Indicates extra information about the event.</param>
        <param name="eventMsg">A message generated by the event.</param>
        <summary>Notifies the caller that an event occured during the conversion of a type library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the event being reported is a warning or an error, `eventCode` will contain the HRESULT of the error. For any other event it will be 0.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ResolveRef">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly ResolveRef (object typeLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly ResolveRef(object typeLib) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeLib">The object implementing the <see langword="ITypeLib" /> interface that needs to be resolved.</param>
        <summary>Asks the user to resolve a reference to another type library.</summary>
        <returns>The assembly corresponding to <paramref name="typeLib" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If a reference to another type library is found during the conversion of a type library, the caller is asked to return the correct assembly for that type library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>