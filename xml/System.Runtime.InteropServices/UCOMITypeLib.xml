<Type Name="UCOMITypeLib" FullName="System.Runtime.InteropServices.UCOMITypeLib">
  <TypeSignature Language="C#" Value="public interface UCOMITypeLib" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMITypeLib" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.ITypeLib instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020402-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Use &lt;xref:System.Runtime.InteropServices.ComTypes.ITypeLib?displayProperty=fullName&gt; instead.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about the `ITypeLib` interface, see the MSDN Library.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public void FindName (string szNameBuf, int lHashVal, System.Runtime.InteropServices.UCOMITypeInfo[] ppTInfo, int[] rgMemId, ref short pcFound);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindName(string szNameBuf, int32 lHashVal, class System.Runtime.InteropServices.UCOMITypeInfo[] ppTInfo, int32[] rgMemId, int16 pcFound) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="szNameBuf" Type="System.String" />
        <Parameter Name="lHashVal" Type="System.Int32" />
        <Parameter Name="ppTInfo" Type="System.Runtime.InteropServices.UCOMITypeInfo[]" />
        <Parameter Name="rgMemId" Type="System.Int32[]" />
        <Parameter Name="pcFound" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="szNameBuf">The name to search for.</param>
        <param name="lHashVal">A hash value to speed up the search, computed by the <see langword="LHashValOfNameSys" /> function. If `lHashVal` is 0, a value is computed.</param>
        <param name="ppTInfo">On successful return, an array of pointers to the type descriptions that contain the name specified in `szNameBuf`.</param>
        <param name="rgMemId">An array of the <see langword="MEMBERID" /> 's of the found items; `rgMemId` [i] is the <see langword="MEMBERID" /> that indexes into the type description specified by `ppTInfo` [i]. Cannot be <see langword="null" />.</param>
        <param name="pcFound">On entry, indicates how many instances to look for. For example, `pcFound` = 1 can be called to find the first occurrence. The search stops when one instance is found.  
  
 On exit, indicates the number of instances that were found. If the <see langword="in" /> and <see langword="out" /> values of `pcFound` are identical, there might be more type descriptions that contain the name.</param>
        <summary>Finds occurrences of a type description in a type library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 There must be enough room in `rgMemId` to hold `pcFound` entries.  
  
 For additional information about `ITypeLib::FindName`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetDocumentation">
      <MemberSignature Language="C#" Value="public void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDocumentation(int32 index, string strName, string strDocString, int32 dwHelpContext, string strHelpFile) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="strName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="strDocString" Type="System.String&amp;" RefType="out" />
        <Parameter Name="dwHelpContext" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="strHelpFile" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">Index of the type description whose documentation is to be returned.</param>
        <param name="strName">Returns a string that contains the name of the specified item.</param>
        <param name="strDocString">Returns a string that contains the documentation string for the specified item.</param>
        <param name="dwHelpContext">Returns the Help context identifier associated with the specified item.</param>
        <param name="strHelpFile">Returns a string that contains the fully qualified name of the Help file.</param>
        <summary>Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::GetDocumentation`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetLibAttr">
      <MemberSignature Language="C#" Value="public void GetLibAttr (out IntPtr ppTLibAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLibAttr(native int ppTLibAttr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTLibAttr" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTLibAttr">On successful return, a structure that contains the library's attributes.</param>
        <summary>Retrieves the structure that contains the library's attributes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The values of the structure referenced by `ppTLibAttr` can be obtained by <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.  
  
 For additional information about `ITypeLib::GetTypeLibAttr`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetTypeComp">
      <MemberSignature Language="C#" Value="public void GetTypeComp (out System.Runtime.InteropServices.UCOMITypeComp ppTComp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeComp(class System.Runtime.InteropServices.UCOMITypeComp ppTComp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTComp" Type="System.Runtime.InteropServices.UCOMITypeComp&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTComp">On successful return, an instance of a <see langword="UCOMITypeComp" /> instance for this <see langword="ITypeLib" />.</param>
        <summary>Enables a client compiler to bind to a library's types, variables, constants, and global functions.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::GetTypeComp`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (int index, out System.Runtime.InteropServices.UCOMITypeInfo ppTI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(int32 index, class System.Runtime.InteropServices.UCOMITypeInfo ppTI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppTI" Type="System.Runtime.InteropServices.UCOMITypeInfo&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">Index of the <see langword="UCOMITypeInfo" /> interface to return.</param>
        <param name="ppTI">On successful return, a <see langword="UCOMITypeInfo" /> describing the type referenced by `index`.</param>
        <summary>Retrieves the specified type description in the library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::GetTypeInfo`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public int GetTypeInfoCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTypeInfoCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of type descriptions in the type library.</summary>
        <returns>The number of type descriptions in the type library.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::GetTypeInfoCount`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoOfGuid">
      <MemberSignature Language="C#" Value="public void GetTypeInfoOfGuid (ref Guid guid, out System.Runtime.InteropServices.UCOMITypeInfo ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoOfGuid(valuetype System.Guid guid, class System.Runtime.InteropServices.UCOMITypeInfo ppTInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppTInfo" Type="System.Runtime.InteropServices.UCOMITypeInfo&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="guid">IID of the interface of CLSID of the class whose type info is requested.</param>
        <param name="ppTInfo">On successful return, the requested <see langword="ITypeInfo" /> interface.</param>
        <summary>Retrieves the type description that corresponds to the specified GUID.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::GetTypeInfoOfGuid`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoType">
      <MemberSignature Language="C#" Value="public void GetTypeInfoType (int index, out System.Runtime.InteropServices.TYPEKIND pTKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoType(int32 index, valuetype System.Runtime.InteropServices.TYPEKIND pTKind) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pTKind" Type="System.Runtime.InteropServices.TYPEKIND&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">The index of the type description within the type library.</param>
        <param name="pTKind">Reference to the <see langword="TYPEKIND" /> enumeration for the type description.</param>
        <summary>Retrieves the type of a type description.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::GetTypeInfoOfType`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsName">
      <MemberSignature Language="C#" Value="public bool IsName (string szNameBuf, int lHashVal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsName(string szNameBuf, int32 lHashVal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="szNameBuf" Type="System.String" />
        <Parameter Name="lHashVal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="szNameBuf">The string to test.</param>
        <param name="lHashVal">The hash value of `szNameBuf`.</param>
        <summary>Indicates whether a passed-in string contains the name of a type or member described in the library.</summary>
        <returns>
          <see langword="true" /> if <paramref name="szNameBuf" /> was found in the type library; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::IsName`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ReleaseTLibAttr">
      <MemberSignature Language="C#" Value="public void ReleaseTLibAttr (IntPtr pTLibAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseTLibAttr(native int pTLibAttr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLibAttr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pTLibAttr">The <see langword="TLIBATTR" /> to release.</param>
        <summary>Releases the <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originally obtained from &lt;xref:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For additional information about `ITypeLib::ReleaseTLibAttr`, see the MSDN Library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>