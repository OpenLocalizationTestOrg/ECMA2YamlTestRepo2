### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackUriHelper
  id: PackUriHelper
  children:
  - System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  - System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.UriSchemePack
  langs:
  - csharp
  name: PackUriHelper
  nameWithType: PackUriHelper
  fullName: System.IO.Packaging.PackUriHelper
  type: Class
  summary: Provides utility methods to compose and parse pack URI objects.
  syntax:
    content: public static class PackUriHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  id: ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ComparePackUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePackUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns a value that indicates whether two pack URIs are equivalent.
  remarks: If both `firstPackUri` and `secondPackUri` are `null`, ComparePackUri returns 0. When comparing pack URIs, a null URI is always less than a non-null URI.    For cases where `firstPackUri` and `secondPackUri` are both absolute pack URIs, ComparePackUri performs the comparison.
  syntax:
    content: public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);
    parameters:
    - id: firstPackUri
      type: System.Uri
      description: The first pack URI.
    - id: secondPackUri
      type: System.Uri
      description: The second pack URI.
    return:
      type: System.Int32
      description: "A signed integer indicating the relationship between <code>firstPackUri</code> and <code>secondPackUri</code>.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than 0  \n  \n </td><td><code>firstPackUri</code> is less than <code>secondPackUri</code>.  \n  \n </td></tr><tr><td> 0  \n  \n </td><td><code>firstPackUri</code> is equivalent to <code>secondPackUri</code>.  \n  \n </td></tr><tr><td> Greater than 0  \n  \n </td><td><code>firstPackUri</code> is greater than <code>secondPackUri</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.IO.Packaging.PackUriHelper.ComparePackUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Either <code>firstPackUri</code> or <code>secondPackUri</code> is not an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].  \n  \n -or-  \n  \n Either <code>firstPackUri</code> or <code>secondPackUri</code> do not begin with a \"pack://\" scheme."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  id: ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ComparePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns a value that indicates whether two package part [!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)] are equivalent.
  remarks: If both `firstPartUri` and `secondPartUri` are `null`, ComparePartUri returns 0. When comparing <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)], a null [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] is always less than a non-null [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]. For cases where `firstPartUri` and `secondPartUri` are both relative <xref:System.IO.Packaging.PackagePart> URIs, ComparePartUri performs the comparison.
  syntax:
    content: public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);
    parameters:
    - id: firstPartUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the first <xref href="System.IO.Packaging.PackagePart"></xref>.
    - id: secondPartUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the second <xref href="System.IO.Packaging.PackagePart"></xref>.
    return:
      type: System.Int32
      description: "A value that indicates the relationship between <code>firstPartUri</code> and <code>secondPartUri</code>.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than 0  \n  \n </td><td><code>firstPartUri</code> is less than <code>secondPartUri</code>.  \n  \n </td></tr><tr><td> 0  \n  \n </td><td><code>firstPartUri</code> is equivalent to <code>secondPartUri</code>.  \n  \n </td></tr><tr><td> Greater than 0  \n  \n </td><td><code>firstPartUri</code> is greater than <code>secondPartUri</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.IO.Packaging.PackUriHelper.ComparePartUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>firstPartUri</code> or <code>secondPartUri</code> is not a valid part [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] syntax.
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  id: Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri)
  nameWithType: PackUriHelper.Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Creates a new pack URI that points to a package.
  remarks: "`packageUri` may not be specified as `null` or empty.  \n  \n The following table illustrates sample cases for Create.  \n  \n|`packageUri`|Returned pack URI|  \n|------------------|-----------------------|  \n|http://www.proseware.com/mypackage.pkg|pack://http:,,www.proseware.com,mypackage.pkg|  \n|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc|  \n|file:///d:/packages/mypackage2.pkg|pack://file:,,,d:,packages,mypackage2.pkg|  \n  \n Composing a pack URI is a multi-step process.  For example, one step in forming a pack URI is to replace the forward slash (/) characters of the `packageUri` with commas (,).  \n  \n For more information on string conversion and how pack URIs are formed, see Appendix A.4 \"String Conversion Examples\" and Appendix B.3 \"Composing a Pack URI\" in the Open Packaging Conventions specification available for download at [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the Create method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri);
    parameters:
    - id: packageUri
      type: System.Uri
      description: The URI of the referenced <xref href="System.IO.Packaging.Package"></xref>.
    return:
      type: System.Uri
      description: The pack URI for the <xref href="System.IO.Packaging.Package"></xref> referenced by the given <code>packageUri</code>.
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>packageUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>packageUri</code> is not an absolute URI.
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  id: Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri,Uri)
  nameWithType: PackUriHelper.Create(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Creates a pack URI given a <xref href="System.IO.Packaging.Package"></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of a part in the package.
  remarks: "`packageUri` may not be specified as null or empty.  \n  \n If `partUri` is `null`, the returned pack URI points to the package.  \n  \n The following table illustrates sample cases for the Create method.  \n  \n|`packageUri`|`partUri`|Returned pack URI|  \n|------------------|---------------|-----------------------|  \n|http://www.proseware.com/mypackage.pkg|/page2.xaml|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  \n|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  \n|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  \n|http://www.proseware.com/mypackage.pkg|/%25XY.xml|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  \n|http://www.proseware.com/mypackage.pkg|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  \n|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  \n|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|  \n  \n Composing a pack URI is a multi-step process.  For example, one step in forming a pack URI is to replace the forward slash (/) characters of the `packageUri` with commas (,).  \n  \n For more information on string conversion and how pack URIs are formed, see Appendix A.4 \"String Conversion Examples\" and Appendix B.3 \"Composing a Pack URI\" in the Open Packaging Conventions specification available for download at [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri, Uri partUri);
    parameters:
    - id: packageUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href="System.IO.Packaging.Package"></xref>.
    - id: partUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href="System.IO.Packaging.PackagePart"></xref> in the package.
    return:
      type: System.Uri
      description: The pack URI of the given <xref href="System.IO.Packaging.PackagePart"></xref>.
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>packageUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code> is not an absolute URI.  \n  \n -or-  \n  \n <code>partUri</code> is not a valid part URI syntax."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  id: Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: Create(Uri,Uri,String)
  nameWithType: PackUriHelper.Create(Uri,Uri,String)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Creates a pack URI given a <xref href="System.IO.Packaging.Package"></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)], the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of a part in the package, and a "#" fragment to append.
  remarks: "`packageUri` may not be specified as `null` or empty.  \n  \n If `partUri` is `null`, the returned pack URI points to the package.  \n  \n `fragment` cannot be an empty string but can be specified as `null`.  When not specified as `null`, the `fragment` string must begin with a '#' character.  For more information of the syntax of `fragment` references, see Section 3.5 \"Fragment\" of [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).  \n  \n The following table illustrates sample cases for the Create method.  \n  \n|`packageUri`|`partUri`|`fragment`|Returned pack URI|  \n|------------------|---------------|----------------|-----------------------|  \n|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  \n|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  \n|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  \n|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  \n|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  \n|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  \n|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  \n|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  \n|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  \n|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  \n  \n Composing a pack URI is a multi-step process.  For example, one step in forming a pack URI is to replace the forward slash (/) characters of the `packageUri` with commas (,).  \n  \n For more information on string conversion and how pack URIs are formed, see Appendix A.4 \"String Conversion Examples\" and Appendix B.3 \"Composing a Pack URI\" in the Open Packaging Conventions specification available for download at [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubgetfixdoc)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubgetfixdoc)]"
  syntax:
    content: public static Uri Create (Uri packageUri, Uri partUri, string fragment);
    parameters:
    - id: packageUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href="System.IO.Packaging.Package"></xref>.
    - id: partUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href="System.IO.Packaging.PackagePart"></xref> in the package.
    - id: fragment
      type: System.String
      description: A "#" reference identifying an element within the package part.
    return:
      type: System.Uri
      description: The pack URI that identifies the specified package, package part, and fragment.
  overload: System.IO.Packaging.PackUriHelper.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>packageUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code> is not an absolute URI.  \n  \n -or-  \n  \n <code>partUri</code> is not a valid part URI syntax.  \n  \n -or-  \n  \n <code>fragment</code> is empty or does begin with \"#\"."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  id: CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: CreatePartUri(Uri)
  nameWithType: PackUriHelper.CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Creates a formatted <xref href="System.IO.Packaging.PackagePart"></xref> URI.
  remarks: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of a <xref:System.IO.Packaging.PackagePart> is always referenced from the <xref:System.IO.Packaging.Package> root.  \n  \n The returned <xref:System.IO.Packaging.PackagePart> URI is an absolute path that always starts with \"/\" and conforms to the syntax defined in the [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255).  \n  \n The following table illustrates sample cases for CreatePartUri.  \n  \n|`partUri`|Returned Part URI|  \n|---------------|-----------------------|  \n|picture1.jpg|/picture1.jpg|  \n|/picture2.jpg|/picture2.jpg|  \n|a/mydoc.xaml|/a/mydoc.xaml|  \n|/b/bar.xaml|/b/bar.xaml|"
  example:
  - "The following example shows how to use the CreatePartUri method to define relative URIs for <xref:System.IO.Packaging.PackagePart> elements.  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreateparturi)]\n [!code-cs[PackageWrite#PackageWriteCreatePartUri](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreateparturi)]"
  syntax:
    content: public static Uri CreatePartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackagePart"></xref> within the package.
    return:
      type: System.Uri
      description: A formatted <xref href="System.IO.Packaging.PackagePart"></xref> URI.
  overload: System.IO.Packaging.PackUriHelper.CreatePartUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  id: GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetNormalizedPartUri(Uri)
  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns the normalized form of a specified <xref href="System.IO.Packaging.PackagePart"></xref> URI.
  remarks: GetNormalizedPartUri normalizes `partUri` by case-folding to uppercase (<xref:System.String.ToUpperInvariant%2A?displayProperty=fullName>) and returning the result.
  syntax:
    content: public static Uri GetNormalizedPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackagePart"></xref> URI to normalize.
    return:
      type: System.Uri
      description: The normalized form of the given <code>partUri</code>.
  overload: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  id: GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetPackageUri(Uri)
  nameWithType: PackUriHelper.GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns the inner URI that points to the entire package of a specified pack URI.
  remarks: "The following table illustrates sample cases for GetPackageUri.  \n  \n|`packUri`|Returned Package URI|  \n|---------------|--------------------------|  \n|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  \n|pack://http:,,www.proseware.com,packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  \n|pack://http:,,www.proseware.com,mypackage.pkg|http://www.proseware.com/mypackage.pkg|  \n|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  \n|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|"
  syntax:
    content: public static Uri GetPackageUri (Uri packUri);
    parameters:
    - id: packUri
      type: System.Uri
      description: The pack URI from which to return the URI of the <xref href="System.IO.Packaging.Package"></xref>.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.Package"></xref> from the specified <code>packUri</code>.
  overload: System.IO.Packaging.PackUriHelper.GetPackageUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  id: GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetPartUri(Uri)
  nameWithType: PackUriHelper.GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns the URI of a <xref href="System.IO.Packaging.PackagePart"></xref> within a specified pack URI.
  remarks: "The returned <xref:System.IO.Packaging.PackagePart> URI is relative to the package root and is an absolute path that always starts with \"/\" and conforms to the syntax defined in the [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255).  \n  \n The following table illustrates sample cases for GetPartUri.  \n  \n|`packUri`|Returned Part URI|  \n|---------------|-----------------------|  \n|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  \n|pack://http:,,www.proseware.com,packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  \n|pack://http:,,www.proseware.com,mypackage.pkg|null|  \n|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  \n|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|"
  syntax:
    content: public static Uri GetPartUri (Uri packUri);
    parameters:
    - id: packUri
      type: System.Uri
      description: The pack URI from which to return the <xref href="System.IO.Packaging.PackagePart"></xref> URI.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackagePart"></xref> in the given <code>packUri</code>, or <xref uid="langword_csharp_null" name="null" href=""></xref> if <code>packUri</code> points to a package instead of a <xref href="System.IO.Packaging.PackagePart"></xref>.
  overload: System.IO.Packaging.PackUriHelper.GetPartUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  id: GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the relationship part associated with a specified <xref href="System.IO.Packaging.PackagePart"></xref>.
  remarks: "`partUri` must identify either the <xref:System.IO.Packaging.Package> (\"/\") or a <xref:System.IO.Packaging.PackagePart> that is not a <xref:System.IO.Packaging.PackageRelationship> part.  \n  \n For more information about <xref:System.IO.Packaging.PackageRelationship> parts, see Section 9.3 \"Relationships\" in the Open Packaging Conventions Specification available for download at [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "[Pack URIs in WPF](~/add/includes/ajax-current-ext-md.md)  \n  \n [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255)"
  syntax:
    content: public static Uri GetRelationshipPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref:System.IO.Packaging.PackagePart.Uri*> of the <xref href="System.IO.Packaging.PackagePart"></xref> to return the URI for the associated <xref href="System.IO.Packaging.PackageRelationship"></xref>.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackageRelationship"></xref> part associated with the <xref href="System.IO.Packaging.PackagePart"></xref> identified by <code>partUri</code>.
  overload: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code> syntax is not valid for a package part URI.  \n  \n -or-  \n  \n <code>partUri</code> is an absolute URI.  \n  \n -or-  \n  \n <code>partUri</code> references a relationship part."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  id: GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetRelativeUri(Uri,Uri)
  nameWithType: PackUriHelper.GetRelativeUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns the relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] between two specified <xref href="System.IO.Packaging.PackagePart"></xref> [!INCLUDE[TLA2#tla_uri#plural](~/add/includes/tla2sharptla-urisharpplural-md.md)].
  remarks: "The following table illustrates sample cases for GetRelativeUri.  \n  \n|`sourcePartUri`|`targetPartUri`|Returned relative URI|  \n|---------------------|---------------------|---------------------------|  \n|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  \n|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  \n|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|"
  syntax:
    content: public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the source part.
    - id: targetPartUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the target part.
    return:
      type: System.Uri
      description: The relative [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] from <code>sourcePartUri</code> to <code>targetPartUri</code>.
  overload: System.IO.Packaging.PackUriHelper.GetRelativeUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>sourcePartUri</code> or <code>targetPartUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  id: GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns the <xref:System.IO.Packaging.PackageRelationship.SourceUri*> from the <xref href="System.IO.Packaging.PackageRelationship"></xref> with a specified [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].
  remarks: "The <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> property of a relationship part must identify either the <xref:System.IO.Packaging.PackagePart.Package%2A> (\"/\") or a <xref:System.IO.Packaging.PackagePart> that is not a <xref:System.IO.Packaging.PackageRelationship>.  \n  \n For example, if the package part \"/files/document.xaml\" is the source owner of the relationship part \"/files/_rels/document.xaml.rels\", calling GetSourcePartUriFromRelationshipPartUri with the `relationshipPartUri` parameter of \"/files/_rels/document.xaml.rels\" returns the <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> of \"/files/document.xaml\"."
  syntax:
    content: public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);
    parameters:
    - id: relationshipPartUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the relationship part to return the <xref:System.IO.Packaging.PackageRelationship.SourceUri*> from.
    return:
      type: System.Uri
      description: The <xref:System.IO.Packaging.PackageRelationship.SourceUri*> of the <xref href="System.IO.Packaging.PackagePart"></xref> from the relationship with the specified <code>relationshipPartUri</code>.
  overload: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>relationshipPartUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipPartUri</code> is an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].  \n  \n -or-  \n  \n <code>relationshipPartUri</code> syntax is not valid for a <xref href=\"System.IO.Packaging.PackagePart\"></xref>.  \n  \n -or-  \n  \n <code>relationshipPartUri</code> does not reference a relationship part.  \n  \n -or-  \n  \n The <xref:System.IO.Packaging.PackageRelationship.SourceUri*> of the relationship part references another relationship part (not valid, see Remarks)."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  id: IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: IsRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns a value that indicates whether a specified [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] is the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of a <xref href="System.IO.Packaging.PackageRelationship"></xref> part.
  syntax:
    content: public static bool IsRelationshipPartUri (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] to check for a <xref href="System.IO.Packaging.PackageRelationship"></xref> part.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if <code>partUri</code> identifies a <xref href="System.IO.Packaging.PackageRelationship"></xref> part; otherwise, <xref uid="langword_csharp_false" name="false" href=""></xref>.
  overload: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code> is an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].  \n  \n -or-  \n  \n <code>partUri</code> is an invalid <xref href=\"System.IO.Packaging.PackagePart\"></xref> syntax."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  id: ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: ResolvePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ResolvePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(Uri,Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Returns a part URI given a source part URI and a URI with a relative path to a target part.
  remarks: "The following table illustrates sample cases for ResolvePartUri.  \n  \n|`sourcePartUri`|`targetUri`|Returned URI|  \n|---------------------|-----------------|------------------|  \n|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  \n|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  \n|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  \n|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  \n|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  \n|/|images/picture.jpg|/images/picture.jpg|"
  example:
  - "The following example shows how to use the ResolvePartUri method.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: The URI of the source part, or "/" to designate the <xref href="System.IO.Packaging.Package"></xref> root.
    - id: targetUri
      type: System.Uri
      description: The relative URI to the target part.
    return:
      type: System.Uri
      description: The URI of the target part resolved between the specified <code>SourcePartUri</code> and the <code>targetUri</code> parameters.
  overload: System.IO.Packaging.PackUriHelper.ResolvePartUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>sourcePartUri</code> or <code>targetUri</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourcePartUri</code> is not a valid part URI.  \n  \n -or-  \n  \n <code>targetUri</code> is not a valid relative URI."
  platform:
  - net462
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  id: UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  name: UriSchemePack
  nameWithType: PackUriHelper.UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
  type: Field
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: Defines the pack URI scheme name "pack".
  syntax:
    content: public static readonly string UriSchemePack;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePackUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePackUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePackUri(Uri,Uri)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ComparePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri)
  nameWithType: PackUriHelper.Create(Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri,Uri)
  nameWithType: PackUriHelper.Create(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create(Uri,Uri,String)
  nameWithType: PackUriHelper.Create(Uri,Uri,String)
  fullName: System.IO.Packaging.PackUriHelper.Create(Uri,Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: CreatePartUri(Uri)
  nameWithType: PackUriHelper.CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetNormalizedPartUri(Uri)
  nameWithType: PackUriHelper.GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPackageUri(Uri)
  nameWithType: PackUriHelper.GetPackageUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPackageUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPartUri(Uri)
  nameWithType: PackUriHelper.GetPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelativeUri(Uri,Uri)
  nameWithType: PackUriHelper.GetRelativeUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri)
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: IsRelationshipPartUri(Uri)
  nameWithType: PackUriHelper.IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ResolvePartUri(Uri,Uri)
  nameWithType: PackUriHelper.ResolvePartUri(Uri,Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(Uri,Uri)
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: UriSchemePack
  nameWithType: PackUriHelper.UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
- uid: System.IO.Packaging.PackUriHelper.ComparePackUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePackUri
  nameWithType: PackUriHelper.ComparePackUri
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ComparePartUri
  nameWithType: PackUriHelper.ComparePartUri
- uid: System.IO.Packaging.PackUriHelper.Create*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: Create
  nameWithType: PackUriHelper.Create
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: CreatePartUri
  nameWithType: PackUriHelper.CreatePartUri
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetNormalizedPartUri
  nameWithType: PackUriHelper.GetNormalizedPartUri
- uid: System.IO.Packaging.PackUriHelper.GetPackageUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPackageUri
  nameWithType: PackUriHelper.GetPackageUri
- uid: System.IO.Packaging.PackUriHelper.GetPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetPartUri
  nameWithType: PackUriHelper.GetPartUri
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelationshipPartUri
  nameWithType: PackUriHelper.GetRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetRelativeUri
  nameWithType: PackUriHelper.GetRelativeUri
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: GetSourcePartUriFromRelationshipPartUri
  nameWithType: PackUriHelper.GetSourcePartUriFromRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: IsRelationshipPartUri
  nameWithType: PackUriHelper.IsRelationshipPartUri
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri*
  parent: System.IO.Packaging.PackUriHelper
  isExternal: false
  name: ResolvePartUri
  nameWithType: PackUriHelper.ResolvePartUri
