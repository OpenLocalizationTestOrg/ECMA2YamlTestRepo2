### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  id: ActiveDirectorySubnet
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString
  langs:
  - csharp
  name: ActiveDirectorySubnet
  nameWithType: ActiveDirectorySubnet
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  type: Class
  summary: The ActiveDirectorySubnet class represents a subnet in a <xref href="System.DirectoryServices.ActiveDirectory.Forest"></xref>.
  syntax:
    content: 'public class ActiveDirectorySubnet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: ActiveDirectorySubnet(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Initializes an instance of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> class, using the specified <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object and subnet name.
  syntax:
    content: public ActiveDirectorySubnet (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string subnetName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that specifies the context for this <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
    - id: subnetName
      type: System.String
      description: A <xref:System.String> that specifies the name of the subnet.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: <code>context</code> specifies a configuration set, but no AD LDS instance was found.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "This exception will occur for any of the following reasons:  \n  \n-   <code>context</code> does not refer a valid forest, configuration set, domain controller, or AD LDS server.  \n  \n-   <code>subnetName</code> is an empty string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> or <code>subnetName</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: The credentials that were supplied are not valid.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: ActiveDirectorySubnet(DirectoryContext,String,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Initializes an instance of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> class, using the specified <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object, subnet name, and site name.
  syntax:
    content: public ActiveDirectorySubnet (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string subnetName, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that specifies the context for this <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
    - id: subnetName
      type: System.String
      description: A <xref:System.String> that specifies the name of the subnet.
    - id: siteName
      type: System.String
      description: A <xref:System.String> that specifies the name of the site that contains the subnet.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: <code>context</code> specifies a configuration set, but no AD LDS instance was found.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "This exception will occur for any of the following reasons:  \n  \n-   <code>context</code> does not refer to a valid forest, configuration set, domain controller, or AD LDS server.  \n  \n-   <code>subnetName</code> or <code>siteName</code> is an empty string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code>, <code>subnetName</code>, or <code>siteName</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: The credentials that were supplied are not valid.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete
  id: Delete
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Delete()
  nameWithType: ActiveDirectorySubnet.Delete()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Deletes the subnet that is represented by this <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object has not yet been saved in the Active Directory Domain Services store.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ActiveDirectorySubnet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Releases all resources that are used by the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySubnet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Releases the unmanaged resources that are used by the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the managed resources should be released; <xref uid="langword_csharp_false" name="false" href=""></xref> if only the unmanaged resources should be released.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: FindByName(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.FindByName(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(DirectoryContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Returns a subnet that is based on a subnet name.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet FindByName (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string subnetName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: An <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that is valid for this subnet.
    - id: subnetName
      type: System.String
      description: The name of the subnet to find.
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
      description: An <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> for the requested subnet.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: In the <code>context</code> parameter that was specified, the site could not be found for the given <code>subnetName</code> parameter.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "This exception will occur for any of the following reasons:  \n  \n-   The target in the <code>context</code> parameter is not a forest, configuration set, domain controller, or AD LDS server.  \n  \n-   <code>subnetName</code> is an empty string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> or <code>subnetName</code> is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySubnet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the <xref href="System.DirectoryServices.DirectoryEntry"></xref> object for this <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  syntax:
    content: public System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: The <xref href="System.DirectoryServices.DirectoryEntry"></xref> object for this <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object has not yet been saved in the Active Directory Domain Services store.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  id: Location
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Location
  nameWithType: ActiveDirectorySubnet.Location
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets or sets the location description of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  syntax:
    content: public string Location { get; set; }
    return:
      type: System.String
      description: The location description of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Name
  nameWithType: ActiveDirectorySubnet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the subnet name of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: The name of the subnet.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save
  id: Save
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Save()
  nameWithType: ActiveDirectorySubnet.Save()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Writes any changes to the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object to the Active Directory Domain Services store.
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: The subnet object already exists.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  id: Site
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: Site
  nameWithType: ActiveDirectorySubnet.Site
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets or sets the site that the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object is a member of.
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySite Site { get; set; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
      description: An <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></xref> object for the site that the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object is a member of.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Applies to set only. The specified <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></xref> object does not exist. If it was newly created, it must be committed to the directory store before assigning it to the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></xref> object.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  langs:
  - csharp
  name: ToString()
  nameWithType: ActiveDirectorySubnet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Returns the name of the subnet.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A <xref:System.String> that represents the name of the subnet.
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ActiveDirectorySubnet(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ActiveDirectorySubnet(DirectoryContext,String,String)
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ActiveDirectorySubnet(DirectoryContext,String,String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Delete()
  nameWithType: ActiveDirectorySubnet.Delete()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Dispose()
  nameWithType: ActiveDirectorySubnet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySubnet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: FindByName(DirectoryContext,String)
  nameWithType: ActiveDirectorySubnet.FindByName(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySubnet
  nameWithType: ActiveDirectorySubnet
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySubnet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Location
  nameWithType: ActiveDirectorySubnet.Location
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Name
  nameWithType: ActiveDirectorySubnet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Save()
  nameWithType: ActiveDirectorySubnet.Save()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Site
  nameWithType: ActiveDirectorySubnet.Site
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySite
  nameWithType: ActiveDirectorySite
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ToString()
  nameWithType: ActiveDirectorySubnet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ActiveDirectorySubnet
  nameWithType: ActiveDirectorySubnet.ActiveDirectorySubnet
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Delete
  nameWithType: ActiveDirectorySubnet.Delete
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Dispose
  nameWithType: ActiveDirectorySubnet.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: FindByName
  nameWithType: ActiveDirectorySubnet.FindByName
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ActiveDirectorySubnet.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Location
  nameWithType: ActiveDirectorySubnet.Location
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Name
  nameWithType: ActiveDirectorySubnet.Name
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Save
  nameWithType: ActiveDirectorySubnet.Save
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: Site
  nameWithType: ActiveDirectorySubnet.Site
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  isExternal: false
  name: ToString
  nameWithType: ActiveDirectorySubnet.ToString
